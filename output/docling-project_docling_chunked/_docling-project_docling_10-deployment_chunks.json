[
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:0",
    "content": "Deployment | docling-project/docling | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[docling-project/docling](https://github.com/docling-project/docling \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 12 October 2025 ([f7244a](https://github.com/docling-project/docling/commits/f7244a43))\n\n- [Overview](docling-project/docling/1-overview.md)\n- [Installation](docling-project/docling/1.1-installation.md)\n- [Quick Start](docling-project/docling/1.2-quick-start.md)\n- [Core Architecture](docling-project/docling/2-core-architecture.md)\n- [Document Conversion Flow](docling-project/docling/2.1-document-conversion-flow.md)\n- [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md)\n- [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 273,
      "char_count": 998,
      "start_char": 0,
      "end_char": 998
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:1",
    "content": "3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.4-format-detection-and-routing.md)\n- [Document Backends](docling-project/docling/3-document-backends.md)\n- [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md)\n- [Office Document Backends](docling-project/docling/3.2-office-document-backends.md)\n- [Web and Markup Backends](docling-project/docling/3.3-web-and-markup-backends.md)\n- [AI/ML Models](docling-project/docling/4-aiml-models.md)\n- [OCR Models](docling-project/docling/4.1-ocr-models.md)\n- [Layout and Table Structure Models](docling-project/docling/4.2-layout-and-table-structure-models.md)\n- [Vision Language Models](docling-project/docling/4.3-vision-language-models.md)\n- [Inline VLM Models](docling-project/docling/4.3.1-inline-vlm-models.md)\n- [API-Based VLM Models](docling-project/docling/4.3.2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 283,
      "char_count": 987,
      "start_char": 898,
      "end_char": 1886
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:2",
    "content": ".2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)\n- [Processing Pipelines](docling-project/docling/5-processing-pipelines.md)\n- [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md)\n- [Threaded PDF Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md)\n- [VLM Pipeline](docling-project/docling/5.3-vlm-pipeline.md)\n- [Extraction Pipeline](docling-project/docling/5.4-extraction-pipeline.md)\n- [ASR Pipeline](docling-project/docling/5.5-asr-pipeline.md)\n- [Base Pipeline Architecture](docling-project/docling/5.6-base-pipeline-architecture.md)\n- [Command Line Interface](docling-project/docling/6-command-line-interface.md)\n- [Document Conversion CLI](docling-project/docling/6.1-document-conversion-cli.md)\n- [Model Management CLI](docling-project/docling/6.2-model-management-cli.md)\n- [Python SDK](docling-project/docling/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 275,
      "char_count": 1003,
      "start_char": 1786,
      "end_char": 2790
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:3",
    "content": "ng/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)\n- [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md)\n- [Usage Examples](docling-project/docling/7.3-usage-examples.md)\n- [Output and Integration](docling-project/docling/8-output-and-integration.md)\n- [Export Formats](docling-project/docling/8.1-export-formats.md)\n- [Document Chunking](docling-project/docling/8.2-document-chunking.md)\n- [Framework Integrations](docling-project/docling/8.3-framework-integrations.md)\n- [Development and Testing](docling-project/docling/9-development-and-testing.md)\n- [Testing Framework](docling-project/docling/9.1-testing-framework.md)\n- [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md)\n- [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md)\n- [Deployment](docling-project/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 270,
      "char_count": 998,
      "start_char": 2690,
      "end_char": 3689
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:4",
    "content": "/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)\n- [Model Artifacts Management](docling-project/docling/10.2-model-artifacts-management.md)\n\nMenu\n\n# Deployment\n\nRelevant source files\n\n- [.github/SECURITY.md](https://github.com/docling-project/docling/blob/f7244a43/.github/SECURITY.md)\n- [CHANGELOG.md](https://github.com/docling-project/docling/blob/f7244a43/CHANGELOG.md)\n- [CITATION.cff](https://github.com/docling-project/docling/blob/f7244a43/CITATION.cff)\n- [docling/cli/models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/models.py)\n- [docling/models/auto\\_ocr\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/auto_ocr_model.py)\n- [docling/models/picture\\_description\\_vlm\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/picture_description_vlm_model.py)\n- [docling/models/plugins/defaults.py](https://github.",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 288,
      "char_count": 964,
      "start_char": 3589,
      "end_char": 4553
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:5",
    "content": "ling/models/picture_description_vlm_model.py)\n- [docling/models/plugins/defaults.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/plugins/defaults.py)\n- [docling/models/rapid\\_ocr\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py)\n- [docling/utils/model\\_downloader.py](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/model_downloader.py)\n- [pyproject.toml](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml)\n- [uv.lock](https://github.com/docling-project/docling/blob/f7244a43/uv.lock)\n\nThis document covers deploying Docling in production environments, focusing on Docker containerization, model artifact management, and performance optimization. Key topics include the `docling-tools` CLI for model management, offline deployment strategies, and environment configuration for scalable document processing systems.",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 232,
      "char_count": 940,
      "start_char": 4453,
      "end_char": 5395
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:6",
    "content": "ine deployment strategies, and environment configuration for scalable document processing systems.\n\nFor configuration details, see [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md). For model specifications, see [AI/ML Models](docling-project/docling/4-aiml-models.md).\n\n## Docker Deployment\n\nDocling supports containerized deployment through Docker, with pre-built images available on Quay.io and GHCR.io. The deployment strategy involves managing AI model artifacts, configuring environment variables, and optimizing resource usage for production workloads.\n\n### Container Architecture\n\n```\n```\n\n**Container Build Strategy**: The container starts with a minimal Python base image, installs Docling with required dependencies, configures cache directories via environment variables, and pre-downloads models using `docling-tools`. At runtime, models are loaded on-demand based on the configured pipelines.\n\nSources: [pyproject.toml1-90](https://github.",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 194,
      "char_count": 1007,
      "start_char": 5295,
      "end_char": 6302
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:7",
    "content": "e loaded on-demand based on the configured pipelines.\n\nSources: [pyproject.toml1-90](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L1-L90) [docling/cli/models.py54-127](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/models.py#L54-L127) [docling/utils/model\\_downloader.py30-158](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/model_downloader.py#L30-L158)\n\n### Environment Configuration\n\nDocling uses several environment variables for deployment configuration:\n\n| Variable              | Purpose                 | Code Reference                   | Production Value     |\n| --------------------- | ----------------------- | -------------------------------- | -------------------- |\n| `DOCLING_CACHE_DIR`   | Base cache directory    | `settings.cache_dir`             | Persistent volume    |\n| `HF_HOME`             | HuggingFace model cache | Used by `transformers`           | Persistent volume    |",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 237,
      "char_count": 973,
      "start_char": 6202,
      "end_char": 7176
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:8",
    "content": "`             | HuggingFace model cache | Used by `transformers`           | Persistent volume    |\n| `TORCH_HOME`          | PyTorch model cache     | Used by `torch`                  | Persistent volume    |\n| `OMP_NUM_THREADS`     | OpenMP thread limit     | `AcceleratorOptions`             | CPU cores / 2        |\n| `DOCLING_NUM_THREADS` | Docling thread budget   | `AcceleratorOptions.num_threads` | CPU cores            |\n| `DOCLING_DEVICE`      | Compute device          | `AcceleratorOptions.device`      | `cpu`, `cuda`, `mps` |\n\nThe `settings` object in `docling.datamodel.settings` provides centralized configuration management with environment variable overrides.\n\nSources: [pyproject.toml44-76](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L44-L76) [docling/datamodel/settings.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/settings.py)\n\n## Model Artifacts Management\n\nDocling requires several AI models for document processing.",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 247,
      "char_count": 1002,
      "start_char": 7076,
      "end_char": 8078
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:9",
    "content": "ings.py)\n\n## Model Artifacts Management\n\nDocling requires several AI models for document processing. The `docling-tools` CLI provides model download and management capabilities for production deployments.\n\n### Model Download CLI\n\nThe `docling-tools download` command pre-downloads models for offline use:\n\n```\n```\n\n**CLI Usage**: The `docling-tools download` command supports selective model downloading via the `models` argument or `--all` flag. The `--force` flag enables re-downloading, and `--quiet` suppresses progress output for CI/CD environments.\n\nSources: [docling/cli/models.py54-136](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/models.py#L54-L136) [docling/utils/model\\_downloader.py30-158](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/model_downloader.py#L30-L158)\n\n### Model Storage Architecture\n\n```\n```\n\n**Model Storage Conventions**: Each model type defines a `_model_repo_folder` class attribute (e.g., `RapidOcrModel.",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 251,
      "char_count": 986,
      "start_char": 7978,
      "end_char": 8964
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:10",
    "content": "Conventions**: Each model type defines a `_model_repo_folder` class attribute (e.g., `RapidOcrModel._model_repo_folder = \"RapidOcr\"`) used for organizing downloaded files. HuggingFace models use a `repo_cache_folder` property that sanitizes repo IDs by replacing `/` with `--`.\n\nSources: [docling/utils/model\\_downloader.py1-158](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/model_downloader.py#L1-L158) [docling/models/rapid\\_ocr\\_model.py37-224](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py#L37-L224) [docling/models/picture\\_description\\_vlm\\_model.py49-53](https://github.com/docling-project/docling/blob/f7244a43/docling/models/picture_description_vlm_model.py#L49-L53)\n\n### Offline Mode\n\nFor air-gapped or offline deployments, models must be pre-downloaded:\n\n```\n```\n\nAt runtime, configure Docling to use the offline model cache:\n\n```\n```\n\nThe `artifacts_path` parameter is passed to model constructors and overrides automatic model downloading.",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 286,
      "char_count": 1023,
      "start_char": 8864,
      "end_char": 9887
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:11",
    "content": "artifacts_path` parameter is passed to model constructors and overrides automatic model downloading. Each model's `__init__` method checks if `artifacts_path` is provided before attempting downloads.\n\nSources: [docling/cli/models.py54-127](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/models.py#L54-L127) [docling/utils/model\\_downloader.py30-158](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/model_downloader.py#L30-L158) [docling/models/rapid\\_ocr\\_model.py82-150](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py#L82-L150)\n\n### RapidOCR Model Management\n\nRapidOCR requires additional consideration for offline deployment as it downloads models from ModelScope:\n\n```\n```\n\n**RapidOCR Architecture**: RapidOCR supports two backends (`onnxruntime` and `torch`), each requiring separate model files. The `RapidOcrModel._default_models` dictionary maps backend types to model URLs and paths.",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 265,
      "char_count": 980,
      "start_char": 9787,
      "end_char": 10767
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:12",
    "content": "el files. The `RapidOcrModel._default_models` dictionary maps backend types to model URLs and paths. The `download_models()` static method handles offline preparation.\n\nSources: [docling/models/rapid\\_ocr\\_model.py36-224](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py#L36-L224)\n\n## Performance Considerations\n\n### Threading Configuration\n\nDocling uses multiple threading mechanisms that must be coordinated in production:\n\n| Threading Layer    | Configuration         | Purpose                          |\n| ------------------ | --------------------- | -------------------------------- |\n| OpenMP             | `OMP_NUM_THREADS`     | Controls NumPy/SciPy parallelism |\n| Docling            | `DOCLING_NUM_THREADS` | Controls internal threading      |\n| AcceleratorOptions | `num_threads`         | Passed to ONNX models            |\n\nThe `AcceleratorOptions` class in pipeline options provides thread budget configuration:\n\n```\n```",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 211,
      "char_count": 976,
      "start_char": 10667,
      "end_char": 11645
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:13",
    "content": "The `AcceleratorOptions` class in pipeline options provides thread budget configuration:\n\n```\n```\n\nFor CPU-bound workloads, set `OMP_NUM_THREADS` and `num_threads` to half the available cores to prevent oversubscription.\n\nSources: [docling/models/rapid\\_ocr\\_model.py82-200](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py#L82-L200)\n\n### Memory Management\n\nModel loading can consume significant memory. Docling provides several strategies for memory optimization:\n\n1. **Pipeline Caching**: `DocumentConverter` caches pipeline instances by configuration hash to avoid redundant model loading\n2. **Lazy Loading**: Models are only loaded when needed for specific document formats\n3. **Shared Models**: Multiple `DocumentConverter` instances can share underlying model instances\n\n```\n```\n\nThe threading lock in model initialization (`_model_init_lock` in [docling/models/picture\\_description\\_vlm\\_model.py21](https://github.",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 220,
      "char_count": 964,
      "start_char": 11545,
      "end_char": 12510
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:14",
    "content": "zation (`_model_init_lock` in [docling/models/picture\\_description\\_vlm\\_model.py21](https://github.com/docling-project/docling/blob/f7244a43/docling/models/picture_description_vlm_model.py#L21-L21)) prevents race conditions during parallel initialization.\n\nSources: [docling/models/picture\\_description\\_vlm\\_model.py20-78](https://github.com/docling-project/docling/blob/f7244a43/docling/models/picture_description_vlm_model.py#L20-L78)\n\n### Device Selection\n\nThe `AcceleratorDevice` enum supports multiple compute backends:\n\n```\n```\n\nThe `decide_device()` function in `accelerator_utils` resolves device strings to actual hardware availability.\n\nSources: [docling/models/rapid\\_ocr\\_model.py109](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py#L109-L109) [docling/models/picture\\_description\\_vlm\\_model.py54](https://github.com/docling-project/docling/blob/f7244a43/docling/models/picture_description_vlm_model.py#L54-L54)\n\n## Performance Considerations\n\n### CPU Optimization",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 285,
      "char_count": 1022,
      "start_char": 12410,
      "end_char": 13434
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:15",
    "content": "els/picture_description_vlm_model.py#L54-L54)\n\n## Performance Considerations\n\n### CPU Optimization\n\nThe Dockerfile configures PyTorch for CPU-only operation to reduce image size and memory requirements:\n\n```\n```\n\nThis configuration is suitable for CPU-based inference but may require modification for GPU-accelerated deployments.\n\nSources: [Dockerfile10-12](https://github.com/docling-project/docling/blob/f7244a43/Dockerfile#L10-L12)\n\n### Memory Management\n\nEnvironment variables are configured to use temporary storage for framework caches, reducing persistent storage requirements:\n\n```\n```\n\nIn production, these should be mapped to persistent volumes to avoid model re-downloads on container restarts.\n\nSources: [Dockerfile14-15](https://github.com/docling-project/docling/blob/f7244a43/Dockerfile#L14-L15)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.\n\n### On this page\n\n- [Deployment](#deployment.md)\n- [Docker Deployment](#docker-deployment.md)",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 243,
      "char_count": 1005,
      "start_char": 13334,
      "end_char": 14340
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_10-deployment.md:chunk:16",
    "content": "ain.\n\n### On this page\n\n- [Deployment](#deployment.md)\n- [Docker Deployment](#docker-deployment.md)\n- [Container Architecture](#container-architecture.md)\n- [Environment Configuration](#environment-configuration.md)\n- [Model Artifacts Management](#model-artifacts-management.md)\n- [Model Download CLI](#model-download-cli.md)\n- [Model Storage Architecture](#model-storage-architecture.md)\n- [Offline Mode](#offline-mode.md)\n- [RapidOCR Model Management](#rapidocr-model-management.md)\n- [Performance Considerations](#performance-considerations.md)\n- [Threading Configuration](#threading-configuration.md)\n- [Memory Management](#memory-management.md)\n- [Device Selection](#device-selection.md)\n- [Performance Considerations](#performance-considerations-1.md)\n- [CPU Optimization](#cpu-optimization.md)\n- [Memory Management](#memory-management-1.md)",
    "metadata": {
      "source_file": "_docling-project_docling_10-deployment.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_10-deployment.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 198,
      "char_count": 847,
      "start_char": 14240,
      "end_char": 15264
    }
  }
]