[
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:0",
    "content": "Testing Framework | docling-project/docling | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[docling-project/docling](https://github.com/docling-project/docling \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 12 October 2025 ([f7244a](https://github.com/docling-project/docling/commits/f7244a43))\n\n- [Overview](docling-project/docling/1-overview.md)\n- [Installation](docling-project/docling/1.1-installation.md)\n- [Quick Start](docling-project/docling/1.2-quick-start.md)\n- [Core Architecture](docling-project/docling/2-core-architecture.md)\n- [Document Conversion Flow](docling-project/docling/2.1-document-conversion-flow.md)\n- [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md)\n- [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 274,
      "char_count": 1005,
      "start_char": 0,
      "end_char": 1005
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:1",
    "content": "3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.4-format-detection-and-routing.md)\n- [Document Backends](docling-project/docling/3-document-backends.md)\n- [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md)\n- [Office Document Backends](docling-project/docling/3.2-office-document-backends.md)\n- [Web and Markup Backends](docling-project/docling/3.3-web-and-markup-backends.md)\n- [AI/ML Models](docling-project/docling/4-aiml-models.md)\n- [OCR Models](docling-project/docling/4.1-ocr-models.md)\n- [Layout and Table Structure Models](docling-project/docling/4.2-layout-and-table-structure-models.md)\n- [Vision Language Models](docling-project/docling/4.3-vision-language-models.md)\n- [Inline VLM Models](docling-project/docling/4.3.1-inline-vlm-models.md)\n- [API-Based VLM Models](docling-project/docling/4.3.2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 283,
      "char_count": 987,
      "start_char": 905,
      "end_char": 1893
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:2",
    "content": ".2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)\n- [Processing Pipelines](docling-project/docling/5-processing-pipelines.md)\n- [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md)\n- [Threaded PDF Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md)\n- [VLM Pipeline](docling-project/docling/5.3-vlm-pipeline.md)\n- [Extraction Pipeline](docling-project/docling/5.4-extraction-pipeline.md)\n- [ASR Pipeline](docling-project/docling/5.5-asr-pipeline.md)\n- [Base Pipeline Architecture](docling-project/docling/5.6-base-pipeline-architecture.md)\n- [Command Line Interface](docling-project/docling/6-command-line-interface.md)\n- [Document Conversion CLI](docling-project/docling/6.1-document-conversion-cli.md)\n- [Model Management CLI](docling-project/docling/6.2-model-management-cli.md)\n- [Python SDK](docling-project/docling/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 275,
      "char_count": 1003,
      "start_char": 1793,
      "end_char": 2797
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:3",
    "content": "ng/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)\n- [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md)\n- [Usage Examples](docling-project/docling/7.3-usage-examples.md)\n- [Output and Integration](docling-project/docling/8-output-and-integration.md)\n- [Export Formats](docling-project/docling/8.1-export-formats.md)\n- [Document Chunking](docling-project/docling/8.2-document-chunking.md)\n- [Framework Integrations](docling-project/docling/8.3-framework-integrations.md)\n- [Development and Testing](docling-project/docling/9-development-and-testing.md)\n- [Testing Framework](docling-project/docling/9.1-testing-framework.md)\n- [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md)\n- [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md)\n- [Deployment](docling-project/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 270,
      "char_count": 998,
      "start_char": 2697,
      "end_char": 3696
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:4",
    "content": "/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)\n- [Model Artifacts Management](docling-project/docling/10.2-model-artifacts-management.md)\n\nMenu\n\n# Testing Framework\n\nRelevant source files\n\n- [docling/backend/html\\_backend.py](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/html_backend.py)\n- [docling/models/tesseract\\_ocr\\_cli\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/tesseract_ocr_cli_model.py)\n- [docling/models/tesseract\\_ocr\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/tesseract_ocr_model.py)\n- [tests/data/groundtruth/docling\\_v2/example\\_06.html.itxt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_06.html.itxt)\n- [tests/data/groundtruth/docling\\_v2/example\\_06.html.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_06.html.json)",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 293,
      "char_count": 1005,
      "start_char": 3596,
      "end_char": 4602
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:5",
    "content": "b.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_06.html.json)\n- [tests/data/groundtruth/docling\\_v2/example\\_06.html.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_06.html.md)\n- [tests/data/groundtruth/docling\\_v2/example\\_09.html.itxt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_09.html.itxt)\n- [tests/data/groundtruth/docling\\_v2/example\\_09.html.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_09.html.json)\n- [tests/data/groundtruth/docling\\_v2/example\\_09.html.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_09.html.md)\n- [tests/data/groundtruth/docling\\_v2/wiki\\_duck.html.itxt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/wiki_duck.html.itxt)\n- [tests/data/groundtruth/docling\\_v2/wiki\\_duck.html.",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 316,
      "char_count": 1014,
      "start_char": 4502,
      "end_char": 5516
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:6",
    "content": "a/groundtruth/docling_v2/wiki_duck.html.itxt)\n- [tests/data/groundtruth/docling\\_v2/wiki\\_duck.html.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/wiki_duck.html.json)\n- [tests/data/groundtruth/docling\\_v2/wiki\\_duck.html.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/wiki_duck.html.md)\n- [tests/data\\_scanned/sample\\_with\\_rotation\\_mismatch.pdf](https://github.com/docling-project/docling/blob/f7244a43/tests/data_scanned/sample_with_rotation_mismatch.pdf)\n- [tests/test\\_backend\\_docling\\_parse.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_docling_parse.py)\n- [tests/test\\_backend\\_docling\\_parse\\_v2.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_docling_parse_v2.py)\n- [tests/test\\_backend\\_html.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_html.py)\n- [tests/test\\_backend\\_pdfium.py](https://github.",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 295,
      "char_count": 1007,
      "start_char": 5416,
      "end_char": 6423
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:7",
    "content": "docling/blob/f7244a43/tests/test_backend_html.py)\n- [tests/test\\_backend\\_pdfium.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_pdfium.py)\n- [tests/test\\_e2e\\_ocr\\_conversion.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_e2e_ocr_conversion.py)\n\nThis document covers Docling's comprehensive testing infrastructure, including verification utilities, ground truth data management, and test patterns for document backends. For information about CI/CD workflows and development processes, see [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md). For details on ground truth data formats and schema evolution, see [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md).\n\n## Architecture Overview\n\nThe testing framework provides systematic verification of document conversion results across multiple formats and backends.",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 213,
      "char_count": 931,
      "start_char": 6323,
      "end_char": 7254
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:8",
    "content": "rovides systematic verification of document conversion results across multiple formats and backends. It compares conversion outputs against versioned ground truth data using both exact and fuzzy matching techniques.\n\n### Core Testing Flow\n\n```\n```\n\nSources: [tests/verify\\_utils.py1-510](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L1-L510) [tests/test\\_backend\\_msexcel.py1-101](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L1-L101)\n\n### Testing Infrastructure Components\n\n```\n```\n\nSources: [tests/verify\\_utils.py1-510](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L1-L510) [tests/test\\_backend\\_msexcel.py1-101](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L1-L101) [tests/test\\_backend\\_csv.py1-88](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_csv.py#L1-L88)\n\n## Core Verification Functions\n\n### Text and String Verification",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 295,
      "char_count": 1012,
      "start_char": 7154,
      "end_char": 8168
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:9",
    "content": "ests/test_backend_csv.py#L1-L88)\n\n## Core Verification Functions\n\n### Text and String Verification\n\nThe framework provides sophisticated text comparison with support for fuzzy matching using Levenshtein distance:\n\n```\n```\n\nThe `verify_text()` function at [tests/verify\\_utils.py55-62](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L55-L62) handles both exact and fuzzy text matching. The Levenshtein distance implementation at [tests/verify\\_utils.py31-52](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L31-L52) provides efficient edit distance calculation for OCR-based fuzzy matching.\n\nSources: [tests/verify\\_utils.py31-62](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L31-L62)\n\n### Document Structure Verification\n\nDocument structure verification ensures that converted documents maintain proper hierarchical organization:",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 230,
      "char_count": 926,
      "start_char": 8068,
      "end_char": 8996
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:10",
    "content": "structure verification ensures that converted documents maintain proper hierarchical organization:\n\n| Function                    | Purpose                         | Key Validations                                         |\n| --------------------------- | ------------------------------- | ------------------------------------------------------- |\n| `verify_docitems()`         | Validates DoclingDocument items | Text content, table structure, picture data, provenance |\n| `verify_cells()`            | Validates page cell data        | Cell count, text content, bounding boxes                |\n| `verify_table_v2()`         | Validates table structure       | Row/column counts, cell properties, headers             |\n| `verify_picture_image_v2()` | Validates image data            | Size, mode, binary content                              |\n\nThe `verify_docitems()` function at [tests/verify\\_utils.py230-291](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 174,
      "char_count": 989,
      "start_char": 8896,
      "end_char": 9885
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:11",
    "content": "erify\\_utils.py230-291](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L230-L291) performs comprehensive validation of document items including type checking, provenance verification, and content validation.\n\nSources: [tests/verify\\_utils.py65-96](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L65-L96) [tests/verify\\_utils.py170-211](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L170-L211) [tests/verify\\_utils.py214-221](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L214-L221) [tests/verify\\_utils.py230-291](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L230-L291)\n\n## Ground Truth Data Management\n\n### Versioned Ground Truth System\n\nThe framework supports multiple ground truth versions to accommodate schema evolution:\n\n```\n```\n\nGround truth data is organized with precision controls defined by constants:",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 295,
      "char_count": 976,
      "start_char": 9785,
      "end_char": 10763
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:12",
    "content": "evolution:\n\n```\n```\n\nGround truth data is organized with precision controls defined by constants:\n\n- `COORD_PREC = 2` for coordinate decimal places\n- `CONFID_PREC = 3` for confidence decimal places\n\nSources: [tests/verify\\_utils.py27-28](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L27-L28) [tests/verify\\_utils.py302-386](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L302-L386) [tests/verify\\_utils.py388-478](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L388-L478)\n\n### Ground Truth Generation and Validation\n\nThe framework supports both generation and validation modes controlled by the `generate` parameter:\n\n```\n```\n\nThe `verify_conversion_result_v2()` function at [tests/verify\\_utils.py388-478](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L388-L478) demonstrates this dual-mode operation with comprehensive file handling for all supported export formats.",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 289,
      "char_count": 999,
      "start_char": 10663,
      "end_char": 11665
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:13",
    "content": "trates this dual-mode operation with comprehensive file handling for all supported export formats.\n\nSources: [tests/verify\\_utils.py421-448](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L421-L448) [tests/verify\\_utils.py449-478](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L449-L478) [tests/verify\\_utils.py481-495](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L481-L495)\n\n## Test Backend Patterns\n\n### Standard Test Backend Structure\n\nAll backend test files follow a consistent pattern for systematic testing:\n\n```\n```\n\nExample implementation pattern from Excel backend testing at [tests/test\\_backend\\_msexcel.py58-73](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L58-L73):\n\n| Step | Function                       | Purpose                                  |\n| ---- | ------------------------------ | ---------------------------------------- |",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 264,
      "char_count": 991,
      "start_char": 11565,
      "end_char": 12557
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:14",
    "content": "|\n| ---- | ------------------------------ | ---------------------------------------- |\n| 1    | `get_excel_paths()`            | Discover `.xlsx` and `.xlsm` files       |\n| 2    | `get_converter()`              | Create converter with `InputFormat.XLSX` |\n| 3    | `test_e2e_excel_conversions()` | Execute end-to-end validation            |\n| 4    | `verify_export()`              | Validate Markdown and indented text      |\n| 5    | `verify_document()`            | Validate JSON document structure         |\n\nSources: [tests/test\\_backend\\_msexcel.py19-32](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L19-L32) [tests/test\\_backend\\_msexcel.py58-73](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L58-L73) [tests/test\\_backend\\_csv.py15-31](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_csv.py#L15-L31)\n\n### Backend-Specific Testing Features",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 267,
      "char_count": 957,
      "start_char": 12457,
      "end_char": 13429
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:15",
    "content": "ct/docling/blob/f7244a43/tests/test_backend_csv.py#L15-L31)\n\n### Backend-Specific Testing Features\n\nDifferent backends have specialized testing requirements:\n\n```\n```\n\nThe Excel backend includes specialized page validation at [tests/test\\_backend\\_msexcel.py75-100](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L75-L100) that verifies page counts and cell dimensions. The CSV backend at [tests/test\\_backend\\_csv.py42-50](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_csv.py#L42-L50) demonstrates warning handling for inconsistent column data.\n\nSources: [tests/test\\_backend\\_msexcel.py75-100](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L75-L100) [tests/test\\_backend\\_csv.py42-50](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_csv.py#L42-L50) [tests/test\\_backend\\_patent\\_uspto.py91-134](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_patent_uspto.",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 311,
      "char_count": 1025,
      "start_char": 13329,
      "end_char": 14354
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:16",
    "content": ".py91-134](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_patent_uspto.py#L91-L134) [tests/test\\_backend\\_jats.py28-54](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_jats.py#L28-L54)\n\n## Fuzzy Matching and OCR Testing\n\n### Fuzzy Matching Implementation\n\nThe framework provides sophisticated fuzzy matching for OCR-based tests where exact text matching is impractical:\n\n```\n```\n\nThe Levenshtein algorithm at [tests/verify\\_utils.py31-52](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L31-L52) uses optimized memory usage by ensuring the shorter string is processed first and uses row buffering for efficient computation.\n\nDefault fuzzy threshold is set to 0.4 (40% difference tolerance) at [tests/verify\\_utils.py55-62](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L55-L62) making it suitable for OCR output validation where minor character recognition errors are expected.",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 274,
      "char_count": 998,
      "start_char": 14254,
      "end_char": 15254
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:17",
    "content": "aking it suitable for OCR output validation where minor character recognition errors are expected.\n\nSources: [tests/verify\\_utils.py31-62](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L31-L62) [tests/verify\\_utils.py159-161](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L159-L161) [tests/verify\\_utils.py190-194](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L190-L194)\n\n### OCR Engine Testing\n\nThe framework accommodates different OCR engines through engine-specific suffixes in ground truth filenames:\n\n| OCR Engine | Suffix Pattern | Example                   |\n| ---------- | -------------- | ------------------------- |\n| Default    | None           | `document.json`           |\n| Tesseract  | `.tesseract`   | `document.tesseract.json` |\n| EasyOCR    | `.easyocr`     | `document.easyocr.json`   |\n| RapidOCR   | `.rapidocr`    | `document.rapidocr.json`  |",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "token_count": 269,
      "char_count": 965,
      "start_char": 15154,
      "end_char": 16121
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:18",
    "content": "ocr`     | `document.easyocr.json`   |\n| RapidOCR   | `.rapidocr`    | `document.rapidocr.json`  |\n\nEngine-specific ground truth handling is implemented at [tests/verify\\_utils.py322-333](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L322-L333) for v1 format and [tests/verify\\_utils.py408-419](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L408-L419) for v2 format.\n\nSources: [tests/verify\\_utils.py322-333](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L322-L333) [tests/verify\\_utils.py408-419](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L408-L419)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.\n\n### On this page\n\n- [Testing Framework](#testing-framework.md)\n- [Architecture Overview](#architecture-overview.md)\n- [Core Testing Flow](#core-testing-flow.md)\n- [Testing Infrastructure Components](#testing-infrastructure-components.",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "token_count": 315,
      "char_count": 1022,
      "start_char": 16021,
      "end_char": 17043
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_9.1-testing-framework.md:chunk:19",
    "content": "ow](#core-testing-flow.md)\n- [Testing Infrastructure Components](#testing-infrastructure-components.md)\n- [Core Verification Functions](#core-verification-functions.md)\n- [Text and String Verification](#text-and-string-verification.md)\n- [Document Structure Verification](#document-structure-verification.md)\n- [Ground Truth Data Management](#ground-truth-data-management.md)\n- [Versioned Ground Truth System](#versioned-ground-truth-system.md)\n- [Ground Truth Generation and Validation](#ground-truth-generation-and-validation.md)\n- [Test Backend Patterns](#test-backend-patterns.md)\n- [Standard Test Backend Structure](#standard-test-backend-structure.md)\n- [Backend-Specific Testing Features](#backend-specific-testing-features.md)\n- [Fuzzy Matching and OCR Testing](#fuzzy-matching-and-ocr-testing.md)\n- [Fuzzy Matching Implementation](#fuzzy-matching-implementation.md)\n- [OCR Engine Testing](#ocr-engine-testing.md)",
    "metadata": {
      "source_file": "_docling-project_docling_9.1-testing-framework.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_9.1-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "token_count": 204,
      "char_count": 921,
      "start_char": 16943,
      "end_char": 17967
    }
  }
]