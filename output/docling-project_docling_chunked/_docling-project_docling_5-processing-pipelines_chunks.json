[
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:0",
    "content": "Processing Pipelines | docling-project/docling | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[docling-project/docling](https://github.com/docling-project/docling \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 12 October 2025 ([f7244a](https://github.com/docling-project/docling/commits/f7244a43))\n\n- [Overview](docling-project/docling/1-overview.md)\n- [Installation](docling-project/docling/1.1-installation.md)\n- [Quick Start](docling-project/docling/1.2-quick-start.md)\n- [Core Architecture](docling-project/docling/2-core-architecture.md)\n- [Document Conversion Flow](docling-project/docling/2.1-document-conversion-flow.md)\n- [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md)\n- [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 275,
      "char_count": 1008,
      "start_char": 0,
      "end_char": 1008
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:1",
    "content": "3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.4-format-detection-and-routing.md)\n- [Document Backends](docling-project/docling/3-document-backends.md)\n- [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md)\n- [Office Document Backends](docling-project/docling/3.2-office-document-backends.md)\n- [Web and Markup Backends](docling-project/docling/3.3-web-and-markup-backends.md)\n- [AI/ML Models](docling-project/docling/4-aiml-models.md)\n- [OCR Models](docling-project/docling/4.1-ocr-models.md)\n- [Layout and Table Structure Models](docling-project/docling/4.2-layout-and-table-structure-models.md)\n- [Vision Language Models](docling-project/docling/4.3-vision-language-models.md)\n- [Inline VLM Models](docling-project/docling/4.3.1-inline-vlm-models.md)\n- [API-Based VLM Models](docling-project/docling/4.3.2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 283,
      "char_count": 987,
      "start_char": 908,
      "end_char": 1896
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:2",
    "content": ".2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)\n- [Processing Pipelines](docling-project/docling/5-processing-pipelines.md)\n- [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md)\n- [Threaded PDF Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md)\n- [VLM Pipeline](docling-project/docling/5.3-vlm-pipeline.md)\n- [Extraction Pipeline](docling-project/docling/5.4-extraction-pipeline.md)\n- [ASR Pipeline](docling-project/docling/5.5-asr-pipeline.md)\n- [Base Pipeline Architecture](docling-project/docling/5.6-base-pipeline-architecture.md)\n- [Command Line Interface](docling-project/docling/6-command-line-interface.md)\n- [Document Conversion CLI](docling-project/docling/6.1-document-conversion-cli.md)\n- [Model Management CLI](docling-project/docling/6.2-model-management-cli.md)\n- [Python SDK](docling-project/docling/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 275,
      "char_count": 1003,
      "start_char": 1796,
      "end_char": 2800
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:3",
    "content": "ng/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)\n- [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md)\n- [Usage Examples](docling-project/docling/7.3-usage-examples.md)\n- [Output and Integration](docling-project/docling/8-output-and-integration.md)\n- [Export Formats](docling-project/docling/8.1-export-formats.md)\n- [Document Chunking](docling-project/docling/8.2-document-chunking.md)\n- [Framework Integrations](docling-project/docling/8.3-framework-integrations.md)\n- [Development and Testing](docling-project/docling/9-development-and-testing.md)\n- [Testing Framework](docling-project/docling/9.1-testing-framework.md)\n- [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md)\n- [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md)\n- [Deployment](docling-project/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 270,
      "char_count": 998,
      "start_char": 2700,
      "end_char": 3699
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:4",
    "content": "/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)\n- [Model Artifacts Management](docling-project/docling/10.2-model-artifacts-management.md)\n\nMenu\n\n# Processing Pipelines\n\nRelevant source files\n\n- [docling/cli/main.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py)\n- [docling/datamodel/base\\_models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py)\n- [docling/datamodel/document.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py)\n- [docling/datamodel/extraction.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/extraction.py)\n- [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py)\n- [docling/document\\_converter.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py)\n- [docling/document\\_extractor.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 286,
      "char_count": 1017,
      "start_char": 3599,
      "end_char": 4616
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:5",
    "content": "docling-project/docling/blob/f7244a43/docling/document_converter.py)\n- [docling/document\\_extractor.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py)\n- [docling/models/vlm\\_models\\_inline/nuextract\\_transformers\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/vlm_models_inline/nuextract_transformers_model.py)\n- [docling/pipeline/asr\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/asr_pipeline.py)\n- [docling/pipeline/base\\_extraction\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_extraction_pipeline.py)\n- [docling/pipeline/base\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py)\n- [docling/pipeline/extraction\\_vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py)\n- [docling/pipeline/simple\\_pipeline.py](https://github.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 284,
      "char_count": 1010,
      "start_char": 4516,
      "end_char": 5526
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:6",
    "content": "ocling/pipeline/extraction_vlm_pipeline.py)\n- [docling/pipeline/simple\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/simple_pipeline.py)\n- [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py)\n- [docling/pipeline/vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py)\n\nProcessing pipelines form the core orchestration layer in Docling that coordinates document backends, AI/ML models, and configuration options to convert raw documents into structured `DoclingDocument` representations. This page covers the pipeline architecture, available pipeline types, and how models are orchestrated within pipelines.\n\nFor information about specific pipeline implementations, see [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md) and [VLM Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 238,
      "char_count": 1023,
      "start_char": 5426,
      "end_char": 6449
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:7",
    "content": "/5.1-standard-pdf-pipeline.md) and [VLM Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md). For details about the models used within pipelines, see [AI/ML Models](docling-project/docling/4-aiml-models.md). For configuration of pipeline behavior, see [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md).\n\n## Pipeline Architecture Overview\n\nDocling provides two main pipeline hierarchies: conversion pipelines for document processing and extraction pipelines for structured data extraction. Each pipeline type is designed for specific document formats and processing requirements.\n\n### Pipeline Base Architecture\n\n```\n```\n\nSources: [docling/pipeline/base\\_pipeline.py43-184](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L43-L184) [docling/pipeline/vlm\\_pipeline.py50](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 233,
      "char_count": 964,
      "start_char": 6349,
      "end_char": 7313
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:8",
    "content": "peline.py50](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L50-L50) [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py296](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L296-L296) [docling/pipeline/simple\\_pipeline.py16](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/simple_pipeline.py#L16-L16) [docling/pipeline/asr\\_pipeline.py204](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/asr_pipeline.py#L204-L204) [docling/pipeline/base\\_extraction\\_pipeline.py15](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_extraction_pipeline.py#L15-L15) [docling/pipeline/extraction\\_vlm\\_pipeline.py32](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L32-L32)\n\n# Processing Pipelines",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 297,
      "char_count": 918,
      "start_char": 7213,
      "end_char": 8133
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:9",
    "content": "docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L32-L32)\n\n# Processing Pipelines\n\nProcessing pipelines form the core orchestration layer in Docling that coordinates document backends, AI/ML models, and configuration options to convert raw documents into structured `DoclingDocument` representations. This page covers the pipeline architecture, available pipeline types, and how models are orchestrated within pipelines.\n\nFor information about specific pipeline implementations, see [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md) and [VLM Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md). For details about the models used within pipelines, see [AI/ML Models](docling-project/docling/4-aiml-models.md). For configuration of pipeline behavior, see [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md).\n\n## Pipeline Architecture Overview",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 206,
      "char_count": 949,
      "start_char": 8033,
      "end_char": 8984
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:10",
    "content": "ing-project/docling/2.3-configuration-and-pipeline-options.md).\n\n## Pipeline Architecture Overview\n\nPipelines in Docling implement the `PaginatedPipeline` base class and orchestrate multiple processing models in sequence. Each pipeline type is designed for specific document formats and processing requirements.\n\n### Pipeline Base Architecture\n\n```\n```\n\nSources: [docling/pipeline/base\\_pipeline.py29-106](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L29-L106) [docling/pipeline/standard\\_pdf\\_pipeline.py39-42](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/standard_pdf_pipeline.py#L39-L42) [docling/pipeline/vlm\\_pipeline.py50-53](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L50-L53)\n\n## Pipeline Types and Backend Compatibility\n\nDifferent pipeline types are designed for specific document formats and processing approaches.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 241,
      "char_count": 946,
      "start_char": 8884,
      "end_char": 9830
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:11",
    "content": "lity\n\nDifferent pipeline types are designed for specific document formats and processing approaches. The `DocumentConverter` selects pipelines based on backend compatibility using the `is_backend_supported()` method.\n\n### Pipeline Type Selection\n\n```\n```\n\nSources: [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py636-637](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L636-L637) [docling/pipeline/vlm\\_pipeline.py386-388](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L386-L388) [docling/pipeline/simple\\_pipeline.py54-55](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/simple_pipeline.py#L54-L55) [docling/pipeline/asr\\_pipeline.py240-241](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/asr_pipeline.py#L240-L241)\n\n## Pipeline Implementations\n\nDocling provides five main pipeline implementations for different document processing needs:\n\n1.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 283,
      "char_count": 1007,
      "start_char": 9730,
      "end_char": 10737
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:12",
    "content": "ns\n\nDocling provides five main pipeline implementations for different document processing needs:\n\n1. **ThreadedStandardPdfPipeline**: High-performance parallel PDF processing with multi-stage AI models\n2. **VlmPipeline**: Vision-Language Model based processing for document understanding\n3. **SimplePipeline**: Direct conversion for declarative document formats\n4. **AsrPipeline**: Audio transcription using Whisper models\n5. **ExtractionVlmPipeline**: Structured data extraction using vision-language models\n\n### ThreadedStandardPdfPipeline Architecture\n\nThe `ThreadedStandardPdfPipeline` uses a sophisticated queue-based architecture with parallel processing stages. Each stage runs in its own thread with bounded queues for back-pressure control.\n\n```\n```\n\nSources: [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py296-427](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L296-L427) [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 218,
      "char_count": 1003,
      "start_char": 10637,
      "end_char": 11640
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:13",
    "content": "ne/threaded_standard_pdf_pipeline.py#L296-L427) [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py96-163](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L96-L163)\n\n### ThreadedQueue Implementation\n\nThe threaded pipeline uses custom queue implementation with explicit close semantics and timeout support.\n\n```\n```\n\nSources: [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py59-94](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L59-L94) [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py96-163](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L96-L163)\n\n### VlmPipeline and ExtractionVlmPipeline\n\nThe `VlmPipeline` processes documents using Vision-Language Models with different inference frameworks and response formats. The `ExtractionVlmPipeline` specializes in structured data extraction from documents.\n\n```\n```",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 266,
      "char_count": 1009,
      "start_char": 11540,
      "end_char": 12551
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:14",
    "content": "ts. The `ExtractionVlmPipeline` specializes in structured data extraction from documents.\n\n```\n```\n\nSources: [docling/pipeline/vlm\\_pipeline.py50-113](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L50-L113) [docling/pipeline/vlm\\_pipeline.py136-159](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L136-L159) [docling/pipeline/vlm\\_pipeline.py188-380](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L188-L380) [docling/pipeline/extraction\\_vlm\\_pipeline.py32-126](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L32-L126)\n\n### SimplePipeline and AsrPipeline\n\nThe `SimplePipeline` handles declarative document backends that can directly produce `DoclingDocument` objects. The `AsrPipeline` processes audio files using Whisper models.\n\n```\n```\n\nSources: [docling/pipeline/simple\\_pipeline.py16-55](https://github.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 309,
      "char_count": 993,
      "start_char": 12451,
      "end_char": 13444
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:15",
    "content": "using Whisper models.\n\n```\n```\n\nSources: [docling/pipeline/simple\\_pipeline.py16-55](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/simple_pipeline.py#L16-L55) [docling/pipeline/asr\\_pipeline.py98-201](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/asr_pipeline.py#L98-L201) [docling/pipeline/asr\\_pipeline.py204-241](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/asr_pipeline.py#L204-L241)\n\n## Model Factory Integration\n\nPipelines use factory patterns to instantiate models with appropriate configurations. This allows for plugin support and model selection based on options.\n\n### Factory-Based Model Creation\n\n| Model Type          | Factory Method                      | Configuration Source                           | Plugin Support |\n| ------------------- | ----------------------------------- | ---------------------------------------------- | -------------- |",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 228,
      "char_count": 949,
      "start_char": 13344,
      "end_char": 14294
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:16",
    "content": "------------------------------- | ---------------------------------------------- | -------------- |\n| OCR Models          | `get_ocr_factory()`                 | `pipeline_options.ocr_options`                 | Yes            |\n| Picture Description | `get_picture_description_factory()` | `pipeline_options.picture_description_options` | Yes            |\n| Layout Analysis     | Direct instantiation                | `pipeline_options.layout_options`              | No             |\n| Table Structure     | Direct instantiation                | `pipeline_options.table_structure_options`     | No             |\n| VLM Models          | Conditional instantiation           | `pipeline_options.vlm_options`                 | No             |\n\n```\n```\n\nSources: [docling/pipeline/standard\\_pdf\\_pipeline.py150-173](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/standard_pdf_pipeline.py#L150-L173) [docling/pipeline/vlm\\_pipeline.py77-113](https://github.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 203,
      "char_count": 979,
      "start_char": 14194,
      "end_char": 15173
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:17",
    "content": "peline/standard_pdf_pipeline.py#L150-L173) [docling/pipeline/vlm\\_pipeline.py77-113](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L77-L113)\n\n## Pipeline Execution Flow\n\nPipelines follow a common execution pattern with different implementations for page processing, document assembly, and enrichment. The base execution flow handles error management and resource cleanup.\n\n### BasePipeline Execution Flow\n\n```\n```\n\nSources: [docling/pipeline/base\\_pipeline.py62-123](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L62-L123) [docling/pipeline/base\\_pipeline.py93-115](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L93-L115)\n\n### PaginatedPipeline vs ThreadedPipeline Processing\n\n```\n```\n\nSources: [docling/pipeline/base\\_pipeline.py197-283](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "token_count": 275,
      "char_count": 961,
      "start_char": 15073,
      "end_char": 16034
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:18",
    "content": ".py197-283](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L197-L283) [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py428-506](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L428-L506) [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py226-272](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L226-L272)\n\n### ThreadedStandardPdfPipeline Document Assembly\n\n```\n```\n\nSources: [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py535-627](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L535-L627) [docling/pipeline/vlm\\_pipeline.py136-185](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L136-L185) [docling/pipeline/vlm\\_pipeline.py188-303](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L188-L303)",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "token_count": 347,
      "char_count": 1017,
      "start_char": 15934,
      "end_char": 16953
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:19",
    "content": "tps://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L188-L303)\n\n## Configuration and Model Selection\n\nPipeline behavior is controlled through `PipelineOptions` classes that enable/disable models and configure their parameters. Models can be conditionally instantiated based on these options.\n\n### Configuration-Driven Model Instantiation\n\n```\n```\n\nSources: [docling/pipeline/standard\\_pdf\\_pipeline.py42-134](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/standard_pdf_pipeline.py#L42-L134) [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.\n\n### On this page\n\n- [Processing Pipelines](#processing-pipelines.md)\n- [Pipeline Architecture Overview](#pipeline-architecture-overview.md)\n- [Pipeline Base Architecture](#pipeline-base-architecture.md)",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "token_count": 244,
      "char_count": 994,
      "start_char": 16853,
      "end_char": 17848
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:20",
    "content": "(#pipeline-architecture-overview.md)\n- [Pipeline Base Architecture](#pipeline-base-architecture.md)\n- [Processing Pipelines](#processing-pipelines-1.md)\n- [Pipeline Architecture Overview](#pipeline-architecture-overview-1.md)\n- [Pipeline Base Architecture](#pipeline-base-architecture-1.md)\n- [Pipeline Types and Backend Compatibility](#pipeline-types-and-backend-compatibility.md)\n- [Pipeline Type Selection](#pipeline-type-selection.md)\n- [Pipeline Implementations](#pipeline-implementations.md)\n- [ThreadedStandardPdfPipeline Architecture](#threadedstandardpdfpipeline-architecture.md)\n- [ThreadedQueue Implementation](#threadedqueue-implementation.md)\n- [VlmPipeline and ExtractionVlmPipeline](#vlmpipeline-and-extractionvlmpipeline.md)\n- [SimplePipeline and AsrPipeline](#simplepipeline-and-asrpipeline.md)\n- [Model Factory Integration](#model-factory-integration.md)\n- [Factory-Based Model Creation](#factory-based-model-creation.md)\n- [Pipeline Execution Flow](#pipeline-execution-flow.md)",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "token_count": 225,
      "char_count": 996,
      "start_char": 17748,
      "end_char": 18745
    }
  },
  {
    "chunk_id": "docling-project_docling:_docling-project_docling_5-processing-pipelines.md:chunk:21",
    "content": "reation](#factory-based-model-creation.md)\n- [Pipeline Execution Flow](#pipeline-execution-flow.md)\n- [BasePipeline Execution Flow](#basepipeline-execution-flow.md)\n- [PaginatedPipeline vs ThreadedPipeline Processing](#paginatedpipeline-vs-threadedpipeline-processing.md)\n- [ThreadedStandardPdfPipeline Document Assembly](#threadedstandardpdfpipeline-document-assembly.md)\n- [Configuration and Model Selection](#configuration-and-model-selection.md)\n- [Configuration-Driven Model Instantiation](#configuration-driven-model-instantiation.md)",
    "metadata": {
      "source_file": "_docling-project_docling_5-processing-pipelines.md",
      "source_collection": "docling-project_docling",
      "subdirectory": "root",
      "filename": "_docling-project_docling_5-processing-pipelines.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "token_count": 113,
      "char_count": 540,
      "start_char": 18645,
      "end_char": 19669
    }
  }
]