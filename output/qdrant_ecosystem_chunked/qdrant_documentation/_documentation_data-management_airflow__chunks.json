[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:0",
    "content": "Apache Airflow - Qdrant\n\n[](https://qdrant.tech/)\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\nSearch\n\n[Log in](https://cloud.qdrant.io/login) [Start Free](https://cloud.qdrant.io/signup)\n\nSearch\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\n### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 280,
      "char_count": 1006,
      "start_char": 0,
      "end_char": 1006
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:1",
    "content": ".tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)\n\n### Integrations\n\n[Data Management](https://qdrant.tech/documentation/data-management/)\n\n- [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/)\n- [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/)\n- [Apache Spark](https://qdrant.tech/documentation/data-management/spark/)\n- [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/)\n- [cognee](https://qdrant.tech/documentation/data-management/cognee/)\n- [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/)\n- [DLT](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 267,
      "char_count": 1000,
      "start_char": 906,
      "end_char": 1906
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:2",
    "content": "nfluent Kafka](https://qdrant.tech/documentation/data-management/confluent/)\n- [DLT](https://qdrant.tech/documentation/data-management/dlt/)\n- [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/)\n- [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/)\n- [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)\n\n[Embeddings](https://qdrant.tech/documentation/embeddings/)\n\n- [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/)\n- [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/)\n- [Cohere](https://qdrant.tech/documentation/embeddings/cohere/)\n- [Gemini](https://qdrant.tech/documentation/embeddings/gemini/)\n- [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/)\n- [Mistral](https://qdrant.tech/documentation/embeddings/mistral/)\n- [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/)\n- [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 264,
      "char_count": 1011,
      "start_char": 1806,
      "end_char": 2818
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:3",
    "content": "entation/embeddings/mixedbread/)\n- [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/)\n- [Nomic](https://qdrant.tech/documentation/embeddings/nomic/)\n- [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/)\n- [Ollama](https://qdrant.tech/documentation/embeddings/ollama/)\n- [OpenAI](https://qdrant.tech/documentation/embeddings/openai/)\n- [Prem AI](https://qdrant.tech/documentation/embeddings/premai/)\n- [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/)\n- [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/)\n- [Upstage](https://qdrant.tech/documentation/embeddings/upstage/)\n- [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)\n\n[Frameworks](https://qdrant.tech/documentation/frameworks/)\n\n- [Autogen](https://qdrant.tech/documentation/frameworks/autogen/)\n- [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/)\n- [CamelAI](https://qdrant.tech/documentation/frameworks/camel/)\n- [Cheshire Cat](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 271,
      "char_count": 1012,
      "start_char": 2718,
      "end_char": 3730
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:4",
    "content": "/)\n- [CamelAI](https://qdrant.tech/documentation/frameworks/camel/)\n- [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/)\n- [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/)\n- [Dagster](https://qdrant.tech/documentation/frameworks/dagster/)\n- [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/)\n- [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/)\n- [Feast](https://qdrant.tech/documentation/frameworks/feast/)\n- [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/)\n- [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/)\n- [Haystack](https://qdrant.tech/documentation/frameworks/haystack/)\n- [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/)\n- [Langchain](https://qdrant.tech/documentation/frameworks/langchain/)\n- [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/)\n- [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/)\n- [LlamaIndex](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 275,
      "char_count": 1007,
      "start_char": 3630,
      "end_char": 4637
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:5",
    "content": "[LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/)\n- [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/)\n- [Mastra](https://qdrant.tech/documentation/frameworks/mastra/)\n- [Mem0](https://qdrant.tech/documentation/frameworks/mem0/)\n- [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/)\n- [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/)\n- [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/)\n- [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/)\n- [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/)\n- [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/)\n- [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/)\n- [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/)\n- [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/)\n- [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 269,
      "char_count": 1003,
      "start_char": 4537,
      "end_char": 5542
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:6",
    "content": "meworks/sycamore/)\n- [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/)\n- [txtai](https://qdrant.tech/documentation/frameworks/txtai/)\n- [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/)\n- [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/)\n- [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)\n\n[Observability](https://qdrant.tech/documentation/observability/)\n\n- [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/)\n- [OpenLIT](https://qdrant.tech/documentation/observability/openlit/)\n- [Datadog](https://qdrant.tech/documentation/observability/datadog/)\n\n[Platforms](https://qdrant.tech/documentation/platforms/)\n\n- [Apify](https://qdrant.tech/documentation/platforms/apify/)\n- [BuildShip](https://qdrant.tech/documentation/platforms/buildship/)\n- [Keboola](https://qdrant.tech/documentation/platforms/keboola/)\n- [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/)\n- [Make.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 273,
      "char_count": 1015,
      "start_char": 5442,
      "end_char": 6457
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:7",
    "content": "ion/platforms/keboola/)\n- [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/)\n- [Make.com](https://qdrant.tech/documentation/platforms/make/)\n- [N8N](https://qdrant.tech/documentation/platforms/n8n/)\n- [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/)\n- [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/)\n- [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/)\n- [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/)\n- [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/)\n- [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)\n\n### Examples\n\n[Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)\n\n- [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)\n- [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 257,
      "char_count": 987,
      "start_char": 6357,
      "end_char": 7346
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:8",
    "content": "ering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)\n\n[Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)\n\n- [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/)\n- [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/)\n- [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)\n\n[Build Prototypes](https://qdrant.tech/documentation/examples/)\n\n- [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/)\n- [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/)\n- [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/)\n- [Private Chatbot for Interactive Learning](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 259,
      "char_count": 978,
      "start_char": 7246,
      "end_char": 8224
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:9",
    "content": "ion/examples/llama-index-multitenancy/)\n- [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/)\n- [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/)\n- [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/)\n- [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/)\n- [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/)\n- [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/)\n- [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/)\n- [Movie Recommendation System](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 231,
      "char_count": 997,
      "start_char": 8124,
      "end_char": 9121
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:10",
    "content": "cumentation/examples/rag-chatbot-vultr-dspy-ollama/)\n- [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/)\n- [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)\n\n[Practice Datasets](https://qdrant.tech/documentation/datasets/)\n\n### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)\n\n### Integrations",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 280,
      "char_count": 1022,
      "start_char": 9021,
      "end_char": 10045
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:11",
    "content": "ng Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)\n\n### Integrations\n\n[Data Management](https://qdrant.tech/documentation/data-management/)\n\n- [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/)\n- [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/)\n- [Apache Spark](https://qdrant.tech/documentation/data-management/spark/)\n- [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/)\n- [cognee](https://qdrant.tech/documentation/data-management/cognee/)\n- [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/)\n- [DLT](https://qdrant.tech/documentation/data-management/dlt/)\n- [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/)\n- [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/)\n- [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)\n\n[Embeddings](https://qdrant.tech/documentation/embeddings/)\n\n- [Aleph Alpha](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 262,
      "char_count": 1025,
      "start_char": 9945,
      "end_char": 10970
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:12",
    "content": "ured/)\n\n[Embeddings](https://qdrant.tech/documentation/embeddings/)\n\n- [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/)\n- [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/)\n- [Cohere](https://qdrant.tech/documentation/embeddings/cohere/)\n- [Gemini](https://qdrant.tech/documentation/embeddings/gemini/)\n- [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/)\n- [Mistral](https://qdrant.tech/documentation/embeddings/mistral/)\n- [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/)\n- [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/)\n- [Nomic](https://qdrant.tech/documentation/embeddings/nomic/)\n- [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/)\n- [Ollama](https://qdrant.tech/documentation/embeddings/ollama/)\n- [OpenAI](https://qdrant.tech/documentation/embeddings/openai/)\n- [Prem AI](https://qdrant.tech/documentation/embeddings/premai/)\n- [Snowflake Models](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 270,
      "char_count": 995,
      "start_char": 10870,
      "end_char": 11865
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:13",
    "content": "[Prem AI](https://qdrant.tech/documentation/embeddings/premai/)\n- [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/)\n- [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/)\n- [Upstage](https://qdrant.tech/documentation/embeddings/upstage/)\n- [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)\n\n[Frameworks](https://qdrant.tech/documentation/frameworks/)\n\n- [Autogen](https://qdrant.tech/documentation/frameworks/autogen/)\n- [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/)\n- [CamelAI](https://qdrant.tech/documentation/frameworks/camel/)\n- [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/)\n- [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/)\n- [Dagster](https://qdrant.tech/documentation/frameworks/dagster/)\n- [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/)\n- [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/)\n- [Feast](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 269,
      "char_count": 990,
      "start_char": 11765,
      "end_char": 12755
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:14",
    "content": "peval/)\n- [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/)\n- [Feast](https://qdrant.tech/documentation/frameworks/feast/)\n- [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/)\n- [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/)\n- [Haystack](https://qdrant.tech/documentation/frameworks/haystack/)\n- [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/)\n- [Langchain](https://qdrant.tech/documentation/frameworks/langchain/)\n- [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/)\n- [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/)\n- [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/)\n- [Mastra](https://qdrant.tech/documentation/frameworks/mastra/)\n- [Mem0](https://qdrant.tech/documentation/frameworks/mem0/)\n- [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/)\n- [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/)\n- [Rig-rs](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 284,
      "char_count": 1019,
      "start_char": 12655,
      "end_char": 13674
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:15",
    "content": "j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/)\n- [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/)\n- [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/)\n- [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/)\n- [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/)\n- [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/)\n- [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/)\n- [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/)\n- [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/)\n- [txtai](https://qdrant.tech/documentation/frameworks/txtai/)\n- [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/)\n- [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/)\n- [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)\n\n[Observability](https://qdrant.tech/documentation/observability/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 270,
      "char_count": 1016,
      "start_char": 13574,
      "end_char": 14592
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:16",
    "content": "entation/frameworks/voltagent/)\n\n[Observability](https://qdrant.tech/documentation/observability/)\n\n- [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/)\n- [OpenLIT](https://qdrant.tech/documentation/observability/openlit/)\n- [Datadog](https://qdrant.tech/documentation/observability/datadog/)\n\n[Platforms](https://qdrant.tech/documentation/platforms/)\n\n- [Apify](https://qdrant.tech/documentation/platforms/apify/)\n- [BuildShip](https://qdrant.tech/documentation/platforms/buildship/)\n- [Keboola](https://qdrant.tech/documentation/platforms/keboola/)\n- [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/)\n- [Make.com](https://qdrant.tech/documentation/platforms/make/)\n- [N8N](https://qdrant.tech/documentation/platforms/n8n/)\n- [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/)\n- [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/)\n- [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/)\n- [Salesforce Mulesoft](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 279,
      "char_count": 1018,
      "start_char": 14492,
      "end_char": 15510
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:17",
    "content": "PT](https://qdrant.tech/documentation/platforms/privategpt/)\n- [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/)\n- [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/)\n- [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)\n\n### Examples\n\n[Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)\n\n- [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)\n- [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)\n\n[Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)\n\n- [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/)\n- [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/)\n- [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "token_count": 249,
      "char_count": 974,
      "start_char": 15410,
      "end_char": 16384
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:18",
    "content": "-airflow-astronomer/)\n- [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)\n\n[Build Prototypes](https://qdrant.tech/documentation/examples/)\n\n- [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/)\n- [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/)\n- [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/)\n- [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/)\n- [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/)\n- [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/)\n- [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "token_count": 254,
      "char_count": 1005,
      "start_char": 16284,
      "end_char": 17289
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:19",
    "content": "r-support-cohere-airbyte-aws/)\n- [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/)\n- [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/)\n- [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/)\n- [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/)\n- [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/)\n- [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)\n\n[Practice Datasets](https://qdrant.tech/documentation/datasets/)\n\n- [Documentation](https://qdrant.tech/documentation/)\n-\n- [Data management](https://qdrant.tech/documentation/data-management/)\n-\n- Apache Airflow\n\n# Apache Airflow",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "token_count": 239,
      "char_count": 1014,
      "start_char": 17189,
      "end_char": 18205
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:20",
    "content": "nagement](https://qdrant.tech/documentation/data-management/)\n-\n- Apache Airflow\n\n# Apache Airflow\n\n[Apache Airflow](https://airflow.apache.org/) is an open-source platform for authoring, scheduling and monitoring data and computing workflows. Airflow uses Python to create workflows that can be easily scheduled and monitored.\n\nQdrant is available as a [provider](https://airflow.apache.org/docs/apache-airflow-providers-qdrant/stable/index.html) in Airflow to interface with the database.\n\n## Prerequisites\n\nBefore configuring Airflow, you need:\n\n1. A Qdrant instance to connect to. You can set one up in our [installation guide](https://qdrant.tech/documentation/guides/installation/).\n\n2. A running Airflow instance. You can use their [Quick Start Guide](https://airflow.apache.org/docs/apache-airflow/stable/start.html).\n\n## Installation\n\nYou can install the Qdrant provider by running `pip install apache-airflow-providers-qdrant` in your Airflow shell.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "token_count": 218,
      "char_count": 959,
      "start_char": 18105,
      "end_char": 19066
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:21",
    "content": "he Qdrant provider by running `pip install apache-airflow-providers-qdrant` in your Airflow shell.\n\n**NOTE**: You’ll have to restart your Airflow session for the provider to be available.\n\n## Setting up a connection\n\nOpen the `Admin-> Connections` section of the Airflow UI. Click the `Create` link to create a new [Qdrant connection](https://airflow.apache.org/docs/apache-airflow-providers-qdrant/stable/connections.html).\n\nYou can also set up a connection using [environment variables](https://airflow.apache.org/docs/apache-airflow/stable/howto/connection.html#environment-variables-connections) or an [external secret backend](https://airflow.apache.org/docs/apache-airflow/stable/security/secrets/secrets-backend/index.html).\n\n## Qdrant hook\n\nAn Airflow hook is an abstraction of a specific API that allows Airflow to interact with an external system.\n\n```python\nfrom airflow.providers.qdrant.hooks.qdrant import QdrantHook\n\nhook = QdrantHook(conn_id=\"qdrant_connection\")\n\nhook.verify_connection()\n```",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "token_count": 232,
      "char_count": 1007,
      "start_char": 18966,
      "end_char": 19975
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:22",
    "content": "nt import QdrantHook\n\nhook = QdrantHook(conn_id=\"qdrant_connection\")\n\nhook.verify_connection()\n```\n\nA [`qdrant_client#QdrantClient`](https://pypi.org/project/qdrant-client/) instance is available via `@property conn` of the `QdrantHook` instance for use within your Airflow workflows.\n\n```python\nfrom qdrant_client import models\n\nhook.conn.count(\"<COLLECTION_NAME>\")\n\nhook.conn.upsert(\n    \"<COLLECTION_NAME>\",\n    points=[\n        models.PointStruct(id=32, vector=[0.32, 0.12, 0.123], payload={\"color\": \"red\"})\n    ],\n)\n```\n\n## Qdrant Ingest Operator\n\nThe Qdrant provider also provides a convenience operator for uploading data to a Qdrant collection that internally uses the Qdrant hook.\n\n```python\nfrom airflow.providers.qdrant.operators.qdrant import QdrantIngestOperator\n\nvectors = [\n    [0.11, 0.22, 0.33, 0.44],\n    [0.55, 0.66, 0.77, 0.88],\n    [0.88, 0.11, 0.12, 0.13],\n]\nids = [32, 21, \"b626f6a9-b14d-4af9-b7c3-43d8deb719a6\"]\npayload = [{\"meta\": \"data\"}, {\"meta\": \"data_2\"}, {\"meta\": \"data_3\", \"extra\": \"data\"}]",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "token_count": 363,
      "char_count": 1021,
      "start_char": 19875,
      "end_char": 20898
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:23",
    "content": "d8deb719a6\"]\npayload = [{\"meta\": \"data\"}, {\"meta\": \"data_2\"}, {\"meta\": \"data_3\", \"extra\": \"data\"}]\n\nQdrantIngestOperator(\n    conn_id=\"qdrant_connection\",\n    task_id=\"qdrant_ingest\",\n    collection_name=\"<COLLECTION_NAME>\",\n    vectors=vectors,\n    ids=ids,\n    payload=payload,\n)\n```\n\n## Reference\n\n- 📦 [Provider package PyPI](https://pypi.org/project/apache-airflow-providers-qdrant/)\n- 📚 [Provider docs](https://airflow.apache.org/docs/apache-airflow-providers-qdrant/stable/index.html)\n- 📄 [Source Code](https://github.com/apache/airflow/tree/main/providers/qdrant)\n\n##### Was this page useful?\n\nYes No\n\nThank you for your feedback! 🙏\n\nWe are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/data-management/airflow.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue.\n\nOn this page:\n\n- [Apache Airflow](#apache-airflow.md)\n\n  - [Prerequisites](#prerequisites.md)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "token_count": 285,
      "char_count": 1001,
      "start_char": 20798,
      "end_char": 21800
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md:chunk:24",
    "content": "sue.\n\nOn this page:\n\n- [Apache Airflow](#apache-airflow.md)\n\n  - [Prerequisites](#prerequisites.md)\n  - [Installation](#installation.md)\n  - [Setting up a connection](#setting-up-a-connection.md)\n  - [Qdrant hook](#qdrant-hook.md)\n  - [Qdrant Ingest Operator](#qdrant-ingest-operator.md)\n  - [Reference](#reference.md)\n\n* [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/data-management/airflow.md)\n* [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)\n\n#### Ready to get started with Qdrant?\n\n[Start Free](https://qdrant.to/cloud/)\n\n© 2025 Qdrant.\n\n[Terms](https://qdrant.tech/legal/terms_and_conditions/) [Privacy Policy](https://qdrant.tech/legal/privacy-policy/) [Impressum](https://qdrant.tech/legal/impressum/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_airflow\\_documentation_data-management_airflow_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_airflow_.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "token_count": 230,
      "char_count": 796,
      "start_char": 21700,
      "end_char": 22724
    }
  }
]