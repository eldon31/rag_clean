[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:0",
    "content": "Managing a Cluster - Qdrant\n\n[](https://qdrant.tech/)\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\nSearch\n\n[Log in](https://cloud.qdrant.io/login) [Start Free](https://cloud.qdrant.io/signup)\n\nSearch\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\n### Getting Started\n\n[Cloud Quickstart](https://qdrant.tech/documentation/cloud-quickstart/)\n\n### Managed Services\n\n[Getting Started](https://qdrant.tech/documentation/cloud-getting-started/)\n\n[Account Setup](https://qdrant.tech/documentation/cloud-account-setup/)\n\n[Cloud RBAC](https://qdrant.tech/documentation/cloud-rbac/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 262,
      "char_count": 994,
      "start_char": 0,
      "end_char": 996
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:1",
    "content": "h/documentation/cloud-account-setup/)\n\n[Cloud RBAC](https://qdrant.tech/documentation/cloud-rbac/)\n\n- [Role Management](https://qdrant.tech/documentation/cloud-rbac/role-management/)\n- [User Management](https://qdrant.tech/documentation/cloud-rbac/user-management/)\n- [Permission Reference](https://qdrant.tech/documentation/cloud-rbac/permission-reference/)\n\n[Managed Cloud](https://qdrant.tech/documentation/cloud/)\n\n- [Create a Cluster](https://qdrant.tech/documentation/cloud/create-cluster/)\n- [Authentication](https://qdrant.tech/documentation/cloud/authentication/)\n- [Cluster Access](https://qdrant.tech/documentation/cloud/cluster-access/)\n- [Scale Clusters](https://qdrant.tech/documentation/cloud/cluster-scaling/)\n- [Configure Clusters](https://qdrant.tech/documentation/cloud/configure-cluster/)\n- [Monitor Clusters](https://qdrant.tech/documentation/cloud/cluster-monitoring/)\n- [Update Clusters](https://qdrant.tech/documentation/cloud/cluster-upgrades/)\n- [Backup Clusters](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 230,
      "char_count": 1005,
      "start_char": 896,
      "end_char": 1901
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:2",
    "content": "ters](https://qdrant.tech/documentation/cloud/cluster-upgrades/)\n- [Backup Clusters](https://qdrant.tech/documentation/cloud/backups/)\n- [Inference](https://qdrant.tech/documentation/cloud/inference/)\n\n[Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/)\n\n- [Setup Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-setup/)\n- [Create a Cluster](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-cluster-creation/)\n- [Configure, Scale & Update Clusters](https://qdrant.tech/documentation/hybrid-cloud/configure-scale-upgrade/)\n- [Configure the Qdrant Operator](https://qdrant.tech/documentation/hybrid-cloud/operator-configuration/)\n- [Networking, Logging & Monitoring](https://qdrant.tech/documentation/hybrid-cloud/networking-logging-monitoring/)\n- [Deployment Platforms](https://qdrant.tech/documentation/hybrid-cloud/platform-deployment-options/)\n\n[Private Cloud](https://qdrant.tech/documentation/private-cloud/)\n\n- [Setup Private Cloud](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 232,
      "char_count": 1001,
      "start_char": 1801,
      "end_char": 2802
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:3",
    "content": "te Cloud](https://qdrant.tech/documentation/private-cloud/)\n\n- [Setup Private Cloud](https://qdrant.tech/documentation/private-cloud/private-cloud-setup/)\n- [Configuration](https://qdrant.tech/documentation/private-cloud/configuration/)\n- [Managing a Cluster](https://qdrant.tech/documentation/private-cloud/qdrant-cluster-management/)\n- [Backups](https://qdrant.tech/documentation/private-cloud/backups/)\n- [Logging & Monitoring](https://qdrant.tech/documentation/private-cloud/logging-monitoring/)\n- [API Reference](https://qdrant.tech/documentation/private-cloud/api-reference/)\n- [Changelog](https://qdrant.tech/documentation/private-cloud/changelog/)\n\n[Billing & Payments](https://qdrant.tech/documentation/cloud-pricing-payments/)\n\n[Premium Tier](https://qdrant.tech/documentation/cloud-premium/)\n\n### Interfaces & Tools\n\n[Qdrant Cloud API](https://qdrant.tech/documentation/cloud-api/)\n\n[Infrastructure Tools](https://qdrant.tech/documentation/cloud-tools/)\n\n- [Pulumi](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 224,
      "char_count": 992,
      "start_char": 2702,
      "end_char": 3694
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:4",
    "content": "[Infrastructure Tools](https://qdrant.tech/documentation/cloud-tools/)\n\n- [Pulumi](https://qdrant.tech/documentation/cloud-tools/pulumi/)\n- [Terraform](https://qdrant.tech/documentation/cloud-tools/terraform/)\n\n### Support\n\n[Support](https://qdrant.tech/documentation/support/)\n\n[Security](https://qdrant.tech/documentation/cloud-security/)\n\n[Tutorials & Examples](https://qdrant.tech/documentation/tutorials-and-examples/)\n\n- [Using Cloud Inference to Build Hybrid Search](https://qdrant.tech/documentation/tutorials-and-examples/cloud-inference-hybrid-search/)\n- [Monitoring Hybrid/Private Cloud with Prometheus and Grafana](https://qdrant.tech/documentation/tutorials-and-examples/hybrid-cloud-prometheus/)\n\n### Getting Started\n\n[Cloud Quickstart](https://qdrant.tech/documentation/cloud-quickstart/)\n\n### Managed Services\n\n[Getting Started](https://qdrant.tech/documentation/cloud-getting-started/)\n\n[Account Setup](https://qdrant.tech/documentation/cloud-account-setup/)\n\n[Cloud RBAC](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 233,
      "char_count": 1005,
      "start_char": 3594,
      "end_char": 4601
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:5",
    "content": "Account Setup](https://qdrant.tech/documentation/cloud-account-setup/)\n\n[Cloud RBAC](https://qdrant.tech/documentation/cloud-rbac/)\n\n- [Role Management](https://qdrant.tech/documentation/cloud-rbac/role-management/)\n- [User Management](https://qdrant.tech/documentation/cloud-rbac/user-management/)\n- [Permission Reference](https://qdrant.tech/documentation/cloud-rbac/permission-reference/)\n\n[Managed Cloud](https://qdrant.tech/documentation/cloud/)\n\n- [Create a Cluster](https://qdrant.tech/documentation/cloud/create-cluster/)\n- [Authentication](https://qdrant.tech/documentation/cloud/authentication/)\n- [Cluster Access](https://qdrant.tech/documentation/cloud/cluster-access/)\n- [Scale Clusters](https://qdrant.tech/documentation/cloud/cluster-scaling/)\n- [Configure Clusters](https://qdrant.tech/documentation/cloud/configure-cluster/)\n- [Monitor Clusters](https://qdrant.tech/documentation/cloud/cluster-monitoring/)\n- [Update Clusters](https://qdrant.tech/documentation/cloud/cluster-upgrades/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 226,
      "char_count": 1002,
      "start_char": 4501,
      "end_char": 5504
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:6",
    "content": "cluster-monitoring/)\n- [Update Clusters](https://qdrant.tech/documentation/cloud/cluster-upgrades/)\n- [Backup Clusters](https://qdrant.tech/documentation/cloud/backups/)\n- [Inference](https://qdrant.tech/documentation/cloud/inference/)\n\n[Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/)\n\n- [Setup Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-setup/)\n- [Create a Cluster](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-cluster-creation/)\n- [Configure, Scale & Update Clusters](https://qdrant.tech/documentation/hybrid-cloud/configure-scale-upgrade/)\n- [Configure the Qdrant Operator](https://qdrant.tech/documentation/hybrid-cloud/operator-configuration/)\n- [Networking, Logging & Monitoring](https://qdrant.tech/documentation/hybrid-cloud/networking-logging-monitoring/)\n- [Deployment Platforms](https://qdrant.tech/documentation/hybrid-cloud/platform-deployment-options/)\n\n[Private Cloud](https://qdrant.tech/documentation/private-cloud/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 228,
      "char_count": 995,
      "start_char": 5404,
      "end_char": 6401
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:7",
    "content": "d/platform-deployment-options/)\n\n[Private Cloud](https://qdrant.tech/documentation/private-cloud/)\n\n- [Setup Private Cloud](https://qdrant.tech/documentation/private-cloud/private-cloud-setup/)\n- [Configuration](https://qdrant.tech/documentation/private-cloud/configuration/)\n- [Managing a Cluster](https://qdrant.tech/documentation/private-cloud/qdrant-cluster-management/)\n- [Backups](https://qdrant.tech/documentation/private-cloud/backups/)\n- [Logging & Monitoring](https://qdrant.tech/documentation/private-cloud/logging-monitoring/)\n- [API Reference](https://qdrant.tech/documentation/private-cloud/api-reference/)\n- [Changelog](https://qdrant.tech/documentation/private-cloud/changelog/)\n\n[Billing & Payments](https://qdrant.tech/documentation/cloud-pricing-payments/)\n\n[Premium Tier](https://qdrant.tech/documentation/cloud-premium/)\n\n### Interfaces & Tools\n\n[Qdrant Cloud API](https://qdrant.tech/documentation/cloud-api/)\n\n[Infrastructure Tools](https://qdrant.tech/documentation/cloud-tools/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 221,
      "char_count": 1003,
      "start_char": 6301,
      "end_char": 7306
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:8",
    "content": "/documentation/cloud-api/)\n\n[Infrastructure Tools](https://qdrant.tech/documentation/cloud-tools/)\n\n- [Pulumi](https://qdrant.tech/documentation/cloud-tools/pulumi/)\n- [Terraform](https://qdrant.tech/documentation/cloud-tools/terraform/)\n\n### Support\n\n[Support](https://qdrant.tech/documentation/support/)\n\n[Security](https://qdrant.tech/documentation/cloud-security/)\n\n[Tutorials & Examples](https://qdrant.tech/documentation/tutorials-and-examples/)\n\n- [Using Cloud Inference to Build Hybrid Search](https://qdrant.tech/documentation/tutorials-and-examples/cloud-inference-hybrid-search/)\n- [Monitoring Hybrid/Private Cloud with Prometheus and Grafana](https://qdrant.tech/documentation/tutorials-and-examples/hybrid-cloud-prometheus/)\n\n* [Documentation](https://qdrant.tech/documentation/)\n*\n* [Private cloud](https://qdrant.tech/documentation/private-cloud/)\n*\n* Managing a Cluster\n\n# Managing a Qdrant Cluster\n\nThe most minimal QdrantCluster configuration is:\n\n```yaml\napiVersion: qdrant.io/v1\nkind: QdrantCluster",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 238,
      "char_count": 1018,
      "start_char": 7206,
      "end_char": 8225
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:9",
    "content": "most minimal QdrantCluster configuration is:\n\n```yaml\napiVersion: qdrant.io/v1\nkind: QdrantCluster\nmetadata:\n  name: qdrant-a7d8d973-0cc5-42de-8d7b-c29d14d24840\n  labels:\n    cluster-id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n    customer-id: \"acme-industries\"\nspec:\n  id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n  version: \"v1.11.3\"\n  size: 1\n  resources:\n    cpu: 100m\n    memory: \"1Gi\"\n    storage: \"2Gi\"\n```\n\nThe `id` should be unique across all Qdrant clusters in the same namespace, the `name` must follow the above pattern and the `cluster-id` and `customer-id` labels are mandatory.\n\nThere are lots more configuration options to configure scheduling, security, networking, and more. For full details see the [Qdrant Private Cloud API Reference](https://qdrant.tech/documentation/private-cloud/api-reference/).\n\n## Scaling a Cluster\n\nTo scale a cluster, update the CPU, memory and storage resources in the QdrantCluster spec. The Qdrant operator will automatically adjust the cluster configuration.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 334,
      "char_count": 1004,
      "start_char": 8125,
      "end_char": 9130
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:10",
    "content": "in the QdrantCluster spec. The Qdrant operator will automatically adjust the cluster configuration. This operation is highly available on a multi-node cluster with replicated collections.\n\nVertical scaling is only possible if your CSI driver and StorageClass allows volume expansion. Disk storage can not be downscaled.\n\n## Upgrading the Qdrant version\n\nTo upgrade the Qdrant version of a database cluster, update the `version` field in the QdrantCluster spec. The Qdrant operator will automatically upgrade the cluster to the new version. The upgrade process is highly available on a multi-node cluster with replicated collections.\n\nNote, that you should not skip minor versions when upgrading. For example, if you are running version `v1.11.3`, you can upgrade to `v1.11.5` or `v1.12.6`, but not directly to `v1.13.0`.\n\n## Exposing a Cluster\n\nBy default, a QdrantCluster will be exposed through an internal `ClusterIP` service.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 214,
      "char_count": 929,
      "start_char": 9030,
      "end_char": 9960
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:11",
    "content": "sing a Cluster\n\nBy default, a QdrantCluster will be exposed through an internal `ClusterIP` service. To expose the cluster to the outside world, you can create a `NodePort` service, a `LoadBalancer` service or an `Ingress` resource.\n\nThis is an example on how to create a QdrantCluster with a `LoadBalancer` service:\n\n```yaml\napiVersion: qdrant.io/v1\nkind: QdrantCluster\nmetadata:\n  name: qdrant-a7d8d973-0cc5-42de-8d7b-c29d14d24840\n  labels:\n    cluster-id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n    customer-id: \"acme-industries\"\nspec:\n  id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n  version: \"v1.11.3\"\n  size: 1\n  resources:\n    cpu: 100m\n    memory: \"1Gi\"\n    storage: \"2Gi\"\n  service:\n    type: LoadBalancer\n    annotations:\n      service.beta.kubernetes.io/aws-load-balancer-type: nlb\n```\n\nEspecially if you create a LoadBalancer Service, you may need to provide annotations for the loadbalancer configration. Please refer to the documention of your cloud provider for more details.\n\nExamples:",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 346,
      "char_count": 999,
      "start_char": 9860,
      "end_char": 10861
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:12",
    "content": "configration. Please refer to the documention of your cloud provider for more details.\n\nExamples:\n\n- [AWS EKS LoadBalancer annotations](https://kubernetes-sigs.github.io/aws-load-balancer-controller/latest/guide/service/annotations/)\n- [Azure AKS Public LoadBalancer annotations](https://learn.microsoft.com/en-us/azure/aks/load-balancer-standard)\n- [Azure AKS Internal LoadBalancer annotations](https://learn.microsoft.com/en-us/azure/aks/internal-lb)\n- [GCP GKE LoadBalancer annotations](https://cloud.google.com/kubernetes-engine/docs/concepts/service-load-balancer-parameters)\n-\n\nInternal communication channels are **never** protected by an API key nor bearer tokens. Internal gRPC uses port 6335. You must ensure that this port is not publicly reachable and can only be used for node communication. By default, Qdrant Private Cloud deployes a strict NetworkPolicy to only allow communication on port 6335 between Qdrant Cluster nodes.\n\n## Authentication and Authorization",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 210,
      "char_count": 977,
      "start_char": 10761,
      "end_char": 11741
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:13",
    "content": "llow communication on port 6335 between Qdrant Cluster nodes.\n\n## Authentication and Authorization\n\nBy default, clusters in Hybrid Cloud are only exposed through a Kubernetes ClusterIP Service inside of the Kubernetes network and not accessible to the outside, and no API key is configured. If you choose to expose the database internally or externally, you must configure an API key.\n\nAuthentication information is provided by Kubernetes secrets.\n\nOne way to create a secret is with kubectl:\n\n```shell\nkubectl create secret generic qdrant-api-key --from-literal=api-key=your-secret-api-key --from-literal=read-only-api-key=your-secret-read-only-api-key --namespace qdrant-private-cloud\n```\n\nThe resulting secret will look like this:\n\n```yaml\napiVersion: v1\ndata:\n  api-key: ...\n  read-only-api-key: ...\nkind: Secret\nmetadata:\n  name: qdrant-api-key\n  namespace: qdrant-private-cloud\ntype: kubernetes.io/generic\n```\n\nYou can reference the secret in the QdrantCluster spec:\n\n```yaml\napiVersion: qdrant.io/v1",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 234,
      "char_count": 1006,
      "start_char": 11641,
      "end_char": 12648
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:14",
    "content": "eric\n```\n\nYou can reference the secret in the QdrantCluster spec:\n\n```yaml\napiVersion: qdrant.io/v1\nkind: QdrantCluster\nmetadata:\n  name: qdrant-a7d8d973-0cc5-42de-8d7b-c29d14d24840\n  labels:\n    cluster-id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n    customer-id: \"acme-industries\"\nspec:\n  id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n  version: \"v1.11.3\"\n  size: 1\n  resources:\n    cpu: 100m\n    memory: \"1Gi\"\n    storage: \"2Gi\"\n  config:\n    service:\n      api_key:\n        secretKeyRef:\n          name: qdrant-api-key\n          key: api-key\n      read_only_api_key:\n        secretKeyRef:\n          name: qdrant-api-key\n          key: read-only-api-key\n      jwt_rbac: true\n```\n\nIf you set the `jwt_rbac` flag, you will also be able to create granular [JWT tokens for role based access control](https://qdrant.tech/documentation/guides/security/#granular-access-control-with-jwt).\n\n### Configuring TLS for Database Access\n\nIf you want to configure TLS for accessing your Qdrant database, there are two options:",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 359,
      "char_count": 1010,
      "start_char": 12548,
      "end_char": 13560
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:15",
    "content": "se Access\n\nIf you want to configure TLS for accessing your Qdrant database, there are two options:\n\n- You can offload TLS at the ingress or loadbalancer level.\n- You can configure TLS directly in the Qdrant database.\n\nIf you want to configure TLS directly in the Qdrant database, you can provide this as a secret.\n\nTo create such a secret, you can use `kubectl`:\n\n```shell\n kubectl create secret tls qdrant-tls --cert=mydomain.com.crt --key=mydomain.com.key --namespace the-qdrant-namespace\n```\n\nThe resulting secret will look like this:\n\n```yaml\napiVersion: v1\ndata:\n  tls.crt: ...\n  tls.key: ...\nkind: Secret\nmetadata:\n  name: qdrant-tls\n  namespace: the-qdrant-namespace\ntype: kubernetes.io/tls\n```\n\nYou can reference the secret in the QdrantCluster spec:\n\n```yaml\napiVersion: qdrant.io/v1\nkind: QdrantCluster\nmetadata:\n  name: test-cluster\nspec:\n  id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n  version: \"v1.11.3\"\n  size: 1\n  resources:\n    cpu: 100m\n    memory: \"1Gi\"\n    storage: \"2Gi\"\n  config:\n    service:",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 316,
      "char_count": 1012,
      "start_char": 13460,
      "end_char": 14473
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:16",
    "content": "3\"\n  size: 1\n  resources:\n    cpu: 100m\n    memory: \"1Gi\"\n    storage: \"2Gi\"\n  config:\n    service:\n      enable_tls: true\n    tls:\n      cert:\n        secretKeyRef:\n          name: qdrant-tls\n          key: tls.crt\n      key:\n        secretKeyRef:\n          name: qdrant-tls\n          key: tls.key\n```\n\n### Configuring TLS for Inter-cluster Communication\n\n*Available as of Operator v2.2.0*\n\nThe feature can be enabled only at the cluster creation. Later changes are not possible.\n\nIf you want to encrypt communication between Qdrant nodes, you need to enable TLS by providing certificate, key, and root CA certificate used for generating the former.\n\nSimilar to the instruction stated in the previous section, you need to create a secret:\n\n```shell\n kubectl create secret generic qdrant-p2p-tls \\\n        --from-file=tls.crt=qdrant-nodes.crt \\\n        --from-file=tls.key=qdrant-nodes.key \\\n        --from-file=ca.crt=root-ca.crt\n        --namespace the-qdrant-namespace\n```\n\nThe resulting secret will look like this:",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 261,
      "char_count": 1018,
      "start_char": 14373,
      "end_char": 15393
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:17",
    "content": "oot-ca.crt\n        --namespace the-qdrant-namespace\n```\n\nThe resulting secret will look like this:\n\n```yaml\napiVersion: v1\ndata:\n  tls.crt: ...\n  tls.key: ...\n  ca.crt: ...\nkind: Secret\nmetadata:\n  name: qdrant-p2p-tls\n  namespace: the-qdrant-namespace\ntype: Opaque\n```\n\nYou can reference the secret in the QdrantCluster spec:\n\n```yaml\napiVersion: qdrant.io/v1\nkind: QdrantCluster\nmetadata:\n  name: test-cluster\n  labels:\n    cluster-id: \"my-cluster\"\n    customer-id: \"acme-industries\"\nspec:\n  id: \"my-cluster\"\n  version: \"v1.13.3\"\n  size: 2\n  resources:\n    cpu: 100m\n    memory: \"1Gi\"\n    storage: \"2Gi\"\n  config:\n    service:\n      enable_tls: true\n    tls:\n      caCert:\n        secretKeyRef:\n          name: qdrant-p2p-tls\n          key: ca.crt\n      cert:\n        secretKeyRef:\n          name: qdrant-p2p-tls\n          key: tls.crt\n      key:\n        secretKeyRef:\n          name: qdrant-p2p-tls\n          key: tls.key\n```\n\nThe operator assigns the names to nodes in cluster according to the following convention:\n\n```",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "token_count": 314,
      "char_count": 1024,
      "start_char": 15293,
      "end_char": 16318
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:18",
    "content": "```\n\nThe operator assigns the names to nodes in cluster according to the following convention:\n\n```\nqdrant-{spec.id}-{node-index}.qdrant-headless-{spec.id}\n```\n\nTherefore, in addition to the domain used for accessing the database, the provided certificate must contain Subjective Alternative Names (SAN) for all foreseen nodes. It can be created with a tool of your choice, e.g., using [step CLI](https://smallstep.com/docs/step-cli/installation/). Following the example `QdrantCluster`, the proper certificate can be obtained with:\n\n```shell\nstep certificate create mydomain.com qdrant-nodes.crt qdrant-nodes.key \\\n  --profile leaf --not-after 43800h \\\n  --ca root-ca.crt --ca-key root-ca.key \\\n  --san qdrant-my-cluster-0.qdrant-headless-my-cluster \\\n  --san qdrant-my-cluster-1.qdrant-headless-my-cluster\n```\n\n## GPU support\n\nStarting with Qdrant 1.13 and private-cloud version 1.6.1 you can create a cluster that uses GPUs to accelarate indexing.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "token_count": 246,
      "char_count": 950,
      "start_char": 16218,
      "end_char": 17170
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:19",
    "content": "13 and private-cloud version 1.6.1 you can create a cluster that uses GPUs to accelarate indexing.\n\nAs a prerequisite, you need to have a Kubernetes cluster with GPU support. You can check the [Kubernetes documentation](https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/) for generic information on GPUs and Kubernetes, or the documentation of your specific Kubernetes distribution.\n\nExamples:\n\n- [AWS EKS GPU support](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/latest/amazon-eks.html)\n- [Azure AKS GPU support](https://docs.microsoft.com/en-us/azure/aks/gpu-cluster)\n- [GCP GKE GPU support](https://cloud.google.com/kubernetes-engine/docs/how-to/gpus)\n- [Vultr Kubernetes GPU support](https://blogs.vultr.com/whats-new-vultr-q2-2023)\n\nOnce you have a Kubernetes cluster with GPU support, you can create a QdrantCluster with GPU support:\n\n```yaml\napiVersion: qdrant.io/v1\nkind: QdrantCluster\nmetadata:\n  name: qdrant-a7d8d973-0cc5-42de-8d7b-c29d14d24840\n  labels:",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "token_count": 275,
      "char_count": 992,
      "start_char": 17070,
      "end_char": 18063
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:20",
    "content": "t.io/v1\nkind: QdrantCluster\nmetadata:\n  name: qdrant-a7d8d973-0cc5-42de-8d7b-c29d14d24840\n  labels:\n    cluster-id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n    customer-id: \"acme-industries\"\nspec:\n  id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n  version: \"v1.13.4\"\n  size: 1\n  resources:\n    cpu: 2\n    memory: \"8Gi\"\n    storage: \"40Gi\"\n  gpu:\n    gpuType: \"nvidia\"\n```\n\nOnce the cluster Pod has started, you can check in the logs if the GPU is detected:\n\n```shell\n$ kubectl logs qdrant-a7d8d973-0cc5-42de-8d7b-c29d14d24840-0\n\nStarting initializing for pod 0\n           _                 _\n  __ _  __| |_ __ __ _ _ __ | |_\n / _` |/ _` | '__/ _` | '_ \\| __|\n| (_| | (_| | | | (_| | | | | |_\n \\__, |\\__,_|_|  \\__,_|_| |_|\\__|\n    |_|\n\nVersion: 1.13.4, build: 7abc6843\nAccess web UI at http://localhost:6333/dashboard\n\n2025-03-14T10:25:30.509636Z  INFO gpu::instance: Found GPU device: NVIDIA A16-2Q\n2025-03-14T10:25:30.509679Z  INFO gpu::instance: Found GPU device: llvmpipe (LLVM 15.0.7, 256 bits)\n2025-03-14T10:25:30.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "token_count": 501,
      "char_count": 1014,
      "start_char": 17963,
      "end_char": 18977
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:21",
    "content": "509679Z  INFO gpu::instance: Found GPU device: llvmpipe (LLVM 15.0.7, 256 bits)\n2025-03-14T10:25:30.509734Z  INFO gpu::device: Create GPU device NVIDIA A16-2Q\n...\n```\n\nFor more GPU configuration options, see the [Qdrant Private Cloud API Reference](https://qdrant.tech/documentation/private-cloud/api-reference/).\n\n## Ephemeral Snapshot Volumes\n\nIf you do not [create snapshots](https://api.qdrant.tech/api-reference/snapshots/create-snapshot), or there is no need to keep them available after cluster restart, the snapshot storage classname can be set to `emptyDir`:\n\n```yaml\napiVersion: qdrant.io/v1\nkind: QdrantCluster\nmetadata:\n  name: qdrant-a7d8d973-0cc5-42de-8d7b-c29d14d24840\n  labels:\n    cluster-id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n    customer-id: \"acme-industries\"\nspec:\n  id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n  version: \"v1.13.4\"\n  size: 1\n  resources:\n    cpu: 2\n    memory: \"8Gi\"\n    storage: \"40Gi\"\n  storageClassNames:\n    snapshots: emptyDir\n```",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "token_count": 383,
      "char_count": 976,
      "start_char": 18877,
      "end_char": 19855
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:22",
    "content": "cpu: 2\n    memory: \"8Gi\"\n    storage: \"40Gi\"\n  storageClassNames:\n    snapshots: emptyDir\n```\n\nSee [Kubernetes docs on emptyDir volumes](https://kubernetes.io/docs/concepts/storage/volumes/#emptydir) for more details, on how k8s node ephemeral storage is allocated and used.\n\n## Automatic Shard Rebalancing\n\nQdrant Private Cloud supports automatic shard rebalancing. This means that when you scale up or down the number of nodes in a cluster, the operator will automatically redistribute the shards across the available nodes to ensure an even distribution of data.\n\nTo enable automatic shard rebalancing, you can set the `rebalancestrategy` field in the QdrantCluster spec:\n\n```yaml\napiVersion: qdrant.io/v1\nkind: QdrantCluster\nmetadata:\n  name: qdrant-a7d8d973-0cc5-42de-8d7b-c29d14d24840\n  labels:\n    cluster-id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n    customer-id: \"acme-industries\"\nspec:\n  id: \"a7d8d973-0cc5-42de-8d7b-c29d14d24840\"\n  version: \"v1.15.1\"\n  size: 3\n  rebalanceStrategy: by_count_and_size",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "token_count": 342,
      "char_count": 1011,
      "start_char": 19755,
      "end_char": 20772
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:23",
    "content": "-0cc5-42de-8d7b-c29d14d24840\"\n  version: \"v1.15.1\"\n  size: 3\n  rebalanceStrategy: by_count_and_size\n  resources:\n    cpu: 2\n    memory: \"8Gi\"\n    storage: \"40Gi\"\n```\n\nFor a list of all available rebalancing strategies, see the [Qdrant Private Cloud API Reference](https://qdrant.tech/documentation/private-cloud/api-reference/#rebalancestrategy).\n\n## Resharding\n\nIn Qdrant Cloud, you can change the number of shards in your existing collections without having to recreate the collection from scratch. This feature is called resharding and allows you to scale your collections up or down as needed. For more details see [Resharding](https://qdrant.tech/documentation/cloud/cluster-scaling/#resharding).\n\n##### Was this page useful?\n\nYes No\n\nThank you for your feedback! 🙏\n\nWe are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/private-cloud/qdrant-cluster-management.md) this page on GitHub, or [create](https://github.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "token_count": 268,
      "char_count": 995,
      "start_char": 20672,
      "end_char": 21667
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:24",
    "content": "ntation/private-cloud/qdrant-cluster-management.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue.\n\nOn this page:\n\n- [Managing a Qdrant Cluster](#managing-a-qdrant-cluster.md)\n\n  - [Scaling a Cluster](#scaling-a-cluster.md)\n\n  - [Upgrading the Qdrant version](#upgrading-the-qdrant-version.md)\n\n  - [Exposing a Cluster](#exposing-a-cluster.md)\n\n  - [Authentication and Authorization](#authentication-and-authorization.md)\n\n    - [Configuring TLS for Database Access](#configuring-tls-for-database-access.md)\n    - [Configuring TLS for Inter-cluster Communication](#configuring-tls-for-inter-cluster-communication.md)\n\n  - [GPU support](#gpu-support.md)\n\n  - [Ephemeral Snapshot Volumes](#ephemeral-snapshot-volumes.md)\n\n  - [Automatic Shard Rebalancing](#automatic-shard-rebalancing.md)\n\n  - [Resharding](#resharding.md)\n\n* [Edit on Github](https://github.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "token_count": 240,
      "char_count": 916,
      "start_char": 21567,
      "end_char": 22483
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md:chunk:25",
    "content": "utomatic-shard-rebalancing.md)\n\n  - [Resharding](#resharding.md)\n\n* [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/private-cloud/qdrant-cluster-management.md)\n* [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)\n\n#### Ready to get started with Qdrant?\n\n[Start Free](https://qdrant.to/cloud/)\n\n© 2025 Qdrant.\n\n[Terms](https://qdrant.tech/legal/terms_and_conditions/) [Privacy Policy](https://qdrant.tech/legal/privacy-policy/) [Impressum](https://qdrant.tech/legal/impressum/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_private-cloud_qdrant-cluster-management\\_documentation_private-cloud_qdrant-cluster-management_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_private-cloud_qdrant-cluster-management_.md",
      "file_extension": ".md",
      "chunk_index": 25,
      "token_count": 155,
      "char_count": 558,
      "start_char": 22383,
      "end_char": 23407
    }
  }
]