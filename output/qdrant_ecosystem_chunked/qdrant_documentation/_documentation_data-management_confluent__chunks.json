[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:0",
    "content": "Confluent Kafka - Qdrant\n\n[](https://qdrant.tech/)\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\nSearch\n\n[Log in](https://cloud.qdrant.io/login) [Start Free](https://cloud.qdrant.io/signup)\n\nSearch\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\n### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 281,
      "char_count": 1007,
      "start_char": 0,
      "end_char": 1007
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:1",
    "content": ".tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)\n\n### Integrations\n\n[Data Management](https://qdrant.tech/documentation/data-management/)\n\n- [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/)\n- [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/)\n- [Apache Spark](https://qdrant.tech/documentation/data-management/spark/)\n- [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/)\n- [cognee](https://qdrant.tech/documentation/data-management/cognee/)\n- [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/)\n- [DLT](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 267,
      "char_count": 1000,
      "start_char": 907,
      "end_char": 1907
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:2",
    "content": "nfluent Kafka](https://qdrant.tech/documentation/data-management/confluent/)\n- [DLT](https://qdrant.tech/documentation/data-management/dlt/)\n- [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/)\n- [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/)\n- [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)\n\n[Embeddings](https://qdrant.tech/documentation/embeddings/)\n\n- [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/)\n- [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/)\n- [Cohere](https://qdrant.tech/documentation/embeddings/cohere/)\n- [Gemini](https://qdrant.tech/documentation/embeddings/gemini/)\n- [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/)\n- [Mistral](https://qdrant.tech/documentation/embeddings/mistral/)\n- [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/)\n- [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 264,
      "char_count": 1011,
      "start_char": 1807,
      "end_char": 2819
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:3",
    "content": "entation/embeddings/mixedbread/)\n- [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/)\n- [Nomic](https://qdrant.tech/documentation/embeddings/nomic/)\n- [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/)\n- [Ollama](https://qdrant.tech/documentation/embeddings/ollama/)\n- [OpenAI](https://qdrant.tech/documentation/embeddings/openai/)\n- [Prem AI](https://qdrant.tech/documentation/embeddings/premai/)\n- [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/)\n- [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/)\n- [Upstage](https://qdrant.tech/documentation/embeddings/upstage/)\n- [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)\n\n[Frameworks](https://qdrant.tech/documentation/frameworks/)\n\n- [Autogen](https://qdrant.tech/documentation/frameworks/autogen/)\n- [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/)\n- [CamelAI](https://qdrant.tech/documentation/frameworks/camel/)\n- [Cheshire Cat](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 271,
      "char_count": 1012,
      "start_char": 2719,
      "end_char": 3731
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:4",
    "content": "/)\n- [CamelAI](https://qdrant.tech/documentation/frameworks/camel/)\n- [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/)\n- [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/)\n- [Dagster](https://qdrant.tech/documentation/frameworks/dagster/)\n- [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/)\n- [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/)\n- [Feast](https://qdrant.tech/documentation/frameworks/feast/)\n- [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/)\n- [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/)\n- [Haystack](https://qdrant.tech/documentation/frameworks/haystack/)\n- [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/)\n- [Langchain](https://qdrant.tech/documentation/frameworks/langchain/)\n- [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/)\n- [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/)\n- [LlamaIndex](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 275,
      "char_count": 1007,
      "start_char": 3631,
      "end_char": 4638
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:5",
    "content": "[LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/)\n- [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/)\n- [Mastra](https://qdrant.tech/documentation/frameworks/mastra/)\n- [Mem0](https://qdrant.tech/documentation/frameworks/mem0/)\n- [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/)\n- [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/)\n- [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/)\n- [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/)\n- [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/)\n- [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/)\n- [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/)\n- [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/)\n- [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/)\n- [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 269,
      "char_count": 1003,
      "start_char": 4538,
      "end_char": 5543
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:6",
    "content": "meworks/sycamore/)\n- [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/)\n- [txtai](https://qdrant.tech/documentation/frameworks/txtai/)\n- [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/)\n- [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/)\n- [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)\n\n[Observability](https://qdrant.tech/documentation/observability/)\n\n- [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/)\n- [OpenLIT](https://qdrant.tech/documentation/observability/openlit/)\n- [Datadog](https://qdrant.tech/documentation/observability/datadog/)\n\n[Platforms](https://qdrant.tech/documentation/platforms/)\n\n- [Apify](https://qdrant.tech/documentation/platforms/apify/)\n- [BuildShip](https://qdrant.tech/documentation/platforms/buildship/)\n- [Keboola](https://qdrant.tech/documentation/platforms/keboola/)\n- [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/)\n- [Make.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 273,
      "char_count": 1015,
      "start_char": 5443,
      "end_char": 6458
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:7",
    "content": "ion/platforms/keboola/)\n- [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/)\n- [Make.com](https://qdrant.tech/documentation/platforms/make/)\n- [N8N](https://qdrant.tech/documentation/platforms/n8n/)\n- [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/)\n- [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/)\n- [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/)\n- [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/)\n- [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/)\n- [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)\n\n### Examples\n\n[Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)\n\n- [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)\n- [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 257,
      "char_count": 987,
      "start_char": 6358,
      "end_char": 7347
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:8",
    "content": "ering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)\n\n[Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)\n\n- [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/)\n- [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/)\n- [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)\n\n[Build Prototypes](https://qdrant.tech/documentation/examples/)\n\n- [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/)\n- [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/)\n- [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/)\n- [Private Chatbot for Interactive Learning](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 259,
      "char_count": 978,
      "start_char": 7247,
      "end_char": 8225
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:9",
    "content": "ion/examples/llama-index-multitenancy/)\n- [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/)\n- [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/)\n- [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/)\n- [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/)\n- [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/)\n- [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/)\n- [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/)\n- [Movie Recommendation System](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 231,
      "char_count": 997,
      "start_char": 8125,
      "end_char": 9122
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:10",
    "content": "cumentation/examples/rag-chatbot-vultr-dspy-ollama/)\n- [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/)\n- [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)\n\n[Practice Datasets](https://qdrant.tech/documentation/datasets/)\n\n### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)\n\n### Integrations",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 280,
      "char_count": 1022,
      "start_char": 9022,
      "end_char": 10046
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:11",
    "content": "ng Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)\n\n### Integrations\n\n[Data Management](https://qdrant.tech/documentation/data-management/)\n\n- [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/)\n- [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/)\n- [Apache Spark](https://qdrant.tech/documentation/data-management/spark/)\n- [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/)\n- [cognee](https://qdrant.tech/documentation/data-management/cognee/)\n- [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/)\n- [DLT](https://qdrant.tech/documentation/data-management/dlt/)\n- [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/)\n- [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/)\n- [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)\n\n[Embeddings](https://qdrant.tech/documentation/embeddings/)\n\n- [Aleph Alpha](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 262,
      "char_count": 1025,
      "start_char": 9946,
      "end_char": 10971
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:12",
    "content": "ured/)\n\n[Embeddings](https://qdrant.tech/documentation/embeddings/)\n\n- [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/)\n- [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/)\n- [Cohere](https://qdrant.tech/documentation/embeddings/cohere/)\n- [Gemini](https://qdrant.tech/documentation/embeddings/gemini/)\n- [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/)\n- [Mistral](https://qdrant.tech/documentation/embeddings/mistral/)\n- [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/)\n- [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/)\n- [Nomic](https://qdrant.tech/documentation/embeddings/nomic/)\n- [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/)\n- [Ollama](https://qdrant.tech/documentation/embeddings/ollama/)\n- [OpenAI](https://qdrant.tech/documentation/embeddings/openai/)\n- [Prem AI](https://qdrant.tech/documentation/embeddings/premai/)\n- [Snowflake Models](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 270,
      "char_count": 995,
      "start_char": 10871,
      "end_char": 11866
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:13",
    "content": "[Prem AI](https://qdrant.tech/documentation/embeddings/premai/)\n- [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/)\n- [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/)\n- [Upstage](https://qdrant.tech/documentation/embeddings/upstage/)\n- [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)\n\n[Frameworks](https://qdrant.tech/documentation/frameworks/)\n\n- [Autogen](https://qdrant.tech/documentation/frameworks/autogen/)\n- [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/)\n- [CamelAI](https://qdrant.tech/documentation/frameworks/camel/)\n- [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/)\n- [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/)\n- [Dagster](https://qdrant.tech/documentation/frameworks/dagster/)\n- [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/)\n- [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/)\n- [Feast](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 269,
      "char_count": 990,
      "start_char": 11766,
      "end_char": 12756
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:14",
    "content": "peval/)\n- [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/)\n- [Feast](https://qdrant.tech/documentation/frameworks/feast/)\n- [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/)\n- [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/)\n- [Haystack](https://qdrant.tech/documentation/frameworks/haystack/)\n- [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/)\n- [Langchain](https://qdrant.tech/documentation/frameworks/langchain/)\n- [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/)\n- [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/)\n- [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/)\n- [Mastra](https://qdrant.tech/documentation/frameworks/mastra/)\n- [Mem0](https://qdrant.tech/documentation/frameworks/mem0/)\n- [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/)\n- [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/)\n- [Rig-rs](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 284,
      "char_count": 1019,
      "start_char": 12656,
      "end_char": 13675
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:15",
    "content": "j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/)\n- [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/)\n- [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/)\n- [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/)\n- [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/)\n- [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/)\n- [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/)\n- [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/)\n- [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/)\n- [txtai](https://qdrant.tech/documentation/frameworks/txtai/)\n- [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/)\n- [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/)\n- [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)\n\n[Observability](https://qdrant.tech/documentation/observability/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 270,
      "char_count": 1016,
      "start_char": 13575,
      "end_char": 14593
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:16",
    "content": "entation/frameworks/voltagent/)\n\n[Observability](https://qdrant.tech/documentation/observability/)\n\n- [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/)\n- [OpenLIT](https://qdrant.tech/documentation/observability/openlit/)\n- [Datadog](https://qdrant.tech/documentation/observability/datadog/)\n\n[Platforms](https://qdrant.tech/documentation/platforms/)\n\n- [Apify](https://qdrant.tech/documentation/platforms/apify/)\n- [BuildShip](https://qdrant.tech/documentation/platforms/buildship/)\n- [Keboola](https://qdrant.tech/documentation/platforms/keboola/)\n- [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/)\n- [Make.com](https://qdrant.tech/documentation/platforms/make/)\n- [N8N](https://qdrant.tech/documentation/platforms/n8n/)\n- [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/)\n- [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/)\n- [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/)\n- [Salesforce Mulesoft](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 279,
      "char_count": 1018,
      "start_char": 14493,
      "end_char": 15511
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:17",
    "content": "PT](https://qdrant.tech/documentation/platforms/privategpt/)\n- [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/)\n- [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/)\n- [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)\n\n### Examples\n\n[Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)\n\n- [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)\n- [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)\n\n[Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)\n\n- [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/)\n- [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/)\n- [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "token_count": 249,
      "char_count": 974,
      "start_char": 15411,
      "end_char": 16385
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:18",
    "content": "-airflow-astronomer/)\n- [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)\n\n[Build Prototypes](https://qdrant.tech/documentation/examples/)\n\n- [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/)\n- [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/)\n- [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/)\n- [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/)\n- [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/)\n- [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/)\n- [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "token_count": 254,
      "char_count": 1005,
      "start_char": 16285,
      "end_char": 17290
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:19",
    "content": "r-support-cohere-airbyte-aws/)\n- [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/)\n- [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/)\n- [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/)\n- [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/)\n- [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/)\n- [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)\n\n[Practice Datasets](https://qdrant.tech/documentation/datasets/)\n\n- [Documentation](https://qdrant.tech/documentation/)\n-\n- [Data management](https://qdrant.tech/documentation/data-management/)\n-\n- Confluent Kafka",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "token_count": 235,
      "char_count": 997,
      "start_char": 17190,
      "end_char": 18189
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:20",
    "content": "on/)\n-\n- [Data management](https://qdrant.tech/documentation/data-management/)\n-\n- Confluent Kafka\n\nBuilt by the original creators of Apache Kafka®, [Confluent Cloud](https://www.confluent.io/confluent-cloud/?utm_campaign=tm.pmm_cd.cwc_partner_Qdrant_generic\\&utm_source=Qdrant\\&utm_medium=partnerref) is a cloud-native and complete data streaming platform available on AWS, Azure, and Google Cloud. The platform includes a fully managed, elastically scaling Kafka engine, 120+ connectors, serverless Apache Flink®, enterprise-grade security controls, and a robust governance suite.\n\nWith our [Qdrant-Kafka Sink Connector](https://github.com/qdrant/qdrant-kafka), Qdrant is part of the [Connect with Confluent](https://www.confluent.io/partners/connect/) technology partner program. It brings fully managed data streams directly to organizations from Confluent Cloud, making it easier for organizations to stream any data to Qdrant with a fully managed Apache Kafka service.\n\n## Usage\n\n### Pre-requisites",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "token_count": 235,
      "char_count": 1004,
      "start_char": 18089,
      "end_char": 19095
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:21",
    "content": "stream any data to Qdrant with a fully managed Apache Kafka service.\n\n## Usage\n\n### Pre-requisites\n\n- A Confluent Cloud account. You can begin with a [free trial](https://www.confluent.io/confluent-cloud/tryfree/?utm_campaign=tm.pmm_cd.cwc_partner_qdrant_tryfree\\&utm_source=qdrant\\&utm_medium=partnerref) with credits for the first 30 days.\n- Qdrant instance to connect to. You can get a free cloud instance at [cloud.qdrant.io](https://cloud.qdrant.io/).\n\n### Installation\n\n1. Download the latest connector zip file from [Confluent Hub](https://www.confluent.io/hub/qdrant/qdrant-kafka).\n\n2. Configure an environment and cluster on Confluent and create a topic to produce messages for.\n\n3. Navigate to the `Connectors` section of the Confluent cluster and click `Add Plugin`. Upload the zip file with the following info.\n\n4) Once installed, navigate to the connector and set the following configuration values.\n\nReplace the placeholder values with your credentials.\n\n5.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "token_count": 241,
      "char_count": 971,
      "start_char": 18995,
      "end_char": 19966
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:22",
    "content": "d set the following configuration values.\n\nReplace the placeholder values with your credentials.\n\n5. Add the Qdrant instance host to the allowed networking endpoints.\n\n7) Start the connector.\n\n## Producing Messages\n\nYou can now produce messages for the configured topic, and they’ll be written into the configured Qdrant instance.\n\n## Message Formats\n\nThe connector supports messages in the following formats.\n\n*Click each to expand.*\n\n**Unnamed/Default vector**\n\nReference: [Creating a collection with a default vector](https://qdrant.tech/documentation/concepts/collections/#create-a-collection).\n\n```json\n{\n    \"collection_name\": \"{collection_name}\",\n    \"id\": 1,\n    \"vector\": [\n        0.1,\n        0.2,\n        0.3,\n        0.4,\n        0.5,\n        0.6,\n        0.7,\n        0.8\n    ],\n    \"payload\": {\n        \"name\": \"kafka\",\n        \"description\": \"Kafka is a distributed streaming platform\",\n        \"url\": \"https://kafka.apache.org/\"\n    }\n}\n```\n\n**Named multiple vectors**",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "token_count": 239,
      "char_count": 985,
      "start_char": 19866,
      "end_char": 20853
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:23",
    "content": "ming platform\",\n        \"url\": \"https://kafka.apache.org/\"\n    }\n}\n```\n\n**Named multiple vectors**\n\nReference: [Creating a collection with multiple vectors](https://qdrant.tech/documentation/concepts/collections/#collection-with-multiple-vectors).\n\n```json\n{\n    \"collection_name\": \"{collection_name}\",\n    \"id\": 1,\n    \"vector\": {\n        \"some-dense\": [\n            0.1,\n            0.2,\n            0.3,\n            0.4,\n            0.5,\n            0.6,\n            0.7,\n            0.8\n        ],\n        \"some-other-dense\": [\n            0.1,\n            0.2,\n            0.3,\n            0.4,\n            0.5,\n            0.6,\n            0.7,\n            0.8\n        ]\n    },\n    \"payload\": {\n        \"name\": \"kafka\",\n        \"description\": \"Kafka is a distributed streaming platform\",\n        \"url\": \"https://kafka.apache.org/\"\n    }\n}\n```\n\n**Sparse vectors**\n\nReference: [Creating a collection with sparse vectors](https://qdrant.tech/documentation/concepts/collections/#collection-with-sparse-vectors).\n\n```json\n{",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "token_count": 276,
      "char_count": 1024,
      "start_char": 20753,
      "end_char": 21778
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:24",
    "content": "https://qdrant.tech/documentation/concepts/collections/#collection-with-sparse-vectors).\n\n```json\n{\n    \"collection_name\": \"{collection_name}\",\n    \"id\": 1,\n    \"vector\": {\n        \"some-sparse\": {\n            \"indices\": [\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9\n            ],\n            \"values\": [\n                0.1,\n                0.2,\n                0.3,\n                0.4,\n                0.5,\n                0.6,\n                0.7,\n                0.8,\n                0.9,\n                1.0\n            ]\n        }\n    },\n    \"payload\": {\n        \"name\": \"kafka\",\n        \"description\": \"Kafka is a distributed streaming platform\",\n        \"url\": \"https://kafka.apache.org/\"\n    }\n}\n```\n\n**Multi-vectors**\n\nReference:\n\n- [Multi-vectors](https://qdrant.tech/documentation/concepts/vectors/#multivectors)\n\n```json\n{",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "token_count": 245,
      "char_count": 982,
      "start_char": 21678,
      "end_char": 22661
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:25",
    "content": "ce:\n\n- [Multi-vectors](https://qdrant.tech/documentation/concepts/vectors/#multivectors)\n\n```json\n{\n    \"collection_name\": \"{collection_name}\",\n    \"id\": 1,\n    \"vector\": {\n        \"some-multi\": [\n            [\n                0.1,\n                0.2,\n                0.3,\n                0.4,\n                0.5,\n                0.6,\n                0.7,\n                0.8,\n                0.9,\n                1.0\n            ],\n            [\n                1.0,\n                0.9,\n                0.8,\n                0.5,\n                0.4,\n                0.8,\n                0.6,\n                0.4,\n                0.2,\n                0.1\n            ]\n        ]\n    },\n    \"payload\": {\n        \"name\": \"kafka\",\n        \"description\": \"Kafka is a distributed streaming platform\",\n        \"url\": \"https://kafka.apache.org/\"\n    }\n}\n```\n\n**Combination of named dense and sparse vectors**\n\nReference:\n\n- [Creating a collection with multiple vectors](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 25,
      "token_count": 257,
      "char_count": 981,
      "start_char": 22561,
      "end_char": 23542
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:26",
    "content": "se and sparse vectors**\n\nReference:\n\n- [Creating a collection with multiple vectors](https://qdrant.tech/documentation/concepts/collections/#collection-with-multiple-vectors).\n\n- [Creating a collection with sparse vectors](https://qdrant.tech/documentation/concepts/collections/#collection-with-sparse-vectors).\n\n```json\n{\n    \"collection_name\": \"{collection_name}\",\n    \"id\": \"a10435b5-2a58-427a-a3a0-a5d845b147b7\",\n    \"vector\": {\n        \"some-other-dense\": [\n            0.1,\n            0.2,\n            0.3,\n            0.4,\n            0.5,\n            0.6,\n            0.7,\n            0.8\n        ],\n        \"some-sparse\": {\n            \"indices\": [\n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9\n            ],\n            \"values\": [\n                0.1,\n                0.2,\n                0.3,\n                0.4,\n                0.5,\n                0.6,",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 26,
      "token_count": 274,
      "char_count": 1012,
      "start_char": 23442,
      "end_char": 24455
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:27",
    "content": "0.2,\n                0.3,\n                0.4,\n                0.5,\n                0.6,\n                0.7,\n                0.8,\n                0.9,\n                1.0\n            ]\n        }\n    },\n    \"payload\": {\n        \"name\": \"kafka\",\n        \"description\": \"Kafka is a distributed streaming platform\",\n        \"url\": \"https://kafka.apache.org/\"\n    }\n}\n```\n\n## Further Reading\n\n- [Kafka Connect Docs](https://docs.confluent.io/platform/current/connect/index.html)\n- [Confluent Connectors Docs](https://docs.confluent.io/cloud/current/connectors/bring-your-connector/custom-connector-qs.html)\n\n##### Was this page useful?\n\nYes No\n\nThank you for your feedback! 🙏\n\nWe are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/data-management/confluent.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue.\n\nOn this page:\n\n- - [Usage](#usage.md)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 27,
      "token_count": 259,
      "char_count": 979,
      "start_char": 24355,
      "end_char": 25347
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md:chunk:28",
    "content": ".com/qdrant/landing_page/issues/new/choose) a GitHub issue.\n\nOn this page:\n\n- - [Usage](#usage.md)\n\n    - [Pre-requisites](#pre-requisites.md)\n    - [Installation](#installation.md)\n\n  - [Producing Messages](#producing-messages.md)\n\n  - [Message Formats](#message-formats.md)\n\n  - [Further Reading](#further-reading.md)\n\n* [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/data-management/confluent.md)\n* [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)\n\n#### Ready to get started with Qdrant?\n\n[Start Free](https://qdrant.to/cloud/)\n\n© 2025 Qdrant.\n\n[Terms](https://qdrant.tech/legal/terms_and_conditions/) [Privacy Policy](https://qdrant.tech/legal/privacy-policy/) [Impressum](https://qdrant.tech/legal/impressum/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_data-management_confluent\\_documentation_data-management_confluent_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_data-management_confluent_.md",
      "file_extension": ".md",
      "chunk_index": 28,
      "token_count": 221,
      "char_count": 799,
      "start_char": 25247,
      "end_char": 26271
    }
  }
]