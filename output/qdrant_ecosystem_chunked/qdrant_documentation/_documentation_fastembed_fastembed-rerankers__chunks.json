[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:0",
    "content": "Reranking with FastEmbed - Qdrant\n\n[](https://qdrant.tech/)\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\nSearch\n\n[Log in](https://cloud.qdrant.io/login) [Start Free](https://cloud.qdrant.io/signup)\n\nSearch\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\n### Getting Started\n\n[What is Qdrant?](https://qdrant.tech/documentation/overview/)\n\n- [Understanding Vector Search in Qdrant](https://qdrant.tech/documentation/overview/vector-search/)\n\n[Local Quickstart](https://qdrant.tech/documentation/quickstart/)\n\n[API & SDKs](https://qdrant.tech/documentation/interfaces/)\n\n[Qdrant Web UI](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 280,
      "char_count": 1021,
      "start_char": 0,
      "end_char": 1021
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:1",
    "content": "tart/)\n\n[API & SDKs](https://qdrant.tech/documentation/interfaces/)\n\n[Qdrant Web UI](https://qdrant.tech/documentation/web-ui/)\n\n### User Manual\n\n[Concepts](https://qdrant.tech/documentation/concepts/)\n\n- [Collections](https://qdrant.tech/documentation/concepts/collections/)\n- [Points](https://qdrant.tech/documentation/concepts/points/)\n- [Vectors](https://qdrant.tech/documentation/concepts/vectors/)\n- [Payload](https://qdrant.tech/documentation/concepts/payload/)\n- [Search](https://qdrant.tech/documentation/concepts/search/)\n- [Explore](https://qdrant.tech/documentation/concepts/explore/)\n- [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/)\n- [Filtering](https://qdrant.tech/documentation/concepts/filtering/)\n- [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/)\n- [Storage](https://qdrant.tech/documentation/concepts/storage/)\n- [Indexing](https://qdrant.tech/documentation/concepts/indexing/)\n- [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 256,
      "char_count": 1014,
      "start_char": 921,
      "end_char": 1937
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:2",
    "content": "mentation/concepts/indexing/)\n- [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)\n\n[Guides](https://qdrant.tech/documentation/guides/installation/)\n\n- [Installation](https://qdrant.tech/documentation/guides/installation/)\n- [Administration](https://qdrant.tech/documentation/guides/administration/)\n- [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/)\n- [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/)\n- [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/)\n- [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/)\n- [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/)\n- [Quantization](https://qdrant.tech/documentation/guides/quantization/)\n- [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/)\n- [Configuration](https://qdrant.tech/documentation/guides/configuration/)\n- [Security](https://qdrant.tech/documentation/guides/security/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 253,
      "char_count": 1023,
      "start_char": 1837,
      "end_char": 2861
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:3",
    "content": "cumentation/guides/configuration/)\n- [Security](https://qdrant.tech/documentation/guides/security/)\n- [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/)\n- [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)\n\n### Ecosystem\n\n[FastEmbed](https://qdrant.tech/documentation/fastembed/)\n\n- [Quickstart](https://qdrant.tech/documentation/fastembed/fastembed-quickstart/)\n- [FastEmbed & Qdrant](https://qdrant.tech/documentation/fastembed/fastembed-semantic-search/)\n- [Working with miniCOIL](https://qdrant.tech/documentation/fastembed/fastembed-minicoil/)\n- [Working with SPLADE](https://qdrant.tech/documentation/fastembed/fastembed-splade/)\n- [Working with ColBERT](https://qdrant.tech/documentation/fastembed/fastembed-colbert/)\n- [Reranking with FastEmbed](https://qdrant.tech/documentation/fastembed/fastembed-rerankers/)\n\n[Qdrant MCP Server](https://github.com/qdrant/mcp-server-qdrant)\n\n### Tutorials\n\n[Vector Search Basics](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 255,
      "char_count": 992,
      "start_char": 2761,
      "end_char": 3753
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:4",
    "content": "(https://github.com/qdrant/mcp-server-qdrant)\n\n### Tutorials\n\n[Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)\n\n- [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/)\n- [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/)\n- [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/)\n- [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)\n\n[Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)\n\n- [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/)\n- [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/)\n- [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 242,
      "char_count": 1001,
      "start_char": 3653,
      "end_char": 4655
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:5",
    "content": "- [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/)\n- [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/)\n- [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)\n\n[Using the Database](https://qdrant.tech/documentation/database-tutorials/)\n\n- [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/)\n- [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/)\n- [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/)\n- [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/)\n- [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/)\n- [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 229,
      "char_count": 1011,
      "start_char": 4555,
      "end_char": 5567
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:6",
    "content": "sync-api/)\n- [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/)\n- [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)\n\n### Support\n\n[FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)\n\n- [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)\n- [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)\n\n[Release Notes](https://github.com/qdrant/qdrant/releases)\n\n### Getting Started\n\n[What is Qdrant?](https://qdrant.tech/documentation/overview/)\n\n- [Understanding Vector Search in Qdrant](https://qdrant.tech/documentation/overview/vector-search/)\n\n[Local Quickstart](https://qdrant.tech/documentation/quickstart/)\n\n[API & SDKs](https://qdrant.tech/documentation/interfaces/)\n\n[Qdrant Web UI](https://qdrant.tech/documentation/web-ui/)\n\n### User Manual\n\n[Concepts](https://qdrant.tech/documentation/concepts/)\n\n- [Collections](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 261,
      "char_count": 1016,
      "start_char": 5467,
      "end_char": 6483
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:7",
    "content": "ser Manual\n\n[Concepts](https://qdrant.tech/documentation/concepts/)\n\n- [Collections](https://qdrant.tech/documentation/concepts/collections/)\n- [Points](https://qdrant.tech/documentation/concepts/points/)\n- [Vectors](https://qdrant.tech/documentation/concepts/vectors/)\n- [Payload](https://qdrant.tech/documentation/concepts/payload/)\n- [Search](https://qdrant.tech/documentation/concepts/search/)\n- [Explore](https://qdrant.tech/documentation/concepts/explore/)\n- [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/)\n- [Filtering](https://qdrant.tech/documentation/concepts/filtering/)\n- [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/)\n- [Storage](https://qdrant.tech/documentation/concepts/storage/)\n- [Indexing](https://qdrant.tech/documentation/concepts/indexing/)\n- [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)\n\n[Guides](https://qdrant.tech/documentation/guides/installation/)\n\n- [Installation](https://qdrant.tech/documentation/guides/installation/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 252,
      "char_count": 1020,
      "start_char": 6383,
      "end_char": 7404
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:8",
    "content": "ion/guides/installation/)\n\n- [Installation](https://qdrant.tech/documentation/guides/installation/)\n- [Administration](https://qdrant.tech/documentation/guides/administration/)\n- [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/)\n- [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/)\n- [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/)\n- [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/)\n- [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/)\n- [Quantization](https://qdrant.tech/documentation/guides/quantization/)\n- [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/)\n- [Configuration](https://qdrant.tech/documentation/guides/configuration/)\n- [Security](https://qdrant.tech/documentation/guides/security/)\n- [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/)\n- [Troubleshooting](https://qdrant.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 250,
      "char_count": 1001,
      "start_char": 7304,
      "end_char": 8305
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:9",
    "content": "ics](https://qdrant.tech/documentation/guides/usage-statistics/)\n- [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)\n\n### Ecosystem\n\n[FastEmbed](https://qdrant.tech/documentation/fastembed/)\n\n- [Quickstart](https://qdrant.tech/documentation/fastembed/fastembed-quickstart/)\n- [FastEmbed & Qdrant](https://qdrant.tech/documentation/fastembed/fastembed-semantic-search/)\n- [Working with miniCOIL](https://qdrant.tech/documentation/fastembed/fastembed-minicoil/)\n- [Working with SPLADE](https://qdrant.tech/documentation/fastembed/fastembed-splade/)\n- [Working with ColBERT](https://qdrant.tech/documentation/fastembed/fastembed-colbert/)\n- [Reranking with FastEmbed](https://qdrant.tech/documentation/fastembed/fastembed-rerankers/)\n\n[Qdrant MCP Server](https://github.com/qdrant/mcp-server-qdrant)\n\n### Tutorials\n\n[Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)\n\n- [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 261,
      "char_count": 1012,
      "start_char": 8205,
      "end_char": 9218
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:10",
    "content": "/)\n\n- [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/)\n- [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/)\n- [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/)\n- [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)\n\n[Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)\n\n- [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/)\n- [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/)\n- [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/)\n- [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 235,
      "char_count": 1006,
      "start_char": 9118,
      "end_char": 10125
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:11",
    "content": "aborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/)\n- [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)\n\n[Using the Database](https://qdrant.tech/documentation/database-tutorials/)\n\n- [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/)\n- [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/)\n- [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/)\n- [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/)\n- [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/)\n- [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/)\n- [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)\n\n### Support",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 231,
      "char_count": 1004,
      "start_char": 10025,
      "end_char": 11031
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:12",
    "content": "attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)\n\n### Support\n\n[FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)\n\n- [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)\n- [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)\n\n[Release Notes](https://github.com/qdrant/qdrant/releases)\n\n- [Documentation](https://qdrant.tech/documentation/)\n-\n- [Fastembed](https://qdrant.tech/documentation/fastembed/)\n-\n- Reranking with FastEmbed\n\n# How to use rerankers with FastEmbed\n\n## Rerankers\n\nA reranker is a model that improves the ordering of search results. A subset of documents is initially retrieved using a fast, simple method (e.g., BM25 or dense embeddings). Then, a reranker – a more powerful, precise, but slower and heavier model – re-evaluates this subset to refine document relevance to the query.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 226,
      "char_count": 916,
      "start_char": 10931,
      "end_char": 11850
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:13",
    "content": "but slower and heavier model – re-evaluates this subset to refine document relevance to the query.\n\nRerankers analyze token-level interactions between the query and each document in depth, making them expensive to use but precise in defining relevance. They trade speed for accuracy, so they are best used on a limited candidate set rather than the entire corpus.\n\n## Goal of this Tutorial\n\nIt’s common to use [cross-encoder](https://sbert.net/examples/applications/cross-encoder/README.html) models as rerankers. This tutorial uses [Jina Reranker v2 Base Multilingual](https://jina.ai/news/jina-reranker-v2-for-agentic-rag-ultra-fast-multilingual-function-calling-and-code-search/) (licensed under CC-BY-NC-4.0) – a cross-encoder reranker supported in FastEmbed.\n\nWe use the `all-MiniLM-L6-v2` dense embedding model (also supported in FastEmbed) as a first-stage retriever and then refine results with `Jina Reranker v2`.\n\n## Setup\n\nInstall `qdrant-client` with `fastembed`.\n\n```python",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 239,
      "char_count": 986,
      "start_char": 11750,
      "end_char": 12737
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:14",
    "content": "ne results with `Jina Reranker v2`.\n\n## Setup\n\nInstall `qdrant-client` with `fastembed`.\n\n```python\npip install \"qdrant-client[fastembed]>=1.14.1\"\n```\n\nImport cross-encoders and text embeddings for the first-stage retrieval.\n\n```python\nfrom fastembed import TextEmbedding\nfrom fastembed.rerank.cross_encoder import TextCrossEncoder\n```\n\nYou can list the cross-encoder rerankers supported in FastEmbed using the following command.\n\n```python\nTextCrossEncoder.list_supported_models()\n```\n\nThis command displays the available models, including details such as output embedding dimensions, model description, model size, model sources, and model file.\n\nAvaliable models\n\n```python\n[{'model': 'Xenova/ms-marco-MiniLM-L-6-v2',\n  'size_in_GB': 0.08,\n  'sources': {'hf': 'Xenova/ms-marco-MiniLM-L-6-v2'},\n  'model_file': 'onnx/model.onnx',\n  'description': 'MiniLM-L-6-v2 model optimized for re-ranking tasks.',\n  'license': 'apache-2.0'},\n {'model': 'Xenova/ms-marco-MiniLM-L-12-v2',\n  'size_in_GB': 0.12,",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 286,
      "char_count": 998,
      "start_char": 12637,
      "end_char": 13636
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:15",
    "content": "s.',\n  'license': 'apache-2.0'},\n {'model': 'Xenova/ms-marco-MiniLM-L-12-v2',\n  'size_in_GB': 0.12,\n  'sources': {'hf': 'Xenova/ms-marco-MiniLM-L-12-v2'},\n  'model_file': 'onnx/model.onnx',\n  'description': 'MiniLM-L-12-v2 model optimized for re-ranking tasks.',\n  'license': 'apache-2.0'},\n {'model': 'BAAI/bge-reranker-base',\n  'size_in_GB': 1.04,\n  'sources': {'hf': 'BAAI/bge-reranker-base'},\n  'model_file': 'onnx/model.onnx',\n  'description': 'BGE reranker base model for cross-encoder re-ranking.',\n  'license': 'mit'},\n {'model': 'jinaai/jina-reranker-v1-tiny-en',\n  'size_in_GB': 0.13,\n  'sources': {'hf': 'jinaai/jina-reranker-v1-tiny-en'},\n  'model_file': 'onnx/model.onnx',\n  'description': 'Designed for blazing-fast re-ranking with 8K context length and fewer parameters than jina-reranker-v1-turbo-en.',\n  'license': 'apache-2.0'},\n {'model': 'jinaai/jina-reranker-v1-turbo-en',\n  'size_in_GB': 0.15,\n  'sources': {'hf': 'jinaai/jina-reranker-v1-turbo-en'},\n  'model_file': 'onnx/model.onnx',",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 367,
      "char_count": 1007,
      "start_char": 13536,
      "end_char": 14544
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:16",
    "content": ": 0.15,\n  'sources': {'hf': 'jinaai/jina-reranker-v1-turbo-en'},\n  'model_file': 'onnx/model.onnx',\n  'description': 'Designed for blazing-fast re-ranking with 8K context length.',\n  'license': 'apache-2.0'},\n {'model': 'jinaai/jina-reranker-v2-base-multilingual',\n  'size_in_GB': 1.11,\n  'sources': {'hf': 'jinaai/jina-reranker-v2-base-multilingual'},\n  'model_file': 'onnx/model.onnx',\n  'description': 'A multi-lingual reranker model for cross-encoder re-ranking with 1K context length and sliding window',\n  'license': 'cc-by-nc-4.0'}]  # some of the fields are omitted for brevity\n```\n\nNow, load the first-stage retriever and reranker.\n\n```python\nencoder_name = \"sentence-transformers/all-MiniLM-L6-v2\"\ndense_embedding_model = TextEmbedding(model_name=encoder_name)\nreranker = TextCrossEncoder(model_name='jinaai/jina-reranker-v2-base-multilingual')\n```\n\nThe model files will be fetched and downloaded, with progress displayed.\n\n## Embed & index data for the first-stage retrieval",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 287,
      "char_count": 985,
      "start_char": 14444,
      "end_char": 15431
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:17",
    "content": "ched and downloaded, with progress displayed.\n\n## Embed & index data for the first-stage retrieval\n\nWe will vectorize a toy movie description dataset using the `all-MiniLM-L6-v2` model and save the embeddings in Qdrant for first-stage retrieval.\n\nThen, we will use a cross-encoder reranking model to rerank a small subset of data retrieved in the first stage.\n\nMovie description dataset\n\n```python\ndescriptions = [\"In 1431, Jeanne d'Arc is placed on trial on charges of heresy. The ecclesiastical jurists attempt to force Jeanne to recant her claims of holy visions.\",\n \"A film projectionist longs to be a detective, and puts his meagre skills to work when he is framed by a rival for stealing his girlfriend's father's pocketwatch.\",\n \"A group of high-end professional thieves start to feel the heat from the LAPD when they unknowingly leave a clue at their latest heist.\",\n \"A petty thief with an utter resemblance to a samurai warlord is hired as the lord's double.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "token_count": 224,
      "char_count": 968,
      "start_char": 15331,
      "end_char": 16299
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:18",
    "content": "ist.\",\n \"A petty thief with an utter resemblance to a samurai warlord is hired as the lord's double. When the warlord later dies the thief is forced to take up arms in his place.\",\n \"A young boy named Kubo must locate a magical suit of armour worn by his late father in order to defeat a vengeful spirit from the past.\",\n \"A biopic detailing the 2 decades that Punjabi Sikh revolutionary Udham Singh spent planning the assassination of the man responsible for the Jallianwala Bagh massacre.\",\n \"When a machine that allows therapists to enter their patients' dreams is stolen, all hell breaks loose. Only a young female therapist, Paprika, can stop it.\",\n \"An ordinary word processor has the worst night of his life after he agrees to visit a girl in Soho whom he met that evening at a coffee shop.\",\n \"A story that revolves around drug abuse in the affluent north Indian State of Punjab and how the youth there have succumbed to it en-masse resulting in a socio-economic decline.\",",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "token_count": 212,
      "char_count": 981,
      "start_char": 16199,
      "end_char": 17181
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:19",
    "content": "njab and how the youth there have succumbed to it en-masse resulting in a socio-economic decline.\",\n \"A world-weary political journalist picks up the story of a woman's search for her son, who was taken away from her decades ago after she became pregnant and was forced to live in a convent.\",\n \"Concurrent theatrical ending of the TV series Neon Genesis Evangelion (1995).\",\n \"During World War II, a rebellious U.S. Army Major is assigned a dozen convicted murderers to train and lead them into a mass assassination mission of German officers.\",\n \"The toys are mistakenly delivered to a day-care center instead of the attic right before Andy leaves for college, and it's up to Woody to convince the other toys that they weren't abandoned and to return home.\",\n \"A soldier fighting aliens gets to relive the same day over and over again, the day restarting every time he dies.\",\n \"After two male musicians witness a mob hit, they flee the state in an all-female band disguised as women, but further complications set in.\",",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "token_count": 215,
      "char_count": 1022,
      "start_char": 17081,
      "end_char": 18104
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:20",
    "content": ", they flee the state in an all-female band disguised as women, but further complications set in.\",\n \"Exiled into the dangerous forest by her wicked stepmother, a princess is rescued by seven dwarf miners who make her part of their household.\",\n \"A renegade reporter trailing a young runaway heiress for a big story joins her on a bus heading from Florida to New York, and they end up stuck with each other when the bus leaves them behind at one of the stops.\",\n \"Story of 40-man Turkish task force who must defend a relay station.\",\n \"Spinal Tap, one of England's loudest bands, is chronicled by film director Marty DiBergi on what proves to be a fateful tour.\",\n \"Oskar, an overlooked and bullied boy, finds love and revenge through Eli, a beautiful but peculiar girl.\"]\n```\n\n```python\ndescriptions_embeddings = list(\n    dense_embedding_model.embed(descriptions)\n)\n```\n\nLet’s upload the embeddings to Qdrant.\n\nQdrant Client offers a simple in-memory mode, allowing you to experiment locally with small data volumes.\\",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "token_count": 226,
      "char_count": 1019,
      "start_char": 18004,
      "end_char": 19024
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:21",
    "content": "Client offers a simple in-memory mode, allowing you to experiment locally with small data volumes.\\\nAlternatively, you can use [a free cluster](https://qdrant.tech/documentation/cloud/create-cluster/#create-a-cluster) in Qdrant Cloud for experiments.\n\n```python\nfrom qdrant_client import QdrantClient, models\n\nclient = QdrantClient(\":memory:\")  # Qdrant is running from RAM.\n```\n\nLet’s create a [collection](https://qdrant.tech/documentation/concepts/collections/) with our movie data.\n\n```python\nclient.create_collection(\n    collection_name=\"movies\",\n    vectors_config={\n        \"embedding\": models.VectorParams(\n            size=client.get_embedding_size(\"sentence-transformers/all-MiniLM-L6-v2\"), \n            distance=models.Distance.COSINE\n        )\n    }\n)\n```\n\nAnd upload the embeddings to it.\n\n```python\nclient.upload_points(\n    collection_name=\"movies\",\n    points=[\n        models.PointStruct(\n            id=idx, \n            payload={\"description\": description}, \n            vector={\"embedding\": vector}",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "token_count": 223,
      "char_count": 1019,
      "start_char": 18924,
      "end_char": 19944
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:22",
    "content": "d=idx, \n            payload={\"description\": description}, \n            vector={\"embedding\": vector}\n        )\n        for idx, (description, vector) in enumerate(\n            zip(descriptions, descriptions_embeddings)\n        )\n    ],\n)\n```\n\nCheck how points can be uploaded with builtin Fastembed integration.\n\nUpload with implicit embeddings computation\n\n```python\nclient.upload_points(\n    collection_name=\"movies\",\n    points=[\n        models.PointStruct(\n            id=idx,\n            payload={\"description\": description},\n            vector={\"embedding\": models.Document(text=description, model=encoder_name)},\n        )\n        for idx, description in enumerate(descriptions)\n    ],\n)\n```\n\n## First-stage retrieval\n\nLet’s see how relevant the results will be using only an `all-MiniLM-L6-v2`-based dense retriever.\n\n```python\nquery = \"A story about a strong historically significant female figure.\"\nquery_embedded = list(dense_embedding_model.query_embed(query))[0]\n\ninitial_retrieval = client.query_points(",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "token_count": 206,
      "char_count": 1016,
      "start_char": 19844,
      "end_char": 20861
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:23",
    "content": "edded = list(dense_embedding_model.query_embed(query))[0]\n\ninitial_retrieval = client.query_points(\n    collection_name=\"movies\",\n    using=\"embedding\",\n    query=query_embedded,\n    with_payload=True,\n    limit=10\n)\n\ndescription_hits = []\nfor i, hit in enumerate(initial_retrieval.points):\n    print(f'Result number {i+1} is \\\"{hit.payload[\"description\"]}\\\"')\n    description_hits.append(hit.payload[\"description\"])\n```\n\nCheck how queries can be made with builtin Fastembed integration.\n\nQuery points with implicit embeddings computation\n\n```python\nquery = \"A story about a strong historically significant female figure.\"\n\ninitial_retrieval = client.query_points(\n    collection_name=\"movies\",\n    using=\"embedding\",\n    query=models.Document(text=query, model=encoder_name),\n    with_payload=True,\n    limit=10\n)\n```\n\nThe result is as follows:\n\n```bash",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "token_count": 190,
      "char_count": 854,
      "start_char": 20761,
      "end_char": 21616
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:24",
    "content": "model=encoder_name),\n    with_payload=True,\n    limit=10\n)\n```\n\nThe result is as follows:\n\n```bash\nResult number 1 is \"A world-weary political journalist picks up the story of a woman's search for her son, who was taken away from her decades ago after she became pregnant and was forced to live in a convent.\"\nResult number 2 is \"Exiled into the dangerous forest by her wicked stepmother, a princess is rescued by seven dwarf miners who make her part of their household.\"\n...\nResult number 9 is \"A biopic detailing the 2 decades that Punjabi Sikh revolutionary Udham Singh spent planning the assassination of the man responsible for the Jallianwala Bagh massacre.\"\nResult number 10 is \"In 1431, Jeanne d'Arc is placed on trial on charges of heresy. The ecclesiastical jurists attempt to force Jeanne to recant her claims of holy visions.\"\n```\n\nWe can see that the description of *“The Messenger: The Story of Joan of Arc”*, which is the most fitting, appears 10th in the results.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "token_count": 237,
      "char_count": 979,
      "start_char": 21516,
      "end_char": 22498
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:25",
    "content": "The Messenger: The Story of Joan of Arc”*, which is the most fitting, appears 10th in the results.\n\nLet’s try refining the order of the retrieved subset with `Jina Reranker v2`. It takes a query and a set of documents (movie descriptions) as input and calculates a relevance score based on token-level interactions between the query and each document.\n\n```python\nnew_scores = list(\n    reranker.rerank(query, description_hits)\n)  # returns scores between query and each document\n\nranking = [\n    (i, score) for i, score in enumerate(new_scores)\n]  # saving document indices\nranking.sort(\n    key=lambda x: x[1], reverse=True\n)  # sorting them in order of relevance defined by reranker\n\nfor i, rank in enumerate(ranking):\n    print(f'''Reranked result number {i+1} is \\\"{description_hits[rank[0]]}\\\"''')\n```\n\nThe reranker moves the desired movie to the first position based on relevance.\n\n```bash\nReranked result number 1 is \"In 1431, Jeanne d'Arc is placed on trial on charges of heresy.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 25,
      "token_count": 248,
      "char_count": 987,
      "start_char": 22398,
      "end_char": 23385
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:26",
    "content": "```bash\nReranked result number 1 is \"In 1431, Jeanne d'Arc is placed on trial on charges of heresy. The ecclesiastical jurists attempt to force Jeanne to recant her claims of holy visions.\"\nReranked result number 2 is \"Exiled into the dangerous forest by her wicked stepmother, a princess is rescued by seven dwarf miners who make her part of their household.\"\n...\nReranked result number 9 is \"An ordinary word processor has the worst night of his life after he agrees to visit a girl in Soho whom he met that evening at a coffee shop.\"\nReranked result number 10 is \"A biopic detailing the 2 decades that Punjabi Sikh revolutionary Udham Singh spent planning the assassination of the man responsible for the Jallianwala Bagh massacre.\"\n```\n\n## Conclusion\n\nRerankers refine search results by reordering retrieved candidates through deeper semantic analysis. For efficiency, they should be applied **only to a small subset of retrieved results**.\n\nBalance speed and accuracy in search by leveraging the power of rerankers!",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 26,
      "token_count": 234,
      "char_count": 1020,
      "start_char": 23285,
      "end_char": 24308
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:27",
    "content": "f retrieved results**.\n\nBalance speed and accuracy in search by leveraging the power of rerankers!\n\n##### Was this page useful?\n\nYes No\n\nThank you for your feedback! 🙏\n\nWe are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/fastembed/fastembed-rerankers.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue.\n\nOn this page:\n\n- [How to use rerankers with FastEmbed](#how-to-use-rerankers-with-fastembed.md)\n\n  - [Rerankers](#rerankers.md)\n  - [Goal of this Tutorial](#goal-of-this-tutorial.md)\n  - [Setup](#setup.md)\n  - [Embed & index data for the first-stage retrieval](#embed--index-data-for-the-first-stage-retrieval.md)\n  - [First-stage retrieval](#first-stage-retrieval.md)\n  - [Conclusion](#conclusion.md)\n\n* [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/fastembed/fastembed-rerankers.md)\n* [Create an issue](https://github.",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 27,
      "token_count": 275,
      "char_count": 1021,
      "start_char": 24208,
      "end_char": 25229
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md:chunk:28",
    "content": "-landing/content/documentation/fastembed/fastembed-rerankers.md)\n* [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)\n\n#### Ready to get started with Qdrant?\n\n[Start Free](https://qdrant.to/cloud/)\n\n© 2025 Qdrant.\n\n[Terms](https://qdrant.tech/legal/terms_and_conditions/) [Privacy Policy](https://qdrant.tech/legal/privacy-policy/) [Impressum](https://qdrant.tech/legal/impressum/)",
    "metadata": {
      "source_file": "qdrant_documentation\\documentation_fastembed_fastembed-rerankers\\_documentation_fastembed_fastembed-rerankers_.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_documentation",
      "filename": "_documentation_fastembed_fastembed-rerankers_.md",
      "file_extension": ".md",
      "chunk_index": 28,
      "token_count": 114,
      "char_count": 406,
      "start_char": 25129,
      "end_char": 26153
    }
  }
]