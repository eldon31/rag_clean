[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:0",
    "content": "Type Inspector System | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 305,
      "char_count": 984,
      "start_char": 0,
      "end_char": 985
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:1",
    "content": "-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 300,
      "char_count": 1010,
      "start_char": 885,
      "end_char": 1896
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:2",
    "content": "t-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Type Inspector System\n\nRelevant source files\n\n- [qdrant\\_client/\\_pydantic\\_compat.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/_pydantic_compat.py)\n- [qdrant\\_client/embed/embed\\_inspector.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.py)\n- [qdrant\\_client/embed/schema\\_parser.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py)\n- [qdrant\\_client/embed/type\\_inspector.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py)\n- [tools/populate\\_inspection\\_cache.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/populate_inspection_cache.py)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 269,
      "char_count": 901,
      "start_char": 1796,
      "end_char": 2699
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:3",
    "content": "ache.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/populate_inspection_cache.py)\n\nThe Type Inspector System is responsible for detecting objects requiring inference (embeddings) within Pydantic models used in the Qdrant client. It analyzes model schemas to identify paths to `Document`, `Image`, and `InferenceObject` types, enabling automatic embedding generation during data operations. The system includes schema parsing, type detection, and caching mechanisms to optimize performance.\n\nFor information about the actual embedding generation process, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md). For details about local inference model management, see [Local Inference](qdrant/qdrant-client/4.4-local-inference.md).\n\n## Core Components\n\nThe Type Inspector System consists of three main components that work together to detect inference objects in Pydantic models:\n\n```\n```\n\n**Sources:** [qdrant\\_client/embed/type\\_inspector.py12-23](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 220,
      "char_count": 1004,
      "start_char": 2599,
      "end_char": 3603
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:4",
    "content": "dantic models:\n\n```\n```\n\n**Sources:** [qdrant\\_client/embed/type\\_inspector.py12-23](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L12-L23) [qdrant\\_client/embed/schema\\_parser.py29-69](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L29-L69) [qdrant\\_client/embed/embed\\_inspector.py13-21](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.py#L13-L21)\n\n## Schema Parsing System\n\nThe `ModelSchemaParser` class analyzes Pydantic model JSON schemas to identify paths to inference objects. It maintains internal state including definitions, recursive references, and cached paths:\n\n```\n```\n\n**Sources:** [qdrant\\_client/embed/schema\\_parser.py238-287](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L238-L287) [qdrant\\_client/embed/schema\\_parser.py91-151](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 314,
      "char_count": 1015,
      "start_char": 3503,
      "end_char": 4518
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:5",
    "content": "r.py91-151](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L91-L151) [qdrant\\_client/embed/schema\\_parser.py153-236](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L153-L236)\n\n## Type Detection Process\n\nThe `Inspector` class performs the actual detection of inference objects within model instances. It uses a recursive traversal approach to examine nested structures:\n\n| Component                 | Purpose                                | Key Methods                               |\n| ------------------------- | -------------------------------------- | ----------------------------------------- |\n| `Inspector.inspect()`     | Main entry point for detection         | Returns `bool` if inference objects found |\n| `_inspect_model()`        | Examine individual BaseModel instances | Checks against `INFERENCE_OBJECT_TYPES`   |",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 198,
      "char_count": 917,
      "start_char": 4418,
      "end_char": 5336
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:6",
    "content": "el()`        | Examine individual BaseModel instances | Checks against `INFERENCE_OBJECT_TYPES`   |\n| `_inspect_inner_models()` | Traverse nested structures             | Handles lists, dicts, and nested models   |\n\n```\n```\n\n**Sources:** [qdrant\\_client/embed/type\\_inspector.py24-50](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L24-L50) [qdrant\\_client/embed/type\\_inspector.py52-66](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L52-L66) [qdrant\\_client/embed/type\\_inspector.py68-149](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L68-L149)\n\n## Caching and Performance Optimization\n\nThe system implements a comprehensive caching strategy to avoid repeated schema parsing and path computation:\n\n### Cache Structure\n\n| Cache Component   | Storage Format               | Purpose                               |",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 249,
      "char_count": 950,
      "start_char": 5236,
      "end_char": 6187
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:7",
    "content": "cture\n\n| Cache Component   | Storage Format               | Purpose                               |\n| ----------------- | ---------------------------- | ------------------------------------- |\n| `_cache`          | `dict[str, list[str]]`       | String paths to inference objects     |\n| `path_cache`      | `dict[str, list[FieldPath]]` | Structured path objects for traversal |\n| `_defs`           | `dict[str, dict]`            | Schema definitions from `$defs`       |\n| `_recursive_refs` | `set[str]`                   | Detected recursive references         |\n\n### Cache Population\n\nThe inspection cache is pre-populated using the `populate_inspection_cache.py` tool, which processes all Pydantic models in the `qdrant_client.models` module:\n\n```\n```\n\n**Sources:** [tools/populate\\_inspection\\_cache.py34-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/populate_inspection_cache.py#L34-L76) [qdrant\\_client/embed/schema\\_parser.py74-89](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 230,
      "char_count": 973,
      "start_char": 6087,
      "end_char": 7060
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:8",
    "content": "/populate_inspection_cache.py#L34-L76) [qdrant\\_client/embed/schema\\_parser.py74-89](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L74-L89) [qdrant\\_client/embed/schema\\_parser.py289-305](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L289-L305)\n\n## Pydantic Compatibility Layer\n\nThe system supports both Pydantic v1 and v2 through a compatibility layer that abstracts version-specific functionality:\n\n| Function              | Pydantic v1            | Pydantic v2                 | Purpose                     |\n| --------------------- | ---------------------- | --------------------------- | --------------------------- |\n| `model_fields_set()`  | `model.__fields_set__` | `model.model_fields_set`    | Get set model fields        |\n| `model_json_schema()` | `model.schema_json()`  | `model.model_json_schema()` | Extract JSON schema         |\n| `model_fields()`      | `model.__fields__`     | `model.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 258,
      "char_count": 993,
      "start_char": 6960,
      "end_char": 7953
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:9",
    "content": "schema()` | Extract JSON schema         |\n| `model_fields()`      | `model.__fields__`     | `model.model_fields`        | Get model field definitions |\n\n**Sources:** [qdrant\\_client/\\_pydantic\\_compat.py44-62](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/_pydantic_compat.py#L44-L62) [qdrant\\_client/embed/type\\_inspector.py73](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L73-L73) [qdrant\\_client/embed/schema\\_parser.py254](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L254-L254)\n\n## Integration with FastEmbed System\n\nThe Type Inspector System integrates with the FastEmbed system by providing two inspection modes:\n\n### Detection Mode (`Inspector`)\n\nUsed to determine if any inference objects are present in a model, triggering embedding generation when needed.\n\n### Collection Mode (`InspectorEmbed`)\n\nUsed to collect all paths to inference objects for batch processing and embedding replacement.\n\n```",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 269,
      "char_count": 1023,
      "start_char": 7853,
      "end_char": 8877
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:10",
    "content": "Used to collect all paths to inference objects for batch processing and embedding replacement.\n\n```\n```\n\n**Sources:** [qdrant\\_client/embed/type\\_inspector.py12-23](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L12-L23) [qdrant\\_client/embed/embed\\_inspector.py13-21](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.py#L13-L21) [qdrant\\_client/embed/embed\\_inspector.py23-47](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.py#L23-L47)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Type Inspector System](#type-inspector-system.md)\n- [Core Components](#core-components.md)\n- [Schema Parsing System](#schema-parsing-system.md)\n- [Type Detection Process](#type-detection-process.md)\n- [Caching and Performance Optimization](#caching-and-performance-optimization.md)\n- [Cache Structure](#cache-structure.md)\n- [Cache Population](#cache-population.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 286,
      "char_count": 1005,
      "start_char": 8777,
      "end_char": 9783
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md:chunk:11",
    "content": "ptimization.md)\n- [Cache Structure](#cache-structure.md)\n- [Cache Population](#cache-population.md)\n- [Pydantic Compatibility Layer](#pydantic-compatibility-layer.md)\n- [Integration with FastEmbed System](#integration-with-fastembed-system.md)\n- [Detection Mode (\\`Inspector\\`)](#detection-mode-inspector.md)\n- [Collection Mode (\\`InspectorEmbed\\`)](#collection-mode-inspectorembed.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 97,
      "char_count": 385,
      "start_char": 9683,
      "end_char": 10707
    }
  }
]