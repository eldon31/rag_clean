[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:0",
    "content": "Search Operations | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 319,
      "char_count": 1025,
      "start_char": 0,
      "end_char": 1025
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:1",
    "content": "ent](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 307,
      "char_count": 1015,
      "start_char": 925,
      "end_char": 1940
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:2",
    "content": "ork](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Search Operations\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py)\n- [qdrant\\_client/async\\_qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py)\n- [qdrant\\_client/conversions/common\\_types.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/common_types.py)\n- [qdrant\\_client/local/async\\_qdrant\\_local.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/async_qdrant_local.py)\n- [qdrant\\_client/local/local\\_collection.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py)\n- [qdrant\\_client/local/qdrant\\_local.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 318,
      "char_count": 1014,
      "start_char": 1840,
      "end_char": 2855
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:3",
    "content": "ocal.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py)\n- [qdrant\\_client/qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py)\n- [qdrant\\_client/qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py)\n- [tests/congruence\\_tests/test\\_common.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_common.py)\n- [tests/congruence\\_tests/test\\_query.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_query.py)\n\nSearch operations are the core functionality of the qdrant-client library, enabling vector similarity search, recommendations, discovery, and hybrid queries across both local and remote Qdrant instances. This document covers the search architecture, query types, and execution flows for all search operations in the client.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 257,
      "char_count": 942,
      "start_char": 2755,
      "end_char": 3699
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:4",
    "content": "the search architecture, query types, and execution flows for all search operations in the client.\n\nFor collection management operations, see [Collection Management](qdrant/qdrant-client/3.2-collection-management.md). For embedding integration during search, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md). For hybrid search algorithms, see [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md).\n\n## Search Architecture Overview\n\nThe search system follows a unified architecture where all search operations flow through a consistent interface regardless of the backend implementation.\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py437-610](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L437-L610) [qdrant\\_client/qdrant\\_remote.py543-682](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L543-L682) [qdrant\\_client/local/qdrant\\_local.py174-224](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 271,
      "char_count": 979,
      "start_char": 3599,
      "end_char": 4578
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:5",
    "content": "nt_client/qdrant_remote.py#L543-L682) [qdrant\\_client/local/qdrant\\_local.py174-224](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L174-L224)\n\n## Search Methods\n\n### Universal Query Interface\n\nThe `query_points()` method serves as the universal endpoint for all search operations, supporting vector search, recommendations, discovery, context search, and hybrid queries.\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py437-610](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L437-L610) [qdrant\\_client/qdrant\\_client.py554-592](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L554-L592)\n\n### Legacy Search Methods\n\nThe `search()` and `search_batch()` methods are deprecated but maintained for backward compatibility. They internally convert to `query_points()` calls.\n\n| Method            | Status     | Replacement             | Purpose                         |",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 282,
      "char_count": 986,
      "start_char": 4478,
      "end_char": 5465
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:6",
    "content": "ls.\n\n| Method            | Status     | Replacement             | Purpose                         |\n| ----------------- | ---------- | ----------------------- | ------------------------------- |\n| `search()`        | Deprecated | `query_points()`        | Single vector similarity search |\n| `search_batch()`  | Deprecated | `query_batch_points()`  | Batch vector searches           |\n| `search_groups()` | Deprecated | `query_points_groups()` | Grouped search results          |\n\nSources: [qdrant\\_client/qdrant\\_client.py277-391](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L277-L391) [qdrant\\_client/qdrant\\_client.py236-275](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L236-L275)\n\n## Query Types and Resolution\n\n### Dense Vector Queries\n\nDense vector queries use numerical vectors for similarity search with various distance metrics.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py533-701](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 258,
      "char_count": 1005,
      "start_char": 5365,
      "end_char": 6370
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:7",
    "content": "tance metrics.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py533-701](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L533-L701) [qdrant\\_client/local/local\\_collection.py282-332](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L282-L332)\n\n### Sparse Vector Queries\n\nSparse vectors use index-value pairs for high-dimensional sparse data with optional IDF rescoring.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py639-646](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L639-L646) [qdrant\\_client/local/local\\_collection.py190-202](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L190-L202)\n\n### Advanced Query Types\n\n#### Recommendation Queries\n\nRecommendation queries use positive and negative examples to find similar vectors.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 297,
      "char_count": 1002,
      "start_char": 6270,
      "end_char": 7272
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:8",
    "content": "gative examples to find similar vectors.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py591-622](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L591-L622) [qdrant\\_client/local/qdrant\\_local.py353-361](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L353-L361)\n\n#### Discovery and Context Queries\n\nDiscovery queries find vectors that distinguish between target and context, while context queries use positive-negative pairs.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py623-638](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L623-L638) [qdrant\\_client/local/qdrant\\_local.py363-385](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L363-L385)\n\n## Search Execution Pipeline\n\n### Local Collection Search\n\nThe `LocalCollection` class implements the complete search pipeline for local execution.\n\n```\n```",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 302,
      "char_count": 1008,
      "start_char": 7172,
      "end_char": 8182
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:9",
    "content": "The `LocalCollection` class implements the complete search pipeline for local execution.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py533-701](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L533-L701) [qdrant\\_client/local/local\\_collection.py499-523](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L499-L523)\n\n### Remote Search Execution\n\nRemote searches are handled by `QdrantRemote` with automatic protocol conversion between REST and gRPC.\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_remote.py543-682](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L543-L682) [qdrant\\_client/qdrant\\_remote.py573-629](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L573-L629)\n\n## Hybrid Search and Prefetch\n\n### Prefetch Pipeline\n\nPrefetch operations enable multi-stage search with rescoring and fusion algorithms.\n\n```\n```",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 308,
      "char_count": 996,
      "start_char": 8082,
      "end_char": 9081
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:10",
    "content": "line\n\nPrefetch operations enable multi-stage search with rescoring and fusion algorithms.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py703-755](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L703-L755) [qdrant\\_client/local/local\\_collection.py792-842](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L792-L842)\n\n### Fusion Query Processing\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py804-842](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L804-L842) [qdrant\\_client/hybrid/fusion.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/fusion.py)\n\n## Performance Considerations\n\n### Vector Type Performance\n\n| Vector Type | Storage              | Search Performance              | Memory Usage              |\n| ----------- | -------------------- | ------------------------------- | ------------------------- |",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 274,
      "char_count": 1007,
      "start_char": 8981,
      "end_char": 9989
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:11",
    "content": "----------- | -------------------- | ------------------------------- | ------------------------- |\n| Dense       | `np.ndarray`         | Fast with vectorized operations | High for large dimensions |\n| Sparse      | `list[SparseVector]` | Efficient for high sparsity     | Low for sparse data       |\n| Multi       | `list[np.ndarray]`   | Variable by comparator          | Highest memory usage      |\n\n### Search Optimizations\n\nThe local collection implements several optimizations for search performance:\n\n- **Early termination** with score thresholds\n- **Vectorized distance calculations** using NumPy operations\n- **Payload filtering masks** to avoid unnecessary computations\n- **Result ordering** based on distance metrics\n- **IDF rescoring** for sparse vectors when configured\n\nSources: [qdrant\\_client/local/local\\_collection.py649-701](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L649-L701) [qdrant\\_client/local/local\\_collection.py175-202](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 228,
      "char_count": 1015,
      "start_char": 9889,
      "end_char": 10905
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:12",
    "content": "al/local_collection.py#L649-L701) [qdrant\\_client/local/local\\_collection.py175-202](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L175-L202)\n\n### Batch Processing\n\nBatch operations reduce network overhead for multiple queries:\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py393-435](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L393-L435) [qdrant\\_client/qdrant\\_remote.py684-750](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L684-L750)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Search Operations](#search-operations.md)\n- [Search Architecture Overview](#search-architecture-overview.md)\n- [Search Methods](#search-methods.md)\n- [Universal Query Interface](#universal-query-interface.md)\n- [Legacy Search Methods](#legacy-search-methods.md)\n- [Query Types and Resolution](#query-types-and-resolution.md)\n- [Dense Vector Queries](#dense-vector-queries.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 307,
      "char_count": 1020,
      "start_char": 10805,
      "end_char": 11826
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md:chunk:13",
    "content": "and Resolution](#query-types-and-resolution.md)\n- [Dense Vector Queries](#dense-vector-queries.md)\n- [Sparse Vector Queries](#sparse-vector-queries.md)\n- [Advanced Query Types](#advanced-query-types.md)\n- [Recommendation Queries](#recommendation-queries.md)\n- [Discovery and Context Queries](#discovery-and-context-queries.md)\n- [Search Execution Pipeline](#search-execution-pipeline.md)\n- [Local Collection Search](#local-collection-search.md)\n- [Remote Search Execution](#remote-search-execution.md)\n- [Hybrid Search and Prefetch](#hybrid-search-and-prefetch.md)\n- [Prefetch Pipeline](#prefetch-pipeline.md)\n- [Fusion Query Processing](#fusion-query-processing.md)\n- [Performance Considerations](#performance-considerations.md)\n- [Vector Type Performance](#vector-type-performance.md)\n- [Search Optimizations](#search-optimizations.md)\n- [Batch Processing](#batch-processing.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_3.1-search-operations.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 210,
      "char_count": 880,
      "start_char": 11726,
      "end_char": 12750
    }
  }
]