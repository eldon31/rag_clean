[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:0",
    "content": "Hybrid Search | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 320,
      "char_count": 1021,
      "start_char": 0,
      "end_char": 1021
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:1",
    "content": "ent](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 307,
      "char_count": 1015,
      "start_char": 921,
      "end_char": 1936
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:2",
    "content": "ork](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Expression Evaluation\n\nRelevant source files\n\n- [qdrant\\_client/hybrid/\\_\\_init\\_\\_.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/__init__.py)\n- [qdrant\\_client/hybrid/fusion.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/fusion.py)\n- [qdrant\\_client/hybrid/test\\_reranking.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/test_reranking.py)\n\n## Purpose and Scope\n\nThis document details the expression evaluation system in the Qdrant client library. This system provides a powerful way to perform mathematical operations, create custom scoring functions, filter data, and transform values within queries. For information about batch operations, see [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 254,
      "char_count": 941,
      "start_char": 1836,
      "end_char": 2777
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:3",
    "content": "nformation about batch operations, see [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md), and for local inference capabilities, see [Local Inference](qdrant/qdrant-client/4.4-local-inference.md).\n\n## Overview\n\nThe expression evaluation system allows users to create complex mathematical and logical expressions that can be used in various operations, particularly for custom relevance scoring in hybrid search. Expressions support access to vector similarity scores, payload fields, filtering conditions, and a wide range of mathematical operations.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py19-214](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L214) [qdrant\\_client/embed/\\_inspection\\_cache.py1-244](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py#L1-L244)\n\n## Expression Types\n\nThe Qdrant client supports a rich set of expression types that can be combined to create complex scoring and filtering logic.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 254,
      "char_count": 1023,
      "start_char": 2677,
      "end_char": 3702
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:4",
    "content": "a rich set of expression types that can be combined to create complex scoring and filtering logic.\n\n### Basic Expression Types\n\n| Expression Type  | Description               | Example                                                                 |\n| ---------------- | ------------------------- | ----------------------------------------------------------------------- |\n| Constant         | Numeric literals          | `0.5`, `42`                                                             |\n| Variable         | Payload field or score    | `price`, `$score`                                                       |\n| Filter Condition | Boolean condition         | `FieldCondition(key=\"category\", match=MatchValue(value=\"electronics\"))` |\n| Mathematical     | Mathematical operations   | `MultExpression`, `SumExpression`, `DivExpression`                      |\n| Geo              | Geo-distance calculations | `GeoDistance`                                                           |",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 141,
      "char_count": 988,
      "start_char": 3602,
      "end_char": 4591
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:5",
    "content": "o-distance calculations | `GeoDistance`                                                           |\n| Datetime         | Date/time operations      | `DatetimeExpression`, `DatetimeKeyExpression`                           |\n| Decay            | Decay functions           | `LinDecayExpression`, `ExpDecayExpression`, `GaussDecayExpression`      |\n\n### Mathematical Operations\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py35-150](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L35-L150) [qdrant\\_client/embed/\\_inspection\\_cache.py245-310](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py#L245-L310)\n\n### Decay Functions\n\nDecay functions are used to transform distances (numeric, geographic, temporal) into relevance scores that decrease with distance from a target value.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py186-211](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 265,
      "char_count": 1007,
      "start_char": 4491,
      "end_char": 5498
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:6",
    "content": "rmula.py186-211](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L186-L211) [qdrant\\_client/embed/\\_inspection\\_cache.py360-444](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py#L360-L444)\n\n## Expression Evaluation Process\n\nThe expression evaluation system recursively processes expressions to produce a final numeric value.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py19-214](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L214) [qdrant\\_client/hybrid/formula.py266-298](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L266-L298)\n\n## Using Variables in Expressions\n\n### Payload Fields\n\nAny field from a point's payload can be referenced by its path:\n\n- Simple field: `\"price\"`\n- Nested field: `\"product.details.price\"`\n- Array element: `\"features[0]\"`\n- Array elements: `\"features[]\"`\n\n### Score Variables",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 304,
      "char_count": 979,
      "start_char": 5398,
      "end_char": 6379
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:7",
    "content": "ils.price\"`\n- Array element: `\"features[0]\"`\n- Array elements: `\"features[]\"`\n\n### Score Variables\n\nScore variables provide access to vector similarity scores:\n\n- `$score` or `$score[0]`: First vector similarity score\n- `$score[1]`: Second vector similarity score (in multi-vector queries)\n- `$score[n]`: Nth vector similarity score\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py245-298](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L245-L298) [qdrant\\_client/local/payload\\_value\\_extractor.py1-92](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py#L1-L92)\n\n## Filter Expressions\n\nExpressions can include filter conditions that evaluate to 1.0 (true) or 0.0 (false). These conditions support the same rich filtering capabilities as Qdrant's regular filters.\n\n```\n```\n\nSources: [qdrant\\_client/local/payload\\_filters.py165-313](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 293,
      "char_count": 1016,
      "start_char": 6279,
      "end_char": 7295
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:8",
    "content": "y165-313](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L165-L313) [qdrant\\_client/embed/\\_inspection\\_cache.py573-735](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py#L573-L735)\n\n## Practical Examples\n\n### Example 1: Combining Vector Search with Price Factor\n\n```\n```\n\n### Example 2: Distance-Based Decay Function\n\n```\n```\n\n## Expression Evaluation Implementation\n\nThe core expression evaluation logic resides in the `evaluate_expression` function. This function recursively processes expressions based on their type, handling constants, variables, conditions, and operations.\n\n### Key Components\n\n- **Expression Parser**: Converts expression objects into calculations\n- **Variable Resolver**: Retrieves values from payloads or scores\n- **Condition Evaluator**: Processes filter conditions\n- **Mathematical Evaluator**: Performs mathematical operations\n- **Error Handling**: Handles edge cases like division by zero",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 240,
      "char_count": 1010,
      "start_char": 7195,
      "end_char": 8207
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:9",
    "content": "*: Performs mathematical operations\n- **Error Handling**: Handles edge cases like division by zero\n\nSources: [qdrant\\_client/hybrid/formula.py19-214](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L214) [qdrant\\_client/hybrid/formula.py216-242](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L216-L242)\n\n## Expression Safety and Limitations\n\nThe expression evaluation system includes several safety measures:\n\n1. **Non-finite Value Detection**: Functions like `div`, `sqrt`, `pow`, `exp`, `log10`, and `ln` check for non-finite results and raise appropriate errors.\n\n2. **Division by Zero Handling**: The `DivExpression` allows specifying a `by_zero_default` value to handle division by zero gracefully.\n\n3. **Decay Function Validation**: Decay functions validate parameters like `midpoint` (must be between 0 and 1) and `scale` (must be positive).\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py83-89](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 281,
      "char_count": 1005,
      "start_char": 8107,
      "end_char": 9112
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:10",
    "content": "cale` (must be positive).\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py83-89](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L83-L89) [qdrant\\_client/hybrid/formula.py235-240](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L235-L240)\n\n## Integration with Search and Query Operations\n\nThe expression evaluation system integrates with Qdrant's search functionality through:\n\n1. **Formula Queries**: Apply a scoring formula to search results\n2. **Fusion Queries**: Combine multiple search strategies with custom weights\n\nThese operations leverage the expression evaluation system to compute final relevance scores for returned points.\n\nSources: [qdrant\\_client/hybrid/formula.py19-33](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L33)\n\n## Conclusion",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 245,
      "char_count": 876,
      "start_char": 9012,
      "end_char": 9890
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:11",
    "content": "hub.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L33)\n\n## Conclusion\n\nQdrant's expression evaluation system provides a powerful and flexible way to customize search relevance, perform calculations, and create complex scoring functions. By combining vector similarity with other factors like numerical properties, text matches, and geo-distance, users can create highly tailored search experiences that balance multiple relevance signals.\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Expression Evaluation](#expression-evaluation.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Overview](#overview.md)\n- [Expression Types](#expression-types.md)\n- [Basic Expression Types](#basic-expression-types.md)\n- [Mathematical Operations](#mathematical-operations.md)\n- [Decay Functions](#decay-functions.md)\n- [Expression Evaluation Process](#expression-evaluation-process.md)\n- [Using Variables in Expressions](#using-variables-in-expressions.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 220,
      "char_count": 999,
      "start_char": 9790,
      "end_char": 10790
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md:chunk:12",
    "content": "ssion-evaluation-process.md)\n- [Using Variables in Expressions](#using-variables-in-expressions.md)\n- [Payload Fields](#payload-fields.md)\n- [Score Variables](#score-variables.md)\n- [Filter Expressions](#filter-expressions.md)\n- [Practical Examples](#practical-examples.md)\n- [Example 1: Combining Vector Search with Price Factor](#example-1-combining-vector-search-with-price-factor.md)\n- [Example 2: Distance-Based Decay Function](#example-2-distance-based-decay-function.md)\n- [Expression Evaluation Implementation](#expression-evaluation-implementation.md)\n- [Key Components](#key-components.md)\n- [Expression Safety and Limitations](#expression-safety-and-limitations.md)\n- [Integration with Search and Query Operations](#integration-with-search-and-query-operations.md)\n- [Conclusion](#conclusion.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_4.3-hybrid-search.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 190,
      "char_count": 806,
      "start_char": 10690,
      "end_char": 11714
    }
  }
]