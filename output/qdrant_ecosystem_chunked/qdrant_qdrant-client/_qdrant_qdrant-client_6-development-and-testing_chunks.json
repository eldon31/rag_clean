[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:0",
    "content": "Development & Testing | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 305,
      "char_count": 984,
      "start_char": 0,
      "end_char": 985
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:1",
    "content": "-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 300,
      "char_count": 1010,
      "start_char": 885,
      "end_char": 1896
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:2",
    "content": "t-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Development & Testing\n\nRelevant source files\n\n- [.github/workflows/integration-tests.yml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml)\n- [poetry.lock](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/poetry.lock)\n- [pyproject.toml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml)\n- [tests/integration-tests.sh](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh)\n\nThis document covers the development setup, testing frameworks, and CI/CD pipeline for the qdrant-client Python library. It explains how to set up a development environment, run tests, and contribute to the project.\n\nFor information about the overall project structure and client architecture, see [Client Architecture](qdrant/qdrant-client/2-client-architecture.md).",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 264,
      "char_count": 1022,
      "start_char": 1796,
      "end_char": 2818
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:3",
    "content": "e and client architecture, see [Client Architecture](qdrant/qdrant-client/2-client-architecture.md). For details about implementation internals, see [Implementation Details](qdrant/qdrant-client/5-implementation-details.md).\n\n## Project Configuration and Dependencies\n\nThe qdrant-client project uses Poetry for dependency management and is configured through `pyproject.toml`. The project supports Python versions 3.9 through 3.13 and includes comprehensive development tooling.\n\n### Core Dependencies\n\nThe project's main dependencies are defined in [pyproject.toml16-36](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L16-L36):\n\n```\n```\n\n**Sources:** [pyproject.toml16-79](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L16-L79)\n\n### Python Version Support Matrix\n\nThe project uses version-specific NumPy dependencies to ensure compatibility across Python versions:\n\n| Python Version | NumPy Version |\n| -------------- | ------------- |\n| 3.9            | >=1.21,<2.1.0 |\n| 3.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 257,
      "char_count": 1021,
      "start_char": 2718,
      "end_char": 3739
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:4",
    "content": "Version | NumPy Version |\n| -------------- | ------------- |\n| 3.9            | >=1.21,<2.1.0 |\n| 3.10-3.11      | >=1.21        |\n| 3.12           | >=1.26        |\n| 3.13+          | >=2.1.0       |\n\n**Sources:** [pyproject.toml19-24](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L19-L24)\n\n### Development Tool Configuration\n\nThe project includes strict type checking and testing configurations:\n\n```\n```\n\n**Sources:** [pyproject.toml68-75](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L68-L75)\n\n## Testing Framework\n\nThe qdrant-client project implements a comprehensive testing strategy with multiple test types and CI/CD integration.\n\n### Integration Test Infrastructure\n\nThe integration testing system uses Docker containers to test against real Qdrant instances:\n\n```\n```\n\n**Sources:** [tests/integration-tests.sh1-51](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L1-L51)\n\n### CI/CD Pipeline",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 290,
      "char_count": 981,
      "start_char": 3639,
      "end_char": 4622
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:5",
    "content": "thub.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L1-L51)\n\n### CI/CD Pipeline\n\nThe GitHub Actions workflow provides comprehensive testing across multiple Python versions and test types:\n\n```\n```\n\n**Sources:** [.github/workflows/integration-tests.yml1-77](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L1-L77)\n\n### Test Types and Execution\n\nThe testing framework includes several specialized test categories:\n\n1. **Congruence Tests**: Verify that local and remote implementations produce identical results\n2. **Integration Tests**: Test against live Qdrant service instances\n3. **Async Client Tests**: Validate async client generation consistency\n4. **Cache Tests**: Test inspection cache population and consistency\n5. **Coverage Tests**: Ensure conversion layer coverage\n6. **Docstring Tests**: Validate code examples in documentation\n7. **Backward Compatibility Tests**: Test against older Qdrant versions\n\n### Test Environment Configuration",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 222,
      "char_count": 1011,
      "start_char": 4522,
      "end_char": 5535
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:6",
    "content": "ward Compatibility Tests**: Test against older Qdrant versions\n\n### Test Environment Configuration\n\nThe integration test script supports environment-based configuration:\n\n| Environment Variable      | Default   | Purpose                     |\n| ------------------------- | --------- | --------------------------- |\n| `QDRANT_VERSION`          | `v1.14.1` | Qdrant Docker image version |\n| `IGNORE_CONGRUENCE_TESTS` | `false`   | Skip congruence tests       |\n| `REST_PORT`               | `6333`    | REST API port               |\n| `GRPC_PORT`               | `6334`    | gRPC API port               |\n| `P2P_PORT`                | `6335`    | P2P cluster port            |\n\n**Sources:** [tests/integration-tests.sh14-21](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L14-L21)\n\n### Backward Compatibility Testing\n\nThe project maintains backward compatibility through automated testing against multiple Qdrant versions:\n\n```\n```",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 231,
      "char_count": 963,
      "start_char": 5435,
      "end_char": 6400
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:7",
    "content": "ntains backward compatibility through automated testing against multiple Qdrant versions:\n\n```\n```\n\nWhen running backward compatibility tests, congruence tests are automatically skipped to focus on API compatibility rather than behavioral equivalence.\n\n**Sources:** [tests/integration-tests.sh38-45](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L38-L45) [.github/workflows/integration-tests.yml65-70](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L65-L70)\n\n## Documentation System\n\nThe project uses Sphinx for documentation generation with support for Jupyter notebooks and automated API documentation.\n\n### Documentation Dependencies\n\nThe documentation system requires specific dependencies defined in `pyproject.toml`:\n\n```\n```\n\n**Sources:** [pyproject.toml48-54](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L48-L54)\n\n### Documentation Testing",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 228,
      "char_count": 954,
      "start_char": 6300,
      "end_char": 7256
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:8",
    "content": "//github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L48-L54)\n\n### Documentation Testing\n\nThe CI pipeline includes documentation testing through docstring validation:\n\n```\n```\n\nThis ensures that code examples in documentation remain functional and accurate.\n\n**Sources:** [.github/workflows/integration-tests.yml56-58](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L56-L58)\n\n## Development Workflow\n\nThe project follows a structured development workflow with automated checks and quality assurance.\n\n### Code Quality Tools\n\nThe development environment includes several code quality tools:\n\n- **Ruff**: Fast Python linter (pinned to version 0.4.3)\n- **Autoflake**: Removes unused imports and variables\n- **Pre-commit**: Git hooks for automated checks\n- **Pyright**: Strict type checking\n- **MyPy**: Additional type analysis\n\n### Testing Workflow\n\n1. **Local Development**: Run tests locally using pytest\n2. **Pre-commit Hooks**: Automatic code quality checks\n3.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 235,
      "char_count": 1018,
      "start_char": 7156,
      "end_char": 8174
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:9",
    "content": "elopment**: Run tests locally using pytest\n2. **Pre-commit Hooks**: Automatic code quality checks\n3. **CI Pipeline**: Comprehensive testing across Python versions\n4. **Integration Testing**: Docker-based testing against Qdrant service\n5. **Backward Compatibility**: Automated testing against older versions\n\n### FastEmbed Integration Testing\n\nThe project includes specialized testing for FastEmbed integration:\n\n```\n```\n\nThis ensures the library works correctly both with and without the optional FastEmbed dependency.\n\n**Sources:** [.github/workflows/integration-tests.yml71-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L71-L76)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Development & Testing](#development-testing.md)\n- [Project Configuration and Dependencies](#project-configuration-and-dependencies.md)\n- [Core Dependencies](#core-dependencies.md)\n- [Python Version Support Matrix](#python-version-support-matrix.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 218,
      "char_count": 1005,
      "start_char": 8074,
      "end_char": 9080
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md:chunk:10",
    "content": "encies](#core-dependencies.md)\n- [Python Version Support Matrix](#python-version-support-matrix.md)\n- [Development Tool Configuration](#development-tool-configuration.md)\n- [Testing Framework](#testing-framework.md)\n- [Integration Test Infrastructure](#integration-test-infrastructure.md)\n- [CI/CD Pipeline](#cicd-pipeline.md)\n- [Test Types and Execution](#test-types-and-execution.md)\n- [Test Environment Configuration](#test-environment-configuration.md)\n- [Backward Compatibility Testing](#backward-compatibility-testing.md)\n- [Documentation System](#documentation-system.md)\n- [Documentation Dependencies](#documentation-dependencies.md)\n- [Documentation Testing](#documentation-testing.md)\n- [Development Workflow](#development-workflow.md)\n- [Code Quality Tools](#code-quality-tools.md)\n- [Testing Workflow](#testing-workflow.md)\n- [FastEmbed Integration Testing](#fastembed-integration-testing.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6-development-and-testing.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 197,
      "char_count": 904,
      "start_char": 8980,
      "end_char": 10004
    }
  }
]