[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:0",
    "content": "Testing Framework | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 319,
      "char_count": 1025,
      "start_char": 0,
      "end_char": 1025
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:1",
    "content": "ent](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 307,
      "char_count": 1015,
      "start_char": 925,
      "end_char": 1940
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:2",
    "content": "ork](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Testing Framework\n\nRelevant source files\n\n- [tests/congruence\\_tests/test\\_search.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_search.py)\n- [tests/congruence\\_tests/test\\_sparse\\_search.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_sparse_search.py)\n- [tests/congruence\\_tests/test\\_updates.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_updates.py)\n- [tests/test\\_in\\_memory.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_in_memory.py)\n- [tests/test\\_local\\_persistence.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_local_persistence.py)\n- [tests/test\\_qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 286,
      "char_count": 956,
      "start_char": 1840,
      "end_char": 2798
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:3",
    "content": "ant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py)\n\nThis page documents the testing methodology and organization of the test suite for the qdrant-client library. It provides an overview of how tests are structured, configured, and executed to ensure the library's functionality and compatibility.\n\n## Purpose and Scope\n\nThe qdrant-client testing framework is designed to verify the correctness, reliability, and compatibility of the client library across different environments, configurations, and usage patterns. It includes unit tests, integration tests, and specialized test suites to provide comprehensive coverage of the codebase.\n\n## Testing Architecture\n\nThe testing architecture of qdrant-client is organized around three main test categories that verify different aspects of client functionality and ensure consistency across implementations.\n\n### Test Framework Structure\n\n```\n```\n\nSources: [tests/test\\_qdrant\\_client.py1-1161](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 196,
      "char_count": 1003,
      "start_char": 2698,
      "end_char": 3701
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:4",
    "content": "## Test Framework Structure\n\n```\n```\n\nSources: [tests/test\\_qdrant\\_client.py1-1161](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L1-L1161) [tests/congruence\\_tests/test\\_common.py58-63](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_common.py#L58-L63) [tests/test\\_local\\_persistence.py1-153](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_local_persistence.py#L1-L153) [tests/test\\_in\\_memory.py1-123](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_in_memory.py#L1-L123)\n\n## Test Dependencies and Configuration\n\nThe testing framework relies on several Python testing libraries as specified in the project's configuration.\n\n| Dependency     | Version | Purpose                   |\n| -------------- | ------- | ------------------------- |\n| pytest         | ^7.1    | Main testing framework    |\n| coverage       | ^6.3.3  | Test coverage measurement |\n| pytest-asyncio | ^0.21.0 | Testing asynchronous code |",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 297,
      "char_count": 1017,
      "start_char": 3601,
      "end_char": 4619
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:5",
    "content": "| ^6.3.3  | Test coverage measurement |\n| pytest-asyncio | ^0.21.0 | Testing asynchronous code |\n| pytest-timeout | ^2.1.0  | Testing timeout scenarios |\n| pytest-mock    | ^3.14.0 | Test mocking capabilities |\n| autoflake      | ^2.2.1  | Code quality checks       |\n| ruff           | 0.4.3   | Linting and formatting    |\n\nThe project defines custom pytest markers to categorize tests:\n\n```\n[tool.pytest.ini_options]\nmarkers = [\n    \"fastembed: marks tests that require the fastembed package (deselect with '-m \\\"not fastembed\\\"')\",\n    \"no_fastembed: marks tests that do not require the fastembed package (deselect with '-m \\\"not no_fastembed\\\"')\"\n]\n```\n\nThese markers allow selective test execution based on the availability of optional dependencies.\n\nSources: [pyproject.toml37-44](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L37-L44) [pyproject.toml70-74](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L70-L74)\n\n## Test Organization\n\n### Unit Tests",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 292,
      "char_count": 1003,
      "start_char": 4519,
      "end_char": 5527
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:6",
    "content": "m/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L70-L74)\n\n## Test Organization\n\n### Unit Tests\n\nUnit tests focus on testing individual components of the client library in isolation. The main test file `tests/test_qdrant_client.py` contains numerous test cases that verify:\n\n1. Client initialization with different parameters\n2. Collection creation and management\n3. Point operations (upsert, delete, search)\n4. Filtering and payload operations\n5. Protocol handling (REST vs gRPC)\n\nExample test parameterization from the codebase:\n\n```\n```\n\nThis approach ensures features are tested across both REST and gRPC protocols, as well as with different parallelism settings.\n\nSources: [tests/test\\_qdrant\\_client.py93-206](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L93-L206) [tests/test\\_qdrant\\_client.py208-275](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L208-L275)\n\n### Integration Tests\n\nIntegration tests in `test_qdrant_client.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 269,
      "char_count": 1008,
      "start_char": 5427,
      "end_char": 6435
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:7",
    "content": "s/test_qdrant_client.py#L208-L275)\n\n### Integration Tests\n\nIntegration tests in `test_qdrant_client.py` verify end-to-end functionality with parameterized testing across different client configurations. Key test functions include:\n\n| Test Function                    | Parameters                                  | Purpose                                |\n| -------------------------------- | ------------------------------------------- | -------------------------------------- |\n| `test_qdrant_client_integration` | `prefer_grpc`, `numpy_upload`, `local_mode` | Full client functionality testing      |\n| `test_records_upload`            | `prefer_grpc`, `parallel`                   | Record upload with different protocols |\n| `test_point_upload`              | `prefer_grpc`, `parallel`                   | Point upload operations                |\n| `test_multiple_vectors`          | `prefer_grpc`                               | Multi-vector collection handling       |",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 169,
      "char_count": 975,
      "start_char": 6335,
      "end_char": 7311
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:8",
    "content": "`          | `prefer_grpc`                               | Multi-vector collection handling       |\n| `test_upload_collection`         | `prefer_grpc`, `parallel`                   | Collection upload operations           |\n\nIntegration Test Execution Flow:\n\n```\n```\n\nSources: [tests/integration-tests.sh13-47](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L13-L47) [tests/test\\_qdrant\\_client.py243-378](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L243-L378) [tests/test\\_qdrant\\_client.py488-1102](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L488-L1102)\n\n### Congruence Tests\n\nCongruence tests verify behavioral consistency between `QdrantLocal` and `QdrantRemote` implementations. The `test_common.py` module provides client initialization fixtures:\n\n```\n```\n\nCongruence Test Categories:\n\n```\n```\n\nThe integration test script conditionally skips congruence tests for backward compatibility testing:\n\n```\n```",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 276,
      "char_count": 1021,
      "start_char": 7211,
      "end_char": 8234
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:9",
    "content": "tion test script conditionally skips congruence tests for backward compatibility testing:\n\n```\n```\n\nSources: [tests/congruence\\_tests/test\\_common.py58-84](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_common.py#L58-L84) [tests/congruence\\_tests/test\\_updates.py23-84](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_updates.py#L23-L84) [tests/congruence\\_tests/test\\_search.py148-179](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_search.py#L148-L179) [tests/integration-tests.sh41-45](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L41-L45)\n\n## CI/CD Integration\n\nThe GitHub Actions workflow executes a comprehensive test matrix across multiple Python versions with specialized test categories.\n\n### CI Workflow Steps\n\n```\n```\n\n### Test Matrix Configuration\n\n| Step                    | Python Versions | Purpose                           |",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 275,
      "char_count": 982,
      "start_char": 8134,
      "end_char": 9117
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:10",
    "content": "ix Configuration\n\n| Step                    | Python Versions | Purpose                           |\n| ----------------------- | --------------- | --------------------------------- |\n| Poetry Installation     | 3.9-3.13        | Install all dependencies          |\n| Async Client Generation | 3.10 only       | Test code generation              |\n| Cache Consistency       | 3.10 only       | Test inspection cache             |\n| Coverage Testing        | 3.9-3.13        | Measure test coverage             |\n| Integration Tests       | 3.9-3.13        | Full functionality testing        |\n| Backward Compatibility  | 3.9-3.13        | Test against Qdrant v1.13.6       |\n| No-FastEmbed Tests      | 3.9-3.13        | Test optional dependency handling |\n\n### Environment Variables\n\n- `QDRANT_VERSION`: Controls Qdrant server version for testing\n- `IGNORE_CONGRUENCE_TESTS`: Skips congruence tests when set to \"true\"\n\nSources: [.github/workflows/integration-tests.yml14-76](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 239,
      "char_count": 990,
      "start_char": 9017,
      "end_char": 10007
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:11",
    "content": "ce tests when set to \"true\"\n\nSources: [.github/workflows/integration-tests.yml14-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L14-L76)\n\n## Test Execution\n\n### Local Development Testing\n\nThe test suite supports various execution modes for local development:\n\n```\n```\n\n### Integration Testing Process\n\nThe `integration-tests.sh` script orchestrates Docker-based testing:\n\nIntegration Test Flow:\n\n```\n```\n\nEnvironment Variables:\n\n- `QDRANT_VERSION`: Specifies Qdrant server version (default: v1.14.0)\n- `IGNORE_CONGRUENCE_TESTS`: Skip congruence tests when set to \"true\"\n\nSources: [tests/integration-tests.sh13-47](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L13-L47)\n\n## Specialized Test Categories\n\n### Protocol Testing\n\nProtocol testing ensures consistent behavior across REST and gRPC implementations using parameterized tests:\n\n```\n```\n\nKey parameterized test functions:\n\n- `test_records_upload(prefer_grpc, parallel)`",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 248,
      "char_count": 1010,
      "start_char": 9907,
      "end_char": 10918
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:12",
    "content": "tests:\n\n```\n```\n\nKey parameterized test functions:\n\n- `test_records_upload(prefer_grpc, parallel)`\n- `test_point_upload(prefer_grpc, parallel)`\n- `test_multiple_vectors(prefer_grpc)`\n- `test_qdrant_client_integration(prefer_grpc, numpy_upload, local_mode)`\n\nSources: [tests/test\\_qdrant\\_client.py243-244](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L243-L244) [tests/test\\_qdrant\\_client.py312-313](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L312-L313) [tests/test\\_qdrant\\_client.py488-491](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L488-L491)\n\n### Local Mode Testing\n\nLocal mode tests verify in-process and persistence functionality:\n\n| Test File                   | Test Functions                                                                                            | Purpose                                        |",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 254,
      "char_count": 943,
      "start_char": 10818,
      "end_char": 11763
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:13",
    "content": "| Purpose                                        |\n| --------------------------- | --------------------------------------------------------------------------------------------------------- | ---------------------------------------------- |\n| `test_local_persistence.py` | `test_local_dense_persistence()`, `test_local_sparse_persistence()`                                       | Verify data persistence across client restarts |\n| `test_in_memory.py`         | `test_dense_in_memory_key_filter_returns_results()`, `test_sparse_in_memory_key_filter_returns_results()` | Verify in-memory operation correctness         |\n\n### FastEmbed Integration\n\nFastEmbed integration testing uses pytest markers to handle optional dependencies:\n\n```\n```\n\nThe CI workflow validates graceful degradation when fastembed is unavailable:\n\n```\n```\n\nSources: [.github/workflows/integration-tests.yml72-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 166,
      "char_count": 973,
      "start_char": 11663,
      "end_char": 12685
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:14",
    "content": "yml72-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L72-L76) [pyproject.toml70-74](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L70-L74) [tests/test\\_local\\_persistence.py92-153](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_local_persistence.py#L92-L153) [tests/test\\_in\\_memory.py11-123](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_in_memory.py#L11-L123)\n\n## Conclusion\n\nThe qdrant-client testing framework provides comprehensive test coverage across different client configurations, protocols, and environments. The combination of unit tests, integration tests, and specialized test suites ensures that the client behaves correctly and consistently in various scenarios.\n\nThe test architecture supports both local development testing and automated CI testing, with special consideration for backward compatibility and optional dependency testing.",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 252,
      "char_count": 965,
      "start_char": 12585,
      "end_char": 13550
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:15",
    "content": "d CI testing, with special consideration for backward compatibility and optional dependency testing. This ensures that the client remains reliable as both the client and server evolve over time.\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Testing Framework](#testing-framework.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Testing Architecture](#testing-architecture.md)\n- [Test Framework Structure](#test-framework-structure.md)\n- [Test Dependencies and Configuration](#test-dependencies-and-configuration.md)\n- [Test Organization](#test-organization.md)\n- [Unit Tests](#unit-tests.md)\n- [Integration Tests](#integration-tests.md)\n- [Congruence Tests](#congruence-tests.md)\n- [CI/CD Integration](#cicd-integration.md)\n- [CI Workflow Steps](#ci-workflow-steps.md)\n- [Test Matrix Configuration](#test-matrix-configuration.md)\n- [Environment Variables](#environment-variables.md)\n- [Test Execution](#test-execution.md)\n- [Local Development Testing](#local-development-testing.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 234,
      "char_count": 1013,
      "start_char": 13450,
      "end_char": 14464
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md:chunk:16",
    "content": "- [Test Execution](#test-execution.md)\n- [Local Development Testing](#local-development-testing.md)\n- [Integration Testing Process](#integration-testing-process.md)\n- [Specialized Test Categories](#specialized-test-categories.md)\n- [Protocol Testing](#protocol-testing.md)\n- [Local Mode Testing](#local-mode-testing.md)\n- [FastEmbed Integration](#fastembed-integration.md)\n- [Conclusion](#conclusion.md)",
    "metadata": {
      "source_file": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant-client",
      "filename": "_qdrant_qdrant-client_6.2-testing-framework.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 93,
      "char_count": 403,
      "start_char": 14364,
      "end_char": 15388
    }
  }
]