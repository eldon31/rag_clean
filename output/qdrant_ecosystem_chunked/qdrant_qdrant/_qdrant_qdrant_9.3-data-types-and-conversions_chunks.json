[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:0",
    "content": "Data Types and Conversions | qdrant/qdrant | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant](https://github.com/qdrant/qdrant \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 4 October 2025 ([48203e](https://github.com/qdrant/qdrant/commits/48203e41))\n\n- [Introduction to Qdrant](qdrant/qdrant/1-introduction-to-qdrant.md)\n- [Key Concepts and Terminology](qdrant/qdrant/1.1-key-concepts-and-terminology.md)\n- [System Architecture](qdrant/qdrant/2-system-architecture.md)\n- [Application Initialization and Runtime](qdrant/qdrant/2.1-application-initialization-and-runtime.md)\n- [Collections and Table of Content](qdrant/qdrant/2.2-collections-and-table-of-content.md)\n- [Shards and Replica Sets](qdrant/qdrant/2.3-shards-and-replica-sets.md)\n- [Local Shard Architecture](qdrant/qdrant/2.4-local-shard-architecture.md)\n- [Segment Lifecycle and Construction](qdrant/qdrant/2.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 314,
      "char_count": 1007,
      "start_char": 0,
      "end_char": 1007
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:1",
    "content": "rant/qdrant/2.4-local-shard-architecture.md)\n- [Segment Lifecycle and Construction](qdrant/qdrant/2.5-segment-lifecycle-and-construction.md)\n- [Vector Storage and Indexing](qdrant/qdrant/3-vector-storage-and-indexing.md)\n- [Vector Storage Formats](qdrant/qdrant/3.1-vector-storage-formats.md)\n- [HNSW Index Implementation](qdrant/qdrant/3.2-hnsw-index-implementation.md)\n- [Vector Quantization](qdrant/qdrant/3.3-vector-quantization.md)\n- [Sparse Vector Indexing](qdrant/qdrant/3.4-sparse-vector-indexing.md)\n- [Payload Indexing and Filtering](qdrant/qdrant/4-payload-indexing-and-filtering.md)\n- [Field Index Types](qdrant/qdrant/4.1-field-index-types.md)\n- [Index Selection and Storage Backends](qdrant/qdrant/4.2-index-selection-and-storage-backends.md)\n- [Search and Query Processing](qdrant/qdrant/5-search-and-query-processing.md)\n- [Query Request Flow](qdrant/qdrant/5.1-query-request-flow.md)\n- [Filtering and Scoring](qdrant/qdrant/5.2-filtering-and-scoring.md)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 298,
      "char_count": 970,
      "start_char": 907,
      "end_char": 1878
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:2",
    "content": "nt/5.1-query-request-flow.md)\n- [Filtering and Scoring](qdrant/qdrant/5.2-filtering-and-scoring.md)\n- [Data Updates and Consistency](qdrant/qdrant/6-data-updates-and-consistency.md)\n- [Update Processing Pipeline](qdrant/qdrant/6.1-update-processing-pipeline.md)\n- [Write Consistency and Replication](qdrant/qdrant/6.2-write-consistency-and-replication.md)\n- [Distributed System Features](qdrant/qdrant/7-distributed-system-features.md)\n- [Raft Consensus Protocol](qdrant/qdrant/7.1-raft-consensus-protocol.md)\n- [Shard Transfers and Resharding](qdrant/qdrant/7.2-shard-transfers-and-resharding.md)\n- [Snapshots and Recovery](qdrant/qdrant/8-snapshots-and-recovery.md)\n- [API Reference](qdrant/qdrant/9-api-reference.md)\n- [REST API Endpoints](qdrant/qdrant/9.1-rest-api-endpoints.md)\n- [gRPC API Services](qdrant/qdrant/9.2-grpc-api-services.md)\n- [Data Types and Conversions](qdrant/qdrant/9.3-data-types-and-conversions.md)\n- [Configuration and Deployment](qdrant/qdrant/10-configuration-and-deployment.md)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 321,
      "char_count": 1008,
      "start_char": 1778,
      "end_char": 2787
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:3",
    "content": "-conversions.md)\n- [Configuration and Deployment](qdrant/qdrant/10-configuration-and-deployment.md)\n- [Configuration System](qdrant/qdrant/10.1-configuration-system.md)\n- [Docker Deployment](qdrant/qdrant/10.2-docker-deployment.md)\n- [Building and CI/CD](qdrant/qdrant/10.3-building-and-cicd.md)\n- [Development Guide](qdrant/qdrant/11-development-guide.md)\n\nMenu\n\n# Data Types and Conversions\n\nRelevant source files\n\n- [docs/grpc/docs.md](https://github.com/qdrant/qdrant/blob/48203e41/docs/grpc/docs.md)\n- [docs/redoc/master/openapi.json](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/master/openapi.json)\n- [lib/api/src/grpc/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs)\n- [lib/api/src/grpc/proto/collections.proto](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/collections.proto)\n- [lib/api/src/grpc/proto/points.proto](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto)\n- [lib/api/src/grpc/qdrant.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 326,
      "char_count": 1020,
      "start_char": 2687,
      "end_char": 3707
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:4",
    "content": "hub.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto)\n- [lib/api/src/grpc/qdrant.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/qdrant.rs)\n- [lib/collection/src/config.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/config.rs)\n- [lib/collection/src/operations/config\\_diff.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/config_diff.rs)\n- [lib/collection/src/operations/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs)\n- [lib/collection/src/operations/types.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs)\n- [lib/collection/src/optimizers\\_builder.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/optimizers_builder.rs)\n- [lib/segment/src/types.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs)\n- [lib/storage/src/content\\_manager/collection\\_meta\\_ops.rs](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 327,
      "char_count": 1018,
      "start_char": 3607,
      "end_char": 4625
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:5",
    "content": "/segment/src/types.rs)\n- [lib/storage/src/content\\_manager/collection\\_meta\\_ops.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/storage/src/content_manager/collection_meta_ops.rs)\n- [lib/storage/src/content\\_manager/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/storage/src/content_manager/conversions.rs)\n\n## Purpose and Scope\n\nThis document describes the data type system used throughout Qdrant's API layer and the conversion mechanisms between different representations. It covers:\n\n- The three-layer type architecture (REST JSON, gRPC Protobuf, Internal Rust)\n- Core data types for points, vectors, payloads, filters, and configuration\n- Conversion and validation logic between type representations\n- Type patterns used for API flexibility (optional fields, diff types, enumerations)\n\nFor information about the actual API endpoints and RPC methods, see [REST API Endpoints](qdrant/qdrant/9.1-rest-api-endpoints.md) and [gRPC API Services](qdrant/qdrant/9.2-grpc-api-services.md).",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 242,
      "char_count": 1012,
      "start_char": 4525,
      "end_char": 5539
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:6",
    "content": "qdrant/9.1-rest-api-endpoints.md) and [gRPC API Services](qdrant/qdrant/9.2-grpc-api-services.md).\n\n## Type System Architecture\n\nQdrant maintains three distinct type representations that are converted between as requests flow through the system:\n\n```\n```\n\n**Type Flow Architecture**\n\nThe system uses different type representations at each layer to optimize for their specific use cases:\n\n- **REST JSON**: Human-readable, flexible field naming, optional fields via `Option<T>`\n- **gRPC Protobuf**: Efficient binary encoding, strict schema, backward compatibility\n- **Internal Rust**: Type-safe, optimized for processing, domain-specific validation\n\nSources: [lib/api/src/grpc/conversions.rs1-64](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs#L1-L64) [lib/collection/src/operations/conversions.rs1-60](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs#L1-L60)\n\n## Core Data Types\n\n### Point Identifiers",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 248,
      "char_count": 975,
      "start_char": 5439,
      "end_char": 6416
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:7",
    "content": "41/lib/collection/src/operations/conversions.rs#L1-L60)\n\n## Core Data Types\n\n### Point Identifiers\n\nPoints can be identified by either numeric IDs or UUIDs, represented by `ExtendedPointId`:\n\n```\n```\n\n**Point ID Type Hierarchy**\n\n| Type Layer | Representation                         | Source                                                                                                                                 |\n| ---------- | -------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------- |\n| REST       | Untagged union: `u64` or `String` UUID | OpenAPI schema                                                                                                                         |\n| gRPC       | `PointId { oneof point_id_options }`   | [lib/api/src/grpc/proto/points.proto38-43](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto#L38-L43) |",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 173,
      "char_count": 1001,
      "start_char": 6316,
      "end_char": 7318
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:8",
    "content": "8-43](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto#L38-L43) |\n| Internal   | `ExtendedPointId` enum                 | [lib/segment/src/types.rs155-162](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L155-L162)                   |\n\nThe internal `ExtendedPointId` provides methods for type checking and display:\n\nSources: [lib/segment/src/types.rs155-220](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L155-L220) [lib/api/src/grpc/proto/points.proto38-43](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto#L38-L43)\n\n### Vector Types\n\nQdrant supports multiple vector representations with different storage and indexing characteristics:\n\n```\n```\n\n**Vector Type Conversion Flow**\n\nKey vector type definitions:\n\n| Type                   | Purpose                         | Definition                                |",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 269,
      "char_count": 932,
      "start_char": 7218,
      "end_char": 8151
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:9",
    "content": "e                   | Purpose                         | Definition                                |\n| ---------------------- | ------------------------------- | ----------------------------------------- |\n| `DenseVector`          | Standard dense vectors          | `Vec<f32>`                                |\n| `SparseVector`         | Sparse vectors with indices     | `{ values: Vec<f32>, indices: Vec<u32> }` |\n| `MultiDenseVector`     | Multiple vectors per point      | `Vec<DenseVector>`                        |\n| `VectorStructInternal` | Internal unified representation | Enum over all vector types                |\n\nSources: [lib/api/src/grpc/proto/points.proto68-117](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto#L68-L117) [lib/segment/src/types.rs39](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L39-L39) [lib/api/src/grpc/conversions.rs16-17](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs#L16-L17)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 260,
      "char_count": 1008,
      "start_char": 8051,
      "end_char": 9061
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:10",
    "content": "s.rs16-17](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs#L16-L17)\n\n### Vector Configuration\n\nVector configuration defines how vectors are stored and indexed:\n\n```\n```\n\n**Vector Configuration Schema**\n\nSources: [lib/api/src/grpc/proto/collections.proto8-73](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/collections.proto#L8-L73) [lib/api/src/grpc/qdrant.rs102-240](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/qdrant.rs#L102-L240) [lib/collection/src/operations/types.rs32-37](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L32-L37)\n\n### Payload Types\n\nPayloads are arbitrary JSON-like data attached to points:\n\n```\n```\n\n**Payload Type System**\n\nThe internal `Payload` type wraps `serde_json::Map<String, Value>` for flexibility. Payload fields can be indexed with type-specific parameters:\n\nSources: [lib/api/src/grpc/qdrant.rs1-101](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/qdrant.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 321,
      "char_count": 1021,
      "start_char": 8961,
      "end_char": 9982
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:11",
    "content": "api/src/grpc/qdrant.rs1-101](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/qdrant.rs#L1-L101) [lib/segment/src/types.rs48-66](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L48-L66) [lib/api/src/grpc/conversions.rs149-283](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs#L149-L283)\n\n### Filter Conditions\n\nFilters enable complex querying with various condition types:\n\n```\n```\n\n**Filter Condition Hierarchy**\n\nSources: [lib/api/src/grpc/proto/points.proto163-176](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto#L163-L176) [lib/api/src/grpc/qdrant.rs40-60](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/qdrant.rs#L40-L60)\n\n## Conversion Mechanisms\n\n### REST to Internal Conversions\n\nREST JSON types are converted using `serde` deserialization with custom traits:\n\n```\n```\n\n**REST Conversion Pipeline**\n\nExample conversion for collection creation:",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 322,
      "char_count": 973,
      "start_char": 9882,
      "end_char": 10857
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:12",
    "content": "custom traits:\n\n```\n```\n\n**REST Conversion Pipeline**\n\nExample conversion for collection creation:\n\nSources: [lib/storage/src/content\\_manager/conversions.rs65-122](https://github.com/qdrant/qdrant/blob/48203e41/lib/storage/src/content_manager/conversions.rs#L65-L122)\n\n### gRPC to Internal Conversions\n\ngRPC uses protobuf-generated types with explicit conversion implementations:\n\n```\n```\n\n**gRPC Conversion Pipeline**\n\nKey conversion implementations:\n\n| From                 | To                         | Trait     | Location                                                                                                                                    |\n| -------------------- | -------------------------- | --------- | ------------------------------------------------------------------------------------------------------------------------------------------- |\n| `grpc::PointId`      | `ExtendedPointId`          | `TryFrom` | [lib/api/src/grpc/conversions.rs](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 167,
      "char_count": 985,
      "start_char": 10757,
      "end_char": 11742
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:13",
    "content": "d`      | `ExtendedPointId`          | `TryFrom` | [lib/api/src/grpc/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs)                           |\n| `grpc::Filter`       | `segment::types::Filter`   | `TryFrom` | [lib/api/src/grpc/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs)                           |\n| `grpc::VectorParams` | `VectorParams`             | `TryFrom` | [lib/collection/src/operations/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs) |\n| `grpc::ShardKey`     | `segment::types::ShardKey` | Custom    | [lib/api/src/grpc/conversions.rs65-91](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs#L65-L91)              |\n\nSources: [lib/api/src/grpc/conversions.rs1-64](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs#L1-L64) [lib/collection/src/operations/conversions.rs1-60](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 319,
      "char_count": 1018,
      "start_char": 11642,
      "end_char": 12660
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:14",
    "content": "i/src/grpc/conversions.rs#L1-L64) [lib/collection/src/operations/conversions.rs1-60](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs#L1-L60)\n\n### Bidirectional Conversions\n\nSome types require bidirectional conversion for request/response handling:\n\n```\n```\n\n**Bidirectional Conversion Pattern**\n\nCommon bidirectional conversions:\n\n- `PointStruct` ↔ `RecordInternal` - [lib/collection/src/operations/conversions.rs116-152](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs#L116-L152)\n- `ScoredPoint` ↔ response types - [lib/api/src/grpc/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs)\n- `CollectionInfo` ↔ response types - [lib/collection/src/operations/types.rs189-273](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L189-L273)\n\nSources: [lib/collection/src/operations/conversions.rs116-152](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 299,
      "char_count": 980,
      "start_char": 12560,
      "end_char": 13540
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:15",
    "content": "/types.rs#L189-L273)\n\nSources: [lib/collection/src/operations/conversions.rs116-152](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs#L116-L152) [lib/api/src/grpc/conversions.rs1-50](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs#L1-L50)\n\n## Configuration Diff Types\n\nTo support partial updates, configuration uses \"diff\" types with all optional fields:\n\n```\n```\n\n**Configuration Update Pattern**\n\nDiff types use the `DiffConfig` trait to apply partial updates:\n\n| Full Type            | Diff Type                | Purpose                          |\n| -------------------- | ------------------------ | -------------------------------- |\n| `HnswConfig`         | `HnswConfigDiff`         | HNSW index configuration updates |\n| `OptimizersConfig`   | `OptimizersConfigDiff`   | Optimizer parameter updates      |\n| `WalConfig`          | `WalConfigDiff`          | WAL configuration updates        |",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 250,
      "char_count": 972,
      "start_char": 13440,
      "end_char": 14413
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:16",
    "content": "dates      |\n| `WalConfig`          | `WalConfigDiff`          | WAL configuration updates        |\n| `CollectionParams`   | `CollectionParamsDiff`   | Collection parameter updates     |\n| `QuantizationConfig` | `QuantizationConfigDiff` | Quantization updates             |\n\nThe `DiffConfig` trait provides update logic:\n\nSources: [lib/collection/src/operations/config\\_diff.rs23-43](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/config_diff.rs#L23-L43) [lib/collection/src/operations/config\\_diff.rs45-99](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/config_diff.rs#L45-L99) [lib/collection/src/operations/config\\_diff.rs101-112](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/config_diff.rs#L101-L112)\n\n## Type Validation\n\nValidation occurs at multiple stages using the `validator` crate:\n\n```\n```\n\n**Validation Pipeline**\n\nExample validation attributes in use:\n\n```\n```",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 272,
      "char_count": 965,
      "start_char": 14313,
      "end_char": 15280
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:17",
    "content": "alidator` crate:\n\n```\n```\n\n**Validation Pipeline**\n\nExample validation attributes in use:\n\n```\n```\n\nValidation is performed in conversions using the `Validate` trait:\n\nSources: [lib/api/src/grpc/qdrant.rs102-131](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/qdrant.rs#L102-L131) [lib/collection/src/operations/config\\_diff.rs45-99](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/config_diff.rs#L45-L99) [lib/collection/src/config.rs86-133](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/config.rs#L86-L133)\n\n## Special Type Patterns\n\n### Datetime Handling\n\nDatetimes are stored as microsecond timestamps (i64) with flexible parsing:\n\n```\n```\n\n**Datetime Type Conversion**\n\nSources: [lib/segment/src/types.rs68-138](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L68-L138)\n\n### Shard Key Selectors\n\nShard keys support both keyword and numeric types:\n\n```\n```\n\n**Shard Key Conversion**\n\nSources: [lib/api/src/grpc/conversions.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "token_count": 319,
      "char_count": 1017,
      "start_char": 15180,
      "end_char": 16197
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:18",
    "content": "yword and numeric types:\n\n```\n```\n\n**Shard Key Conversion**\n\nSources: [lib/api/src/grpc/conversions.rs65-106](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs#L65-L106) [lib/api/src/grpc/proto/points.proto123-125](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto#L123-L125)\n\n### Enumeration Mappings\n\nEnumerations are mapped between protobuf integers and Rust enums:\n\n| Concept           | gRPC Proto                                                   | Internal Rust                                                                                                                                  |\n| ----------------- | ------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------- |\n| Distance          | `enum Distance { Cosine=1, Euclid=2, Dot=3, Manhattan=4 }`   | [lib/segment/src/types.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "token_count": 200,
      "char_count": 1000,
      "start_char": 16097,
      "end_char": 17097
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:19",
    "content": "ce          | `enum Distance { Cosine=1, Euclid=2, Dot=3, Manhattan=4 }`   | [lib/segment/src/types.rs291-310](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L291-L310)                           |\n| Collection Status | `enum CollectionStatus { Green=1, Yellow=2, Red=3, Grey=4 }` | [lib/collection/src/operations/types.rs67-107](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L67-L107) |\n| Write Ordering    | `enum WriteOrderingType { Weak=0, Medium=1, Strong=2 }`      | [lib/collection/src/operations/point\\_ops.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/point_ops.rs)       |\n| Quantization Type | `enum QuantizationType { Int8=1 }`                           | [lib/segment/src/types.rs688-691](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L688-L691)                           |\n\nConversion uses `TryFrom` with error handling for invalid enum values:",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "token_count": 321,
      "char_count": 983,
      "start_char": 16997,
      "end_char": 17982
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:20",
    "content": "|\n\nConversion uses `TryFrom` with error handling for invalid enum values:\n\nSources: [lib/collection/src/operations/conversions.rs81-114](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs#L81-L114) [lib/api/src/grpc/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs)\n\n### Update Result Types\n\nUpdate operations return status and optional metadata:\n\n```\n```\n\n**Update Result Conversion**\n\nThe `UpdateResult` type supports asynchronous operation tracking:\n\nSources: [lib/collection/src/operations/types.rs399-423](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L399-L423) [lib/api/src/grpc/qdrant.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/qdrant.rs)\n\n## Type Safety and Error Handling\n\nType conversions handle errors through the `Result` type with specific error variants:",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "token_count": 261,
      "char_count": 921,
      "start_char": 17882,
      "end_char": 18830
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:21",
    "content": "r Handling\n\nType conversions handle errors through the `Result` type with specific error variants:\n\n| Error Type         | Usage                  | Example                            |\n| ------------------ | ---------------------- | ---------------------------------- |\n| `tonic::Status`    | gRPC conversion errors | Invalid enum value, malformed UUID |\n| `OperationError`   | Segment-level errors   | Invalid vector dimension           |\n| `StorageError`     | Storage-level errors   | Collection not found               |\n| `ValidationErrors` | Validation failures    | Out of range value                 |\n\nError conversion chain:\n\n```\n```\n\n**Error Conversion Flow**\n\nSources: [lib/storage/src/content\\_manager/conversions.rs22-63](https://github.com/qdrant/qdrant/blob/48203e41/lib/storage/src/content_manager/conversions.rs#L22-L63) [lib/api/src/grpc/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "token_count": 230,
      "char_count": 1022,
      "start_char": 18730,
      "end_char": 19754
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:22",
    "content": "api/src/grpc/conversions.rs)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Data Types and Conversions](#data-types-and-conversions.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Type System Architecture](#type-system-architecture.md)\n- [Core Data Types](#core-data-types.md)\n- [Point Identifiers](#point-identifiers.md)\n- [Vector Types](#vector-types.md)\n- [Vector Configuration](#vector-configuration.md)\n- [Payload Types](#payload-types.md)\n- [Filter Conditions](#filter-conditions.md)\n- [Conversion Mechanisms](#conversion-mechanisms.md)\n- [REST to Internal Conversions](#rest-to-internal-conversions.md)\n- [gRPC to Internal Conversions](#grpc-to-internal-conversions.md)\n- [Bidirectional Conversions](#bidirectional-conversions.md)\n- [Configuration Diff Types](#configuration-diff-types.md)\n- [Type Validation](#type-validation.md)\n- [Special Type Patterns](#special-type-patterns.md)\n- [Datetime Handling](#datetime-handling.md)\n- [Shard Key Selectors](#shard-key-selectors.md)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "token_count": 258,
      "char_count": 1015,
      "start_char": 19654,
      "end_char": 20670
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md:chunk:23",
    "content": "s.md)\n- [Datetime Handling](#datetime-handling.md)\n- [Shard Key Selectors](#shard-key-selectors.md)\n- [Enumeration Mappings](#enumeration-mappings.md)\n- [Update Result Types](#update-result-types.md)\n- [Type Safety and Error Handling](#type-safety-and-error-handling.md)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_9.3-data-types-and-conversions.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "token_count": 73,
      "char_count": 270,
      "start_char": 20570,
      "end_char": 21594
    }
  }
]