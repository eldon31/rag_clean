[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:0",
    "content": "Query Request Flow | qdrant/qdrant | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant](https://github.com/qdrant/qdrant \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 4 October 2025 ([48203e](https://github.com/qdrant/qdrant/commits/48203e41))\n\n- [Introduction to Qdrant](qdrant/qdrant/1-introduction-to-qdrant.md)\n- [Key Concepts and Terminology](qdrant/qdrant/1.1-key-concepts-and-terminology.md)\n- [System Architecture](qdrant/qdrant/2-system-architecture.md)\n- [Application Initialization and Runtime](qdrant/qdrant/2.1-application-initialization-and-runtime.md)\n- [Collections and Table of Content](qdrant/qdrant/2.2-collections-and-table-of-content.md)\n- [Shards and Replica Sets](qdrant/qdrant/2.3-shards-and-replica-sets.md)\n- [Local Shard Architecture](qdrant/qdrant/2.4-local-shard-architecture.md)\n- [Segment Lifecycle and Construction](qdrant/qdrant/2.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 312,
      "char_count": 999,
      "start_char": 0,
      "end_char": 999
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:1",
    "content": "rant/qdrant/2.4-local-shard-architecture.md)\n- [Segment Lifecycle and Construction](qdrant/qdrant/2.5-segment-lifecycle-and-construction.md)\n- [Vector Storage and Indexing](qdrant/qdrant/3-vector-storage-and-indexing.md)\n- [Vector Storage Formats](qdrant/qdrant/3.1-vector-storage-formats.md)\n- [HNSW Index Implementation](qdrant/qdrant/3.2-hnsw-index-implementation.md)\n- [Vector Quantization](qdrant/qdrant/3.3-vector-quantization.md)\n- [Sparse Vector Indexing](qdrant/qdrant/3.4-sparse-vector-indexing.md)\n- [Payload Indexing and Filtering](qdrant/qdrant/4-payload-indexing-and-filtering.md)\n- [Field Index Types](qdrant/qdrant/4.1-field-index-types.md)\n- [Index Selection and Storage Backends](qdrant/qdrant/4.2-index-selection-and-storage-backends.md)\n- [Search and Query Processing](qdrant/qdrant/5-search-and-query-processing.md)\n- [Query Request Flow](qdrant/qdrant/5.1-query-request-flow.md)\n- [Filtering and Scoring](qdrant/qdrant/5.2-filtering-and-scoring.md)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 298,
      "char_count": 970,
      "start_char": 899,
      "end_char": 1870
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:2",
    "content": "nt/5.1-query-request-flow.md)\n- [Filtering and Scoring](qdrant/qdrant/5.2-filtering-and-scoring.md)\n- [Data Updates and Consistency](qdrant/qdrant/6-data-updates-and-consistency.md)\n- [Update Processing Pipeline](qdrant/qdrant/6.1-update-processing-pipeline.md)\n- [Write Consistency and Replication](qdrant/qdrant/6.2-write-consistency-and-replication.md)\n- [Distributed System Features](qdrant/qdrant/7-distributed-system-features.md)\n- [Raft Consensus Protocol](qdrant/qdrant/7.1-raft-consensus-protocol.md)\n- [Shard Transfers and Resharding](qdrant/qdrant/7.2-shard-transfers-and-resharding.md)\n- [Snapshots and Recovery](qdrant/qdrant/8-snapshots-and-recovery.md)\n- [API Reference](qdrant/qdrant/9-api-reference.md)\n- [REST API Endpoints](qdrant/qdrant/9.1-rest-api-endpoints.md)\n- [gRPC API Services](qdrant/qdrant/9.2-grpc-api-services.md)\n- [Data Types and Conversions](qdrant/qdrant/9.3-data-types-and-conversions.md)\n- [Configuration and Deployment](qdrant/qdrant/10-configuration-and-deployment.md)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 321,
      "char_count": 1008,
      "start_char": 1770,
      "end_char": 2779
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:3",
    "content": "-conversions.md)\n- [Configuration and Deployment](qdrant/qdrant/10-configuration-and-deployment.md)\n- [Configuration System](qdrant/qdrant/10.1-configuration-system.md)\n- [Docker Deployment](qdrant/qdrant/10.2-docker-deployment.md)\n- [Building and CI/CD](qdrant/qdrant/10.3-building-and-cicd.md)\n- [Development Guide](qdrant/qdrant/11-development-guide.md)\n\nMenu\n\n# Query Request Flow\n\nRelevant source files\n\n- [docs/grpc/docs.md](https://github.com/qdrant/qdrant/blob/48203e41/docs/grpc/docs.md)\n- [docs/redoc/master/openapi.json](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/master/openapi.json)\n- [lib/api/src/grpc/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs)\n- [lib/api/src/grpc/proto/collections.proto](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/collections.proto)\n- [lib/api/src/grpc/proto/points.proto](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto)\n- [lib/api/src/grpc/qdrant.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 324,
      "char_count": 1012,
      "start_char": 2679,
      "end_char": 3691
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:4",
    "content": "hub.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/proto/points.proto)\n- [lib/api/src/grpc/qdrant.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/qdrant.rs)\n- [lib/collection/src/collection\\_manager/collection\\_updater.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/collection_manager/collection_updater.rs)\n- [lib/collection/src/config.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/config.rs)\n- [lib/collection/src/operations/config\\_diff.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/config_diff.rs)\n- [lib/collection/src/operations/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs)\n- [lib/collection/src/operations/types.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs)\n- [lib/collection/src/optimizers\\_builder.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/optimizers_builder.rs)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 321,
      "char_count": 1012,
      "start_char": 3591,
      "end_char": 4604
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:5",
    "content": "uilder.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/optimizers_builder.rs)\n- [lib/collection/src/shards/local\\_shard/mod.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/mod.rs)\n- [lib/collection/src/shards/local\\_shard/scroll.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/scroll.rs)\n- [lib/collection/src/shards/local\\_shard/snapshot.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/snapshot.rs)\n- [lib/collection/src/shards/local\\_shard/snapshot\\_tests.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/snapshot_tests.rs)\n- [lib/collection/src/update\\_handler.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/update_handler.rs)\n- [lib/segment/src/types.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs)\n- [lib/storage/src/content\\_manager/collection\\_meta\\_ops.rs](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 325,
      "char_count": 1017,
      "start_char": 4504,
      "end_char": 5521
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:6",
    "content": "/segment/src/types.rs)\n- [lib/storage/src/content\\_manager/collection\\_meta\\_ops.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/storage/src/content_manager/collection_meta_ops.rs)\n- [lib/storage/src/content\\_manager/conversions.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/storage/src/content_manager/conversions.rs)\n\n## Purpose and Scope\n\nThis document describes how query and search requests are processed in Qdrant, tracing the execution path from initial API request through collection routing, shard selection, and segment-level search operations. It covers the complete flow of search queries, including request validation, shard selection, read consistency enforcement, and result merging.\n\nFor information about specific filtering and scoring mechanisms, see [Filtering and Scoring](qdrant/qdrant/5.2-filtering-and-scoring.md). For details on data updates and write operations, see [Update Processing Pipeline](qdrant/qdrant/6.1-update-processing-pipeline.md).\n\n## Query Request Flow Overview",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 230,
      "char_count": 1018,
      "start_char": 5421,
      "end_char": 6441
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:7",
    "content": "essing Pipeline](qdrant/qdrant/6.1-update-processing-pipeline.md).\n\n## Query Request Flow Overview\n\nQuery requests in Qdrant flow through multiple layers, with each layer performing specific responsibilities: request validation, shard routing, replica selection, segment search coordination, and result aggregation.\n\n```\n```\n\n**Sources:**\n\n- [lib/collection/src/shards/local\\_shard/search.rs1-400](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/search.rs#L1-L400)\n- Diagram 3 from high-level architecture\n\n## Request Types and Entry Points\n\nQdrant supports multiple query types that enter through REST and gRPC APIs. All requests are converted to internal representations for processing.\n\n### Core Request Types\n\n| Request Type       | Purpose                                         | Internal Type              |\n| ------------------ | ----------------------------------------------- | -------------------------- |",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 197,
      "char_count": 954,
      "start_char": 6341,
      "end_char": 7296
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:8",
    "content": "------------------ | ----------------------------------------------- | -------------------------- |\n| `SearchRequest`    | Vector similarity search                        | `CoreSearchRequest`        |\n| `QueryRequest`     | Universal query API (search, scroll, recommend) | `ShardQueryRequest`        |\n| `ScrollRequest`    | Paginated retrieval                             | `ScrollRequestInternal`    |\n| `RecommendRequest` | Recommendation by examples                      | `RecommendRequestInternal` |\n\n```\n```\n\n**Key Fields in CoreSearchRequest:**\n\n- `query: QueryEnum` - The query vector or strategy\n- `filter: Option<Filter>` - Payload filtering conditions\n- `params: Option<SearchParams>` - HNSW parameters, quantization settings\n- `limit: usize` - Maximum results to return\n- `offset: usize` - Pagination offset\n- `with_payload: WithPayloadInterface` - Payload fields to include\n- `with_vector: WithVector` - Whether to return vectors\n\n**Sources:**\n\n- [lib/collection/src/operations/types.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 213,
      "char_count": 1000,
      "start_char": 7196,
      "end_char": 8196
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:9",
    "content": "ctor: WithVector` - Whether to return vectors\n\n**Sources:**\n\n- [lib/collection/src/operations/types.rs554-575](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L554-L575)\n- [lib/api/src/grpc/qdrant.rs1-100](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/qdrant.rs#L1-L100)\n- [lib/collection/src/operations/conversions.rs1-100](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs#L1-L100)\n\n## Collection-Level Request Routing\n\nThe `Collection` layer receives requests and routes them to the appropriate shards based on shard keys (if using custom sharding) or distributes across all shards (if using auto sharding).\n\n```\n```\n\n**Sharding Method Determination:**\n\n- **Auto Sharding**: Request is sent to all `ShardReplicaSet` instances, and results are merged\n\n- **Custom Sharding**: `shard_key` field in request determines which shards to query\n\n  - Shard keys can be keywords or numbers",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 287,
      "char_count": 979,
      "start_char": 8096,
      "end_char": 9076
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:10",
    "content": "d_key` field in request determines which shards to query\n\n  - Shard keys can be keywords or numbers\n  - Multiple shard keys can be specified via `ShardKeySelector`\n\n**Sources:**\n\n- [lib/collection/src/config.rs76-84](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/config.rs#L76-L84)\n- [lib/api/src/grpc/conversions.rs92-105](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/src/grpc/conversions.rs#L92-L105)\n- [lib/collection/src/operations/types.rs554-595](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L554-L595)\n\n## ReplicaSet Selection and Read Consistency\n\nThe `ShardReplicaSet` selects which replica to query based on read consistency requirements and replica health status.\n\n### Replica Selection Algorithm\n\n```\n```\n\n**Read Consistency Levels:**\n\n| Level                | Behavior                                          | Use Case                                     |",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 256,
      "char_count": 942,
      "start_char": 8976,
      "end_char": 9919
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:11",
    "content": "Behavior                                          | Use Case                                     |\n| -------------------- | ------------------------------------------------- | -------------------------------------------- |\n| `None` / `Factor(1)` | Query single local replica (preferred)            | Low latency, eventual consistency acceptable |\n| `Majority`           | Query majority of replicas, return common results | Balance of consistency and performance       |\n| `Quorum`             | Query n/2 + 1 replicas                            | Stronger consistency guarantees              |\n| `All`                | Query all replicas, return results present in all | Strongest consistency, highest latency       |\n| `Factor(n)`          | Query n replicas                                  | Custom consistency level                     |\n\n**Replica State Filtering:**\n\nOnly replicas in `Active` state are queried.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 147,
      "char_count": 918,
      "start_char": 9819,
      "end_char": 10738
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:12",
    "content": "el                     |\n\n**Replica State Filtering:**\n\nOnly replicas in `Active` state are queried. Replicas in other states (`Dead`, `Partial`, `Initializing`, `Listener`) are excluded from search operations.\n\n**Sources:**\n\n- [lib/collection/src/operations/point\\_ops.rs1-100](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/point_ops.rs#L1-L100)\n- [lib/collection/src/shards/replica\\_set.rs1-100](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/replica_set.rs#L1-L100)\n- [lib/collection/src/operations/conversions.rs91-114](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/conversions.rs#L91-L114)\n\n## LocalShard Search Execution\n\nThe `LocalShard` coordinates search across all segments, acquiring locks to ensure read consistency with concurrent updates.\n\n### Search Coordination Flow\n\n```\n```\n\n**Key Components:**\n\n- **`update_operation_lock`**: A `tokio::sync::RwLock` that prevents updates during critical read operations",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 290,
      "char_count": 1010,
      "start_char": 10638,
      "end_char": 11650
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:13",
    "content": "e_operation_lock`**: A `tokio::sync::RwLock` that prevents updates during critical read operations\n\n  - Read lock held during search to ensure consistency\n  - Write lock held during updates\n  - Critical for scroll operations and shard transfers\n\n- **`SegmentHolder`**: Manages all segments in the shard\n\n  - Segments are searched in parallel\n  - Each segment returns partial results\n  - Results are merged based on scores\n\n**Batch Processing:**\n\nThe `core_search_batch()` method processes multiple search requests concurrently:\n\n- Requests in batch share the same read lock acquisition\n- Segment searches for different requests run in parallel\n- Results for each request are returned as separate vectors\n\n**Sources:**\n\n- [lib/collection/src/shards/local\\_shard/search.rs1-200](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/search.rs#L1-L200)\n- [lib/collection/src/shards/local\\_shard/mod.rs108-124](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "token_count": 233,
      "char_count": 953,
      "start_char": 11550,
      "end_char": 12503
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:14",
    "content": "al_shard/search.rs#L1-L200)\n- [lib/collection/src/shards/local\\_shard/mod.rs108-124](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/mod.rs#L108-L124)\n- [lib/collection/src/collection\\_manager/segments\\_searcher.rs1-100](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/collection_manager/segments_searcher.rs#L1-L100)\n\n## Segment-Level Search Operations\n\nEach segment performs the actual vector search, combining payload filtering with vector similarity computation.\n\n### Segment Search Process\n\n```\n```\n\n**Filter Application:**\n\nPayload filters are applied before vector search to narrow the search space:\n\n1. **Filter parsing**: `Filter` conditions converted to queries for payload indices\n2. **Index lookup**: `FieldIndex` instances (numeric, keyword, geo, etc.) return matching point IDs\n3. **Cardinality estimation**: Estimated number of matching points determines search strategy\n4.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "token_count": 247,
      "char_count": 943,
      "start_char": 12403,
      "end_char": 13346
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:15",
    "content": "IDs\n3. **Cardinality estimation**: Estimated number of matching points determines search strategy\n4. **Threshold check**: If estimated points < `full_scan_threshold`, use brute force; otherwise use HNSW\n\n**HNSW Search Strategy:**\n\nWhen using HNSW index:\n\n- **Entry point selection**: Find entry node in HNSW graph\n- **Greedy search**: Navigate down layers to level 0\n- **Beam search**: Explore level 0 with configurable `ef` parameter\n- **Filtered search**: Only visit points matching payload filter\n\n**Quantization-Aware Search:**\n\nIf quantization is enabled (scalar, product, or binary):\n\n1. Search using quantized vectors for speed\n2. Retrieve top candidates (with oversampling if configured)\n3. Rescore candidates using original vectors for accuracy\n4. Return refined results\n\n**Sources:**\n\n- [lib/segment/src/types.rs471-546](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L471-L546)\n- [lib/collection/src/operations/types.rs25-60](https://github.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "token_count": 251,
      "char_count": 977,
      "start_char": 13246,
      "end_char": 14223
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:16",
    "content": "/lib/segment/src/types.rs#L471-L546)\n- [lib/collection/src/operations/types.rs25-60](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L25-L60)\n- Diagram 3 from high-level architecture\n\n## Result Merging and Response Construction\n\nResults from multiple segments (and potentially multiple shards) are merged to produce the final response.\n\n### Multi-Level Result Merging\n\n```\n```\n\n**Merging Algorithm:**\n\n1. **Segment-level merge** (in `LocalShard`):\n\n   - Collect results from all segments\n   - Sort by score (considering distance metric)\n   - Take top `limit + offset` results\n   - Handle pagination by skipping `offset` items\n\n2. **Shard-level merge** (in `Collection`):\n\n   - For auto-sharding: merge results from all shards\n   - For custom sharding: only results from queried shards\n   - Re-sort combined results\n   - Apply final limit\n\n**Score Ordering:**\n\nThe ordering depends on the distance metric:\n\n- **Cosine, Dot**: Larger scores are better (`Order::LargeBetter`)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "token_count": 259,
      "char_count": 1010,
      "start_char": 14123,
      "end_char": 15134
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:17",
    "content": "depends on the distance metric:\n\n- **Cosine, Dot**: Larger scores are better (`Order::LargeBetter`)\n- **Euclid, Manhattan**: Smaller scores are better (`Order::SmallBetter`)\n\n**Response Construction:**\n\nFinal `ScoredPoint` objects contain:\n\n- `id`: Point ID (numeric or UUID)\n- `score`: Distance/similarity score\n- `payload`: Requested payload fields (if `with_payload` specified)\n- `vector`: Point vector(s) (if `with_vector` specified)\n- `shard_key`: Shard key for custom sharding\n- `order_value`: For order\\_by queries\n\n**Sources:**\n\n- [lib/segment/src/types.rs349-366](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L349-L366)\n- [lib/segment/src/types.rs327-341](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L327-L341)\n- [lib/collection/src/operations/types.rs131-143](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L131-L143)\n\n## Search Parameters and Optimization",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "token_count": 303,
      "char_count": 960,
      "start_char": 15034,
      "end_char": 15996
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:18",
    "content": "/48203e41/lib/collection/src/operations/types.rs#L131-L143)\n\n## Search Parameters and Optimization\n\nSearch behavior is controlled by `SearchParams` which configure HNSW search, quantization, and exactness requirements.\n\n### SearchParams Structure\n\n| **Field**      | **Type**                           | **Purpose**                                     |\n| -------------- | ---------------------------------- | ----------------------------------------------- |\n| `hnsw_ef`      | `Option<usize>`                    | HNSW beam size (higher = more accurate, slower) |\n| `exact`        | `bool`                             | Force exact search (bypass HNSW)                |\n| `quantization` | `Option<QuantizationSearchParams>` | Quantization settings                           |\n| `indexed_only` | `bool`                             | Only search indexed segments                    |\n\n**Quantization Search Parameters:**\n\n- `ignore`: Skip quantized vectors entirely\n- `rescore`: Force rescoring with original vectors",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "token_count": 203,
      "char_count": 1016,
      "start_char": 15896,
      "end_char": 16913
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:19",
    "content": ":**\n\n- `ignore`: Skip quantized vectors entirely\n- `rescore`: Force rescoring with original vectors\n- `oversampling`: Factor for retrieving extra candidates before rescoring\n  - Example: `oversampling = 2.4` with `limit = 100` retrieves 240 candidates, then rescores to get top 100\n\n**HNSW Parameters:**\n\nThe `hnsw_ef` parameter controls search accuracy vs. speed tradeoff:\n\n- Default: Uses collection's `ef_construct` value\n- Higher values: More neighbors explored, better recall, slower search\n- Lower values: Fewer neighbors explored, lower recall, faster search\n\n**Sources:**\n\n- [lib/segment/src/types.rs471-546](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/types.rs#L471-L546)\n- [lib/collection/src/operations/types.rs25-60](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L25-L60)\n\n## Query Timeout and Cancellation\n\nQueries can specify timeout values to prevent long-running searches from blocking resources.\n\n### Timeout Handling\n\n```\n```",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "token_count": 279,
      "char_count": 1002,
      "start_char": 16813,
      "end_char": 17817
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:20",
    "content": "ut values to prevent long-running searches from blocking resources.\n\n### Timeout Handling\n\n```\n```\n\n**Timeout Mechanisms:**\n\n1. **API-level timeout**: Specified in request, applied at collection level\n2. **Segment-level timeout**: Propagated to individual segment searches\n3. **Cancellation**: Operations check for timeout between segments and during HNSW traversal\n\n**Error Response:**\n\nWhen timeout occurs:\n\n- Error type: `CollectionError::timeout()`\n- HTTP status: 408 Request Timeout\n- gRPC status: `DEADLINE_EXCEEDED`\n\n**Sources:**\n\n- [lib/collection/src/operations/types.rs1-100](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/operations/types.rs#L1-L100)\n- [lib/collection/src/shards/local\\_shard/scroll.rs40-60](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/scroll.rs#L40-L60)\n\n## Read Lock Acquisition for Consistency",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "token_count": 243,
      "char_count": 884,
      "start_char": 17717,
      "end_char": 18603
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:21",
    "content": "lib/collection/src/shards/local_shard/scroll.rs#L40-L60)\n\n## Read Lock Acquisition for Consistency\n\nThe `update_operation_lock` ensures that queries have a consistent view of data during execution, preventing race conditions with concurrent updates.\n\n### Locking Strategy\n\n**Lock Type**: `Arc<tokio::sync::RwLock<()>>`\n\n**Read Lock Held By:**\n\n- Search operations\n- Scroll operations\n- Point retrieval operations\n- Snapshot creation (partial)\n\n**Write Lock Held By:**\n\n- Update operations (upsert, delete)\n- Segment optimization\n- Snapshot proxy wrapping/unwrapping\n\n**Lock Acquisition Timing:**\n\n```\n```\n\n**Consistency Guarantees:**\n\n- **Snapshot isolation**: Queries see a consistent snapshot of data\n- **No torn reads**: Point data (vector + payload) are read atomically\n- **Scroll consistency**: Paginated scrolls see same data version across pages\n\n**Sources:**\n\n- [lib/collection/src/shards/local\\_shard/mod.rs108-124](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/mod.",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "token_count": 252,
      "char_count": 1014,
      "start_char": 18503,
      "end_char": 19517
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:22",
    "content": "rs108-124](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/shards/local_shard/mod.rs#L108-L124)\n- [lib/collection/src/update\\_handler.rs135-143](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/update_handler.rs#L135-L143)\n- [lib/collection/src/collection\\_manager/collection\\_updater.rs40-60](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/src/collection_manager/collection_updater.rs#L40-L60)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Query Request Flow](#query-request-flow.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Query Request Flow Overview](#query-request-flow-overview.md)\n- [Request Types and Entry Points](#request-types-and-entry-points.md)\n- [Core Request Types](#core-request-types.md)\n- [Collection-Level Request Routing](#collection-level-request-routing.md)\n- [ReplicaSet Selection and Read Consistency](#replicaset-selection-and-read-consistency.md)\n- [Replica Selection Algorithm](#replica-selection-algorithm.md)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "token_count": 302,
      "char_count": 1023,
      "start_char": 19417,
      "end_char": 20441
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md:chunk:23",
    "content": "selection-and-read-consistency.md)\n- [Replica Selection Algorithm](#replica-selection-algorithm.md)\n- [LocalShard Search Execution](#localshard-search-execution.md)\n- [Search Coordination Flow](#search-coordination-flow.md)\n- [Segment-Level Search Operations](#segment-level-search-operations.md)\n- [Segment Search Process](#segment-search-process.md)\n- [Result Merging and Response Construction](#result-merging-and-response-construction.md)\n- [Multi-Level Result Merging](#multi-level-result-merging.md)\n- [Search Parameters and Optimization](#search-parameters-and-optimization.md)\n- [SearchParams Structure](#searchparams-structure.md)\n- [Query Timeout and Cancellation](#query-timeout-and-cancellation.md)\n- [Timeout Handling](#timeout-handling.md)\n- [Read Lock Acquisition for Consistency](#read-lock-acquisition-for-consistency.md)\n- [Locking Strategy](#locking-strategy.md)",
    "metadata": {
      "source_file": "qdrant_qdrant\\_qdrant_qdrant_5.1-query-request-flow.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_qdrant",
      "filename": "_qdrant_qdrant_5.1-query-request-flow.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "token_count": 205,
      "char_count": 881,
      "start_char": 20341,
      "end_char": 21365
    }
  }
]