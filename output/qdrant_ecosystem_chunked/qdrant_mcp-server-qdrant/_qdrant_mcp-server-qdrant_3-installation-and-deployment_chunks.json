[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:0",
    "content": "Installation & Deployment | qdrant/mcp-server-qdrant | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/mcp-server-qdrant](https://github.com/qdrant/mcp-server-qdrant \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 20 April 2025 ([a3ab0b](https://github.com/qdrant/mcp-server-qdrant/commits/a3ab0b96))\n\n- [Overview](qdrant/mcp-server-qdrant/1-overview.md)\n- [Architecture](qdrant/mcp-server-qdrant/2-architecture.md)\n- [Core Components](qdrant/mcp-server-qdrant/2.1-core-components.md)\n- [Embedding System](qdrant/mcp-server-qdrant/2.2-embedding-system.md)\n- [Configuration System](qdrant/mcp-server-qdrant/2.3-configuration-system.md)\n- [Installation & Deployment](qdrant/mcp-server-qdrant/3-installation-and-deployment.md)\n- [Configuration Options](qdrant/mcp-server-qdrant/3.1-configuration-options.md)\n- [Client Integration](qdrant/mcp-server-qdrant/3.2-client-integration.md)",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 313,
      "char_count": 1007,
      "start_char": 0,
      "end_char": 1008
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:1",
    "content": "onfiguration-options.md)\n- [Client Integration](qdrant/mcp-server-qdrant/3.2-client-integration.md)\n- [API Reference](qdrant/mcp-server-qdrant/4-api-reference.md)\n- [qdrant-store Tool](qdrant/mcp-server-qdrant/4.1-qdrant-store-tool.md)\n- [qdrant-find Tool](qdrant/mcp-server-qdrant/4.2-qdrant-find-tool.md)\n- [QdrantConnector Reference](qdrant/mcp-server-qdrant/5-qdrantconnector-reference.md)\n- [Embedding Providers](qdrant/mcp-server-qdrant/6-embedding-providers.md)\n- [Development Guide](qdrant/mcp-server-qdrant/7-development-guide.md)\n\nMenu\n\n# Installation & Deployment\n\nRelevant source files\n\n- [README.md](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md)\n- [pyproject.toml](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/pyproject.toml)\n- [src/mcp\\_server\\_qdrant/main.py](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/src/mcp_server_qdrant/main.py)\n- [uv.lock](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/uv.lock)",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 324,
      "char_count": 978,
      "start_char": 908,
      "end_char": 1888
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:2",
    "content": "ver_qdrant/main.py)\n- [uv.lock](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/uv.lock)\n\nThis page provides comprehensive instructions for installing and deploying the mcp-server-qdrant system. The document covers various installation methods, configuration options, and client integration approaches. For detailed configuration settings, see [Configuration Options](qdrant/mcp-server-qdrant/3.1-configuration-options.md).\n\n## Installation Methods\n\nThe mcp-server-qdrant can be installed and run using several methods. Choose the approach that best fits your environment and needs.\n\n### Using uvx (Recommended)\n\nThe simplest way to run mcp-server-qdrant is using `uvx`, which allows direct execution without a separate installation step:\n\n```\n```\n\nThis method requires the `uvx` tool from the `uv` Python package manager to be installed on your system.\n\n### Using Docker\n\nThe repository includes a Dockerfile for containerized deployment:\n\n```\n```",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 210,
      "char_count": 958,
      "start_char": 1788,
      "end_char": 2748
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:3",
    "content": "em.\n\n### Using Docker\n\nThe repository includes a Dockerfile for containerized deployment:\n\n```\n```\n\nDocker deployment is ideal for production environments or when you need isolation from the host system.\n\n### Installing via Smithery\n\nFor automatic installation with Claude Desktop integration, you can use Smithery:\n\n```\n```\n\nThis installs and configures the MCP server for immediate use with Claude Desktop.\n\n### Manual Installation\n\nYou can install the package directly using pip:\n\n```\n```\n\nThen run it using the installed entry point:\n\n```\n```\n\nSources: [README.md59-147](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L59-L147) [pyproject.toml1-32](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/pyproject.toml#L1-L32)\n\n## Transport Protocols\n\nThe server supports multiple transport protocols for communication with clients:\n\n```\n```\n\nTo specify a transport protocol, use the `--transport` flag:\n\n```\n```",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 233,
      "char_count": 940,
      "start_char": 2648,
      "end_char": 3590
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:4",
    "content": "tion with clients:\n\n```\n```\n\nTo specify a transport protocol, use the `--transport` flag:\n\n```\n```\n\n- `stdio` (default): Standard input/output transport, suitable for local MCP clients\n- `sse`: Server-Sent Events transport, ideal for remote clients (listening on port 8000)\n\nSources: [README.md72-86](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L72-L86) [src/mcp\\_server\\_qdrant/main.py1-25](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/src/mcp_server_qdrant/main.py#L1-L25)\n\n## Deployment Architecture\n\nThe following diagram illustrates the overall deployment architecture of mcp-server-qdrant:\n\n```\n```\n\nThe deployment consists of:\n\n1. The MCP server that implements the Model Context Protocol\n2. A connection to a Qdrant vector database (either local or hosted)\n3. An embedding provider for converting text to vectors\n4. Client applications that communicate with the server using the MCP protocol\n\nSources: [README.md14-38](https://github.",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 263,
      "char_count": 979,
      "start_char": 3490,
      "end_char": 4469
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:5",
    "content": "s that communicate with the server using the MCP protocol\n\nSources: [README.md14-38](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L14-L38)\n\n## Configuration Flow\n\nThe configuration system uses environment variables to set up the server components:\n\n```\n```\n\nThis shows how environment variables are mapped to settings classes that configure different components of the system.\n\nSources: [README.md39-58](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L39-L58)\n\n## Client Integration Examples\n\n### Claude Desktop Integration\n\nAdd the following to your `claude_desktop_config.json`:\n\n```\n```\n\nFor local Qdrant:\n\n```\n```\n\nSources: [README.md102-152](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L102-L152)\n\n### VS Code Integration\n\nVS Code offers both one-click installation and manual setup options.\n\nFor manual installation, add the following to your VS Code User Settings (JSON):\n\n```\n```\n\nAlternatively, create a `.vscode/mcp.",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 268,
      "char_count": 994,
      "start_char": 4369,
      "end_char": 5363
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:6",
    "content": "the following to your VS Code User Settings (JSON):\n\n```\n```\n\nAlternatively, create a `.vscode/mcp.json` file in your workspace with similar configuration.\n\nSources: [README.md257-386](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L257-L386)\n\n### Cursor/Windsurf Integration\n\nFor Cursor and Windsurf, configure the MCP server with SSE transport:\n\n```\n```\n\nThen in Cursor/Windsurf, configure the MCP server using the URL:\n\n```\nhttp://localhost:8000/sse\n```\n\nSources: [README.md158-212](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L158-L212)\n\n### Claude Code Integration\n\nAdd the MCP server to Claude Code:\n\n```\n```\n\nSources: [README.md213-247](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L213-L247)\n\n## Development Mode\n\nFor development and testing purposes, use the MCP dev command:\n\n```\n```\n\nThis starts the server and opens the MCP inspector in your browser for testing the API.\n\nSources: [README.md248-256](https://github.",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 301,
      "char_count": 995,
      "start_char": 5263,
      "end_char": 6259
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:7",
    "content": "the MCP inspector in your browser for testing the API.\n\nSources: [README.md248-256](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L248-L256)\n\n## Client Integration Matrix\n\nThe following table summarizes the integration options for different clients:\n\n| Client          | Transport | Integration Method  | Configuration Location                             |\n| --------------- | --------- | ------------------- | -------------------------------------------------- |\n| Claude Desktop  | stdio     | Smithery or Manual  | claude\\_desktop\\_config.json                       |\n| VS Code         | stdio     | One-click or Manual | User Settings or .vscode/mcp.json                  |\n| Cursor/Windsurf | sse       | Manual              | Cursor settings (URL: <http://localhost:8000/sse>) |\n| Claude Code     | stdio     | Command-line        | claude configuration                               |\n\nThis matrix helps you determine the appropriate deployment approach based on your client application.",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 213,
      "char_count": 1017,
      "start_char": 6159,
      "end_char": 7179
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:8",
    "content": "s matrix helps you determine the appropriate deployment approach based on your client application.\n\nSources: [README.md102-247](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L102-L247)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Installation & Deployment](#installation-deployment.md)\n- [Installation Methods](#installation-methods.md)\n- [Using uvx (Recommended)](#using-uvx-recommended.md)\n- [Using Docker](#using-docker.md)\n- [Installing via Smithery](#installing-via-smithery.md)\n- [Manual Installation](#manual-installation.md)\n- [Transport Protocols](#transport-protocols.md)\n- [Deployment Architecture](#deployment-architecture.md)\n- [Configuration Flow](#configuration-flow.md)\n- [Client Integration Examples](#client-integration-examples.md)\n- [Claude Desktop Integration](#claude-desktop-integration.md)\n- [VS Code Integration](#vs-code-integration.md)\n- [Cursor/Windsurf Integration](#cursorwindsurf-integration.md)",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 249,
      "char_count": 977,
      "start_char": 7079,
      "end_char": 8057
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md:chunk:9",
    "content": "tegration](#vs-code-integration.md)\n- [Cursor/Windsurf Integration](#cursorwindsurf-integration.md)\n- [Claude Code Integration](#claude-code-integration.md)\n- [Development Mode](#development-mode.md)\n- [Client Integration Matrix](#client-integration-matrix.md)",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant_3-installation-and-deployment.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 67,
      "char_count": 260,
      "start_char": 7957,
      "end_char": 8981
    }
  }
]