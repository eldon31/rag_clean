[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md:chunk:0",
    "content": "qdrant/mcp-server-qdrant | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/mcp-server-qdrant](https://github.com/qdrant/mcp-server-qdrant \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 20 April 2025 ([a3ab0b](https://github.com/qdrant/mcp-server-qdrant/commits/a3ab0b96))\n\n- [Overview](qdrant/mcp-server-qdrant/1-overview.md)\n- [Architecture](qdrant/mcp-server-qdrant/2-architecture.md)\n- [Core Components](qdrant/mcp-server-qdrant/2.1-core-components.md)\n- [Embedding System](qdrant/mcp-server-qdrant/2.2-embedding-system.md)\n- [Configuration System](qdrant/mcp-server-qdrant/2.3-configuration-system.md)\n- [Installation & Deployment](qdrant/mcp-server-qdrant/3-installation-and-deployment.md)\n- [Configuration Options](qdrant/mcp-server-qdrant/3.1-configuration-options.md)\n- [Client Integration](qdrant/mcp-server-qdrant/3.2-client-integration.md)",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 309,
      "char_count": 979,
      "start_char": 0,
      "end_char": 980
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md:chunk:1",
    "content": "onfiguration-options.md)\n- [Client Integration](qdrant/mcp-server-qdrant/3.2-client-integration.md)\n- [API Reference](qdrant/mcp-server-qdrant/4-api-reference.md)\n- [qdrant-store Tool](qdrant/mcp-server-qdrant/4.1-qdrant-store-tool.md)\n- [qdrant-find Tool](qdrant/mcp-server-qdrant/4.2-qdrant-find-tool.md)\n- [QdrantConnector Reference](qdrant/mcp-server-qdrant/5-qdrantconnector-reference.md)\n- [Embedding Providers](qdrant/mcp-server-qdrant/6-embedding-providers.md)\n- [Development Guide](qdrant/mcp-server-qdrant/7-development-guide.md)\n\nMenu\n\n# Overview\n\nRelevant source files\n\n- [README.md](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md)\n- [pyproject.toml](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/pyproject.toml)\n- [src/mcp\\_server\\_qdrant/server.py](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/src/mcp_server_qdrant/server.py)",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 292,
      "char_count": 886,
      "start_char": 880,
      "end_char": 1768
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md:chunk:2",
    "content": "ver.py](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/src/mcp_server_qdrant/server.py)\n\nThis document provides an introduction to the mcp-server-qdrant repository, which implements a semantic memory layer on top of the Qdrant vector database using the Model Context Protocol (MCP). For detailed information about the architecture, see [Architecture](qdrant/mcp-server-qdrant/2-architecture.md), and for installation instructions, see [Installation & Deployment](qdrant/mcp-server-qdrant/3-installation-and-deployment.md).\n\n## What is mcp-server-qdrant?\n\nmcp-server-qdrant is an official Model Context Protocol server that enables LLM applications to store and retrieve information in a Qdrant vector database using semantic search. It converts text into vector embeddings and performs similarity searches to find the most relevant information based on meaning rather than just keywords.",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 196,
      "char_count": 898,
      "start_char": 1668,
      "end_char": 2568
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md:chunk:3",
    "content": "ilarity searches to find the most relevant information based on meaning rather than just keywords.\n\nThe server acts as a bridge between LLM applications and the Qdrant vector database, allowing AI systems to maintain persistent memory that can be queried semantically.\n\nSources: [README.md1-17](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L1-L17)\n\n## System Components\n\nThe mcp-server-qdrant system consists of three main components:\n\n1. **QdrantMCPServer**: The core server that implements the Model Context Protocol interface, exposing tools for storing and finding information.\n2. **QdrantConnector**: Handles the connection to the Qdrant database and manages vector operations.\n3. **EmbeddingProvider**: Generates vector embeddings from text, with FastEmbedProvider as the current implementation.\n\nThese components are configured through three settings classes: ToolSettings, QdrantSettings, and EmbeddingProviderSettings.\n\nSources: [src/mcp\\_server\\_qdrant/server.py1-12](https://github.",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 226,
      "char_count": 1016,
      "start_char": 2468,
      "end_char": 3484
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md:chunk:4",
    "content": "gs, and EmbeddingProviderSettings.\n\nSources: [src/mcp\\_server\\_qdrant/server.py1-12](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/src/mcp_server_qdrant/server.py#L1-L12) [README.md19-38](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L19-L38)\n\n## Core Architecture\n\nBelow is a diagram showing the high-level architecture of the mcp-server-qdrant system:\n\n```\n```\n\nSources: [README.md14-38](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L14-L38) [src/mcp\\_server\\_qdrant/server.py1-12](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/src/mcp_server_qdrant/server.py#L1-L12)\n\n## Key Information Flows\n\nThe system handles two primary operations: storing information and finding information. Here's how these processes work:\n\n```\n```\n\nSources: [README.md19-38](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L19-L38)\n\n## Exposed Tools\n\nThe mcp-server-qdrant exposes two primary tools to clients:",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 321,
      "char_count": 978,
      "start_char": 3384,
      "end_char": 4364
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md:chunk:5",
    "content": "/README.md#L19-L38)\n\n## Exposed Tools\n\nThe mcp-server-qdrant exposes two primary tools to clients:\n\n| Tool Name      | Purpose                                         | Parameters                                                                                                                           | Return Value                              |\n| -------------- | ----------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------- |\n| `qdrant-store` | Store information in the Qdrant database        | `information` (string): Content to store `metadata` (JSON): Optional metadata `collection_name` (string): Optional target collection | Confirmation message                      |",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 110,
      "char_count": 843,
      "start_char": 4264,
      "end_char": 5108
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md:chunk:6",
    "content": "collection_name` (string): Optional target collection | Confirmation message                      |\n| `qdrant-find`  | Retrieve relevant information from the database | `query` (string): Search query `collection_name` (string): Optional target collection                                                | Relevant information as separate messages |\n\nSources: [README.md21-37](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L21-L37)\n\n## Configuration System\n\nThe system is configured through environment variables that map to three settings classes:\n\n```\n```\n\nSources: [src/mcp\\_server\\_qdrant/server.py1-12](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/src/mcp_server_qdrant/server.py#L1-L12) [README.md39-57](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L39-L57)\n\n## Deployment Methods\n\nmcp-server-qdrant can be deployed using several methods:\n\n1. **Using uvx**: Direct execution with the `uvx` command\n2. **Using Docker**: Running as a containerized application\n3.",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 267,
      "char_count": 1022,
      "start_char": 5008,
      "end_char": 6030
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md:chunk:7",
    "content": "rect execution with the `uvx` command\n2. **Using Docker**: Running as a containerized application\n3. **Smithery Installation**: Automated installation for Claude Desktop\n4. **Manual Configuration**: Custom setup for various clients\n\nThe server supports two transport protocols:\n\n- `stdio` (default): For local MCP clients\n- `sse`: Server-Sent Events for remote clients\n\nSources: [README.md59-150](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L59-L150)\n\n## Integration Options\n\nThe server can be integrated with various MCP-compatible clients:\n\n1. **Claude Desktop**: For AI-assisted chat and work\n2. **Cursor/Windsurf**: For code search and development\n3. **VS Code**: For coding with AI assistance\n4. **Claude Code**: For code generation and search capabilities\n\nEach integration can be customized by modifying the tool descriptions to suit specific use cases.\n\nSources: [README.md154-350](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L154-L350)\n\n## Technical Requirements",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 261,
      "char_count": 1019,
      "start_char": 5930,
      "end_char": 6951
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md:chunk:8",
    "content": "/github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/README.md#L154-L350)\n\n## Technical Requirements\n\n- Python 3.10 or later\n\n- Dependencies:\n\n  - mcp\\[cli] ≥ 1.3.0\n  - fastembed ≥ 0.6.0\n  - qdrant-client ≥ 1.12.0\n  - pydantic ≥ 2.10.6\n\nSources: [pyproject.toml1-38](https://github.com/qdrant/mcp-server-qdrant/blob/a3ab0b96/pyproject.toml#L1-L38)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Overview](#overview.md)\n- [What is mcp-server-qdrant?](#what-is-mcp-server-qdrant.md)\n- [System Components](#system-components.md)\n- [Core Architecture](#core-architecture.md)\n- [Key Information Flows](#key-information-flows.md)\n- [Exposed Tools](#exposed-tools.md)\n- [Configuration System](#configuration-system.md)\n- [Deployment Methods](#deployment-methods.md)\n- [Integration Options](#integration-options.md)\n- [Technical Requirements](#technical-requirements.md)",
    "metadata": {
      "source_file": "qdrant_mcp-server-qdrant\\_qdrant_mcp-server-qdrant.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_mcp-server-qdrant",
      "filename": "_qdrant_mcp-server-qdrant.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 284,
      "char_count": 887,
      "start_char": 6851,
      "end_char": 7875
    }
  }
]