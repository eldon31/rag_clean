[
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:0",
    "content": "TextEmbedding | qdrant/fastembed | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/fastembed](https://github.com/qdrant/fastembed \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 20 April 2025 ([b78564](https://github.com/qdrant/fastembed/commits/b785640b))\n\n- [Overview](qdrant/fastembed/1-overview.md)\n- [Installation and Setup](qdrant/fastembed/2-installation-and-setup.md)\n- [Core Embedding Classes](qdrant/fastembed/3-core-embedding-classes.md)\n- [TextEmbedding](qdrant/fastembed/3.1-textembedding.md)\n- [SparseTextEmbedding](qdrant/fastembed/3.2-sparsetextembedding.md)\n- [LateInteractionTextEmbedding](qdrant/fastembed/3.3-lateinteractiontextembedding.md)\n- [ImageEmbedding](qdrant/fastembed/3.4-imageembedding.md)\n- [LateInteractionMultimodalEmbedding](qdrant/fastembed/3.5-lateinteractionmultimodalembedding.md)\n- [TextCrossEncoder](qdrant/fastembed/3.6-textcrossencoder.md)",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 312,
      "char_count": 1010,
      "start_char": 0,
      "end_char": 1011
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:1",
    "content": "teinteractionmultimodalembedding.md)\n- [TextCrossEncoder](qdrant/fastembed/3.6-textcrossencoder.md)\n- [Architecture](qdrant/fastembed/4-architecture.md)\n- [Model Management](qdrant/fastembed/4.1-model-management.md)\n- [ONNX Runtime Integration](qdrant/fastembed/4.2-onnx-runtime-integration.md)\n- [Parallel Processing](qdrant/fastembed/4.3-parallel-processing.md)\n- [Implementation Details](qdrant/fastembed/5-implementation-details.md)\n- [Dense Text Embeddings](qdrant/fastembed/5.1-dense-text-embeddings.md)\n- [Sparse Text Embeddings](qdrant/fastembed/5.2-sparse-text-embeddings.md)\n- [Late Interaction Models](qdrant/fastembed/5.3-late-interaction-models.md)\n- [Multimodal Models](qdrant/fastembed/5.4-multimodal-models.md)\n- [Supported Models](qdrant/fastembed/6-supported-models.md)\n- [Usage Examples](qdrant/fastembed/7-usage-examples.md)\n- [Basic Text Embedding](qdrant/fastembed/7.1-basic-text-embedding.md)\n- [Sparse and Hybrid Search](qdrant/fastembed/7.2-sparse-and-hybrid-search.md)",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 298,
      "char_count": 994,
      "start_char": 911,
      "end_char": 1906
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:2",
    "content": "c-text-embedding.md)\n- [Sparse and Hybrid Search](qdrant/fastembed/7.2-sparse-and-hybrid-search.md)\n- [ColBERT and Late Interaction](qdrant/fastembed/7.3-colbert-and-late-interaction.md)\n- [Image Embedding](qdrant/fastembed/7.4-image-embedding.md)\n- [Performance Optimization](qdrant/fastembed/8-performance-optimization.md)\n- [Integration with Qdrant](qdrant/fastembed/9-integration-with-qdrant.md)\n- [Development Guide](qdrant/fastembed/10-development-guide.md)\n\nMenu\n\n# TextEmbedding\n\nRelevant source files\n\n- [docs/Getting Started.ipynb](<https://github.com/qdrant/fastembed/blob/b785640b/docs/Getting Started.ipynb>)\n- [docs/index.md](https://github.com/qdrant/fastembed/blob/b785640b/docs/index.md)\n- [fastembed/embedding.py](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/embedding.py)\n- [fastembed/text/text\\_embedding.py](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py)\n- [tests/test\\_text\\_onnx\\_embeddings.py](https://github.",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "token_count": 296,
      "char_count": 985,
      "start_char": 1806,
      "end_char": 2791
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:3",
    "content": "b785640b/fastembed/text/text_embedding.py)\n- [tests/test\\_text\\_onnx\\_embeddings.py](https://github.com/qdrant/fastembed/blob/b785640b/tests/test_text_onnx_embeddings.py)\n\nThe `TextEmbedding` class is the primary entry point for generating dense vector representations (embeddings) from text in the FastEmbed library. It provides a unified interface to multiple underlying embedding implementations while maintaining high performance through ONNX Runtime integration.\n\nFor sparse text embeddings, see [SparseTextEmbedding](qdrant/fastembed/3.2-sparsetextembedding.md), and for late interaction models, see [LateInteractionTextEmbedding](qdrant/fastembed/3.3-lateinteractiontextembedding.md).\n\n## Class Architecture\n\n```\n```\n\nSources: [fastembed/text/text\\_embedding.py16-25](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py#L16-L25) [fastembed/text/text\\_embedding.py79-130](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py#L79-L130)",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "token_count": 266,
      "char_count": 1001,
      "start_char": 2691,
      "end_char": 3694
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:4",
    "content": "-130](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py#L79-L130)\n\n## Initialization and Configuration\n\nThe `TextEmbedding` class can be initialized with various parameters to control model selection and runtime behavior:\n\n```\n```\n\nKey initialization parameters:\n\n| Parameter    | Type                               | Default                  | Description                                |\n| ------------ | ---------------------------------- | ------------------------ | ------------------------------------------ |\n| `model_name` | str                                | \"BAAI/bge-small-en-v1.5\" | Model identifier                           |\n| `cache_dir`  | Optional\\[str]                     | None                     | Directory to store downloaded models       |\n| `threads`    | Optional\\[int]                     | None                     | Number of threads for ONNX Runtime         |",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "token_count": 171,
      "char_count": 926,
      "start_char": 3594,
      "end_char": 4521
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:5",
    "content": "[int]                     | None                     | Number of threads for ONNX Runtime         |\n| `providers`  | Optional\\[Sequence\\[OnnxProvider]] | None                     | ONNX Runtime providers                     |\n| `cuda`       | bool                               | False                    | Whether to use CUDA for acceleration       |\n| `device_ids` | Optional\\[list\\[int]]              | None                     | CUDA device IDs to use                     |\n| `lazy_load`  | bool                               | False                    | Whether to load the model only when needed |\n\nSources: [fastembed/text/text\\_embedding.py79-130](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py#L79-L130) [docs/Getting Started.ipynb68-86](<https://github.com/qdrant/fastembed/blob/b785640b/docs/Getting Started.ipynb#L68-L86>)\n\n## Embedding Generation Process\n\n```\n```\n\nSources: [fastembed/text/text\\_embedding.py111-126](https://github.",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "token_count": 237,
      "char_count": 981,
      "start_char": 4421,
      "end_char": 5402
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:6",
    "content": "ing Generation Process\n\n```\n```\n\nSources: [fastembed/text/text\\_embedding.py111-126](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py#L111-L126) [fastembed/text/text\\_embedding.py131-153](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py#L131-L153)\n\n## Core Methods\n\n### Embedding Documents\n\nThe primary method for generating embeddings is `embed()`, which accepts documents and returns an iterator of embedding vectors:\n\n```\n```\n\nThe method signature is:\n\n```\n```\n\nParameters:\n\n- `documents`: A single text document or an iterable of documents\n- `batch_size`: Number of documents to process at once (default: 256)\n- `parallel`: Number of parallel processes to use (if > 0)\n\nSources: [fastembed/text/text\\_embedding.py131-153](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py#L131-L153) [docs/Getting Started.ipynb116-121](<https://github.com/qdrant/fastembed/blob/b785640b/docs/Getting Started.ipynb#L116-L121>)",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "token_count": 311,
      "char_count": 1013,
      "start_char": 5302,
      "end_char": 6317
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:7",
    "content": "116-121](<https://github.com/qdrant/fastembed/blob/b785640b/docs/Getting Started.ipynb#L116-L121>)\n\n### Query and Passage Embedding\n\nFor retrieval tasks, `TextEmbedding` provides specialized methods for queries and passages:\n\n```\n```\n\nThese methods are particularly useful for models that have different embedding strategies for queries versus passages.\n\nSources: [fastembed/text/text\\_embedding.py155-180](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py#L155-L180) [docs/index.md27-36](https://github.com/qdrant/fastembed/blob/b785640b/docs/index.md#L27-L36)\n\n### Model Management\n\nThe `TextEmbedding` class provides methods to list supported models and add custom models:\n\n```\n```\n\nSources: [fastembed/text/text\\_embedding.py26-77](https://github.com/qdrant/fastembed/blob/b785640b/fastembed/text/text_embedding.py#L26-L77)\n\n## Advanced Usage Patterns\n\n### Batch Processing\n\nFor large datasets, you can process documents in batches to conserve memory:\n\n```\n```\n\n### Parallel Processing",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "token_count": 286,
      "char_count": 1022,
      "start_char": 6217,
      "end_char": 7241
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:8",
    "content": "tasets, you can process documents in batches to conserve memory:\n\n```\n```\n\n### Parallel Processing\n\nTo speed up embedding generation, you can use parallel processing:\n\n```\n```\n\nSources: [tests/test\\_text\\_onnx\\_embeddings.py119-139](https://github.com/qdrant/fastembed/blob/b785640b/tests/test_text_onnx_embeddings.py#L119-L139)\n\n### Lazy Loading\n\nTo conserve memory when working with multiple models, you can use lazy loading, which only loads the model when it's first used:\n\n```\n```\n\nSources: [tests/test\\_text\\_onnx\\_embeddings.py142-158](https://github.com/qdrant/fastembed/blob/b785640b/tests/test_text_onnx_embeddings.py#L142-L158)\n\n## Supported Models\n\n`TextEmbedding` supports a wide range of models, including:\n\n| Model Category        | Examples                                                                                            |\n| --------------------- | --------------------------------------------------------------------------------------------------- |\n| BGE Embeddings        | BAAI/bge-small-en-v1.",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "token_count": 235,
      "char_count": 1025,
      "start_char": 7141,
      "end_char": 8166
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:9",
    "content": "-------------------------------------------------- |\n| BGE Embeddings        | BAAI/bge-small-en-v1.5, BAAI/bge-base-en, BAAI/bge-large-en-v1.5                                    |\n| Sentence Transformers | sentence-transformers/all-MiniLM-L6-v2, sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2 |\n| Jina AI Models        | jinaai/jina-embeddings-v2-base-en, jinaai/jina-embeddings-v3                                        |\n| Nomic AI Models       | nomic-ai/nomic-embed-text-v1, nomic-ai/nomic-embed-text-v1.5                                        |\n| Others                | thenlper/gte-large, mixedbread-ai/mxbai-embed-large-v1, snowflake/snowflake-arctic-embed models     |\n\nEach model produces embeddings of different dimensions and with different characteristics. The default model (BAAI/bge-small-en-v1.5) produces 384-dimensional vectors.\n\nSources: [tests/test\\_text\\_onnx\\_embeddings.py10-70](https://github.com/qdrant/fastembed/blob/b785640b/tests/test_text_onnx_embeddings.",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "token_count": 260,
      "char_count": 999,
      "start_char": 8066,
      "end_char": 9065
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:10",
    "content": "beddings.py10-70](https://github.com/qdrant/fastembed/blob/b785640b/tests/test_text_onnx_embeddings.py#L10-L70) [docs/Getting Started.ipynb150-162](<https://github.com/qdrant/fastembed/blob/b785640b/docs/Getting Started.ipynb#L150-L162>)\n\n## Integration with Vector Databases\n\n`TextEmbedding` is designed to work seamlessly with vector databases like Qdrant. For detailed examples, see [Integration with Qdrant](qdrant/fastembed/9-integration-with-qdrant.md).\n\n```\n```\n\nSources: [docs/index.md39-75](https://github.com/qdrant/fastembed/blob/b785640b/docs/index.md#L39-L75)\n\n## Performance Considerations\n\nThe `TextEmbedding` class is designed for high performance through:\n\n1. **ONNX Runtime**: All models are converted to ONNX format for efficient inference\n2. **Batch Processing**: Documents are processed in batches for memory efficiency\n3. **Parallel Processing**: Multiple CPU cores can be used for faster processing\n4. **Lazy Loading**: Models are loaded only when needed\n5.",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "token_count": 276,
      "char_count": 980,
      "start_char": 8965,
      "end_char": 9945
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:11",
    "content": "U cores can be used for faster processing\n4. **Lazy Loading**: Models are loaded only when needed\n5. **Model Quantization**: Some models have quantized versions for faster inference\n\nFor more details on optimizing performance, see [Performance Optimization](qdrant/fastembed/8-performance-optimization.md).\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [TextEmbedding](#textembedding.md)\n- [Class Architecture](#class-architecture.md)\n- [Initialization and Configuration](#initialization-and-configuration.md)\n- [Embedding Generation Process](#embedding-generation-process.md)\n- [Core Methods](#core-methods.md)\n- [Embedding Documents](#embedding-documents.md)\n- [Query and Passage Embedding](#query-and-passage-embedding.md)\n- [Model Management](#model-management.md)\n- [Advanced Usage Patterns](#advanced-usage-patterns.md)\n- [Batch Processing](#batch-processing.md)\n- [Parallel Processing](#parallel-processing.md)\n- [Lazy Loading](#lazy-loading.md)\n- [Supported Models](#supported-models.md)",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "token_count": 234,
      "char_count": 1022,
      "start_char": 9845,
      "end_char": 10868
    }
  },
  {
    "chunk_id": "qdrant_ecosystem:qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md:chunk:12",
    "content": "rallel-processing.md)\n- [Lazy Loading](#lazy-loading.md)\n- [Supported Models](#supported-models.md)\n- [Integration with Vector Databases](#integration-with-vector-databases.md)\n- [Performance Considerations](#performance-considerations.md)",
    "metadata": {
      "source_file": "qdrant_fastembed\\_qdrant_fastembed_3.1-textembedding.md",
      "source_collection": "qdrant_ecosystem",
      "subdirectory": "qdrant_fastembed",
      "filename": "_qdrant_fastembed_3.1-textembedding.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "token_count": 56,
      "char_count": 239,
      "start_char": 10768,
      "end_char": 11792
    }
  }
]