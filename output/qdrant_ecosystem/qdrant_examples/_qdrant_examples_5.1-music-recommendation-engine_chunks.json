{
  "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_5.1-music-recommendation-engine.md",
  "source_repo": "qdrant_examples",
  "total_chunks": 6,
  "chunks": [
    {
      "content": "Music Recommendation Engine | qdrant/examples | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/examples](https://github.com/qdrant/examples \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 26 June 2025 ([b3c4b2](https://github.com/qdrant/examples/commits/b3c4b28f))\n\n- [Overview](qdrant/examples/1-overview.md)\n- [Getting Started with Qdrant](qdrant/examples/2-getting-started-with-qdrant.md)\n- [Text Data Applications](qdrant/examples/3-text-data-applications.md)\n- [Code Search with Dual Embeddings](qdrant/examples/3.1-code-search-with-dual-embeddings.md)\n- [Extractive Question Answering](qdrant/examples/3.2-extractive-question-answering.md)\n- [Movie Recommendations with Sparse Vectors](qdrant/examples/3.3-movie-recommendations-with-sparse-vectors.md)\n- [Image Data Applications](qdrant/examples/4-image-data-applications.md)\n- [E-commerce Reverse Image Search](qdrant/examples/4.1-e-commerce-reverse-image-search.md)\n- [Medical Image Search with Vision Transformers](qdrant/examples/4.2-medical-image-search-with-vision-transformers.md)\n- [Audio Data Applications](qdrant/examples/5-audio-data-applications.md)\n- [Music Recommendation Engine](qdrant/examples/5.1-music-recommendation-engine.md)\n- [Advanced RAG Systems](qdrant/examples/6-advanced-rag-systems.md)\n- [Multivector RAG with DSPy](qdrant/examples/6.1-multivector-rag-with-dspy.md)\n- [Graph-Enhanced RAG with Neo4j](qdrant/examples/6.2-graph-enhanced-rag-with-neo4j.md)\n- [PDF Retrieval at Scale](qdrant/examples/6.3-pdf-retrieval-at-scale.md)\n- [Agentic Systems with CrewAI](qdrant/examples/7-agentic-systems-with-crewai.md)\n- [Meeting Analysis with Agentic RAG](qdrant/examples/7.1-meeting-analysis-with-agentic-rag.md)\n- [Additional Use Cases](qdrant/examples/8-additional-use-cases.md)\n- [Self-Query Systems with LangChain](qdrant/examples/8.1-self-query-systems-with-langchain.md)\n- [Development Environment Setup](qdrant/examples/8.",
      "index": 0,
      "token_count": 586,
      "metadata": {
        "title": "_qdrant_examples_5.1-music-recommendation-engine",
        "source": "qdrant_examples\\_qdrant_examples_5.1-music-recommendation-engine.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_examples",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "file_name": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T01:58:34.160594",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2035
    },
    {
      "content": "mples/8.1-self-query-systems-with-langchain.md)\n- [Development Environment Setup](qdrant/examples/8.2-development-environment-setup.md)\n\nMenu\n\n# Music Recommendation Engine\n\nRelevant source files\n\n- [qdrant\\_101\\_audio\\_data/03\\_qdrant\\_101\\_audio.ipynb](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/03_qdrant_101_audio.ipynb)\n- [qdrant\\_101\\_audio\\_data/README.md](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md)\n- [qdrant\\_101\\_text\\_data/README.md](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_text_data/README.md)\n- [qdrant\\_101\\_text\\_data/qdrant\\_and\\_text\\_data\\_files/qdrant\\_and\\_text\\_data\\_25\\_0.png](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_text_data/qdrant_and_text_data_files/qdrant_and_text_data_25_0.png)\n- [qdrant\\_101\\_text\\_data/qdrant\\_and\\_text\\_data\\_files/qdrant\\_and\\_text\\_data\\_28\\_0.png](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_text_data/qdrant_and_text_data_files/qdrant_and_text_data_28_0.png)\n\nThis system demonstrates how to build a music recommendation engine using audio embeddings and Qdrant vector database. The implementation covers the complete pipeline from audio data preprocessing through embedding generation to building a web-based recommendation interface using the Ludwig Music Dataset.\n\nFor information about other recommendation systems in this repository, see [Movie Recommendations with Sparse Vectors](qdrant/examples/3.3-movie-recommendations-with-sparse-vectors.md).\n\n## System Architecture\n\nThe music recommendation system follows a multi-stage pipeline that transforms raw audio files into searchable vector representations:\n\n```\n```\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md1-1300](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L1-L1300)\n\n## Data Pipeline\n\n### Dataset Structure\n\nThe system uses the Ludwig Music Dataset containing over 10,000 songs across multiple genres:",
      "index": 1,
      "token_count": 588,
      "metadata": {
        "title": "_qdrant_examples_5.1-music-recommendation-engine",
        "source": "qdrant_examples\\_qdrant_examples_5.1-music-recommendation-engine.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_examples",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "file_name": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T01:58:34.160594",
        "total_chunks": 6
      },
      "start_char": 1935,
      "end_char": 3921
    },
    {
      "content": "ure\n\nThe system uses the Ludwig Music Dataset containing over 10,000 songs across multiple genres:\n\n| Component     | Description                               | Location              |\n| ------------- | ----------------------------------------- | --------------------- |\n| `mp3/`        | Audio files organized by genre            | Genre subdirectories  |\n| `labels.json` | Track metadata (artist, genre, subgenres) | Root directory        |\n| `spectogram/` | Visual frequency representations          | Optional for analysis |\n| `mfccs/`      | Mel-frequency cepstral coefficients       | Alternative features  |\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md21-37](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L21-L37)\n\n### Data Preprocessing\n\nThe preprocessing pipeline transforms raw audio data into structured formats:\n\n```\n```\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md133-617](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L133-L617)\n\n## Embedding Generation\n\n### Multiple Model Approaches\n\nThe system supports three different audio embedding approaches, each with distinct characteristics:\n\n| Model    | Library           | Dimensions | Use Case             | Performance       |\n| -------- | ----------------- | ---------- | -------------------- | ----------------- |\n| PANNs    | `panns_inference` | 2048       | Music classification | Fast inference    |\n| OpenL3   | `openl3`          | 512        | General audio        | High quality      |\n| Wav2Vec2 | `transformers`    | 768        | Speech-focused       | Research baseline |\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md631-640](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L631-L640)\n\n### PANNs Implementation\n\nThe primary embedding approach uses PANNs (Pre-trained Audio Neural Networks):\n\n```\n```\n\nThe `get_panns_embs` function processes audio in batches:\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md715-810](https://github.",
      "index": 2,
      "token_count": 534,
      "metadata": {
        "title": "_qdrant_examples_5.1-music-recommendation-engine",
        "source": "qdrant_examples\\_qdrant_examples_5.1-music-recommendation-engine.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_examples",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "file_name": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T01:58:34.160594",
        "total_chunks": 6
      },
      "start_char": 3821,
      "end_char": 5845
    },
    {
      "content": "rocesses audio in batches:\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md715-810](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L715-L810)\n\n## Vector Database Configuration\n\n### Qdrant Collection Setup\n\nThe system creates a dedicated collection with specific parameters:\n\n```\n```\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md115-125](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L115-L125) [qdrant\\_101\\_audio\\_data/README.md910-925](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L910-L925)\n\n### Payload Structure\n\nEach vector point contains rich metadata for filtering and display:\n\n```\n```\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md594-617](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L594-L617)\n\n## Query Operations\n\n### Search Functionality\n\nThe system provides semantic similarity search using vector queries:\n\n```\n```\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md964-1100](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L964-L1100)\n\n### Recommendation System\n\nThe recommendation API uses positive and negative examples:\n\n```\n```\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md1085-1220](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L1085-L1220)\n\n## Performance Characteristics\n\n### Model Comparison\n\nBased on the implementation, the different embedding approaches offer distinct trade-offs:\n\n| Aspect           | PANNs     | OpenL3          | Wav2Vec2        |\n| ---------------- | --------- | --------------- | --------------- |\n| Inference Speed  | Fast      | Slowest         | Medium          |\n| Music Quality    | Excellent | Excellent       | Poor            |\n| Model Size       | Large     | Medium          | Large           |\n| GPU Support      | Yes       | Yes             | Yes             |\n| Batch Processing | Efficient | Manual batching | Manual batching |\n\n### Collection Statistics",
      "index": 3,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_examples_5.1-music-recommendation-engine",
        "source": "qdrant_examples\\_qdrant_examples_5.1-music-recommendation-engine.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_examples",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "file_name": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T01:58:34.160594",
        "total_chunks": 6
      },
      "start_char": 5745,
      "end_char": 7787
    },
    {
      "content": "|\n| Batch Processing | Efficient | Manual batching | Manual batching |\n\n### Collection Statistics\n\nThe tutorial demonstrates performance with a Latin music subset:\n\n- **Dataset Size**: 979 songs (subset of full dataset)\n- **Vector Dimensions**: 2048 (PANNs embeddings)\n- **Distance Metric**: Cosine similarity\n- **Search Speed**: Real-time for interactive use\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md707-896](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L707-L896)\n\n## Integration Examples\n\n### Basic Search Example\n\n```\n```\n\n### Filtered Recommendation\n\n```\n```\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md1052-1220](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L1052-L1220)\n\n## Usage Patterns\n\nThe system supports multiple interaction patterns:\n\n1. **Content-Based Similarity**: Find songs similar to a given track using `client.search()`\n2. **Collaborative Filtering**: Use recommendation API with positive/negative feedback\n3. **Filtered Discovery**: Combine vector search with metadata filters for genre-specific recommendations\n4. **Interactive Exploration**: Web interface for real-time music discovery\n\nThis implementation provides a foundation for building production music recommendation systems with Qdrant's vector database capabilities.\n\n**Sources:** [qdrant\\_101\\_audio\\_data/README.md898-1220](https://github.com/qdrant/examples/blob/b3c4b28f/qdrant_101_audio_data/README.md#L898-L1220)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Music Recommendation Engine](#music-recommendation-engine.md)\n- [System Architecture](#system-architecture.md)\n- [Data Pipeline](#data-pipeline.md)\n- [Dataset Structure](#dataset-structure.md)\n- [Data Preprocessing](#data-preprocessing.md)\n- [Embedding Generation](#embedding-generation.md)\n- [Multiple Model Approaches](#multiple-model-approaches.md)\n- [PANNs Implementation](#panns-implementation.md)\n- [Vector Database Configuration](#vector-database-configuration.md)",
      "index": 4,
      "token_count": 531,
      "metadata": {
        "title": "_qdrant_examples_5.1-music-recommendation-engine",
        "source": "qdrant_examples\\_qdrant_examples_5.1-music-recommendation-engine.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_examples",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "file_name": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T01:58:34.160594",
        "total_chunks": 6
      },
      "start_char": 7687,
      "end_char": 9722
    },
    {
      "content": "ion](#panns-implementation.md)\n- [Vector Database Configuration](#vector-database-configuration.md)\n- [Qdrant Collection Setup](#qdrant-collection-setup.md)\n- [Payload Structure](#payload-structure.md)\n- [Query Operations](#query-operations.md)\n- [Search Functionality](#search-functionality.md)\n- [Recommendation System](#recommendation-system.md)\n- [Performance Characteristics](#performance-characteristics.md)\n- [Model Comparison](#model-comparison.md)\n- [Collection Statistics](#collection-statistics.md)\n- [Integration Examples](#integration-examples.md)\n- [Basic Search Example](#basic-search-example.md)\n- [Filtered Recommendation](#filtered-recommendation.md)\n- [Usage Patterns](#usage-patterns.md)",
      "index": 5,
      "token_count": 164,
      "metadata": {
        "title": "_qdrant_examples_5.1-music-recommendation-engine",
        "source": "qdrant_examples\\_qdrant_examples_5.1-music-recommendation-engine.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_examples",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "file_name": "_qdrant_examples_5.1-music-recommendation-engine.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T01:58:34.160594",
        "total_chunks": 6
      },
      "start_char": 9622,
      "end_char": 11670
    }
  ]
}