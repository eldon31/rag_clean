{
  "collection": "qdrant_ecosystem",
  "subdirectory": "qdrant_qdrant-client",
  "total_chunks": 166,
  "chunks": [
    {
      "content": "qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Overview\n\nRelevant source files\n\n- [.github/workflows/integration-tests.yml](https://github.",
      "index": 0,
      "token_count": 621,
      "metadata": {
        "title": "_qdrant_qdrant-client",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client.md",
        "file_name": "_qdrant_qdrant-client.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:04.991361",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2048
    },
    {
      "content": "Menu\n\n# Overview\n\nRelevant source files\n\n- [.github/workflows/integration-tests.yml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml)\n- [README.md](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md)\n- [poetry.lock](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/poetry.lock)\n- [pyproject.toml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml)\n- [qdrant\\_client/\\_\\_init\\_\\_.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/__init__.py)\n- [tests/benches/test\\_grpc\\_upload.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/benches/test_grpc_upload.py)\n- [tests/benches/test\\_rest\\_upload.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/benches/test_rest_upload.py)\n- [tests/integration-tests.sh](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh)\n\nThis document provides a comprehensive overview of the qdrant-client Python library, a client SDK for interacting with the Qdrant vector database. The qdrant-client provides both local in-process capabilities and remote network-based communication with Qdrant servers, supporting multiple protocols and embedding integrations.\n\nFor detailed information about specific subsystems, see [Client Architecture](qdrant/qdrant-client/2-client-architecture.md), [Core Operations](qdrant/qdrant-client/3-core-operations.md), [Advanced Features](qdrant/qdrant-client/4-advanced-features.md), and [Implementation Details](qdrant/qdrant-client/5-implementation-details.md).\n\n## Purpose and Scope\n\nThe qdrant-client is a Python library that serves as the primary interface for interacting with Qdrant, a vector similarity search engine. The library provides:\n\n- **Unified API**: Single interface for both local and remote Qdrant instances\n- **Protocol Support**: HTTP/REST and gRPC communication protocols\n- **Embedding Integration**: Built-in FastEmbed support for automatic text/image embedding",
      "index": 1,
      "token_count": 515,
      "metadata": {
        "title": "_qdrant_qdrant-client",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client.md",
        "file_name": "_qdrant_qdrant-client.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:04.991361",
        "total_chunks": 6
      },
      "start_char": 1948,
      "end_char": 3951
    },
    {
      "content": "rotocols\n- **Embedding Integration**: Built-in FastEmbed support for automatic text/image embedding\n- **Async Support**: Full async/await compatibility alongside synchronous operations\n- **Local Development**: In-memory and file-based storage for development and testing\n\n**Sources:** [pyproject.toml1-79](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L1-L79) [README.md1-301](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L1-L301)\n\n## Core Architecture\n\nThe qdrant-client implements a layered architecture with unified client interfaces that abstract over different backend implementations and communication protocols.\n\n### Primary Client Interface\n\n```\n```\n\n**Sources:** [qdrant\\_client/\\_\\_init\\_\\_.py1-3](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/__init__.py#L1-L3) [README.md54-62](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L54-L62) [README.md133-139](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L133-L139)\n\n### Protocol and Communication Layer\n\n```\n```\n\n**Sources:** [tests/integration-tests.sh17-19](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L17-L19) [README.md237-245](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L237-L245) [pyproject.toml18](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L18-L18) [pyproject.toml26-27](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L26-L27)\n\n## Installation and Dependencies\n\nThe library is distributed as a Python package with configurable optional dependencies:\n\n| Component     | Installation                               | Purpose                              |\n| ------------- | ------------------------------------------ | ------------------------------------ |\n| Core          | `pip install qdrant-client`                | Basic HTTP/gRPC client functionality |\n| FastEmbed     | `pip install qdrant-client[fastembed]`     | CPU-based embedding generation       |",
      "index": 2,
      "token_count": 559,
      "metadata": {
        "title": "_qdrant_qdrant-client",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client.md",
        "file_name": "_qdrant_qdrant-client.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:04.991361",
        "total_chunks": 6
      },
      "start_char": 3851,
      "end_char": 5880
    },
    {
      "content": "FastEmbed     | `pip install qdrant-client[fastembed]`     | CPU-based embedding generation       |\n| FastEmbed GPU | `pip install qdrant-client[fastembed-gpu]` | GPU-accelerated embeddings           |\n\n### Key Dependencies\n\n- **Core Runtime**: `httpx`, `grpcio`, `protobuf`, `pydantic`, `numpy`\n- **Local Storage**: `portalocker` for file-based persistence\n- **Optional Embeddings**: `fastembed` or `fastembed-gpu` for model inference\n- **Development**: `pytest`, `poetry`, `ruff`, `mypy` for testing and code quality\n\n**Sources:** [pyproject.toml16-36](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L16-L36) [pyproject.toml60-62](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L60-L62) [README.md31-35](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L31-L35) [README.md72-74](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L72-L74)\n\n## Usage Patterns\n\n### Local Mode Operations\n\n```\n```\n\n**Sources:** [README.md56-62](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L56-L62) [README.md64-68](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L64-L68)\n\n### Remote Mode Operations\n\n```\n```\n\n**Sources:** [README.md133-139](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L133-L139) [README.md150-163](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L150-L163) [README.md241-245](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L241-L245)\n\n## Testing and Quality Assurance\n\nThe library implements comprehensive testing across multiple dimensions:\n\n### Test Matrix\n\n| Test Type           | Coverage                 | Purpose                              |\n| ------------------- | ------------------------ | ------------------------------------ |\n| Integration Tests   | Full API surface         | End-to-end functionality with Docker |\n| Congruence Tests    | Local vs Remote          | Behavioral consistency validation    |",
      "index": 3,
      "token_count": 605,
      "metadata": {
        "title": "_qdrant_qdrant-client",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client.md",
        "file_name": "_qdrant_qdrant-client.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:04.991361",
        "total_chunks": 6
      },
      "start_char": 5780,
      "end_char": 7761
    },
    {
      "content": "Docker |\n| Congruence Tests    | Local vs Remote          | Behavioral consistency validation    |\n| Unit Tests          | Individual components    | Component-level correctness          |\n| Async Tests         | Async client methods     | Async/await compatibility            |\n| Compatibility Tests | Multiple Python versions | Cross-version support                |\n\n### CI/CD Pipeline\n\nThe continuous integration system validates across:\n\n- **Python Versions**: 3.9, 3.10, 3.11, 3.12, 3.13\n- **Qdrant Versions**: Latest and backward compatibility (v1.13.6)\n- **Optional Dependencies**: With and without FastEmbed\n- **Protocol Testing**: Both HTTP and gRPC implementations\n\n**Sources:** [.github/workflows/integration-tests.yml14-24](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L14-L24) [tests/integration-tests.sh14-45](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L14-L45) [pyproject.toml71-75](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L71-L75)\n\n## FastEmbed Integration\n\nThe library provides optional integration with FastEmbed for automatic embedding generation:\n\n```\n```\n\n**Sources:** [README.md76-79](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L76-L79) [README.md86-112](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L86-L112) [README.md114-128](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L114-L128)\n\nThis overview establishes the foundation for understanding the qdrant-client's architecture and capabilities. Detailed implementation specifics are covered in subsequent sections of this documentation.\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Overview](#overview.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Core Architecture](#core-architecture.md)\n- [Primary Client Interface](#primary-client-interface.md)\n- [Protocol and Communication Layer](#protocol-and-communication-layer.md)",
      "index": 4,
      "token_count": 536,
      "metadata": {
        "title": "_qdrant_qdrant-client",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client.md",
        "file_name": "_qdrant_qdrant-client.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:04.991361",
        "total_chunks": 6
      },
      "start_char": 7661,
      "end_char": 9670
    },
    {
      "content": "ary-client-interface.md)\n- [Protocol and Communication Layer](#protocol-and-communication-layer.md)\n- [Installation and Dependencies](#installation-and-dependencies.md)\n- [Key Dependencies](#key-dependencies.md)\n- [Usage Patterns](#usage-patterns.md)\n- [Local Mode Operations](#local-mode-operations.md)\n- [Remote Mode Operations](#remote-mode-operations.md)\n- [Testing and Quality Assurance](#testing-and-quality-assurance.md)\n- [Test Matrix](#test-matrix.md)\n- [CI/CD Pipeline](#cicd-pipeline.md)\n- [FastEmbed Integration](#fastembed-integration.md)",
      "index": 5,
      "token_count": 135,
      "metadata": {
        "title": "_qdrant_qdrant-client",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client.md",
        "file_name": "_qdrant_qdrant-client.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:04.991361",
        "total_chunks": 6
      },
      "start_char": 9570,
      "end_char": 11618
    },
    {
      "content": "qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Overview\n\nRelevant source files\n\n- [.github/workflows/integration-tests.yml](https://github.",
      "index": 0,
      "token_count": 621,
      "metadata": {
        "title": "_qdrant_qdrant-client_1-overview",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_1-overview.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_1-overview.md",
        "file_name": "_qdrant_qdrant-client_1-overview.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.000151",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2048
    },
    {
      "content": "Menu\n\n# Overview\n\nRelevant source files\n\n- [.github/workflows/integration-tests.yml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml)\n- [README.md](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md)\n- [poetry.lock](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/poetry.lock)\n- [pyproject.toml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml)\n- [qdrant\\_client/\\_\\_init\\_\\_.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/__init__.py)\n- [tests/benches/test\\_grpc\\_upload.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/benches/test_grpc_upload.py)\n- [tests/benches/test\\_rest\\_upload.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/benches/test_rest_upload.py)\n- [tests/integration-tests.sh](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh)\n\nThis document provides a comprehensive overview of the qdrant-client Python library, a client SDK for interacting with the Qdrant vector database. The qdrant-client provides both local in-process capabilities and remote network-based communication with Qdrant servers, supporting multiple protocols and embedding integrations.\n\nFor detailed information about specific subsystems, see [Client Architecture](qdrant/qdrant-client/2-client-architecture.md), [Core Operations](qdrant/qdrant-client/3-core-operations.md), [Advanced Features](qdrant/qdrant-client/4-advanced-features.md), and [Implementation Details](qdrant/qdrant-client/5-implementation-details.md).\n\n## Purpose and Scope\n\nThe qdrant-client is a Python library that serves as the primary interface for interacting with Qdrant, a vector similarity search engine. The library provides:\n\n- **Unified API**: Single interface for both local and remote Qdrant instances\n- **Protocol Support**: HTTP/REST and gRPC communication protocols\n- **Embedding Integration**: Built-in FastEmbed support for automatic text/image embedding",
      "index": 1,
      "token_count": 515,
      "metadata": {
        "title": "_qdrant_qdrant-client_1-overview",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_1-overview.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_1-overview.md",
        "file_name": "_qdrant_qdrant-client_1-overview.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.000151",
        "total_chunks": 6
      },
      "start_char": 1948,
      "end_char": 3951
    },
    {
      "content": "rotocols\n- **Embedding Integration**: Built-in FastEmbed support for automatic text/image embedding\n- **Async Support**: Full async/await compatibility alongside synchronous operations\n- **Local Development**: In-memory and file-based storage for development and testing\n\n**Sources:** [pyproject.toml1-79](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L1-L79) [README.md1-301](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L1-L301)\n\n## Core Architecture\n\nThe qdrant-client implements a layered architecture with unified client interfaces that abstract over different backend implementations and communication protocols.\n\n### Primary Client Interface\n\n```\n```\n\n**Sources:** [qdrant\\_client/\\_\\_init\\_\\_.py1-3](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/__init__.py#L1-L3) [README.md54-62](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L54-L62) [README.md133-139](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L133-L139)\n\n### Protocol and Communication Layer\n\n```\n```\n\n**Sources:** [tests/integration-tests.sh17-19](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L17-L19) [README.md237-245](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L237-L245) [pyproject.toml18](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L18-L18) [pyproject.toml26-27](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L26-L27)\n\n## Installation and Dependencies\n\nThe library is distributed as a Python package with configurable optional dependencies:\n\n| Component     | Installation                               | Purpose                              |\n| ------------- | ------------------------------------------ | ------------------------------------ |\n| Core          | `pip install qdrant-client`                | Basic HTTP/gRPC client functionality |\n| FastEmbed     | `pip install qdrant-client[fastembed]`     | CPU-based embedding generation       |",
      "index": 2,
      "token_count": 559,
      "metadata": {
        "title": "_qdrant_qdrant-client_1-overview",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_1-overview.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_1-overview.md",
        "file_name": "_qdrant_qdrant-client_1-overview.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.000151",
        "total_chunks": 6
      },
      "start_char": 3851,
      "end_char": 5880
    },
    {
      "content": "FastEmbed     | `pip install qdrant-client[fastembed]`     | CPU-based embedding generation       |\n| FastEmbed GPU | `pip install qdrant-client[fastembed-gpu]` | GPU-accelerated embeddings           |\n\n### Key Dependencies\n\n- **Core Runtime**: `httpx`, `grpcio`, `protobuf`, `pydantic`, `numpy`\n- **Local Storage**: `portalocker` for file-based persistence\n- **Optional Embeddings**: `fastembed` or `fastembed-gpu` for model inference\n- **Development**: `pytest`, `poetry`, `ruff`, `mypy` for testing and code quality\n\n**Sources:** [pyproject.toml16-36](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L16-L36) [pyproject.toml60-62](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L60-L62) [README.md31-35](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L31-L35) [README.md72-74](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L72-L74)\n\n## Usage Patterns\n\n### Local Mode Operations\n\n```\n```\n\n**Sources:** [README.md56-62](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L56-L62) [README.md64-68](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L64-L68)\n\n### Remote Mode Operations\n\n```\n```\n\n**Sources:** [README.md133-139](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L133-L139) [README.md150-163](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L150-L163) [README.md241-245](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L241-L245)\n\n## Testing and Quality Assurance\n\nThe library implements comprehensive testing across multiple dimensions:\n\n### Test Matrix\n\n| Test Type           | Coverage                 | Purpose                              |\n| ------------------- | ------------------------ | ------------------------------------ |\n| Integration Tests   | Full API surface         | End-to-end functionality with Docker |\n| Congruence Tests    | Local vs Remote          | Behavioral consistency validation    |",
      "index": 3,
      "token_count": 605,
      "metadata": {
        "title": "_qdrant_qdrant-client_1-overview",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_1-overview.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_1-overview.md",
        "file_name": "_qdrant_qdrant-client_1-overview.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.000151",
        "total_chunks": 6
      },
      "start_char": 5780,
      "end_char": 7761
    },
    {
      "content": "Docker |\n| Congruence Tests    | Local vs Remote          | Behavioral consistency validation    |\n| Unit Tests          | Individual components    | Component-level correctness          |\n| Async Tests         | Async client methods     | Async/await compatibility            |\n| Compatibility Tests | Multiple Python versions | Cross-version support                |\n\n### CI/CD Pipeline\n\nThe continuous integration system validates across:\n\n- **Python Versions**: 3.9, 3.10, 3.11, 3.12, 3.13\n- **Qdrant Versions**: Latest and backward compatibility (v1.13.6)\n- **Optional Dependencies**: With and without FastEmbed\n- **Protocol Testing**: Both HTTP and gRPC implementations\n\n**Sources:** [.github/workflows/integration-tests.yml14-24](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L14-L24) [tests/integration-tests.sh14-45](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L14-L45) [pyproject.toml71-75](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L71-L75)\n\n## FastEmbed Integration\n\nThe library provides optional integration with FastEmbed for automatic embedding generation:\n\n```\n```\n\n**Sources:** [README.md76-79](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L76-L79) [README.md86-112](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L86-L112) [README.md114-128](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L114-L128)\n\nThis overview establishes the foundation for understanding the qdrant-client's architecture and capabilities. Detailed implementation specifics are covered in subsequent sections of this documentation.\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Overview](#overview.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Core Architecture](#core-architecture.md)\n- [Primary Client Interface](#primary-client-interface.md)\n- [Protocol and Communication Layer](#protocol-and-communication-layer.md)",
      "index": 4,
      "token_count": 536,
      "metadata": {
        "title": "_qdrant_qdrant-client_1-overview",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_1-overview.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_1-overview.md",
        "file_name": "_qdrant_qdrant-client_1-overview.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.000151",
        "total_chunks": 6
      },
      "start_char": 7661,
      "end_char": 9670
    },
    {
      "content": "ary-client-interface.md)\n- [Protocol and Communication Layer](#protocol-and-communication-layer.md)\n- [Installation and Dependencies](#installation-and-dependencies.md)\n- [Key Dependencies](#key-dependencies.md)\n- [Usage Patterns](#usage-patterns.md)\n- [Local Mode Operations](#local-mode-operations.md)\n- [Remote Mode Operations](#remote-mode-operations.md)\n- [Testing and Quality Assurance](#testing-and-quality-assurance.md)\n- [Test Matrix](#test-matrix.md)\n- [CI/CD Pipeline](#cicd-pipeline.md)\n- [FastEmbed Integration](#fastembed-integration.md)",
      "index": 5,
      "token_count": 135,
      "metadata": {
        "title": "_qdrant_qdrant-client_1-overview",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_1-overview.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_1-overview.md",
        "file_name": "_qdrant_qdrant-client_1-overview.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.000151",
        "total_chunks": 6
      },
      "start_char": 9570,
      "end_char": 11618
    },
    {
      "content": "Client Architecture | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Client Architecture\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_2-client-architecture",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2-client-architecture.md",
        "file_name": "_qdrant_qdrant-client_2-client-architecture.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.008320",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2022
    },
    {
      "content": "ant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Client Architecture\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py)\n- [qdrant\\_client/qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py)\n\nThis document explains the overall architecture of the qdrant-client Python library, covering the unified client interface and dual backend implementation strategy. The architecture provides a consistent API surface while supporting both local in-process vector storage and remote network-based communication with Qdrant services.\n\nFor information about specific search operations and query processing, see [Search Operations](qdrant/qdrant-client/3.1-search-operations.md). For details about FastEmbed integration and embedding workflows, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md).\n\n## Unified Client Interface\n\nThe client architecture centers around two main entry points that provide identical APIs for synchronous and asynchronous operations:\n\n```\n```\n\nThe `QdrantClient` class serves as the primary synchronous interface, while `AsyncQdrantClient` provides the asynchronous equivalent. Both classes inherit from `QdrantFastembedMixin` to enable automatic embedding generation capabilities.\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py27-78](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L27-L78) [qdrant\\_client/async\\_qdrant\\_client.py26-77](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L26-L77)\n\n## Backend Selection Logic\n\nThe client architecture implements a parameter-based backend selection system that determines whether to use local or remote implementations:\n\n```\n```\n\nThe selection logic follows these rules:\n\n| Parameter                                 | Backend | Description                   |",
      "index": 1,
      "token_count": 464,
      "metadata": {
        "title": "_qdrant_qdrant-client_2-client-architecture",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2-client-architecture.md",
        "file_name": "_qdrant_qdrant-client_2-client-architecture.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.008320",
        "total_chunks": 6
      },
      "start_char": 1922,
      "end_char": 3920
    },
    {
      "content": "ese rules:\n\n| Parameter                                 | Backend | Description                   |\n| ----------------------------------------- | ------- | ----------------------------- |\n| `location=\":memory:\"`                     | Local   | In-memory vector database     |\n| `path=\"/some/path\"`                       | Local   | Persistent file-based storage |\n| `url`, `host`, or `location` (non-memory) | Remote  | Network-based communication   |\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py121-153](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L121-L153) [qdrant\\_client/async\\_qdrant\\_client.py111-140](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L111-L140)\n\n## Local Backend Implementation\n\nThe local backend provides in-process vector storage and search capabilities through the `QdrantLocal` class:\n\n```\n```\n\nThe local implementation enables:\n\n- **In-memory mode**: Volatile storage for development and testing\n- **Persistent mode**: File-based storage for production deployments\n- **Full vector operations**: Search, CRUD operations, and filtering without network overhead\n- **Thread safety controls**: Configurable via `force_disable_check_same_thread`\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py126-135](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L126-L135) [qdrant\\_client/local/qdrant\\_local.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py)\n\n## Remote Backend Implementation\n\nThe remote backend handles network communication with external Qdrant services through the `QdrantRemote` class:\n\n```\n```\n\nThe remote implementation provides:\n\n- **Dual protocol support**: HTTP/REST (port 6333) and gRPC (port 6334)\n- **Protocol preference**: Configurable via `prefer_grpc` parameter\n- **Authentication**: API key support and token provider callbacks\n- **Connection management**: Timeout configuration and connection pooling",
      "index": 2,
      "token_count": 502,
      "metadata": {
        "title": "_qdrant_qdrant-client_2-client-architecture",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2-client-architecture.md",
        "file_name": "_qdrant_qdrant-client_2-client-architecture.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.008320",
        "total_chunks": 6
      },
      "start_char": 3820,
      "end_char": 5834
    },
    {
      "content": "token provider callbacks\n- **Connection management**: Timeout configuration and connection pooling\n- **Cloud integration**: Direct support for Qdrant Cloud services\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py139-153](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L139-L153) [qdrant\\_client/qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py)\n\n## Protocol Abstraction Layer\n\nThe client architecture implements a protocol abstraction that allows transparent switching between HTTP/REST and gRPC communication:\n\n```\n```\n\nKey features of the protocol abstraction:\n\n- **Automatic conversion**: Seamless translation between gRPC and REST data structures\n- **Unified types**: Common type system in `conversions.common_types`\n- **Protocol transparency**: Client methods accept both gRPC and REST structures\n- **Performance optimization**: Protocol selection based on operation type and preferences\n\nThe client exposes low-level protocol access through properties:\n\n- `grpc_points` and `grpc_collections`: Direct gRPC stub access\n- `http`/`rest`: Direct REST API client access\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py174-225](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L174-L225) [qdrant\\_client/conversions/common\\_types.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/common_types.py)\n\n## Embedding Integration Architecture\n\nThe client architecture integrates embedding capabilities through the `QdrantFastembedMixin` class:\n\n```\n```\n\nThe embedding integration enables:\n\n- **Automatic detection**: Type inspection for inference objects\n- **Batch processing**: Configurable batch sizes for embedding generation\n- **Dual inference modes**: Local FastEmbed models or cloud-based inference\n- **Seamless integration**: Transparent embedding in query and upsert operations\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py112-116](https://github.",
      "index": 3,
      "token_count": 482,
      "metadata": {
        "title": "_qdrant_qdrant-client_2-client-architecture",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2-client-architecture.md",
        "file_name": "_qdrant_qdrant-client_2-client-architecture.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.008320",
        "total_chunks": 6
      },
      "start_char": 5734,
      "end_char": 7747
    },
    {
      "content": "query and upsert operations\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py112-116](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L112-L116) [qdrant\\_client/qdrant\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py) [qdrant\\_client/embed/type\\_inspector.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py)\n\n## Configuration and Initialization\n\nThe client architecture provides comprehensive configuration through initialization parameters:\n\n| Parameter Category          | Parameters                                      | Purpose                        |\n| --------------------------- | ----------------------------------------------- | ------------------------------ |\n| **Backend Selection**       | `location`, `url`, `host`, `path`               | Choose local vs remote backend |\n| **Network Configuration**   | `port`, `grpc_port`, `https`, `timeout`         | Network connection settings    |\n| **Authentication**          | `api_key`, `auth_token_provider`                | Security credentials           |\n| **Protocol Settings**       | `prefer_grpc`, `prefix`                         | Protocol preferences           |\n| **Embedding Configuration** | `cloud_inference`, `local_inference_batch_size` | Embedding behavior             |\n| **Local Settings**          | `force_disable_check_same_thread`               | Local backend options          |\n\nThe initialization process validates parameter combinations and configures the appropriate backend with proper error handling for invalid configurations.\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py80-161](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L80-L161) [qdrant\\_client/async\\_qdrant\\_client.py79-146](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L79-L146)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page",
      "index": 4,
      "token_count": 482,
      "metadata": {
        "title": "_qdrant_qdrant-client_2-client-architecture",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2-client-architecture.md",
        "file_name": "_qdrant_qdrant-client_2-client-architecture.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.008320",
        "total_chunks": 6
      },
      "start_char": 7647,
      "end_char": 9670
    },
    {
      "content": "c_qdrant_client.py#L79-L146)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Client Architecture](#client-architecture.md)\n- [Unified Client Interface](#unified-client-interface.md)\n- [Backend Selection Logic](#backend-selection-logic.md)\n- [Local Backend Implementation](#local-backend-implementation.md)\n- [Remote Backend Implementation](#remote-backend-implementation.md)\n- [Protocol Abstraction Layer](#protocol-abstraction-layer.md)\n- [Embedding Integration Architecture](#embedding-integration-architecture.md)\n- [Configuration and Initialization](#configuration-and-initialization.md)",
      "index": 5,
      "token_count": 136,
      "metadata": {
        "title": "_qdrant_qdrant-client_2-client-architecture",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2-client-architecture.md",
        "file_name": "_qdrant_qdrant-client_2-client-architecture.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.008320",
        "total_chunks": 6
      },
      "start_char": 9570,
      "end_char": 11618
    },
    {
      "content": "Client Interface | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Client Interface\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.1-client-interface",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.1-client-interface.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.1-client-interface.md",
        "file_name": "_qdrant_qdrant-client_2.1-client-interface.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.014992",
        "total_chunks": 9
      },
      "start_char": 0,
      "end_char": 2016
    },
    {
      "content": "qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Client Interface\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py)\n- [qdrant\\_client/qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py)\n\nThe Client Interface in Qdrant Client provides the primary entry point for applications to interact with Qdrant vector databases. It offers both synchronous and asynchronous implementations, local and remote operation modes, and supports various protocols including REST and gRPC. This page details the client interfaces available, their initialization options, and how they connect to the underlying implementation layers.\n\nFor details on the Local Mode implementation, see [Local Mode](qdrant/qdrant-client/2.2-local-mode.md), and for Remote Mode implementation, see [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md).\n\n## Client Interface Overview\n\nThe Qdrant client library provides two main client classes:\n\n1. **QdrantClient** - The synchronous client implementation\n2. **AsyncQdrantClient** - The asynchronous client implementation\n\nBoth client classes serve as facades that provide a unified API for interacting with Qdrant, whether it's running locally in-memory, as a persistent local database, or as a remote server. They abstract away the implementation details and provide a consistent interface for vector search operations.\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py28-160](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L28-L160) [qdrant\\_client/async\\_qdrant\\_client.py27-148](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L27-L148)\n\n## Client Initialization\n\nThe client interfaces can be initialized in different modes depending on the application requirements:\n\n### Local Mode",
      "index": 1,
      "token_count": 486,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.1-client-interface",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.1-client-interface.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.1-client-interface.md",
        "file_name": "_qdrant_qdrant-client_2.1-client-interface.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.014992",
        "total_chunks": 9
      },
      "start_char": 1916,
      "end_char": 3870
    },
    {
      "content": "s can be initialized in different modes depending on the application requirements:\n\n### Local Mode\n\nLocal mode runs a Qdrant instance within the Python process, either in-memory or with persistence to disk:\n\n```\n```\n\n### Remote Mode\n\nRemote mode connects to a Qdrant server running elsewhere:\n\n```\n```\n\n### Initialization Parameters\n\nThe client initialization supports a wide range of parameters:\n\n| Parameter                         | Description                                                | Default |\n| --------------------------------- | ---------------------------------------------------------- | ------- |\n| `location`                        | If \":memory:\" - use in-memory mode, if string - use as URL | `None`  |\n| `url`                             | URL of Qdrant server                                       | `None`  |\n| `port`                            | Port of the REST API                                       | `6333`  |\n| `grpc_port`                       | Port of the gRPC interface                                 | `6334`  |\n| `prefer_grpc`                     | Use gRPC when possible                                     | `False` |\n| `https`                           | Use HTTPS protocol                                         | `None`  |\n| `api_key`                         | API key for Qdrant Cloud                                   | `None`  |\n| `prefix`                          | URL path prefix                                            | `None`  |\n| `timeout`                         | Request timeout in seconds                                 | `None`  |\n| `host`                            | Host name of Qdrant service                                | `None`  |\n| `path`                            | Path for local persistence                                 | `None`  |\n| `force_disable_check_same_thread` | Disable SQLite thread check                                | `False` |\n| `grpc_options`                    | Additional gRPC options                                    | `None`  |",
      "index": 2,
      "token_count": 349,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.1-client-interface",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.1-client-interface.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.1-client-interface.md",
        "file_name": "_qdrant_qdrant-client_2.1-client-interface.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.014992",
        "total_chunks": 9
      },
      "start_char": 3770,
      "end_char": 5803
    },
    {
      "content": "ptions`                    | Additional gRPC options                                    | `None`  |\n| `auth_token_provider`             | Callback function for Bearer token                         | `None`  |\n| `cloud_inference`                 | Use cloud inference for embedding                          | `False` |\n| `local_inference_batch_size`      | Batch size for local inference                             | `None`  |\n| `check_compatibility`             | Check server compatibility                                 | `True`  |\n\nSources: [qdrant\\_client/qdrant\\_client.py80-102](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L80-L102) [qdrant\\_client/async\\_qdrant\\_client.py79-101](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L79-L101)\n\n## Client Implementation Selection\n\nWhen a client is initialized, it chooses between `QdrantLocal` (or `AsyncQdrantLocal`) and `QdrantRemote` (or `AsyncQdrantRemote`) based on the provided parameters. This selection process is visualized below:\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py121-161](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L121-L161) [qdrant\\_client/async\\_qdrant\\_client.py111-146](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L111-L146)\n\n## Client Operations Architecture\n\nThe Qdrant client interfaces provide a wide range of operations that are categorized as follows:\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py437-610](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L437-L610) [qdrant\\_client/qdrant\\_client.py1565-1640](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L1565-L1640) [qdrant\\_client/qdrant\\_client.py2088-2426](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2088-L2426) [qdrant\\_client/qdrant\\_client.py2414-2603](https://github.",
      "index": 3,
      "token_count": 630,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.1-client-interface",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.1-client-interface.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.1-client-interface.md",
        "file_name": "_qdrant_qdrant-client_2.1-client-interface.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.014992",
        "total_chunks": 9
      },
      "start_char": 5703,
      "end_char": 7721
    },
    {
      "content": "ant_client/qdrant_client.py#L2088-L2426) [qdrant\\_client/qdrant\\_client.py2414-2603](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2414-L2603) [qdrant\\_client/async\\_qdrant\\_client.py412-580](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L412-L580) [qdrant\\_client/async\\_qdrant\\_client.py1517-1587](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L1517-L1587) [qdrant\\_client/async\\_qdrant\\_client.py2233-2465](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L2233-L2465) [qdrant\\_client/async\\_qdrant\\_client.py2466-2603](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L2466-L2603)\n\n## Protocol Handling\n\nThe remote client implementation can communicate with Qdrant server using either REST or gRPC protocols. The `prefer_grpc` parameter determines which protocol is preferred:\n\n```\n```\n\nThe client also provides direct access to the underlying protocol clients through properties:\n\n- `grpc_points` - Access to the gRPC PointsStub\n- `grpc_collections` - Access to the gRPC CollectionsStub\n- `http` - Access to the REST API client\n\nSources: [qdrant\\_client/qdrant\\_client.py175-225](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L175-L225) [qdrant\\_client/async\\_qdrant\\_client.py158-204](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L158-L204)\n\n## FastEmbed Integration\n\nBoth client interfaces inherit from `QdrantFastembedMixin` or `AsyncQdrantFastembedMixin`, which provide methods for working with text, image, and other embeddings directly:\n\n```\n```\n\nThis integration allows users to work directly with raw documents, images, or other content, and the client automatically handles the embedding generation and vector operations.\n\nSources: [qdrant\\_client/qdrant\\_client.py23-27](https://github.",
      "index": 4,
      "token_count": 655,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.1-client-interface",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.1-client-interface.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.1-client-interface.md",
        "file_name": "_qdrant_qdrant-client_2.1-client-interface.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.014992",
        "total_chunks": 9
      },
      "start_char": 7621,
      "end_char": 9621
    },
    {
      "content": "generation and vector operations.\n\nSources: [qdrant\\_client/qdrant\\_client.py23-27](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L23-L27) [qdrant\\_client/async\\_qdrant\\_client.py22-26](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L22-L26)\n\n## Synchronous vs Asynchronous API\n\nThe client library provides both synchronous and asynchronous APIs with identical method signatures, making it easy to switch between them based on application requirements:\n\n| Synchronous                      | Asynchronous            | Description         |\n| -------------------------------- | ----------------------- | ------------------- |\n| `QdrantClient`                   | `AsyncQdrantClient`     | Main client class   |\n| `client.method()`                | `await client.method()` | Method call pattern |\n| Blocks until operation completes | Returns coroutine       | Execution model     |\n\nExample of converting from synchronous to asynchronous:\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py27-161](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L27-L161) [qdrant\\_client/async\\_qdrant\\_client.py26-146](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L26-L146)\n\n## Deprecated Methods\n\nThe client interface includes several deprecated methods that have been replaced with newer equivalents:\n\n| Deprecated Method       | Replacement                                   | Purpose                  |\n| ----------------------- | --------------------------------------------- | ------------------------ |\n| `search()`              | `query_points()`                              | Vector search operations |\n| `search_batch()`        | `query_batch_points()`                        | Batch vector search      |\n| `search_groups()`       | `query_points_groups()`                       | Grouped vector search    |",
      "index": 5,
      "token_count": 451,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.1-client-interface",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.1-client-interface.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.1-client-interface.md",
        "file_name": "_qdrant_qdrant-client_2.1-client-interface.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.014992",
        "total_chunks": 9
      },
      "start_char": 9521,
      "end_char": 11490
    },
    {
      "content": "search_groups()`       | `query_points_groups()`                       | Grouped vector search    |\n| `recommend()`           | `query_points()`                              | Recommendation queries   |\n| `recommend_batch()`     | `query_batch_points()`                        | Batch recommendations    |\n| `recommend_groups()`    | `query_points_groups()`                       | Grouped recommendations  |\n| `discover()`            | `query_points()`                              | Discovery queries        |\n| `discover_batch()`      | `query_batch_points()`                        | Batch discovery          |\n| `upload_records()`      | `upload_points()`                             | Batch point upload       |\n| `recreate_collection()` | `collection_exists()` + `create_collection()` | Collection recreation    |\n| `rest` property         | `http` property                               | REST API client access   |\n\nThese deprecated methods continue to function but will emit deprecation warnings when used.\n\nSources: [qdrant\\_client/qdrant\\_client.py263-276](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L263-L276) [qdrant\\_client/qdrant\\_client.py370-375](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L370-L375) [qdrant\\_client/qdrant\\_client.py863-868](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L863-L868) [qdrant\\_client/qdrant\\_client.py1022-1027](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L1022-L1027) [qdrant\\_client/qdrant\\_client.py1249-1254](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L1249-L1254) [qdrant\\_client/qdrant\\_client.py1357-1362](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L1357-L1362) [qdrant\\_client/qdrant\\_client.py1389-1394](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L1389-L1394) [qdrant\\_client/qdrant\\_client.",
      "index": 6,
      "token_count": 607,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.1-client-interface",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.1-client-interface.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.1-client-interface.md",
        "file_name": "_qdrant_qdrant-client_2.1-client-interface.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.014992",
        "total_chunks": 9
      },
      "start_char": 11390,
      "end_char": 13430
    },
    {
      "content": "ant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L1389-L1394) [qdrant\\_client/qdrant\\_client.py2449-2454](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2449-L2454) [qdrant\\_client/qdrant\\_client.py2390-2395](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2390-L2395) [qdrant\\_client/qdrant\\_client.py205-210](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L205-L210)\n\n## Client Cleanup\n\nBoth client interfaces provide a `close()` method to properly clean up resources and connections:\n\n```\n```\n\nThe synchronous client also implements `__del__` to automatically close the connection when the client is garbage collected.\n\nSources: [qdrant\\_client/qdrant\\_client.py162-172](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L162-L172) [qdrant\\_client/async\\_qdrant\\_client.py148-155](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L148-L155)\n\n## Usage Examples\n\n### Basic Vector Search\n\n```\n```\n\n### Using FastEmbed Integration\n\n```\n```\n\nSources: [README.md170-235](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L170-L235) [README.md85-111](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L85-L111)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Client Interface](#client-interface.md)\n- [Client Interface Overview](#client-interface-overview.md)\n- [Client Initialization](#client-initialization.md)\n- [Local Mode](#local-mode.md)\n- [Remote Mode](#remote-mode.md)\n- [Initialization Parameters](#initialization-parameters.md)\n- [Client Implementation Selection](#client-implementation-selection.md)\n- [Client Operations Architecture](#client-operations-architecture.md)\n- [Protocol Handling](#protocol-handling.md)\n- [FastEmbed Integration](#fastembed-integration.md)\n- [Synchronous vs Asynchronous API](#synchronous-vs-asynchronous-api.md)\n- [Deprecated Methods](#deprecated-methods.md)",
      "index": 7,
      "token_count": 646,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.1-client-interface",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.1-client-interface.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.1-client-interface.md",
        "file_name": "_qdrant_qdrant-client_2.1-client-interface.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.014992",
        "total_chunks": 9
      },
      "start_char": 13330,
      "end_char": 15379
    },
    {
      "content": "ynchronous API](#synchronous-vs-asynchronous-api.md)\n- [Deprecated Methods](#deprecated-methods.md)\n- [Client Cleanup](#client-cleanup.md)\n- [Usage Examples](#usage-examples.md)\n- [Basic Vector Search](#basic-vector-search.md)\n- [Using FastEmbed Integration](#using-fastembed-integration.md)",
      "index": 8,
      "token_count": 72,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.1-client-interface",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.1-client-interface.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.1-client-interface.md",
        "file_name": "_qdrant_qdrant-client_2.1-client-interface.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.014992",
        "total_chunks": 9
      },
      "start_char": 15279,
      "end_char": 17327
    },
    {
      "content": "Local Mode | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Local Mode\n\nRelevant source files\n\n- [qdrant\\_client/local/async\\_qdrant\\_local.",
      "index": 0,
      "token_count": 628,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.2-local-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.2-local-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.2-local-mode.md",
        "file_name": "_qdrant_qdrant-client_2.2-local-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.054562",
        "total_chunks": 9
      },
      "start_char": 0,
      "end_char": 2049
    },
    {
      "content": "system.md)\n\nMenu\n\n# Local Mode\n\nRelevant source files\n\n- [qdrant\\_client/local/async\\_qdrant\\_local.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/async_qdrant_local.py)\n- [qdrant\\_client/local/local\\_collection.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py)\n- [qdrant\\_client/local/qdrant\\_local.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py)\n- [tests/congruence\\_tests/test\\_common.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_common.py)\n- [tests/congruence\\_tests/test\\_query.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_query.py)\n\nLocal Mode provides an in-process implementation of Qdrant functionality through the `QdrantLocal` and `AsyncQdrantLocal` classes. This mode operates entirely within your application process using the `LocalCollection` class for vector storage and search operations. Data can be stored in-memory or persisted to disk using SQLite-based storage.\n\nLocal Mode is designed for development, testing, and small-scale applications where deploying a separate Qdrant server is unnecessary. For production deployments with larger datasets, see [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md).\n\n## Architecture Overview\n\n**Local Mode Class Hierarchy**\n\n```\n```\n\nSources: [qdrant\\_client/local/qdrant\\_local.py38-67](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L38-L67) [qdrant\\_client/local/async\\_qdrant\\_local.py38-67](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/async_qdrant_local.py#L38-L67) [qdrant\\_client/local/local\\_collection.py93-148](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L93-L148)\n\n## Initialization\n\nLocal Mode initialization creates either `QdrantLocal` or `AsyncQdrantLocal` instances based on the provided location parameter:\n\n**QdrantLocal Constructor**",
      "index": 1,
      "token_count": 572,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.2-local-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.2-local-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.2-local-mode.md",
        "file_name": "_qdrant_qdrant-client_2.2-local-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.054562",
        "total_chunks": 9
      },
      "start_char": 1949,
      "end_char": 3998
    },
    {
      "content": "AsyncQdrantLocal` instances based on the provided location parameter:\n\n**QdrantLocal Constructor**\n\n```\n```\n\n**Storage Modes:**\n\n- **In-memory**: `location=\":memory:\"` - Data exists only during application lifetime\n- **Persistent**: `location=\"path/to/directory\"` - Data persisted to disk with SQLite storage\n\n**Initialization Process:**\n\n1. Set `persistent = location != \":memory:\"`\n2. Initialize empty collections dictionary: `self.collections: dict[str, LocalCollection] = {}`\n3. If persistent, load metadata from `meta.json` and create `LocalCollection` instances\n4. Acquire file lock to prevent concurrent access\n5. Load existing vector data into memory\n\nSources: [qdrant\\_client/local/qdrant\\_local.py51-67](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L51-L67) [qdrant\\_client/local/qdrant\\_local.py94-141](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L94-L141)\n\n## Storage Architecture\n\n**QdrantLocal Data Structures**\n\n```\n```\n\n**LocalCollection Vector Storage:**\n\n- `vectors: dict[str, NumpyArray]` - Dense vectors indexed by name\n- `sparse_vectors: dict[str, list[SparseVector]]` - Sparse vectors with indices/values\n- `multivectors: dict[str, list[NumpyArray]]` - Multi-vector collections\n- `payload: list[models.Payload]` - Point payloads indexed by internal ID\n- `ids: dict[ExtendedPointId, int]` - External ID to internal index mapping\n- `deleted: NumpyArray` - Boolean array tracking deleted points\n\nSources: [qdrant\\_client/local/qdrant\\_local.py51-67](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L51-L67) [qdrant\\_client/local/local\\_collection.py100-148](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L100-L148)\n\n## Vector Storage Implementation\n\n**LocalCollection Vector Type Resolution**\n\n```\n```\n\n**Vector Storage Details:**\n\n- **Dense vectors**: `np.zeros((0, params.size), dtype=np.float32)` initialized per vector name",
      "index": 2,
      "token_count": 560,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.2-local-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.2-local-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.2-local-mode.md",
        "file_name": "_qdrant_qdrant-client_2.2-local-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.054562",
        "total_chunks": 9
      },
      "start_char": 3898,
      "end_char": 5926
    },
    {
      "content": "**\n\n- **Dense vectors**: `np.zeros((0, params.size), dtype=np.float32)` initialized per vector name\n- **Sparse vectors**: `list[SparseVector]` with `indices` and `values` arrays\n- **Multivectors**: `list[NumpyArray]` where each point can have multiple vectors\n- **Deleted tracking**: `deleted_per_vector: dict[str, NumpyArray]` tracks deletions per vector type\n\n**Vector Name Resolution:**\n\n- `DEFAULT_VECTOR_NAME = \"\"` used for anonymous vectors\n- `_all_vectors_keys` combines all vector type names for unified access\n\nSources: [qdrant\\_client/local/local\\_collection.py112-140](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L112-L140) [qdrant\\_client/local/local\\_collection.py150-169](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L150-L169) [qdrant\\_client/local/local\\_collection.py81](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L81-L81)\n\n## Storage Persistence\n\n**File-based Persistence Architecture**\n\n```\n```\n\n**Persistence Components:**\n\n- **meta.json**: Contains collection configurations and aliases\n- **Collection directories**: `{location}/collection/{collection_name}/`\n- **File locking**: Uses `portalocker` with `EXCLUSIVE|NON_BLOCKING` flags\n- **CollectionPersistence**: Handles SQLite-based storage per collection\n\n**Lock File Management:**\n\n```\n```\n\nSources: [qdrant\\_client/local/qdrant\\_local.py94-141](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L94-L141) [qdrant\\_client/local/local\\_collection.py143-148](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L143-L148) [qdrant\\_client/local/local\\_collection.py204-280](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L204-L280)\n\n**Data Loading Process:**\n\n1. `_load()` reads `meta.json` and creates collections\n2. `load_vectors()` populates in-memory data structures from disk\n3.",
      "index": 3,
      "token_count": 582,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.2-local-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.2-local-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.2-local-mode.md",
        "file_name": "_qdrant_qdrant-client_2.2-local-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.054562",
        "total_chunks": 9
      },
      "start_char": 5826,
      "end_char": 7860
    },
    {
      "content": "a.json` and creates collections\n2. `load_vectors()` populates in-memory data structures from disk\n3. Vector data organized by type: dense, sparse, and multivectors\n4. Payload and ID mappings loaded into list and dictionary structures\n\n## Performance Considerations\n\n**Size Thresholds:**\n\n- `LARGE_DATA_THRESHOLD = 20_000` points triggers performance warnings\n- `LocalCollection.LARGE_DATA_THRESHOLD = 20_000` used for collection-level warnings\n\n**Warning Implementation:**\n\n```\n```\n\n**Performance Characteristics:**\n\n- All data stored in memory for fast access\n- No indexing structures (HNSW, etc.) - uses brute force search\n- Suitable for development, testing, and small datasets\n- Payload filtering uses `calculate_payload_mask()` for each query\n\nSources: [qdrant\\_client/local/qdrant\\_local.py49](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L49-L49) [qdrant\\_client/local/qdrant\\_local.py114-123](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L114-L123) [qdrant\\_client/local/local\\_collection.py98](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L98-L98)\n\n## Search and Retrieval\n\n**LocalCollection Search Implementation**\n\n```\n```\n\n**Search Method Signature:**\n\n```\n```\n\n**Query Processing Flow:**\n\n1. `_resolve_query_vector_name()` determines vector type and name\n2. Distance calculation based on vector type (dense/sparse/multi)\n3. `_payload_and_non_deleted_mask()` applies filters\n4. Results sorted by score and limited\n5. `ScoredPoint` objects constructed with payload and vectors\n\nSources: [qdrant\\_client/local/local\\_collection.py533-701](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L533-L701) [qdrant\\_client/local/local\\_collection.py282-332](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L282-L332) [qdrant\\_client/local/local\\_collection.py499-523](https://github.",
      "index": 4,
      "token_count": 563,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.2-local-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.2-local-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.2-local-mode.md",
        "file_name": "_qdrant_qdrant-client_2.2-local-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.054562",
        "total_chunks": 9
      },
      "start_char": 7760,
      "end_char": 9775
    },
    {
      "content": "al/local_collection.py#L282-L332) [qdrant\\_client/local/local\\_collection.py499-523](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L499-L523)\n\n## Feature Parity with Remote Mode\n\n**Implemented Operations in QdrantLocal:**\n\n| Operation Category    | Methods                                                                                                        | Implementation Status |\n| --------------------- | -------------------------------------------------------------------------------------------------------------- | --------------------- |\n| Collection Management | `create_collection()`, `delete_collection()`, `get_collection()`, `collection_exists()`, `update_collection()` | ✅ Full                |\n| Point Operations      | `upsert()`, `delete()`, `retrieve()`, `update_vectors()`, `delete_vectors()`                                   | ✅ Full                |\n| Search Operations     | `search()`, `search_batch()`, `search_groups()`, `search_matrix_*()`                                           | ✅ Full                |\n| Advanced Search       | `query_points()`, `query_batch_points()`, `query_points_groups()`                                              | ✅ Full                |\n| Recommendation        | `recommend()`, `recommend_batch()`, `recommend_groups()`                                                       | ✅ Full                |\n| Discovery             | `discover()`, `discover_batch()`                                                                               | ✅ Full                |\n| Payload Operations    | `set_payload()`, `overwrite_payload()`, `delete_payload()`, `clear_payload()`                                  | ✅ Full                |\n| Aliases               | `update_collection_aliases()`, `get_aliases()`, `get_collection_aliases()`                                     | ✅ Full                |",
      "index": 5,
      "token_count": 338,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.2-local-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.2-local-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.2-local-mode.md",
        "file_name": "_qdrant_qdrant-client_2.2-local-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.054562",
        "total_chunks": 9
      },
      "start_char": 9675,
      "end_char": 11576
    },
    {
      "content": "liases()`, `get_collection_aliases()`                                     | ✅ Full                |\n| Pagination            | `scroll()`, `count()`, `facet()`                                                                               | ✅ Full                |\n| Batch Operations      | `batch_update_points()`                                                                                        | ✅ Full                |\n\n**Unsupported Operations:**\n\n- Payload indexes: `create_payload_index()`, `delete_payload_index()` (warnings only)\n- Snapshots: All snapshot operations raise `NotImplementedError`\n- Sharding: `create_shard_key()`, `delete_shard_key()` raise `NotImplementedError`\n- Locks: `lock_storage()`, `unlock_storage()` raise `NotImplementedError`\n\n**Congruence Testing:** Tests in `test_query.py` verify identical behavior between local and remote modes using `compare_client_results()` function.\n\nSources: [qdrant\\_client/local/qdrant\\_local.py773-1165](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L773-L1165) [tests/congruence\\_tests/test\\_query.py804-826](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_query.py#L804-L826)\n\n## Concurrency and Threading\n\n**File Locking Mechanism:**\n\n```\n```\n\n**SQLite Thread Safety:**\n\n- Default: SQLite connections use `check_same_thread=True`\n- Override: `force_disable_check_same_thread=True` parameter\n- Passed to: `CollectionPersistence(location, force_disable_check_same_thread)`\n\n**Concurrency Limitations:**\n\n- **Process-level**: File locking prevents multiple processes from accessing same directory\n- **Thread-level**: Single SQLite connection per collection, optional thread check bypass\n- **Recommended**: Use Qdrant server for multi-user/multi-process scenarios\n\n**Error Handling:**\n\n```\n```\n\nSources: [qdrant\\_client/local/qdrant\\_local.py126-141](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L126-L141) [qdrant\\_client/local/qdrant\\_local.",
      "index": 6,
      "token_count": 486,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.2-local-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.2-local-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.2-local-mode.md",
        "file_name": "_qdrant_qdrant-client_2.2-local-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.054562",
        "total_chunks": 9
      },
      "start_char": 11476,
      "end_char": 13509
    },
    {
      "content": "nt/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L126-L141) [qdrant\\_client/local/qdrant\\_local.py51-67](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L51-L67)\n\n## Async Implementation\n\n**AsyncQdrantLocal Class:**\n\n```\n```\n\n**Async vs Sync Implementation:**\n\n- **Shared**: Both use the same `LocalCollection` class for actual operations\n- **Difference**: Async methods have `async def` signatures and `await` keywords\n- **Persistence**: Same file locking and SQLite mechanisms\n- **Performance**: No actual async I/O benefits since operations are in-memory\n\n**Method Signatures:**\n\n```\n```\n\n**Usage Pattern:**\n\n```\n```\n\nSources: [qdrant\\_client/local/async\\_qdrant\\_local.py38-67](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/async_qdrant_local.py#L38-L67) [qdrant\\_client/local/async\\_qdrant\\_local.py179-207](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/async_qdrant_local.py#L179-L207)\n\n## When to Use Local Mode vs Remote Mode\n\n| Scenario                          | Recommended Mode |\n| --------------------------------- | ---------------- |\n| Development & testing             | Local Mode       |\n| Small applications (<20K vectors) | Local Mode       |\n| Embedded applications             | Local Mode       |\n| Production systems                | Remote Mode      |\n| Large datasets                    | Remote Mode      |\n| Multi-user access                 | Remote Mode      |\n| High query throughput             | Remote Mode      |\n\nSources: [qdrant\\_client/local/qdrant\\_local.py38-47](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L38-L47)\n\n## Conclusion\n\nLocal Mode provides a convenient way to use Qdrant's vector search capabilities without deploying a separate server. It's ideal for development, testing, and small-scale applications. The API is designed to be compatible with Remote Mode, allowing for easy migration when scaling up.",
      "index": 7,
      "token_count": 521,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.2-local-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.2-local-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.2-local-mode.md",
        "file_name": "_qdrant_qdrant-client_2.2-local-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.054562",
        "total_chunks": 9
      },
      "start_char": 13409,
      "end_char": 15414
    },
    {
      "content": "he API is designed to be compatible with Remote Mode, allowing for easy migration when scaling up.\n\nFor larger datasets, higher throughput requirements, or multi-user scenarios, it's recommended to switch to a full Qdrant server deployment as described in [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md).\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Local Mode](#local-mode.md)\n- [Architecture Overview](#architecture-overview.md)\n- [Initialization](#initialization.md)\n- [Storage Architecture](#storage-architecture.md)\n- [Vector Storage Implementation](#vector-storage-implementation.md)\n- [Storage Persistence](#storage-persistence.md)\n- [Performance Considerations](#performance-considerations.md)\n- [Search and Retrieval](#search-and-retrieval.md)\n- [Feature Parity with Remote Mode](#feature-parity-with-remote-mode.md)\n- [Concurrency and Threading](#concurrency-and-threading.md)\n- [Async Implementation](#async-implementation.md)\n- [When to Use Local Mode vs Remote Mode](#when-to-use-local-mode-vs-remote-mode.md)\n- [Conclusion](#conclusion.md)",
      "index": 8,
      "token_count": 254,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.2-local-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.2-local-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.2-local-mode.md",
        "file_name": "_qdrant_qdrant-client_2.2-local-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.054562",
        "total_chunks": 9
      },
      "start_char": 15314,
      "end_char": 17362
    },
    {
      "content": "Remote Mode | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Remote Mode\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_remote.",
      "index": 0,
      "token_count": 627,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.3-remote-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "file_name": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.089083",
        "total_chunks": 7
      },
      "start_char": 0,
      "end_char": 2046
    },
    {
      "content": "ion-system.md)\n\nMenu\n\n# Remote Mode\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py)\n- [qdrant\\_client/conversions/common\\_types.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/common_types.py)\n- [qdrant\\_client/qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py)\n\n## Purpose and Scope\n\nRemote Mode provides the network-based client implementation for communicating with external Qdrant services. This document covers the `QdrantRemote` and `AsyncQdrantRemote` classes that handle HTTP/REST and gRPC protocol communication, connection management, authentication, and protocol conversion.\n\nFor information about the local in-process implementation, see [Local Mode](qdrant/qdrant-client/2.2-local-mode.md). For details about protocol handling and conversion between gRPC and REST, see [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md).\n\n## Architecture Overview\n\nThe remote client architecture centers around two main classes that implement network communication with Qdrant services through dual protocol support.\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py46-208](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L46-L208) [qdrant\\_client/async\\_qdrant\\_remote.py55-196](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L55-L196)\n\n## Initialization and Configuration\n\nThe `QdrantRemote` class provides comprehensive initialization with support for various connection parameters and authentication methods.\n\n### Connection Parameters\n\n| Parameter     | Type             | Default       | Description                        |\n| ------------- | ---------------- | ------------- | ---------------------------------- |\n| `url`         | `Optional[str]`  | `None`        | Full URL including scheme and port |",
      "index": 1,
      "token_count": 498,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.3-remote-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "file_name": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.089083",
        "total_chunks": 7
      },
      "start_char": 1946,
      "end_char": 3959
    },
    {
      "content": "------- |\n| `url`         | `Optional[str]`  | `None`        | Full URL including scheme and port |\n| `host`        | `Optional[str]`  | `\"localhost\"` | Hostname or IP address             |\n| `port`        | `Optional[int]`  | `6333`        | HTTP port number                   |\n| `grpc_port`   | `int`            | `6334`        | gRPC port number                   |\n| `prefer_grpc` | `bool`           | `False`       | Protocol preference flag           |\n| `https`       | `Optional[bool]` | `None`        | HTTPS enforcement                  |\n| `timeout`     | `Optional[int]`  | `None`        | Request timeout in seconds         |\n\n### Authentication Options\n\n| Parameter             | Type                    | Description                |\n| --------------------- | ----------------------- | -------------------------- |\n| `api_key`             | `Optional[str]`         | API key for authentication |\n| `auth_token_provider` | `Optional[Callable]`    | Dynamic token provider     |\n| `grpc_options`        | `Optional[dict]`        | gRPC channel options       |\n| `grpc_compression`    | `Optional[Compression]` | gRPC compression method    |\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py49-235](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L49-L235) [qdrant\\_client/async\\_qdrant\\_remote.py58-195](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L58-L195)\n\n## Protocol Selection\n\nThe remote client implements a dual-protocol system with runtime selection based on the `prefer_grpc` flag and method-specific logic.\n\n### Protocol Selection Logic\n\n```\n```\n\n### Protocol-Specific Implementations\n\nEach operation method contains branching logic to handle both protocols:\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py368-541](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L368-L541) [qdrant\\_client/qdrant\\_remote.py453-508](https://github.",
      "index": 2,
      "token_count": 543,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.3-remote-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "file_name": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.089083",
        "total_chunks": 7
      },
      "start_char": 3859,
      "end_char": 5850
    },
    {
      "content": "/qdrant_client/qdrant_remote.py#L368-L541) [qdrant\\_client/qdrant\\_remote.py453-508](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L453-L508)\n\n## Connection Management\n\nThe remote client implements lazy initialization for gRPC connections and proper resource cleanup.\n\n### gRPC Connection Initialization\n\n```\n```\n\n### Connection Properties\n\nThe client exposes both HTTP and gRPC clients through properties:\n\n- `rest` / `http`: Returns `SyncApis[ApiClient]` for HTTP operations\n- `grpc_points`: Returns `grpc.PointsStub` for point operations\n- `grpc_collections`: Returns `grpc.CollectionsStub` for collection operations\n- `grpc_snapshots`: Returns `grpc.SnapshotsStub` for snapshot operations\n- `grpc_root`: Returns `grpc.QdrantStub` for root operations\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py273-304](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L273-L304) [qdrant\\_client/qdrant\\_remote.py306-366](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L306-L366)\n\n## Authentication\n\nThe remote client supports multiple authentication mechanisms with security warnings for insecure connections.\n\n### Authentication Methods\n\n```\n```\n\n### Security Implementation\n\nThe client enforces security best practices:\n\n- Issues warnings when API keys are used over HTTP\n- Supports dynamic token providers for OAuth-style authentication\n- Configures appropriate headers for both REST and gRPC protocols\n- Validates HTTPS usage with authentication\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py133-190](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L133-L190) [qdrant\\_client/async\\_qdrant\\_remote.py121-164](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L121-L164)\n\n## Operations Implementation\n\nThe remote client implements comprehensive CRUD and search operations with consistent dual-protocol support.\n\n### Core Operations\n\n```\n```",
      "index": 3,
      "token_count": 551,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.3-remote-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "file_name": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.089083",
        "total_chunks": 7
      },
      "start_char": 5750,
      "end_char": 7778
    },
    {
      "content": "ve CRUD and search operations with consistent dual-protocol support.\n\n### Core Operations\n\n```\n```\n\n### Operation Pattern\n\nEach operation follows a consistent pattern:\n\n1. **Input Validation**: Check parameter types and convert as needed\n2. **Protocol Branching**: Use `prefer_grpc` to select implementation path\n3. **Model Conversion**: Convert between REST and gRPC models\n4. **API Call**: Execute the appropriate client method\n5. **Response Processing**: Convert response to common format\n6. **Error Handling**: Handle protocol-specific errors\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py368-1132](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L368-L1132) [qdrant\\_client/async\\_qdrant\\_remote.py326-1000](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L326-L1000)\n\n## Protocol Conversion\n\nThe remote client extensively uses conversion utilities to maintain compatibility between REST and gRPC protocols.\n\n### Conversion Flow\n\n```\n```\n\n### Common Conversions\n\nThe client performs bidirectional conversions for:\n\n- **Filters**: `models.Filter` ↔ `grpc.Filter`\n- **Search Parameters**: `models.SearchParams` ↔ `grpc.SearchParams`\n- **Points**: `models.ScoredPoint` ↔ `grpc.ScoredPoint`\n- **Vectors**: `models.NamedVector` ↔ `grpc.NamedVector`\n- **Payloads**: `models.WithPayloadInterface` ↔ `grpc.WithPayloadSelector`\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py34-47](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L34-L47) [qdrant\\_client/conversions/common\\_types.py48-164](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/common_types.py#L48-L164)\n\n## Error Handling and Cleanup\n\nThe remote client implements comprehensive error handling and resource cleanup mechanisms.\n\n### Resource Cleanup\n\n```\n```\n\n### Connection State Management\n\nThe client maintains connection state through:\n\n- `closed` property for state inspection\n- Runtime checks before operations",
      "index": 4,
      "token_count": 523,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.3-remote-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "file_name": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.089083",
        "total_chunks": 7
      },
      "start_char": 7678,
      "end_char": 9701
    },
    {
      "content": "nection state through:\n\n- `closed` property for state inspection\n- Runtime checks before operations\n- Graceful error handling for interrupted connections\n- Warning system for connection issues\n\n### Version Compatibility\n\nThe client includes automatic version compatibility checking:\n\n- Retrieves server version on initialization\n- Compares client and server versions\n- Issues warnings for incompatible versions\n- Allows bypassing checks with `check_compatibility=False`\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py209-261](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L209-L261) [qdrant\\_client/async\\_qdrant\\_remote.py197-221](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L197-L221)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Remote Mode](#remote-mode.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Architecture Overview](#architecture-overview.md)\n- [Initialization and Configuration](#initialization-and-configuration.md)\n- [Connection Parameters](#connection-parameters.md)\n- [Authentication Options](#authentication-options.md)\n- [Protocol Selection](#protocol-selection.md)\n- [Protocol Selection Logic](#protocol-selection-logic.md)\n- [Protocol-Specific Implementations](#protocol-specific-implementations.md)\n- [Connection Management](#connection-management.md)\n- [gRPC Connection Initialization](#grpc-connection-initialization.md)\n- [Connection Properties](#connection-properties.md)\n- [Authentication](#authentication.md)\n- [Authentication Methods](#authentication-methods.md)\n- [Security Implementation](#security-implementation.md)\n- [Operations Implementation](#operations-implementation.md)\n- [Core Operations](#core-operations.md)\n- [Operation Pattern](#operation-pattern.md)\n- [Protocol Conversion](#protocol-conversion.md)\n- [Conversion Flow](#conversion-flow.md)\n- [Common Conversions](#common-conversions.md)\n- [Error Handling and Cleanup](#error-handling-and-cleanup.md)",
      "index": 5,
      "token_count": 473,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.3-remote-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "file_name": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.089083",
        "total_chunks": 7
      },
      "start_char": 9601,
      "end_char": 11617
    },
    {
      "content": "Conversions](#common-conversions.md)\n- [Error Handling and Cleanup](#error-handling-and-cleanup.md)\n- [Resource Cleanup](#resource-cleanup.md)\n- [Connection State Management](#connection-state-management.md)\n- [Version Compatibility](#version-compatibility.md)",
      "index": 6,
      "token_count": 59,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.3-remote-mode",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "file_name": "_qdrant_qdrant-client_2.3-remote-mode.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.089083",
        "total_chunks": 7
      },
      "start_char": 11517,
      "end_char": 13565
    },
    {
      "content": "Protocol Handling | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Protocol Handling\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.4-protocol-handling",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.4-protocol-handling.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "file_name": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.114387",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2018
    },
    {
      "content": "drant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Protocol Handling\n\nRelevant source files\n\n- [qdrant\\_client/common/client\\_exceptions.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/common/client_exceptions.py)\n- [qdrant\\_client/connection.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/connection.py)\n- [qdrant\\_client/conversions/conversion.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py)\n- [qdrant\\_client/http/api\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api_client.py)\n- [qdrant\\_client/http/models/models.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/models/models.py)\n- [tests/conversions/fixtures.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/conversions/fixtures.py)\n- [tests/conversions/test\\_validate\\_conversions.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/conversions/test_validate_conversions.py)\n- [tools/generate\\_grpc\\_client.sh](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/generate_grpc_client.sh)\n- [tools/generate\\_rest\\_client.sh](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/generate_rest_client.sh)\n\nThis document covers the protocol handling mechanisms in the qdrant-client library, specifically focusing on the conversion layer between gRPC and REST protocols, connection management, and protocol selection logic. The system enables seamless communication with Qdrant services through both HTTP/REST and gRPC interfaces while maintaining a unified client API.\n\nFor information about the client interface that utilizes these protocols, see [Client Interface](qdrant/qdrant-client/2.1-client-interface.md). For details about remote mode implementation, see [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md).\n\n## Architecture Overview",
      "index": 1,
      "token_count": 491,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.4-protocol-handling",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.4-protocol-handling.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "file_name": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.114387",
        "total_chunks": 6
      },
      "start_char": 1918,
      "end_char": 3835
    },
    {
      "content": "lementation, see [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md).\n\n## Architecture Overview\n\nThe protocol handling system consists of three main components: bidirectional conversion between gRPC and REST formats, connection management for both protocols, and error handling across transport layers.\n\n### Protocol Conversion Flow\n\n```\n```\n\nSources: [qdrant\\_client/conversions/conversion.py1-2069](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py#L1-L2069) [qdrant\\_client/connection.py1-308](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/connection.py#L1-L308) [qdrant\\_client/http/api\\_client.py1-264](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api_client.py#L1-L264)\n\n## gRPC to REST Conversion System\n\nThe `GrpcToRest` class provides comprehensive conversion from gRPC protocol buffer messages to REST API Pydantic models. This system handles complex nested structures, enums, and specialized data types.\n\n### Core Conversion Methods\n\n```\n```\n\nThe conversion system handles complex type mapping including:\n\n| gRPC Type          | REST Type           | Conversion Method        |\n| ------------------ | ------------------- | ------------------------ |\n| `grpc.Condition`   | `rest.Condition`    | `convert_condition()`    |\n| `grpc.Filter`      | `rest.Filter`       | `convert_filter()`       |\n| `grpc.ScoredPoint` | `rest.ScoredPoint`  | `convert_scored_point()` |\n| `grpc.Value`       | Python native types | `value_to_json()`        |\n\nSources: [qdrant\\_client/conversions/conversion.py140-163](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py#L140-L163) [qdrant\\_client/conversions/conversion.py165-182](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py#L165-L182) [qdrant\\_client/conversions/conversion.py560-578](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py#L560-L578)\n\n### Payload Conversion",
      "index": 2,
      "token_count": 565,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.4-protocol-handling",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.4-protocol-handling.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "file_name": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.114387",
        "total_chunks": 6
      },
      "start_char": 3735,
      "end_char": 5781
    },
    {
      "content": "nt-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py#L560-L578)\n\n### Payload Conversion\n\nThe payload conversion system transforms between gRPC's structured `Value` types and Python native types:\n\n```\n```\n\nSources: [qdrant\\_client/conversions/conversion.py58-88](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py#L58-L88) [qdrant\\_client/conversions/conversion.py90-96](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py#L90-L96)\n\n## REST to gRPC Conversion System\n\nThe `RestToGrpc` class performs the inverse conversion, transforming REST API requests into gRPC protocol buffer messages. This system ensures proper field mapping and type validation.\n\n### Payload to gRPC Conversion\n\n```\n```\n\nSources: [qdrant\\_client/conversions/conversion.py36-56](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py#L36-L56) [qdrant\\_client/conversions/conversion.py90-92](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/conversion.py#L90-L92)\n\n## Connection Management\n\nThe connection management system handles both gRPC and HTTP connections with support for authentication, interceptors, and error handling.\n\n### gRPC Connection System\n\n```\n```\n\nSources: [qdrant\\_client/connection.py254-276](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/connection.py#L254-L276) [qdrant\\_client/connection.py278-307](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/connection.py#L278-L307) [qdrant\\_client/connection.py131-182](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/connection.py#L131-L182)\n\n### HTTP Connection System\n\n```\n```\n\nSources: [qdrant\\_client/http/api\\_client.py67-153](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api_client.py#L67-L153) [qdrant\\_client/http/api\\_client.py154-241](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api_client.",
      "index": 3,
      "token_count": 618,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.4-protocol-handling",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.4-protocol-handling.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "file_name": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.114387",
        "total_chunks": 6
      },
      "start_char": 5681,
      "end_char": 7703
    },
    {
      "content": "ient.py154-241](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api_client.py#L154-L241) [qdrant\\_client/http/api\\_client.py243-251](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api_client.py#L243-L251)\n\n## Error Handling\n\nThe protocol handling system includes comprehensive error handling for both gRPC and HTTP protocols, with special attention to rate limiting and resource exhaustion.\n\n### gRPC Error Handling\n\n```\n```\n\nSources: [qdrant\\_client/connection.py135-148](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/connection.py#L135-L148) [qdrant\\_client/connection.py189-207](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/connection.py#L189-L207)\n\n### HTTP Error Handling\n\n```\n```\n\nSources: [qdrant\\_client/http/api\\_client.py114-130](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api_client.py#L114-L130) [qdrant\\_client/http/api\\_client.py203-219](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api_client.py#L203-L219) [qdrant\\_client/common/client\\_exceptions.py5-17](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/common/client_exceptions.py#L5-L17)\n\n## Protocol Selection Logic\n\nThe protocol selection mechanism allows clients to choose between gRPC and HTTP protocols based on configuration and preferences. This is typically handled at the client initialization level, with the conversion system providing the necessary bridge between protocols.\n\n### Default Channel Options\n\nThe connection system provides default gRPC channel options for optimal performance:\n\n| Option                            | Value | Purpose                        |\n| --------------------------------- | ----- | ------------------------------ |\n| `grpc.max_send_message_length`    | -1    | Unlimited send message size    |\n| `grpc.max_receive_message_length` | -1    | Unlimited receive message size |\n\nSources: [qdrant\\_client/connection.py239-252](https://github.",
      "index": 4,
      "token_count": 555,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.4-protocol-handling",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.4-protocol-handling.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "file_name": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.114387",
        "total_chunks": 6
      },
      "start_char": 7603,
      "end_char": 9627
    },
    {
      "content": "| Unlimited receive message size |\n\nSources: [qdrant\\_client/connection.py239-252](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/connection.py#L239-L252)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Protocol Handling](#protocol-handling.md)\n- [Architecture Overview](#architecture-overview.md)\n- [Protocol Conversion Flow](#protocol-conversion-flow.md)\n- [gRPC to REST Conversion System](#grpc-to-rest-conversion-system.md)\n- [Core Conversion Methods](#core-conversion-methods.md)\n- [Payload Conversion](#payload-conversion.md)\n- [REST to gRPC Conversion System](#rest-to-grpc-conversion-system.md)\n- [Payload to gRPC Conversion](#payload-to-grpc-conversion.md)\n- [Connection Management](#connection-management.md)\n- [gRPC Connection System](#grpc-connection-system.md)\n- [HTTP Connection System](#http-connection-system.md)\n- [Error Handling](#error-handling.md)\n- [gRPC Error Handling](#grpc-error-handling.md)\n- [HTTP Error Handling](#http-error-handling.md)\n- [Protocol Selection Logic](#protocol-selection-logic.md)\n- [Default Channel Options](#default-channel-options.md)",
      "index": 5,
      "token_count": 289,
      "metadata": {
        "title": "_qdrant_qdrant-client_2.4-protocol-handling",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_2.4-protocol-handling.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "file_name": "_qdrant_qdrant-client_2.4-protocol-handling.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.114387",
        "total_chunks": 6
      },
      "start_char": 9527,
      "end_char": 11575
    },
    {
      "content": "Core Operations | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Core Operations\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_3-core-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3-core-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3-core-operations.md",
        "file_name": "_qdrant_qdrant-client_3-core-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.142732",
        "total_chunks": 5
      },
      "start_char": 0,
      "end_char": 2014
    },
    {
      "content": "(qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Core Operations\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py)\n- [qdrant\\_client/qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py)\n\nThis document covers the fundamental operations for working with vectors, collections, and points in Qdrant through the Python client library. Core operations provide the primary interface for data manipulation, retrieval, and management in both local and remote Qdrant instances.\n\nFor advanced search capabilities including hybrid search and FastEmbed integration, see [Advanced Features](qdrant/qdrant-client/4-advanced-features.md). For information about the underlying client architecture and backend implementations, see [Client Architecture](qdrant/qdrant-client/2-client-architecture.md).\n\n## Operation Categories\n\nThe qdrant-client provides three main categories of core operations:\n\n| Category                  | Purpose                                                          | Key Operations                                             |\n| ------------------------- | ---------------------------------------------------------------- | ---------------------------------------------------------- |\n| **Search Operations**     | Vector similarity search, recommendations, and data discovery    | `query_points`, `query_batch_points`, `scroll`, `count`    |\n| **Collection Management** | Create, configure, and manage vector collections                 | `create_collection`, `delete_collection`, `get_collection` |\n| **Point Operations**      | CRUD operations for individual points and their vectors/payloads | `upsert`, `retrieve`, `delete`, `update_vectors`           |\n\n## Universal Query Interface\n\nThe `query_points` method serves as the universal endpoint for all search operations, replacing older specialized methods like `search`, `recommend`, and `discover`:\n\n```\n```",
      "index": 1,
      "token_count": 404,
      "metadata": {
        "title": "_qdrant_qdrant-client_3-core-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3-core-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3-core-operations.md",
        "file_name": "_qdrant_qdrant-client_3-core-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.142732",
        "total_chunks": 5
      },
      "start_char": 1914,
      "end_char": 3963
    },
    {
      "content": "erations, replacing older specialized methods like `search`, `recommend`, and `discover`:\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py437-610](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L437-L610) [qdrant\\_client/qdrant\\_client.py393-435](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L393-L435)\n\n## Search Operations Flow\n\nSearch operations follow a consistent pattern from query resolution through result processing:\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py554-610](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L554-L610) [qdrant\\_client/qdrant\\_client.py421-435](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L421-L435)\n\n## Point Lifecycle Operations\n\nPoint operations manage the complete lifecycle of vector points from creation to deletion:\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py1565-1641](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L1565-L1641) [qdrant\\_client/qdrant\\_client.py1642-1695](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L1642-L1695) [qdrant\\_client/qdrant\\_client.py1747-1803](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L1747-L1803)\n\n## Collection Management Operations\n\nCollection management provides comprehensive control over vector storage configuration:\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py2233-2320](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2233-L2320) [qdrant\\_client/qdrant\\_client.py2164-2212](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2164-L2212) [qdrant\\_client/qdrant\\_client.py2084-2130](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2084-L2130)\n\n## Consistency and Ordering Controls",
      "index": 2,
      "token_count": 700,
      "metadata": {
        "title": "_qdrant_qdrant-client_3-core-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3-core-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3-core-operations.md",
        "file_name": "_qdrant_qdrant-client_3-core-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.142732",
        "total_chunks": 5
      },
      "start_char": 3863,
      "end_char": 5860
    },
    {
      "content": "nt/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2084-L2130)\n\n## Consistency and Ordering Controls\n\nAll operations support configurable consistency and ordering guarantees:\n\n| Parameter     | Type              | Values                                   | Purpose                           |\n| ------------- | ----------------- | ---------------------------------------- | --------------------------------- |\n| `consistency` | `ReadConsistency` | `int`, `'majority'`, `'quorum'`, `'all'` | Controls replica read consistency |\n| `ordering`    | `WriteOrdering`   | `'weak'`, `'medium'`, `'strong'`         | Controls write operation ordering |\n| `wait`        | `bool`            | `True`, `False`                          | Wait for operation completion     |\n| `timeout`     | `int`             | seconds                                  | Override global timeout           |\n\n## Error Handling and Retries\n\nOperations include built-in error handling and retry mechanisms:\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py262](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L262-L262) [qdrant\\_client/qdrant\\_client.py369](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L369-L369) [qdrant\\_client/qdrant\\_client.py552](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L552-L552)\n\n## Batch Operations Optimization\n\nBatch operations provide optimized performance for bulk data processing:\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_client.py2466-2529](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2466-L2529) [qdrant\\_client/qdrant\\_client.py2531-2602](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2531-L2602) [qdrant\\_client/qdrant\\_client.py2044-2082](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L2044-L2082)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page",
      "index": 3,
      "token_count": 585,
      "metadata": {
        "title": "_qdrant_qdrant-client_3-core-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3-core-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3-core-operations.md",
        "file_name": "_qdrant_qdrant-client_3-core-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.142732",
        "total_chunks": 5
      },
      "start_char": 5760,
      "end_char": 7786
    },
    {
      "content": "drant_client.py#L2044-L2082)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Core Operations](#core-operations.md)\n- [Operation Categories](#operation-categories.md)\n- [Universal Query Interface](#universal-query-interface.md)\n- [Search Operations Flow](#search-operations-flow.md)\n- [Point Lifecycle Operations](#point-lifecycle-operations.md)\n- [Collection Management Operations](#collection-management-operations.md)\n- [Consistency and Ordering Controls](#consistency-and-ordering-controls.md)\n- [Error Handling and Retries](#error-handling-and-retries.md)\n- [Batch Operations Optimization](#batch-operations-optimization.md)",
      "index": 4,
      "token_count": 154,
      "metadata": {
        "title": "_qdrant_qdrant-client_3-core-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3-core-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3-core-operations.md",
        "file_name": "_qdrant_qdrant-client_3-core-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.142732",
        "total_chunks": 5
      },
      "start_char": 7686,
      "end_char": 9734
    },
    {
      "content": "Search Operations | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Search Operations\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.1-search-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.1-search-operations.md",
        "file_name": "_qdrant_qdrant-client_3.1-search-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.164146",
        "total_chunks": 7
      },
      "start_char": 0,
      "end_char": 2018
    },
    {
      "content": "drant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Search Operations\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py)\n- [qdrant\\_client/async\\_qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py)\n- [qdrant\\_client/conversions/common\\_types.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/common_types.py)\n- [qdrant\\_client/local/async\\_qdrant\\_local.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/async_qdrant_local.py)\n- [qdrant\\_client/local/local\\_collection.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py)\n- [qdrant\\_client/local/qdrant\\_local.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py)\n- [qdrant\\_client/qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py)\n- [qdrant\\_client/qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py)\n- [tests/congruence\\_tests/test\\_common.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_common.py)\n- [tests/congruence\\_tests/test\\_query.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_query.py)\n\nSearch operations are the core functionality of the qdrant-client library, enabling vector similarity search, recommendations, discovery, and hybrid queries across both local and remote Qdrant instances. This document covers the search architecture, query types, and execution flows for all search operations in the client.\n\nFor collection management operations, see [Collection Management](qdrant/qdrant-client/3.2-collection-management.md). For embedding integration during search, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md).",
      "index": 1,
      "token_count": 574,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.1-search-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.1-search-operations.md",
        "file_name": "_qdrant_qdrant-client_3.1-search-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.164146",
        "total_chunks": 7
      },
      "start_char": 1918,
      "end_char": 3937
    },
    {
      "content": "ation during search, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md). For hybrid search algorithms, see [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md).\n\n## Search Architecture Overview\n\nThe search system follows a unified architecture where all search operations flow through a consistent interface regardless of the backend implementation.\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py437-610](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L437-L610) [qdrant\\_client/qdrant\\_remote.py543-682](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L543-L682) [qdrant\\_client/local/qdrant\\_local.py174-224](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L174-L224)\n\n## Search Methods\n\n### Universal Query Interface\n\nThe `query_points()` method serves as the universal endpoint for all search operations, supporting vector search, recommendations, discovery, context search, and hybrid queries.\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py437-610](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L437-L610) [qdrant\\_client/qdrant\\_client.py554-592](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L554-L592)\n\n### Legacy Search Methods\n\nThe `search()` and `search_batch()` methods are deprecated but maintained for backward compatibility. They internally convert to `query_points()` calls.\n\n| Method            | Status     | Replacement             | Purpose                         |\n| ----------------- | ---------- | ----------------------- | ------------------------------- |\n| `search()`        | Deprecated | `query_points()`        | Single vector similarity search |\n| `search_batch()`  | Deprecated | `query_batch_points()`  | Batch vector searches           |\n| `search_groups()` | Deprecated | `query_points_groups()` | Grouped search results          |\n\nSources: [qdrant\\_client/qdrant\\_client.",
      "index": 2,
      "token_count": 552,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.1-search-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.1-search-operations.md",
        "file_name": "_qdrant_qdrant-client_3.1-search-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.164146",
        "total_chunks": 7
      },
      "start_char": 3837,
      "end_char": 5886
    },
    {
      "content": "query_points_groups()` | Grouped search results          |\n\nSources: [qdrant\\_client/qdrant\\_client.py277-391](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L277-L391) [qdrant\\_client/qdrant\\_client.py236-275](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L236-L275)\n\n## Query Types and Resolution\n\n### Dense Vector Queries\n\nDense vector queries use numerical vectors for similarity search with various distance metrics.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py533-701](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L533-L701) [qdrant\\_client/local/local\\_collection.py282-332](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L282-L332)\n\n### Sparse Vector Queries\n\nSparse vectors use index-value pairs for high-dimensional sparse data with optional IDF rescoring.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py639-646](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L639-L646) [qdrant\\_client/local/local\\_collection.py190-202](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L190-L202)\n\n### Advanced Query Types\n\n#### Recommendation Queries\n\nRecommendation queries use positive and negative examples to find similar vectors.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py591-622](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L591-L622) [qdrant\\_client/local/qdrant\\_local.py353-361](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L353-L361)\n\n#### Discovery and Context Queries\n\nDiscovery queries find vectors that distinguish between target and context, while context queries use positive-negative pairs.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py623-638](https://github.",
      "index": 3,
      "token_count": 603,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.1-search-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.1-search-operations.md",
        "file_name": "_qdrant_qdrant-client_3.1-search-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.164146",
        "total_chunks": 7
      },
      "start_char": 5786,
      "end_char": 7785
    },
    {
      "content": "egative pairs.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py623-638](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L623-L638) [qdrant\\_client/local/qdrant\\_local.py363-385](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py#L363-L385)\n\n## Search Execution Pipeline\n\n### Local Collection Search\n\nThe `LocalCollection` class implements the complete search pipeline for local execution.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py533-701](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L533-L701) [qdrant\\_client/local/local\\_collection.py499-523](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L499-L523)\n\n### Remote Search Execution\n\nRemote searches are handled by `QdrantRemote` with automatic protocol conversion between REST and gRPC.\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_remote.py543-682](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L543-L682) [qdrant\\_client/qdrant\\_remote.py573-629](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L573-L629)\n\n## Hybrid Search and Prefetch\n\n### Prefetch Pipeline\n\nPrefetch operations enable multi-stage search with rescoring and fusion algorithms.\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py703-755](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L703-L755) [qdrant\\_client/local/local\\_collection.py792-842](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L792-L842)\n\n### Fusion Query Processing\n\n```\n```\n\nSources: [qdrant\\_client/local/local\\_collection.py804-842](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L804-L842) [qdrant\\_client/hybrid/fusion.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/fusion.py)",
      "index": 4,
      "token_count": 658,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.1-search-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.1-search-operations.md",
        "file_name": "_qdrant_qdrant-client_3.1-search-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.164146",
        "total_chunks": 7
      },
      "start_char": 7685,
      "end_char": 9727
    },
    {
      "content": "d/fusion.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/fusion.py)\n\n## Performance Considerations\n\n### Vector Type Performance\n\n| Vector Type | Storage              | Search Performance              | Memory Usage              |\n| ----------- | -------------------- | ------------------------------- | ------------------------- |\n| Dense       | `np.ndarray`         | Fast with vectorized operations | High for large dimensions |\n| Sparse      | `list[SparseVector]` | Efficient for high sparsity     | Low for sparse data       |\n| Multi       | `list[np.ndarray]`   | Variable by comparator          | Highest memory usage      |\n\n### Search Optimizations\n\nThe local collection implements several optimizations for search performance:\n\n- **Early termination** with score thresholds\n- **Vectorized distance calculations** using NumPy operations\n- **Payload filtering masks** to avoid unnecessary computations\n- **Result ordering** based on distance metrics\n- **IDF rescoring** for sparse vectors when configured\n\nSources: [qdrant\\_client/local/local\\_collection.py649-701](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L649-L701) [qdrant\\_client/local/local\\_collection.py175-202](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/local_collection.py#L175-L202)\n\n### Batch Processing\n\nBatch operations reduce network overhead for multiple queries:\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_client.py393-435](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L393-L435) [qdrant\\_client/qdrant\\_remote.py684-750](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L684-L750)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Search Operations](#search-operations.md)\n- [Search Architecture Overview](#search-architecture-overview.md)\n- [Search Methods](#search-methods.md)\n- [Universal Query Interface](#universal-query-interface.md)",
      "index": 5,
      "token_count": 516,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.1-search-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.1-search-operations.md",
        "file_name": "_qdrant_qdrant-client_3.1-search-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.164146",
        "total_chunks": 7
      },
      "start_char": 9627,
      "end_char": 11659
    },
    {
      "content": "- [Search Methods](#search-methods.md)\n- [Universal Query Interface](#universal-query-interface.md)\n- [Legacy Search Methods](#legacy-search-methods.md)\n- [Query Types and Resolution](#query-types-and-resolution.md)\n- [Dense Vector Queries](#dense-vector-queries.md)\n- [Sparse Vector Queries](#sparse-vector-queries.md)\n- [Advanced Query Types](#advanced-query-types.md)\n- [Recommendation Queries](#recommendation-queries.md)\n- [Discovery and Context Queries](#discovery-and-context-queries.md)\n- [Search Execution Pipeline](#search-execution-pipeline.md)\n- [Local Collection Search](#local-collection-search.md)\n- [Remote Search Execution](#remote-search-execution.md)\n- [Hybrid Search and Prefetch](#hybrid-search-and-prefetch.md)\n- [Prefetch Pipeline](#prefetch-pipeline.md)\n- [Fusion Query Processing](#fusion-query-processing.md)\n- [Performance Considerations](#performance-considerations.md)\n- [Vector Type Performance](#vector-type-performance.md)\n- [Search Optimizations](#search-optimizations.md)\n- [Batch Processing](#batch-processing.md)",
      "index": 6,
      "token_count": 250,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.1-search-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.1-search-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.1-search-operations.md",
        "file_name": "_qdrant_qdrant-client_3.1-search-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.164146",
        "total_chunks": 7
      },
      "start_char": 11559,
      "end_char": 13607
    },
    {
      "content": "Collection Management | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Collection Management\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.2-collection-management",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.2-collection-management.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.2-collection-management.md",
        "file_name": "_qdrant_qdrant-client_3.2-collection-management.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.196636",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2026
    },
    {
      "content": "t/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Collection Management\n\nRelevant source files\n\n- [qdrant\\_client/grpc/collections\\_pb2.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/grpc/collections_pb2.py)\n- [qdrant\\_client/grpc/points\\_service\\_pb2.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/grpc/points_service_pb2.py)\n- [qdrant\\_client/grpc/points\\_service\\_pb2\\_grpc.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/grpc/points_service_pb2_grpc.py)\n- [qdrant\\_client/http/api/collections\\_api.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/collections_api.py)\n- [qdrant\\_client/http/api/points\\_api.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py)\n- [qdrant\\_client/http/api/service\\_api.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/service_api.py)\n- [qdrant\\_client/http/api/snapshots\\_api.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/snapshots_api.py)\n- [qdrant\\_client/proto/collections.proto](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto)\n- [qdrant\\_client/proto/points\\_service.proto](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points_service.proto)\n\nCollection Management encompasses the creation, configuration, modification, and deletion of vector collections in Qdrant. This system provides a unified interface for managing collections across both local and remote Qdrant instances using HTTP REST and gRPC protocols. For information about point operations within collections, see [Point Operations](qdrant/qdrant-client/3.3-point-operations.md). For search operations across collections, see [Search Operations](qdrant/qdrant-client/3.1-search-operations.md).\n\n## Collection Lifecycle Operations\n\nThe collection management system provides five core operations that form the complete lifecycle of a Qdrant collection:",
      "index": 1,
      "token_count": 551,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.2-collection-management",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.2-collection-management.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.2-collection-management.md",
        "file_name": "_qdrant_qdrant-client_3.2-collection-management.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.196636",
        "total_chunks": 6
      },
      "start_char": 1926,
      "end_char": 3972
    },
    {
      "content": "ment system provides five core operations that form the complete lifecycle of a Qdrant collection:\n\n```\n```\n\n**Sources:** [qdrant\\_client/http/api/collections\\_api.py51-346](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/collections_api.py#L51-L346) [qdrant\\_client/proto/collections.proto366-401](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L366-L401)\n\n### Core Collection Operations\n\n| Operation           | HTTP Method                      | gRPC Message               | Purpose                                            |\n| ------------------- | -------------------------------- | -------------------------- | -------------------------------------------------- |\n| `create_collection` | PUT `/collections/{name}`        | `CreateCollection`         | Create new collection with specified configuration |\n| `collection_exists` | GET `/collections/{name}/exists` | `CollectionExistsRequest`  | Check if collection exists                         |\n| `get_collection`    | GET `/collections/{name}`        | `GetCollectionInfoRequest` | Retrieve detailed collection information           |\n| `get_collections`   | GET `/collections`               | `ListCollectionsRequest`   | List all existing collections                      |\n| `update_collection` | PATCH `/collections/{name}`      | `UpdateCollection`         | Modify collection parameters                       |\n| `delete_collection` | DELETE `/collections/{name}`     | `DeleteCollection`         | Remove collection and all data                     |\n\n**Sources:** [qdrant\\_client/http/api/collections\\_api.py75-195](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/collections_api.py#L75-L195) [qdrant\\_client/proto/collections.proto73-401](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L73-L401)\n\n## Collection Configuration Structure",
      "index": 2,
      "token_count": 447,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.2-collection-management",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.2-collection-management.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.2-collection-management.md",
        "file_name": "_qdrant_qdrant-client_3.2-collection-management.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.196636",
        "total_chunks": 6
      },
      "start_char": 3872,
      "end_char": 5825
    },
    {
      "content": "ob/ac6f6cd2/qdrant_client/proto/collections.proto#L73-L401)\n\n## Collection Configuration Structure\n\nCollections in Qdrant are configured through a hierarchical structure that defines vector storage, indexing, optimization, and operational parameters:\n\n```\n```\n\n**Sources:** [qdrant\\_client/proto/collections.proto428-435](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L428-L435) [qdrant\\_client/proto/collections.proto36-70](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L36-L70) [qdrant\\_client/proto/collections.proto488-498](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L488-L498)\n\n### Vector Configuration Types\n\nThe `VectorsConfig` message supports two distinct configuration modes for vector storage:\n\n```\n```\n\n**Sources:** [qdrant\\_client/proto/collections.proto12-20](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L12-L20) [qdrant\\_client/proto/collections.proto36-41](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L36-L41) [qdrant\\_client/proto/collections.proto28-30](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L28-L30)\n\n## Protocol Implementation Architecture\n\nThe collection management system implements a dual-protocol architecture supporting both HTTP REST and gRPC communication:\n\n```\n```\n\n**Sources:** [qdrant\\_client/http/api/collections\\_api.py51-52](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/collections_api.py#L51-L52) [qdrant\\_client/grpc/collections\\_pb2.py1-189](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/grpc/collections_pb2.py#L1-L189) [qdrant\\_client/proto/collections.proto1-724](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L1-L724)\n\n### HTTP API Implementation",
      "index": 3,
      "token_count": 591,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.2-collection-management",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.2-collection-management.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.2-collection-management.md",
        "file_name": "_qdrant_qdrant-client_3.2-collection-management.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.196636",
        "total_chunks": 6
      },
      "start_char": 5725,
      "end_char": 7704
    },
    {
      "content": "t-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L1-L724)\n\n### HTTP API Implementation\n\nThe HTTP collections API provides both synchronous and asynchronous implementations with consistent method signatures:\n\n```\n```\n\n**Sources:** [qdrant\\_client/http/api/collections\\_api.py51-53](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/collections_api.py#L51-L53) [qdrant\\_client/http/api/collections\\_api.py75-104](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/collections_api.py#L75-L104) [qdrant\\_client/http/api/collections\\_api.py18-44](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/collections_api.py#L18-L44)\n\n### Collection Creation Parameters\n\nThe `CreateCollection` message defines the comprehensive set of parameters available when creating a new collection:\n\n| Parameter                  | Type                   | Purpose                                   |\n| -------------------------- | ---------------------- | ----------------------------------------- |\n| `collection_name`          | `string`               | Unique identifier for the collection      |\n| `vectors_config`           | `VectorsConfig`        | Vector storage and indexing configuration |\n| `hnsw_config`              | `HnswConfigDiff`       | HNSW index parameters                     |\n| `optimizers_config`        | `OptimizersConfigDiff` | Background optimization settings          |\n| `wal_config`               | `WalConfigDiff`        | Write-ahead log configuration             |\n| `shard_number`             | `uint32`               | Number of shards for distribution         |\n| `replication_factor`       | `uint32`               | Number of replicas per shard              |\n| `write_consistency_factor` | `uint32`               | Write consistency requirements            |\n| `on_disk_payload`          | `bool`                 | Store payload on disk vs memory           |",
      "index": 4,
      "token_count": 452,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.2-collection-management",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.2-collection-management.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.2-collection-management.md",
        "file_name": "_qdrant_qdrant-client_3.2-collection-management.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.196636",
        "total_chunks": 6
      },
      "start_char": 7604,
      "end_char": 9571
    },
    {
      "content": "| `on_disk_payload`          | `bool`                 | Store payload on disk vs memory           |\n| `quantization_config`      | `QuantizationConfig`   | Vector quantization settings              |\n| `sharding_method`          | `ShardingMethod`       | Auto or custom sharding                   |\n| `sparse_vectors_config`    | `SparseVectorConfig`   | Sparse vector configuration               |\n| `strict_mode_config`       | `StrictModeConfig`     | Operational constraints                   |\n\n**Sources:** [qdrant\\_client/proto/collections.proto366-384](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L366-L384)\n\n### Collection Update Operations\n\nCollection updates are performed through the `UpdateCollection` message, which allows modification of specific configuration aspects without recreating the collection:\n\n```\n```\n\n**Sources:** [qdrant\\_client/proto/collections.proto386-396](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L386-L396) [qdrant\\_client/proto/collections.proto421-426](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/collections.proto#L421-L426)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Collection Management](#collection-management.md)\n- [Collection Lifecycle Operations](#collection-lifecycle-operations.md)\n- [Core Collection Operations](#core-collection-operations.md)\n- [Collection Configuration Structure](#collection-configuration-structure.md)\n- [Vector Configuration Types](#vector-configuration-types.md)\n- [Protocol Implementation Architecture](#protocol-implementation-architecture.md)\n- [HTTP API Implementation](#http-api-implementation.md)\n- [Collection Creation Parameters](#collection-creation-parameters.md)\n- [Collection Update Operations](#collection-update-operations.md)",
      "index": 5,
      "token_count": 439,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.2-collection-management",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.2-collection-management.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.2-collection-management.md",
        "file_name": "_qdrant_qdrant-client_3.2-collection-management.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.196636",
        "total_chunks": 6
      },
      "start_char": 9471,
      "end_char": 11519
    },
    {
      "content": "Point Operations | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Point Operations\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.3-point-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.3-point-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.3-point-operations.md",
        "file_name": "_qdrant_qdrant-client_3.3-point-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.337527",
        "total_chunks": 9
      },
      "start_char": 0,
      "end_char": 2016
    },
    {
      "content": "qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Point Operations\n\nRelevant source files\n\n- [qdrant\\_client/grpc/points\\_pb2.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/grpc/points_pb2.py)\n- [qdrant\\_client/http/api/collections\\_api.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/collections_api.py)\n- [qdrant\\_client/http/api/points\\_api.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py)\n- [qdrant\\_client/http/api/service\\_api.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/service_api.py)\n- [qdrant\\_client/http/api/snapshots\\_api.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/snapshots_api.py)\n- [qdrant\\_client/proto/points.proto](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto)\n\nThis document covers the fundamental CRUD (Create, Read, Update, Delete) operations for points in the Qdrant client library. Point operations include inserting, retrieving, updating, and deleting vector points along with their associated payload data. These operations work across both local and remote Qdrant instances through HTTP and gRPC protocols.\n\nFor information about search and query operations on points, see [Search Operations](qdrant/qdrant-client/3.1-search-operations.md). For collection-level management, see [Collection Management](qdrant/qdrant-client/3.2-collection-management.md).\n\n## Overview\n\nPoint operations in Qdrant are the core data manipulation functions that allow users to manage vector points and their associated metadata. Each point consists of:\n\n- **Point ID**: A unique identifier (numeric or UUID)\n- **Vector Data**: Dense, sparse, or multi-dense vectors\n- **Payload**: Key-value metadata associated with the point\n\nThe system supports both individual and batch operations, with configurable consistency guarantees and write ordering options.\n\n```\n```\n\nSources: [qdrant\\_client/http/api/points\\_api.",
      "index": 1,
      "token_count": 516,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.3-point-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.3-point-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.3-point-operations.md",
        "file_name": "_qdrant_qdrant-client_3.3-point-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.337527",
        "total_chunks": 9
      },
      "start_char": 1916,
      "end_char": 3962
    },
    {
      "content": "ency guarantees and write ordering options.\n\n```\n```\n\nSources: [qdrant\\_client/http/api/points\\_api.py51-521](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py#L51-L521) [qdrant\\_client/grpc/points\\_pb2.py1-50](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/grpc/points_pb2.py#L1-L50) [qdrant\\_client/proto/points.proto1-50](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto#L1-L50)\n\n## Core Point Operations\n\n### Upsert Points\n\nThe `upsert_points` operation inserts new points or updates existing ones. If a point with the given ID already exists, it will be completely replaced.\n\n**HTTP Implementation:**\n\n- Method: `PUT /collections/{collection_name}/points`\n- Function: `upsert_points(collection_name, point_insert_operations, wait, ordering)`\n\n**gRPC Implementation:**\n\n- Message: `UpsertPoints`\n- Fields: `collection_name`, `points`, `wait`, `ordering`, `shard_key_selector`\n\n```\n```\n\nSources: [qdrant\\_client/http/api/points\\_api.py488-520](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py#L488-L520) [qdrant\\_client/proto/points.proto132-138](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto#L132-L138)\n\n### Delete Points\n\nThe `delete_points` operation removes points from the collection based on a points selector.\n\n**HTTP Implementation:**\n\n- Method: `POST /collections/{collection_name}/points/delete`\n- Function: `delete_points(collection_name, points_selector, wait, ordering)`\n\n**gRPC Implementation:**\n\n- Message: `DeletePoints`\n- Fields: `collection_name`, `points`, `wait`, `ordering`, `shard_key_selector`\n\n**Points Selection Methods:**\n\n- By ID list: Specify exact point IDs to delete\n- By filter: Delete points matching payload conditions\n- By point selector: Combined ID and filter criteria\n\nSources: [qdrant\\_client/http/api/points\\_api.py188-220](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.",
      "index": 2,
      "token_count": 586,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.3-point-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.3-point-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.3-point-operations.md",
        "file_name": "_qdrant_qdrant-client_3.3-point-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.337527",
        "total_chunks": 9
      },
      "start_char": 3862,
      "end_char": 5899
    },
    {
      "content": ".py188-220](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py#L188-L220) [qdrant\\_client/proto/points.proto140-146](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto#L140-L146)\n\n### Get Points\n\nThe `get_points` operations retrieve point data by ID. Two variants are available:\n\n1. **Get Single Point**: `get_point(collection_name, id)`\n2. **Get Multiple Points**: `get_points(collection_name, point_request)`\n\n**HTTP Implementation:**\n\n- Single: `GET /collections/{collection_name}/points/{id}`\n- Multiple: `POST /collections/{collection_name}/points`\n\n**gRPC Implementation:**\n\n- Message: `GetPoints`\n- Fields: `collection_name`, `ids`, `with_payload`, `with_vectors`, `read_consistency`\n\n**Response Control:**\n\n- `with_payload`: Control which payload fields to include/exclude\n- `with_vectors`: Control which vector types to include\n- `read_consistency`: Specify consistency guarantees\n\nSources: [qdrant\\_client/http/api/points\\_api.py290-350](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py#L290-L350) [qdrant\\_client/proto/points.proto148-157](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto#L148-L157)\n\n## Vector Operations\n\n### Update Point Vectors\n\nThe `update_vectors` operation updates specific named vectors for points while keeping other vectors intact.\n\n**HTTP Implementation:**\n\n- Method: `PUT /collections/{collection_name}/points/vectors`\n- Function: `update_vectors(collection_name, update_vectors, wait, ordering)`\n\n**gRPC Implementation:**\n\n- Message: `UpdatePointVectors`\n- Fields: `collection_name`, `points`, `wait`, `ordering`, `shard_key_selector`\n\n### Delete Point Vectors\n\nThe `delete_vectors` operation removes specific named vectors from points without deleting the points themselves.\n\n**HTTP Implementation:**\n\n- Method: `POST /collections/{collection_name}/points/vectors/delete`\n- Function: `delete_vectors(collection_name, delete_vectors, wait, ordering)`",
      "index": 3,
      "token_count": 542,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.3-point-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.3-point-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.3-point-operations.md",
        "file_name": "_qdrant_qdrant-client_3.3-point-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.337527",
        "total_chunks": 9
      },
      "start_char": 5799,
      "end_char": 7847
    },
    {
      "content": "ints/vectors/delete`\n- Function: `delete_vectors(collection_name, delete_vectors, wait, ordering)`\n\n**gRPC Implementation:**\n\n- Message: `DeletePointVectors`\n- Fields: `collection_name`, `points_selector`, `vectors`, `wait`, `ordering`\n\nSources: [qdrant\\_client/http/api/points\\_api.py454-486](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py#L454-L486) [qdrant\\_client/proto/points.proto159-179](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto#L159-L179)\n\n## Payload Operations\n\n### Set Payload\n\nThe `set_payload` operation adds or updates payload fields for selected points.\n\n**HTTP Implementation:**\n\n- Method: `POST /collections/{collection_name}/points/payload`\n- Function: `set_payload(collection_name, set_payload, wait, ordering)`\n\n**gRPC Implementation:**\n\n- Message: `SetPayloadPoints`\n- Fields: `collection_name`, `payload`, `points_selector`, `wait`, `ordering`\n\n### Delete Payload\n\nThe `delete_payload` operation removes specific payload keys from selected points.\n\n**HTTP Implementation:**\n\n- Method: `POST /collections/{collection_name}/points/payload/delete`\n- Function: `delete_payload(collection_name, delete_payload, wait, ordering)`\n\n**gRPC Implementation:**\n\n- Message: `DeletePayloadPoints`\n- Fields: `collection_name`, `keys`, `points_selector`, `wait`, `ordering`\n\n### Clear Payload\n\nThe `clear_payload` operation removes all payload data from selected points.\n\n**HTTP Implementation:**\n\n- Method: `POST /collections/{collection_name}/points/payload/clear`\n- Function: `clear_payload(collection_name, points_selector, wait, ordering)`\n\n**gRPC Implementation:**\n\n- Message: `ClearPayloadPoints`\n- Fields: `collection_name`, `points`, `wait`, `ordering`\n\n```\n```\n\nSources: [qdrant\\_client/http/api/points\\_api.py420-452](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py#L420-L452) [qdrant\\_client/proto/points.proto181-208](https://github.",
      "index": 4,
      "token_count": 530,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.3-point-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.3-point-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.3-point-operations.md",
        "file_name": "_qdrant_qdrant-client_3.3-point-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.337527",
        "total_chunks": 9
      },
      "start_char": 7747,
      "end_char": 9731
    },
    {
      "content": "_client/http/api/points_api.py#L420-L452) [qdrant\\_client/proto/points.proto181-208](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto#L181-L208)\n\n## Batch Operations\n\n### Batch Update\n\nThe `batch_update` operation allows multiple point operations to be executed in a single request for improved performance.\n\n**HTTP Implementation:**\n\n- Method: `POST /collections/{collection_name}/points/batch`\n- Function: `batch_update(collection_name, update_operations, wait, ordering)`\n\n**gRPC Implementation:**\n\n- Message: `UpdateBatchPoints`\n- Fields: `collection_name`, `operations`, `wait`, `ordering`\n\n**Supported Batch Operations:**\n\n- `upsert`: Insert or update points\n- `delete_points`: Delete points by selector\n- `set_payload`: Set payload fields\n- `overwrite_payload`: Replace entire payload\n- `delete_payload`: Delete payload keys\n- `clear_payload`: Clear all payload\n- `update_vectors`: Update vector data\n- `delete_vectors`: Delete specific vectors\n\n```\n```\n\nSources: [qdrant\\_client/http/api/points\\_api.py55-87](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py#L55-L87) [qdrant\\_client/proto/points.proto848-865](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto#L848-L865)\n\n## Point Retrieval Operations\n\n### Scroll Points\n\nThe `scroll_points` operation provides paginated access to points in a collection with optional filtering.\n\n**HTTP Implementation:**\n\n- Method: `POST /collections/{collection_name}/points/scroll`\n- Function: `scroll_points(collection_name, scroll_request, consistency, timeout)`\n\n**gRPC Implementation:**\n\n- Message: `ScrollPoints`\n- Fields: `collection_name`, `filter`, `offset`, `limit`, `with_payload`, `with_vectors`, `order_by`\n\n**Pagination Control:**\n\n- `offset`: Starting point ID for pagination\n- `limit`: Maximum number of points to return\n- `order_by`: Sort by payload field with direction\n\n### Count Points",
      "index": 5,
      "token_count": 511,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.3-point-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.3-point-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.3-point-operations.md",
        "file_name": "_qdrant_qdrant-client_3.3-point-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.337527",
        "total_chunks": 9
      },
      "start_char": 9631,
      "end_char": 11598
    },
    {
      "content": "um number of points to return\n- `order_by`: Sort by payload field with direction\n\n### Count Points\n\nThe `count_points` operation returns the number of points matching a filter condition.\n\n**HTTP Implementation:**\n\n- Method: `POST /collections/{collection_name}/points/count`\n- Function: `count_points(collection_name, count_request, timeout)`\n\n**gRPC Implementation:**\n\n- Message: `CountPoints`\n- Fields: `collection_name`, `filter`, `exact`, `read_consistency`\n\n**Count Options:**\n\n- `exact`: Whether to return exact count (slower) or approximate count (faster)\n- `filter`: Optional filter condition to count only matching points\n\nSources: [qdrant\\_client/http/api/points\\_api.py386-418](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/http/api/points_api.py#L386-L418) [qdrant\\_client/proto/points.proto404-543](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto#L404-L543)\n\n## Consistency and Ordering\n\n### Write Ordering\n\nPoint operations support different write ordering guarantees:\n\n| Ordering Type | Description                         | Performance | Consistency         |\n| ------------- | ----------------------------------- | ----------- | ------------------- |\n| `Weak`        | Operations may be reordered         | Fastest     | Eventual            |\n| `Medium`      | Operations through dynamic leader   | Medium      | Short inconsistency |\n| `Strong`      | Operations through permanent leader | Slowest     | Strong              |\n\n### Read Consistency\n\nPoint retrieval operations support different read consistency levels:\n\n| Consistency Type | Description                        | Latency      | Reliability   |\n| ---------------- | ---------------------------------- | ------------ | ------------- |\n| `All`            | Read from all nodes                | Highest      | Most reliable |\n| `Majority`       | Read from majority of nodes        | Medium       | Balanced      |\n| `Quorum`         | Read from half + 1 nodes           | Lowest       | Faster        |",
      "index": 6,
      "token_count": 455,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.3-point-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.3-point-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.3-point-operations.md",
        "file_name": "_qdrant_qdrant-client_3.3-point-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.337527",
        "total_chunks": 9
      },
      "start_char": 11498,
      "end_char": 13542
    },
    {
      "content": "ced      |\n| `Quorum`         | Read from half + 1 nodes           | Lowest       | Faster        |\n| `factor`         | Read from specific number of nodes | Configurable | Configurable  |\n\nSources: [qdrant\\_client/proto/points.proto11-32](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/proto/points.proto#L11-L32)\n\n## Error Handling and Responses\n\nAll point operations return structured responses containing:\n\n- **Result**: Operation-specific data (points, count, etc.)\n- **Status**: Success/failure indication\n- **Time**: Execution time in seconds\n- **Usage**: Hardware resource usage statistics (optional)\n\n**Common Response Types:**\n\n- `UpdateResult`: For modification operations (upsert, delete, update)\n- `RetrievedPoint[]`: For retrieval operations (get, scroll)\n- `CountResult`: For count operations\n- `BatchResult`: For batch operations\n\n```\n```\n\nSources: [qdrant\\_client/grpc/points\\_pb2.py1000-1100](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/grpc/points_pb2.py#L1000-L1100)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Point Operations](#point-operations.md)\n- [Overview](#overview.md)\n- [Core Point Operations](#core-point-operations.md)\n- [Upsert Points](#upsert-points.md)\n- [Delete Points](#delete-points.md)\n- [Get Points](#get-points.md)\n- [Vector Operations](#vector-operations.md)\n- [Update Point Vectors](#update-point-vectors.md)\n- [Delete Point Vectors](#delete-point-vectors.md)\n- [Payload Operations](#payload-operations.md)\n- [Set Payload](#set-payload.md)\n- [Delete Payload](#delete-payload.md)\n- [Clear Payload](#clear-payload.md)\n- [Batch Operations](#batch-operations.md)\n- [Batch Update](#batch-update.md)\n- [Point Retrieval Operations](#point-retrieval-operations.md)\n- [Scroll Points](#scroll-points.md)\n- [Count Points](#count-points.md)\n- [Consistency and Ordering](#consistency-and-ordering.md)\n- [Write Ordering](#write-ordering.md)\n- [Read Consistency](#read-consistency.md)",
      "index": 7,
      "token_count": 536,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.3-point-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.3-point-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.3-point-operations.md",
        "file_name": "_qdrant_qdrant-client_3.3-point-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.337527",
        "total_chunks": 9
      },
      "start_char": 13442,
      "end_char": 15430
    },
    {
      "content": "-and-ordering.md)\n- [Write Ordering](#write-ordering.md)\n- [Read Consistency](#read-consistency.md)\n- [Error Handling and Responses](#error-handling-and-responses.md)",
      "index": 8,
      "token_count": 44,
      "metadata": {
        "title": "_qdrant_qdrant-client_3.3-point-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_3.3-point-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_3.3-point-operations.md",
        "file_name": "_qdrant_qdrant-client_3.3-point-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.337527",
        "total_chunks": 9
      },
      "start_char": 15330,
      "end_char": 17378
    },
    {
      "content": "Advanced Features | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Advanced Features\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_4-advanced-features",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4-advanced-features.md",
        "file_name": "_qdrant_qdrant-client_4-advanced-features.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.368114",
        "total_chunks": 5
      },
      "start_char": 0,
      "end_char": 2018
    },
    {
      "content": "drant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Advanced Features\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_fastembed.py)\n- [qdrant\\_client/qdrant\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py)\n- [tests/test\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_fastembed.py)\n- [tools/async\\_client\\_generator/fastembed\\_generator.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/async_client_generator/fastembed_generator.py)\n\nThis document covers the advanced functionality of the qdrant-client Python library, including embedding integration, batch processing, and specialized search capabilities. These features extend the basic client operations to provide higher-level abstractions for common vector database workflows.\n\nFor basic client operations and collection management, see [Core Operations](qdrant/qdrant-client/3-core-operations.md). For implementation details of filtering and type inspection systems, see [Implementation Details](qdrant/qdrant-client/5-implementation-details.md).\n\n## FastEmbed Integration\n\nThe qdrant-client provides seamless integration with FastEmbed for automatic text and image embedding generation through the `QdrantFastembedMixin` and `AsyncQdrantFastembedMixin` classes.\n\n```\n```\n\nThe `QdrantFastembedMixin` class provides several key methods for model management:\n\n| Method                 | Purpose                          | Returns                           |\n| ---------------------- | -------------------------------- | --------------------------------- |\n| `set_model()`          | Configure dense embedding model  | None                              |\n| `set_sparse_model()`   | Configure sparse embedding model | None                              |\n| `list_text_models()`   | List available text models       | `dict[str, tuple[int, Distance]]` |",
      "index": 1,
      "token_count": 440,
      "metadata": {
        "title": "_qdrant_qdrant-client_4-advanced-features",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4-advanced-features.md",
        "file_name": "_qdrant_qdrant-client_4-advanced-features.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.368114",
        "total_chunks": 5
      },
      "start_char": 1918,
      "end_char": 3934
    },
    {
      "content": "|\n| `list_text_models()`   | List available text models       | `dict[str, tuple[int, Distance]]` |\n| `list_sparse_models()` | List available sparse models     | `dict[str, dict[str, Any]]`       |\n| `get_embedding_size()` | Get model embedding dimensions   | `int`                             |\n\nThe embedding models are managed through the `ModelEmbedder` class, which handles both dense and sparse embeddings. The default dense model is `BAAI/bge-small-en`, as defined in the `DEFAULT_EMBEDDING_MODEL` constant.\n\n**Sources:** [qdrant\\_client/qdrant\\_fastembed.py31-157](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L31-L157) [qdrant\\_client/async\\_qdrant\\_fastembed.py37-212](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_fastembed.py#L37-L212)\n\n## Batch Operations\n\nThe client provides efficient batch processing capabilities for high-volume data ingestion through the `add()` method and underlying batch uploaders.\n\n```\n```\n\nThe batch processing system handles several key operations:\n\n1. **Document Embedding**: The `_embed_documents()` method processes documents in batches using the configured embedding model\n2. **Sparse Embedding**: The `_sparse_embed_documents()` method generates sparse vectors for hybrid search\n3. **Point Construction**: The `_points_iterator()` method combines embeddings with metadata to create `PointStruct` objects\n4. **Parallel Upload**: The `upload_points()` method handles efficient batch upload with configurable parallelism\n\nKey parameters for batch operations:\n\n| Parameter            | Default | Purpose                          |\n| -------------------- | ------- | -------------------------------- |\n| `batch_size`         | 32      | Documents per batch              |\n| `parallel`           | None    | Parallel workers for embedding   |\n| `DEFAULT_BATCH_SIZE` | 8       | Default batch size for embedding |\n\n**Sources:** [qdrant\\_client/qdrant\\_fastembed.py518-610](https://github.",
      "index": 2,
      "token_count": 470,
      "metadata": {
        "title": "_qdrant_qdrant-client_4-advanced-features",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4-advanced-features.md",
        "file_name": "_qdrant_qdrant-client_4-advanced-features.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.368114",
        "total_chunks": 5
      },
      "start_char": 3834,
      "end_char": 5839
    },
    {
      "content": "atch size for embedding |\n\n**Sources:** [qdrant\\_client/qdrant\\_fastembed.py518-610](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L518-L610) [qdrant\\_client/qdrant\\_fastembed.py270-318](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L270-L318)\n\n## Hybrid Search\n\nThe client supports hybrid search combining dense and sparse vectors through reciprocal rank fusion (RRF). This is implemented in the `query()` and `query_batch()` methods.\n\n```\n```\n\nThe hybrid search process involves:\n\n1. **Dual Embedding**: Query text is embedded using both dense and sparse models\n2. **Parallel Search**: Both dense and sparse searches are executed via `search_batch()`\n3. **Result Fusion**: Results are combined using `reciprocal_rank_fusion()` from the `qdrant_client.hybrid.fusion` module\n4. **Response Formatting**: Results are converted to `QueryResponse` objects\n\nVector field naming follows a consistent pattern:\n\n- Dense vectors: `\"fast-{model_name}\"` (e.g., `\"fast-bge-small-en\"`)\n- Sparse vectors: `\"fast-sparse-{model_name}\"` (e.g., `\"fast-sparse-splade_pp_en_v1\"`)\n\n**Sources:** [qdrant\\_client/qdrant\\_fastembed.py612-696](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L612-L696) [qdrant\\_client/qdrant\\_fastembed.py18](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L18-L18)\n\n## Local Inference\n\nThe client provides local inference capabilities through the `ModelEmbedder` class and related inference object detection systems.\n\n```\n```\n\nThe local inference system provides several key capabilities:\n\n1. **Query Resolution**: The `_resolve_query()` method handles various query types including inference objects\n2. **Model Embedding**: The `_embed_models()` and `_embed_models_strict()` methods process Pydantic models with embedded inference objects\n3. **Type Detection**: The system uses `INFERENCE_OBJECT_TYPES` to identify objects requiring inference\n4.",
      "index": 3,
      "token_count": 545,
      "metadata": {
        "title": "_qdrant_qdrant-client_4-advanced-features",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4-advanced-features.md",
        "file_name": "_qdrant_qdrant-client_4-advanced-features.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.368114",
        "total_chunks": 5
      },
      "start_char": 5739,
      "end_char": 7759
    },
    {
      "content": "ype Detection**: The system uses `INFERENCE_OBJECT_TYPES` to identify objects requiring inference\n4. **Schema Parsing**: The `ModelSchemaParser` analyzes model schemas to identify inference fields\n\nSupported inference object types include:\n\n- `models.Document` - Text documents for embedding\n- `models.Image` - Images for vision model embedding\n- `models.InferenceObject` - Generic inference objects\n\nThe system integrates with both synchronous and asynchronous workflows, with the `AsyncQdrantFastembedMixin` providing the same interface for async operations.\n\n**Sources:** [qdrant\\_client/qdrant\\_fastembed.py789-892](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L789-L892) [qdrant\\_client/qdrant\\_fastembed.py16](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L16-L16) [qdrant\\_client/qdrant\\_fastembed.py36-40](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L36-L40)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Advanced Features](#advanced-features.md)\n- [FastEmbed Integration](#fastembed-integration.md)\n- [Batch Operations](#batch-operations.md)\n- [Hybrid Search](#hybrid-search.md)\n- [Local Inference](#local-inference.md)",
      "index": 4,
      "token_count": 352,
      "metadata": {
        "title": "_qdrant_qdrant-client_4-advanced-features",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4-advanced-features.md",
        "file_name": "_qdrant_qdrant-client_4-advanced-features.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.368114",
        "total_chunks": 5
      },
      "start_char": 7659,
      "end_char": 9707
    },
    {
      "content": "FastEmbed Integration | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# FastEmbed Integration\n\nRelevant source files",
      "index": 0,
      "token_count": 613,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.1-fastembed-integration",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "file_name": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.387123",
        "total_chunks": 9
      },
      "start_char": 0,
      "end_char": 2026
    },
    {
      "content": "t/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# FastEmbed Integration\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_fastembed.py)\n- [qdrant\\_client/qdrant\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py)\n- [tests/test\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_fastembed.py)\n- [tools/async\\_client\\_generator/fastembed\\_generator.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/async_client_generator/fastembed_generator.py)\n\nThis page documents the FastEmbed integration in Qdrant Client, which provides seamless vector embedding capabilities for text and images without requiring separate preprocessing steps. For information about other advanced embedding techniques, see [Local Inference](qdrant/qdrant-client/4.4-local-inference.md).\n\n## Overview\n\nFastEmbed integration allows you to:\n\n- Automatically embed documents when adding them to Qdrant\n- Search collections using natural language queries without manual embedding\n- Use both dense and sparse embedding models for hybrid search\n- Handle multiple embedding model types (text, sparse text, late interaction, image)\n- Configure model parameters for optimal performance\n\nFastEmbed Integration Architecture\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py34-56](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L34-L56) [qdrant\\_client/async\\_qdrant\\_fastembed.py43-65](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_fastembed.py#L43-L65) [qdrant\\_client/embed/embedder.py32-56](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L32-L56)\n\n## Installation and Setup\n\n### Installing FastEmbed\n\nFastEmbed is not included in the basic installation of Qdrant Client. You need to install it separately:\n\n```\n```\n\n### Model Configuration",
      "index": 1,
      "token_count": 540,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.1-fastembed-integration",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "file_name": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.387123",
        "total_chunks": 9
      },
      "start_char": 1926,
      "end_char": 3951
    },
    {
      "content": "nstallation of Qdrant Client. You need to install it separately:\n\n```\n```\n\n### Model Configuration\n\nThe `QdrantFastembedMixin` provides methods to configure embedding models:\n\n| Method               | Purpose                          | Default Model         |\n| -------------------- | -------------------------------- | --------------------- |\n| `set_model()`        | Configure dense embedding model  | `\"BAAI/bge-small-en\"` |\n| `set_sparse_model()` | Configure sparse embedding model | `None`                |\n\nFastEmbed Installation Check Flow\n\n```\n```\n\nThe client stores model state in instance variables:\n\n- `_embedding_model_name`: Current dense model name\n- `_sparse_embedding_model_name`: Current sparse model name\n- `_model_embedder`: `ModelEmbedder` instance managing actual embedding models\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py36-42](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L36-L42) [qdrant\\_client/qdrant\\_fastembed.py99-208](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L99-L208) [qdrant\\_client/fastembed\\_common.py13-25](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/fastembed_common.py#L13-L25)\n\n### Model Configuration Parameters\n\nThe `set_model()` and `set_sparse_model()` methods accept the following parameters:\n\n| Parameter              | Type                               | Description                            | Default               |\n| ---------------------- | ---------------------------------- | -------------------------------------- | --------------------- |\n| `embedding_model_name` | `str`                              | Model identifier from supported models | `\"BAAI/bge-small-en\"` |\n| `cache_dir`            | `Optional[str]`                    | Model cache directory path             | System temp dir       |\n| `threads`              | `Optional[int]`                    | ONNX runtime threads                   | Auto-detected         |",
      "index": 2,
      "token_count": 448,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.1-fastembed-integration",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "file_name": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.387123",
        "total_chunks": 9
      },
      "start_char": 3851,
      "end_char": 5852
    },
    {
      "content": "ptional[int]`                    | ONNX runtime threads                   | Auto-detected         |\n| `providers`            | `Optional[Sequence[OnnxProvider]]` | ONNX execution providers               | Default providers     |\n| `cuda`                 | `bool`                             | Enable CUDA acceleration               | `False`               |\n| `device_ids`           | `Optional[list[int]]`              | GPU device IDs for multi-GPU           | `None`                |\n| `lazy_load`            | `bool`                             | Load models on-demand                  | `False`               |\n\nModel initialization uses the `_get_or_init_model()` and `_get_or_init_sparse_model()` methods which delegate to the `ModelEmbedder.embedder` component.\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py99-157](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L99-L157) [qdrant\\_client/qdrant\\_fastembed.py159-208](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L159-L208) [qdrant\\_client/qdrant\\_fastembed.py230-268](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L230-L268)\n\n## Working with Documents\n\n### Adding Documents with Automatic Embedding\n\nThe most common way to use FastEmbed is through the `add()` method, which handles embedding automatically:\n\n```\n```\n\nIf the collection doesn't exist, it will be automatically created with appropriate vector configuration.\n\nDocument Addition Process with FastEmbed\n\n```\n```\n\nThe `_points_iterator()` method generates `models.PointStruct` objects with vector fields named by `get_vector_field_name()` and `get_sparse_vector_field_name()`.\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py518-610](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L518-L610) [qdrant\\_client/qdrant\\_fastembed.py270-317](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.",
      "index": 3,
      "token_count": 536,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.1-fastembed-integration",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "file_name": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.387123",
        "total_chunks": 9
      },
      "start_char": 5752,
      "end_char": 7758
    },
    {
      "content": "bed.py270-317](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L270-L317) [qdrant\\_client/qdrant\\_fastembed.py373-401](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L373-L401)\n\n### Collection Configuration\n\nWhen creating collections manually, you can use utility methods to get appropriate vector parameters:\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py473-530](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L473-L530) [qdrant\\_client/async\\_qdrant\\_fastembed.py444-494](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_fastembed.py#L444-L494)\n\n## Searching with FastEmbed\n\n### Query Operations\n\nThe `query()` method handles text embedding and search automatically:\n\n```\n```\n\nQuery Processing Flow\n\n```\n```\n\nThe `QueryResponse` objects contain:\n\n- `id`: Point ID\n- `document`: Original document text from payload\n- `metadata`: Point payload\n- `score`: Similarity score\n- `embedding`: Dense vector (optional)\n- `sparse_embedding`: Sparse vector (optional)\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py612-696](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L612-L696) [qdrant\\_client/qdrant\\_fastembed.py339-371](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L339-L371) [qdrant\\_client/fastembed\\_common.py81-88](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/fastembed_common.py#L81-L88)\n\n### Hybrid Search Implementation\n\nWhen `sparse_embedding_model_name` is set, the `query()` method automatically performs hybrid search by creating separate `models.SearchRequest` objects for dense and sparse vectors:\n\nHybrid Search Request Creation\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py647-696](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L647-L696) [qdrant\\_client/qdrant\\_fastembed.py319-337](https://github.",
      "index": 4,
      "token_count": 655,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.1-fastembed-integration",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "file_name": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.387123",
        "total_chunks": 9
      },
      "start_char": 7658,
      "end_char": 9691
    },
    {
      "content": "t_client/qdrant_fastembed.py#L647-L696) [qdrant\\_client/qdrant\\_fastembed.py319-337](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L319-L337) [qdrant\\_client/hybrid/fusion.py1-50](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/fusion.py#L1-L50)\n\n### Batch Querying\n\nFor efficiency, you can perform multiple queries at once:\n\n```\n```\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py712-801](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L712-L801) [qdrant\\_client/async\\_qdrant\\_fastembed.py656-730](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_fastembed.py#L656-L730)\n\n## Advanced Features\n\n### Vector Field Naming Convention\n\nThe `QdrantFastembedMixin` generates vector field names using model-specific conventions:\n\n| Method                           | Format                       | Example                         |\n| -------------------------------- | ---------------------------- | ------------------------------- |\n| `get_vector_field_name()`        | `\"fast-{model_name}\"`        | `\"fast-bge-small-en\"`           |\n| `get_sparse_vector_field_name()` | `\"fast-sparse-{model_name}\"` | `\"fast-sparse-splade_pp_en_v1\"` |\n\nVector Field Name Generation\n\n```\n```\n\nThese field names are used in:\n\n- Collection creation via `get_fastembed_vector_params()`\n- Point insertion via `_points_iterator()`\n- Search operations via `models.NamedVector` and `models.NamedSparseVector`\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py319-337](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L319-L337) [qdrant\\_client/qdrant\\_fastembed.py398-401](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L398-L401) [qdrant\\_client/qdrant\\_fastembed.py651-682](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L651-L682)\n\n### Embedding Size Information",
      "index": 5,
      "token_count": 616,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.1-fastembed-integration",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "file_name": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.387123",
        "total_chunks": 9
      },
      "start_char": 9591,
      "end_char": 11587
    },
    {
      "content": "-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L651-L682)\n\n### Embedding Size Information\n\nYou can get the size of embeddings produced by a model:\n\n```\n```\n\nNote that sparse embeddings don't have a fixed size, so calling this method with a sparse model name will raise an error.\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py452-471](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L452-L471) [qdrant\\_client/async\\_qdrant\\_fastembed.py426-442](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_fastembed.py#L426-L442)\n\n### Supported Model Types\n\nThe `FastEmbedMisc` class provides methods to list available models:\n\n| Model Type                  | List Method                                 | FastEmbed Class                      | Purpose                                |\n| --------------------------- | ------------------------------------------- | ------------------------------------ | -------------------------------------- |\n| Dense Text                  | `list_text_models()`                        | `TextEmbedding`                      | Standard vector search                 |\n| Sparse Text                 | `list_sparse_models()`                      | `SparseTextEmbedding`                | BM25, SPLADE models for lexical search |\n| Late Interaction Text       | `list_late_interaction_text_models()`       | `LateInteractionTextEmbedding`       | ColBERT-like token-level matching      |\n| Late Interaction Multimodal | `list_late_interaction_multimodal_models()` | `LateInteractionMultimodalEmbedding` | Multimodal ColBERT models              |\n| Image                       | `list_image_models()`                       | `ImageEmbedding`                     | Visual search embeddings               |\n\nModel Parameter Retrieval\n\n```\n```\n\nSpecial handling for sparse models includes IDF modifier detection for models like `\"Qdrant/bm25\"` and `\"Qdrant/bm42-all-minilm-l6-v2-attentions\"`.\n\nSources: [qdrant\\_client/qdrant\\_fastembed.",
      "index": 6,
      "token_count": 462,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.1-fastembed-integration",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "file_name": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.387123",
        "total_chunks": 9
      },
      "start_char": 11487,
      "end_char": 13519
    },
    {
      "content": "bm25\"` and `\"Qdrant/bm42-all-minilm-l6-v2-attentions\"`.\n\nSources: [qdrant\\_client/qdrant\\_fastembed.py44-87](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L44-L87) [qdrant\\_client/qdrant\\_fastembed.py210-228](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L210-L228) [qdrant\\_client/fastembed\\_common.py25-27](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/fastembed_common.py#L25-L27)\n\n## Complete Examples\n\n### Basic Search Example\n\n```\n```\n\nSources: [tests/test\\_fastembed.py10-49](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_fastembed.py#L10-L49)\n\n### Hybrid Search Example\n\n```\n```\n\nSources: [tests/test\\_fastembed.py52-78](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_fastembed.py#L52-L78)\n\n### Batch Query Example\n\n```\n```\n\nSources: [tests/test\\_fastembed.py80-113](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_fastembed.py#L80-L113)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [FastEmbed Integration](#fastembed-integration.md)\n- [Overview](#overview.md)\n- [Installation and Setup](#installation-and-setup.md)\n- [Installing FastEmbed](#installing-fastembed.md)\n- [Model Configuration](#model-configuration.md)\n- [Model Configuration Parameters](#model-configuration-parameters.md)\n- [Working with Documents](#working-with-documents.md)\n- [Adding Documents with Automatic Embedding](#adding-documents-with-automatic-embedding.md)\n- [Collection Configuration](#collection-configuration.md)\n- [Searching with FastEmbed](#searching-with-fastembed.md)\n- [Query Operations](#query-operations.md)\n- [Hybrid Search Implementation](#hybrid-search-implementation.md)\n- [Batch Querying](#batch-querying.md)\n- [Advanced Features](#advanced-features.md)\n- [Vector Field Naming Convention](#vector-field-naming-convention.md)\n- [Embedding Size Information](#embedding-size-information.md)\n- [Supported Model Types](#supported-model-types.md)",
      "index": 7,
      "token_count": 598,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.1-fastembed-integration",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "file_name": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.387123",
        "total_chunks": 9
      },
      "start_char": 13419,
      "end_char": 15449
    },
    {
      "content": "e Information](#embedding-size-information.md)\n- [Supported Model Types](#supported-model-types.md)\n- [Complete Examples](#complete-examples.md)\n- [Basic Search Example](#basic-search-example.md)\n- [Hybrid Search Example](#hybrid-search-example.md)\n- [Batch Query Example](#batch-query-example.md)",
      "index": 8,
      "token_count": 70,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.1-fastembed-integration",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "file_name": "_qdrant_qdrant-client_4.1-fastembed-integration.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.387123",
        "total_chunks": 9
      },
      "start_char": 15349,
      "end_char": 17397
    },
    {
      "content": "Batch Operations | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Batch Operations\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.2-batch-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.2-batch-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "file_name": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.418868",
        "total_chunks": 7
      },
      "start_char": 0,
      "end_char": 2016
    },
    {
      "content": "qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Batch Operations\n\nRelevant source files\n\n- [qdrant\\_client/parallel\\_processor.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/parallel_processor.py)\n- [qdrant\\_client/uploader/grpc\\_uploader.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/grpc_uploader.py)\n- [qdrant\\_client/uploader/rest\\_uploader.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/rest_uploader.py)\n- [qdrant\\_client/uploader/uploader.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/uploader.py)\n\nThis document covers the batch upload system for efficient data ingestion in the qdrant-client library. The batch operations system provides parallel processing capabilities for uploading large volumes of vectors, payloads, and point data to Qdrant collections using both REST and gRPC protocols.\n\nFor information about individual point operations, see [Point Operations](qdrant/qdrant-client/3.3-point-operations.md). For FastEmbed integration with batch operations, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md).\n\n## System Architecture\n\nThe batch operations system consists of three main components: the base uploader infrastructure, protocol-specific uploaders, and a parallel processing framework.\n\n```\n```\n\nSources: [qdrant\\_client/uploader/uploader.py26-27](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/uploader.py#L26-L27) [qdrant\\_client/uploader/rest\\_uploader.py68](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/rest_uploader.py#L68-L68) [qdrant\\_client/uploader/grpc\\_uploader.py76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/grpc_uploader.py#L76-L76) [qdrant\\_client/parallel\\_processor.py87](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/parallel_processor.py#L87-L87)\n\n## Base Uploader Infrastructure",
      "index": 1,
      "token_count": 549,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.2-batch-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.2-batch-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "file_name": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.418868",
        "total_chunks": 7
      },
      "start_char": 1916,
      "end_char": 3931
    },
    {
      "content": "client/blob/ac6f6cd2/qdrant_client/parallel_processor.py#L87-L87)\n\n## Base Uploader Infrastructure\n\nThe `BaseUploader` class serves as the foundation for all batch uploaders, providing common functionality for data iteration and batch processing.\n\n### Data Iteration Methods\n\nThe base uploader provides two primary methods for organizing data into batches:\n\n| Method                      | Purpose                                   | Input Types                                   |\n| --------------------------- | ----------------------------------------- | --------------------------------------------- |\n| `iterate_records_batches()` | Process `Record` or `PointStruct` objects | `Iterable[Union[Record, types.PointStruct]]`  |\n| `iterate_batches()`         | Process raw vectors, payloads, and IDs    | `vectors`, `payload`, `ids` with `batch_size` |\n\n```\n```\n\nSources: [qdrant\\_client/uploader/uploader.py28-43](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/uploader.py#L28-L43) [qdrant\\_client/uploader/uploader.py45-73](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/uploader.py#L45-L73) [qdrant\\_client/uploader/uploader.py13-23](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/uploader.py#L13-L23)\n\n### Vector Batch Processing\n\nThe system handles different vector formats through specialized methods:\n\n- **NumPy arrays**: Processed via `_vector_batches_from_numpy()` using array slicing\n- **Named vectors**: Handled by `_vector_batches_from_numpy_named_vectors()` for multi-vector points\n- **Iterables**: Processed directly through `iter_batch()`\n\nSources: [qdrant\\_client/uploader/uploader.py64-94](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/uploader.py#L64-L94)\n\n## REST Batch Uploader\n\nThe `RestBatchUploader` implements batch uploading using Qdrant's REST API through the `SyncApis` client.\n\n### Upload Process\n\n```\n```\n\nSources: [qdrant\\_client/uploader/rest\\_uploader.py68-105](https://github.",
      "index": 2,
      "token_count": 509,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.2-batch-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.2-batch-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "file_name": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.418868",
        "total_chunks": 7
      },
      "start_char": 3831,
      "end_char": 5862
    },
    {
      "content": "Upload Process\n\n```\n```\n\nSources: [qdrant\\_client/uploader/rest\\_uploader.py68-105](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/rest_uploader.py#L68-L105) [qdrant\\_client/uploader/rest\\_uploader.py15-65](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/rest_uploader.py#L15-L65)\n\n### Key Features\n\n- **Automatic ID generation**: Uses `uuid4()` when IDs are not provided\n- **Rate limiting**: Handles `ResourceExhaustedResponse` with exponential backoff\n- **Vector conversion**: Converts NumPy arrays to lists via `vector.tolist()`\n- **Shard key support**: Supports `ShardKeySelector` for distributed collections\n\nSources: [qdrant\\_client/uploader/rest\\_uploader.py25-26](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/rest_uploader.py#L25-L26) [qdrant\\_client/uploader/rest\\_uploader.py46-52](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/rest_uploader.py#L46-L52) [qdrant\\_client/uploader/rest\\_uploader.py31](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/rest_uploader.py#L31-L31)\n\n## gRPC Batch Uploader\n\nThe `GrpcBatchUploader` provides batch uploading using Qdrant's gRPC API with protocol buffer serialization.\n\n### Upload Process\n\n```\n```\n\nSources: [qdrant\\_client/uploader/grpc\\_uploader.py116-131](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/grpc_uploader.py#L116-L131) [qdrant\\_client/uploader/grpc\\_uploader.py16-73](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/grpc_uploader.py#L16-L73)\n\n### Protocol Conversion\n\nThe gRPC uploader performs extensive data conversion using the `RestToGrpc` conversion layer:\n\n- **Point IDs**: Converts to `PointId` protobuf objects\n- **Vectors**: Transforms via `convert_vector_struct()`\n- **Payloads**: Serializes using `payload_to_grpc()`\n- **Shard selectors**: Converts using `convert_shard_key_selector()`\n\nSources: [qdrant\\_client/uploader/grpc\\_uploader.py32-37](https://github.",
      "index": 3,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.2-batch-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.2-batch-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "file_name": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.418868",
        "total_chunks": 7
      },
      "start_char": 5762,
      "end_char": 7808
    },
    {
      "content": "ert_shard_key_selector()`\n\nSources: [qdrant\\_client/uploader/grpc\\_uploader.py32-37](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/grpc_uploader.py#L32-L37) [qdrant\\_client/uploader/grpc\\_uploader.py47-49](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/grpc_uploader.py#L47-L49)\n\n## Parallel Processing System\n\nThe `ParallelWorkerPool` coordinates multiple worker processes for concurrent batch upload operations.\n\n### Worker Pool Architecture\n\n```\n```\n\nSources: [qdrant\\_client/parallel\\_processor.py87-103](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/parallel_processor.py#L87-L103) [qdrant\\_client/parallel\\_processor.py33-85](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/parallel_processor.py#L33-L85) [qdrant\\_client/parallel\\_processor.py129-183](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/parallel_processor.py#L129-L183)\n\n### Processing Modes\n\nThe parallel processor supports three processing modes:\n\n| Mode         | Method               | Ordering               | Use Case                   |\n| ------------ | -------------------- | ---------------------- | -------------------------- |\n| Unordered    | `unordered_map()`    | No ordering guarantees | Maximum throughput         |\n| Semi-ordered | `semi_ordered_map()` | Index-based ordering   | Debugging and tracking     |\n| Ordered      | `ordered_map()`      | Strict input order     | Order-sensitive operations |\n\n### Error Handling and Recovery\n\nThe system includes comprehensive error handling:\n\n- **Worker health monitoring**: Detects terminated processes via `check_worker_health()`\n- **Emergency shutdown**: Terminates all processes on critical errors\n- **Timeout management**: 10-minute timeout per batch processing\n- **Signal-based communication**: Uses `QueueSignals` enum for process coordination\n\nSources: [qdrant\\_client/parallel\\_processor.py197-207](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/parallel_processor.",
      "index": 4,
      "token_count": 525,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.2-batch-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.2-batch-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "file_name": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.418868",
        "total_chunks": 7
      },
      "start_char": 7708,
      "end_char": 9757
    },
    {
      "content": "r.py197-207](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/parallel_processor.py#L197-L207) [qdrant\\_client/parallel\\_processor.py209-225](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/parallel_processor.py#L209-L225) [qdrant\\_client/parallel\\_processor.py18-21](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/parallel_processor.py#L18-L21)\n\n## Configuration and Usage\n\nBoth uploaders support similar configuration parameters:\n\n| Parameter            | REST Uploader | gRPC Uploader | Purpose                        |\n| -------------------- | ------------- | ------------- | ------------------------------ |\n| `collection_name`    | ✓             | ✓             | Target collection              |\n| `max_retries`        | ✓             | ✓             | Retry attempts                 |\n| `wait`               | ✓             | ✓             | Wait for operation completion  |\n| `shard_key_selector` | ✓             | ✓             | Distributed collection routing |\n| `timeout`            | -             | ✓             | gRPC call timeout              |\n\n### Factory Methods\n\nBoth uploaders provide `start()` class methods for initialization:\n\n- **REST**: `RestBatchUploader.start(uri=\"http://localhost:6333\")`\n- **gRPC**: `GrpcBatchUploader.start(host=\"localhost\", port=6334)`\n\nSources: [qdrant\\_client/uploader/rest\\_uploader.py84-94](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/rest_uploader.py#L84-L94) [qdrant\\_client/uploader/grpc\\_uploader.py96-114](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/uploader/grpc_uploader.py#L96-L114)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Batch Operations](#batch-operations.md)\n- [System Architecture](#system-architecture.md)\n- [Base Uploader Infrastructure](#base-uploader-infrastructure.md)\n- [Data Iteration Methods](#data-iteration-methods.md)\n- [Vector Batch Processing](#vector-batch-processing.md)",
      "index": 5,
      "token_count": 533,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.2-batch-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.2-batch-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "file_name": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.418868",
        "total_chunks": 7
      },
      "start_char": 9657,
      "end_char": 11662
    },
    {
      "content": "ation Methods](#data-iteration-methods.md)\n- [Vector Batch Processing](#vector-batch-processing.md)\n- [REST Batch Uploader](#rest-batch-uploader.md)\n- [Upload Process](#upload-process.md)\n- [Key Features](#key-features.md)\n- [gRPC Batch Uploader](#grpc-batch-uploader.md)\n- [Upload Process](#upload-process-1.md)\n- [Protocol Conversion](#protocol-conversion.md)\n- [Parallel Processing System](#parallel-processing-system.md)\n- [Worker Pool Architecture](#worker-pool-architecture.md)\n- [Processing Modes](#processing-modes.md)\n- [Error Handling and Recovery](#error-handling-and-recovery.md)\n- [Configuration and Usage](#configuration-and-usage.md)\n- [Factory Methods](#factory-methods.md)",
      "index": 6,
      "token_count": 176,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.2-batch-operations",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.2-batch-operations.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "file_name": "_qdrant_qdrant-client_4.2-batch-operations.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.418868",
        "total_chunks": 7
      },
      "start_char": 11562,
      "end_char": 13610
    },
    {
      "content": "Hybrid Search | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Expression Evaluation\n\nRelevant source files",
      "index": 0,
      "token_count": 612,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.3-hybrid-search",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "file_name": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.442778",
        "total_chunks": 7
      },
      "start_char": 0,
      "end_char": 2018
    },
    {
      "content": "t/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Expression Evaluation\n\nRelevant source files\n\n- [qdrant\\_client/hybrid/\\_\\_init\\_\\_.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/__init__.py)\n- [qdrant\\_client/hybrid/fusion.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/fusion.py)\n- [qdrant\\_client/hybrid/test\\_reranking.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/test_reranking.py)\n\n## Purpose and Scope\n\nThis document details the expression evaluation system in the Qdrant client library. This system provides a powerful way to perform mathematical operations, create custom scoring functions, filter data, and transform values within queries. For information about batch operations, see [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md), and for local inference capabilities, see [Local Inference](qdrant/qdrant-client/4.4-local-inference.md).\n\n## Overview\n\nThe expression evaluation system allows users to create complex mathematical and logical expressions that can be used in various operations, particularly for custom relevance scoring in hybrid search. Expressions support access to vector similarity scores, payload fields, filtering conditions, and a wide range of mathematical operations.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py19-214](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L214) [qdrant\\_client/embed/\\_inspection\\_cache.py1-244](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py#L1-L244)\n\n## Expression Types\n\nThe Qdrant client supports a rich set of expression types that can be combined to create complex scoring and filtering logic.\n\n### Basic Expression Types\n\n| Expression Type  | Description               | Example                                                                 |",
      "index": 1,
      "token_count": 473,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.3-hybrid-search",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "file_name": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.442778",
        "total_chunks": 7
      },
      "start_char": 1918,
      "end_char": 3853
    },
    {
      "content": "scription               | Example                                                                 |\n| ---------------- | ------------------------- | ----------------------------------------------------------------------- |\n| Constant         | Numeric literals          | `0.5`, `42`                                                             |\n| Variable         | Payload field or score    | `price`, `$score`                                                       |\n| Filter Condition | Boolean condition         | `FieldCondition(key=\"category\", match=MatchValue(value=\"electronics\"))` |\n| Mathematical     | Mathematical operations   | `MultExpression`, `SumExpression`, `DivExpression`                      |\n| Geo              | Geo-distance calculations | `GeoDistance`                                                           |\n| Datetime         | Date/time operations      | `DatetimeExpression`, `DatetimeKeyExpression`                           |\n| Decay            | Decay functions           | `LinDecayExpression`, `ExpDecayExpression`, `GaussDecayExpression`      |\n\n### Mathematical Operations\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py35-150](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L35-L150) [qdrant\\_client/embed/\\_inspection\\_cache.py245-310](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py#L245-L310)\n\n### Decay Functions\n\nDecay functions are used to transform distances (numeric, geographic, temporal) into relevance scores that decrease with distance from a target value.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py186-211](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L186-L211) [qdrant\\_client/embed/\\_inspection\\_cache.py360-444](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py#L360-L444)\n\n## Expression Evaluation Process",
      "index": 2,
      "token_count": 441,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.3-hybrid-search",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "file_name": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.442778",
        "total_chunks": 7
      },
      "start_char": 3753,
      "end_char": 5706
    },
    {
      "content": "lob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py#L360-L444)\n\n## Expression Evaluation Process\n\nThe expression evaluation system recursively processes expressions to produce a final numeric value.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py19-214](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L214) [qdrant\\_client/hybrid/formula.py266-298](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L266-L298)\n\n## Using Variables in Expressions\n\n### Payload Fields\n\nAny field from a point's payload can be referenced by its path:\n\n- Simple field: `\"price\"`\n- Nested field: `\"product.details.price\"`\n- Array element: `\"features[0]\"`\n- Array elements: `\"features[]\"`\n\n### Score Variables\n\nScore variables provide access to vector similarity scores:\n\n- `$score` or `$score[0]`: First vector similarity score\n- `$score[1]`: Second vector similarity score (in multi-vector queries)\n- `$score[n]`: Nth vector similarity score\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py245-298](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L245-L298) [qdrant\\_client/local/payload\\_value\\_extractor.py1-92](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py#L1-L92)\n\n## Filter Expressions\n\nExpressions can include filter conditions that evaluate to 1.0 (true) or 0.0 (false). These conditions support the same rich filtering capabilities as Qdrant's regular filters.\n\n```\n```\n\nSources: [qdrant\\_client/local/payload\\_filters.py165-313](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L165-L313) [qdrant\\_client/embed/\\_inspection\\_cache.py573-735](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py#L573-L735)\n\n## Practical Examples\n\n### Example 1: Combining Vector Search with Price Factor\n\n```\n```\n\n### Example 2: Distance-Based Decay Function\n\n```\n```\n\n## Expression Evaluation Implementation",
      "index": 3,
      "token_count": 600,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.3-hybrid-search",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "file_name": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.442778",
        "total_chunks": 7
      },
      "start_char": 5606,
      "end_char": 7655
    },
    {
      "content": "``\n\n### Example 2: Distance-Based Decay Function\n\n```\n```\n\n## Expression Evaluation Implementation\n\nThe core expression evaluation logic resides in the `evaluate_expression` function. This function recursively processes expressions based on their type, handling constants, variables, conditions, and operations.\n\n### Key Components\n\n- **Expression Parser**: Converts expression objects into calculations\n- **Variable Resolver**: Retrieves values from payloads or scores\n- **Condition Evaluator**: Processes filter conditions\n- **Mathematical Evaluator**: Performs mathematical operations\n- **Error Handling**: Handles edge cases like division by zero\n\nSources: [qdrant\\_client/hybrid/formula.py19-214](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L214) [qdrant\\_client/hybrid/formula.py216-242](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L216-L242)\n\n## Expression Safety and Limitations\n\nThe expression evaluation system includes several safety measures:\n\n1. **Non-finite Value Detection**: Functions like `div`, `sqrt`, `pow`, `exp`, `log10`, and `ln` check for non-finite results and raise appropriate errors.\n\n2. **Division by Zero Handling**: The `DivExpression` allows specifying a `by_zero_default` value to handle division by zero gracefully.\n\n3. **Decay Function Validation**: Decay functions validate parameters like `midpoint` (must be between 0 and 1) and `scale` (must be positive).\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py83-89](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L83-L89) [qdrant\\_client/hybrid/formula.py235-240](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L235-L240)\n\n## Integration with Search and Query Operations\n\nThe expression evaluation system integrates with Qdrant's search functionality through:\n\n1. **Formula Queries**: Apply a scoring formula to search results\n2.",
      "index": 4,
      "token_count": 505,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.3-hybrid-search",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "file_name": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.442778",
        "total_chunks": 7
      },
      "start_char": 7555,
      "end_char": 9538
    },
    {
      "content": "search functionality through:\n\n1. **Formula Queries**: Apply a scoring formula to search results\n2. **Fusion Queries**: Combine multiple search strategies with custom weights\n\nThese operations leverage the expression evaluation system to compute final relevance scores for returned points.\n\nSources: [qdrant\\_client/hybrid/formula.py19-33](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L33)\n\n## Conclusion\n\nQdrant's expression evaluation system provides a powerful and flexible way to customize search relevance, perform calculations, and create complex scoring functions. By combining vector similarity with other factors like numerical properties, text matches, and geo-distance, users can create highly tailored search experiences that balance multiple relevance signals.\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Expression Evaluation](#expression-evaluation.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Overview](#overview.md)\n- [Expression Types](#expression-types.md)\n- [Basic Expression Types](#basic-expression-types.md)\n- [Mathematical Operations](#mathematical-operations.md)\n- [Decay Functions](#decay-functions.md)\n- [Expression Evaluation Process](#expression-evaluation-process.md)\n- [Using Variables in Expressions](#using-variables-in-expressions.md)\n- [Payload Fields](#payload-fields.md)\n- [Score Variables](#score-variables.md)\n- [Filter Expressions](#filter-expressions.md)\n- [Practical Examples](#practical-examples.md)\n- [Example 1: Combining Vector Search with Price Factor](#example-1-combining-vector-search-with-price-factor.md)\n- [Example 2: Distance-Based Decay Function](#example-2-distance-based-decay-function.md)\n- [Expression Evaluation Implementation](#expression-evaluation-implementation.md)\n- [Key Components](#key-components.md)\n- [Expression Safety and Limitations](#expression-safety-and-limitations.md)\n- [Integration with Search and Query Operations](#integration-with-search-and-query-operations.md)",
      "index": 5,
      "token_count": 447,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.3-hybrid-search",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "file_name": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.442778",
        "total_chunks": 7
      },
      "start_char": 9438,
      "end_char": 11466
    },
    {
      "content": "- [Integration with Search and Query Operations](#integration-with-search-and-query-operations.md)\n- [Conclusion](#conclusion.md)",
      "index": 6,
      "token_count": 29,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.3-hybrid-search",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.3-hybrid-search.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "file_name": "_qdrant_qdrant-client_4.3-hybrid-search.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.442778",
        "total_chunks": 7
      },
      "start_char": 11366,
      "end_char": 13414
    },
    {
      "content": "Local Inference | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Local Inference\n\nRelevant source files\n\n- [qdrant\\_client/embed/common.",
      "index": 0,
      "token_count": 623,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 0,
      "end_char": 2045
    },
    {
      "content": "entation-system.md)\n\nMenu\n\n# Local Inference\n\nRelevant source files\n\n- [qdrant\\_client/embed/common.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/common.py)\n- [qdrant\\_client/embed/embedder.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py)\n- [qdrant\\_client/embed/model\\_embedder.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/model_embedder.py)\n- [qdrant\\_client/fastembed\\_common.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/fastembed_common.py)\n- [tests/embed\\_tests/test\\_local\\_inference.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py)\n\n## Purpose and Scope\n\nThis document describes the Local Inference system in qdrant-client, which enables automatic embedding of documents and images directly within the client application, without requiring an external embedding service. This system allows seamless integration of embedding models into vector search workflows by automatically detecting and processing objects that require inference.\n\nFor information about the FastEmbed integration, which provides pre-configured models, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md).\n\n## Overview\n\nThe Local Inference system transparently converts high-level objects like text documents and images into vector embeddings that can be stored and searched in Qdrant. When you provide a `Document` or `Image` object to methods like `upsert()` or `query_points()`, the system automatically:\n\n1. Detects fields requiring embedding\n2. Loads the appropriate model\n3. Generates embeddings\n4. Replaces the original objects with their vector representations\n\n**Local Inference System Architecture**\n\n```\n```\n\nSources: [qdrant\\_client/embed/model\\_embedder.py42-444](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/model_embedder.py#L42-L444) [qdrant\\_client/embed/embedder.py29-388](https://github.",
      "index": 1,
      "token_count": 499,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 1945,
      "end_char": 3969
    },
    {
      "content": "nt_client/embed/model_embedder.py#L42-L444) [qdrant\\_client/embed/embedder.py29-388](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L29-L388) [qdrant\\_client/fastembed\\_common.py36-267](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/fastembed_common.py#L36-L267)\n\n## Core Components\n\n### ModelEmbedder\n\nThe `ModelEmbedder` class is the primary entry point for local inference. It coordinates the inspection, batching, and embedding processes:\n\n**Core Classes and Methods**\n\n```\n```\n\nSources: [qdrant\\_client/embed/model\\_embedder.py21-444](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/model_embedder.py#L21-L444) [qdrant\\_client/embed/embedder.py23-388](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L23-L388) [qdrant\\_client/fastembed\\_common.py36-267](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/fastembed_common.py#L36-L267)\n\n### Embedder\n\nThe `Embedder` class manages embedding models and performs the actual inference:\n\n- Maintains a registry of initialized models\n- Provides methods to embed text and images\n- Supports various model types (dense, sparse, late interaction, multimodal)\n- Handles model sharing and caching\n\nSources: [qdrant\\_client/embed/embedder.py32-385](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L32-L385)\n\n### Type Inspection System\n\nThe type inspection system identifies fields in models that require inference:\n\n```\n```\n\nSources: [qdrant\\_client/embed/type\\_inspector.py12-149](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L12-L149) [qdrant\\_client/embed/embed\\_inspector.py13-176](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.py#L13-L176) [qdrant\\_client/embed/schema\\_parser.py29-305](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L29-L305)\n\n## Inference Workflow",
      "index": 2,
      "token_count": 634,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 3869,
      "end_char": 5897
    },
    {
      "content": "/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L29-L305)\n\n## Inference Workflow\n\n**Local Inference Processing Flow**\n\n```\n```\n\nSources: [qdrant\\_client/embed/model\\_embedder.py124-156](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/model_embedder.py#L124-L156) [qdrant\\_client/embed/embedder.py222-267](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L222-L267) [tests/embed\\_tests/test\\_local\\_inference.py133-237](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L133-L237)\n\n## Supported Model Types\n\nThe Local Inference system supports several types of embedding models:\n\n| Model Type                  | Description                                 | Input Type     |\n| --------------------------- | ------------------------------------------- | -------------- |\n| Dense Text                  | Standard text embedding models              | Text           |\n| Sparse Text                 | Sparse vector text models                   | Text           |\n| Late Interaction Text       | Models that generate token-level embeddings | Text           |\n| Image                       | Image embedding models                      | Images         |\n| Late Interaction Multimodal | Models that can embed both text and images  | Text or Images |\n\nSources: [qdrant\\_client/fastembed\\_common.py28-78](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/fastembed_common.py#L28-L78)\n\n## Supported Inference Objects\n\n**Inference Object Types**\n\n```\n```\n\nThe constant `INFERENCE_OBJECT_NAMES` contains the string names: `{\"Document\", \"Image\", \"InferenceObject\"}` and `INFERENCE_OBJECT_TYPES` is a Union type used throughout the system for type checking.\n\nSources: [qdrant\\_client/embed/common.py5-6](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/common.py#L5-L6)\n\n## Using Local Inference\n\n### Basic Usage",
      "index": 3,
      "token_count": 499,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 5797,
      "end_char": 7768
    },
    {
      "content": "ient/blob/ac6f6cd2/qdrant_client/embed/common.py#L5-L6)\n\n## Using Local Inference\n\n### Basic Usage\n\nLocal inference happens automatically when you provide `Document` or `Image` objects to client methods:\n\n```\n```\n\nSources: [tests/embed\\_tests/test\\_local\\_inference.py133-165](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L133-L165)\n\n### Named Vectors\n\nYou can also use local inference with named vectors:\n\n```\n```\n\nSources: [tests/embed\\_tests/test\\_local\\_inference.py166-237](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L166-L237)\n\n### Query-Time Inference\n\nThe system distinguishes between document and query embedding for models that have different embedding methods for documents and queries:\n\n```\n```\n\nSources: [qdrant\\_client/embed/embedder.py278-287](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L278-L287) [tests/embed\\_tests/test\\_local\\_inference.py352-581](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L352-L581)\n\n## Advanced Features\n\n### Model Configuration Options\n\nYou can pass additional options to the embedding models:\n\n```\n```\n\nSources: [qdrant\\_client/embed/embedder.py61-67](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L61-L67) [tests/embed\\_tests/test\\_local\\_inference.py916-976](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L916-L976)\n\n### Parallel Processing\n\nFor large batches of documents, you can use parallel processing:\n\n```\n```\n\nSources: [qdrant\\_client/embed/model\\_embedder.py75-123](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/model_embedder.py#L75-L123) [tests/embed\\_tests/test\\_local\\_inference.py310-350](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L310-L350)\n\n## Integration with Client Operations",
      "index": 4,
      "token_count": 602,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 7668,
      "end_char": 9678
    },
    {
      "content": "6f6cd2/tests/embed_tests/test_local_inference.py#L310-L350)\n\n## Integration with Client Operations\n\nLocal inference is integrated with various client operations:\n\n| Operation             | Description                                              | Test Coverage                                                                                                                                                    |\n| --------------------- | -------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `upsert`              | Embeds documents/images before upserting                 | [tests/embed\\_tests/test\\_local\\_inference.py133-237](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L133-L237) |\n| `upload_points`       | Embeds documents/images when uploading points in batches | [tests/embed\\_tests/test\\_local\\_inference.py240-350](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L240-L350) |\n| `upload_collection`   | Embeds vectors when uploading a collection               | [tests/embed\\_tests/test\\_local\\_inference.py295-350](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L295-L350) |\n| `query_points`        | Embeds query documents/images before searching           | [tests/embed\\_tests/test\\_local\\_inference.py352-515](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L352-L515) |\n| `query_points_groups` | Embeds query documents/images for grouped searches       | [tests/embed\\_tests/test\\_local\\_inference.py584-682](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L584-L682) |\n| `query_batch_points`  | Embeds documents/images in batch queries                 | [tests/embed\\_tests/test\\_local\\_inference.",
      "index": 5,
      "token_count": 457,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 9578,
      "end_char": 11605
    },
    {
      "content": "beds documents/images in batch queries                 | [tests/embed\\_tests/test\\_local\\_inference.py684-743](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L684-L743) |\n| `batch_update_points` | Embeds documents/images in batch updates                 | [tests/embed\\_tests/test\\_local\\_inference.py745-857](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L745-L857) |\n| `update_vectors`      | Embeds new documents/images when updating vectors        | [tests/embed\\_tests/test\\_local\\_inference.py859-914](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L859-L914) |\n\nSources: [tests/embed\\_tests/test\\_local\\_inference.py133-914](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L133-L914)\n\n## Internal Architecture\n\n### Object Detection and Processing\n\nThe system uses a multi-step process to detect and process objects requiring inference:\n\n1. **Model Processing**: The `ModelEmbedder._process_model()` method traverses model structures to find inference objects.\n2. **Object Accumulation**: The `_accumulate()` method collects `Document`, `Image`, and `InferenceObject` instances into batches grouped by model name.\n3. **Batch Embedding**: The `_embed_accumulator()` method calls `Embedder.embed()` to generate embeddings for accumulated objects.\n4. **Model Resolution**: The `_resolve_inference_object()` method converts `InferenceObject` instances to `Document` or `Image` objects.\n5. **Replacement**: The `_drain_accumulator()` method replaces original objects with their vector representations.\n\n**Processing Pipeline**\n\n```\n```\n\nSources: [qdrant\\_client/embed/model\\_embedder.py141-156](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/model_embedder.py#L141-L156) [qdrant\\_client/embed/model\\_embedder.py247-275](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/model_embedder.",
      "index": 6,
      "token_count": 547,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 11505,
      "end_char": 13538
    },
    {
      "content": "py247-275](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/model_embedder.py#L247-L275) [qdrant\\_client/embed/model\\_embedder.py277-317](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/model_embedder.py#L277-L317)\n\n### Model Management\n\nThe `Embedder` class efficiently manages embedding models through `ModelInstance` containers:\n\n- **Model Caching**: Each model type has its own dictionary (e.g., `embedding_models`, `sparse_embedding_models`) storing lists of `ModelInstance[T]` objects\n- **Configuration Tracking**: `ModelInstance` objects store model instances with their initialization options and deprecation status\n- **Lazy Loading**: Models are loaded only when first requested via `get_or_init_*` methods\n- **Option Matching**: Multiple instances of the same model with different configurations are supported by comparing options dictionaries\n- **Model Validation**: `FastEmbedMisc` provides validation methods for all supported model types\n\n**Model Instance Management**\n\n```\n```\n\nSources: [qdrant\\_client/embed/embedder.py23-27](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L23-L27) [qdrant\\_client/embed/embedder.py29-44](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L29-L44) [qdrant\\_client/embed/embedder.py46-221](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embedder.py#L46-L221)\n\n## Compatibility\n\nThe Local Inference system is designed to work with:\n\n- **Local in-memory Qdrant instances**: `QdrantClient(\":memory:\")`\n- **Local persistent Qdrant instances**: `QdrantClient(path=\"/path/to/db\")`\n- **Remote Qdrant servers**: `QdrantClient(host=\"localhost\", port=6333)`\n\nThe system automatically handles embedding generation regardless of the backend, with the same API working across all deployment modes.\n\nSources: [tests/embed\\_tests/test\\_local\\_inference.py134](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.",
      "index": 7,
      "token_count": 551,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 13438,
      "end_char": 15477
    },
    {
      "content": "py134](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L134-L134) [tests/embed\\_tests/test\\_local\\_inference.py256-259](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L256-L259)\n\n## Limitations\n\n- The FastEmbed library must be installed to use Local Inference\n- Not all embedding models are supported, only those available in FastEmbed\n- Embedding large batches may require significant memory\n\nSources: [tests/embed\\_tests/test\\_local\\_inference.py134-136](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/embed_tests/test_local_inference.py#L134-L136) [qdrant\\_client/fastembed\\_common.py8-25](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/fastembed_common.py#L8-L25)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Local Inference](#local-inference.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Overview](#overview.md)\n- [Core Components](#core-components.md)\n- [ModelEmbedder](#modelembedder.md)\n- [Embedder](#embedder.md)\n- [Type Inspection System](#type-inspection-system.md)\n- [Inference Workflow](#inference-workflow.md)\n- [Supported Model Types](#supported-model-types.md)\n- [Supported Inference Objects](#supported-inference-objects.md)\n- [Using Local Inference](#using-local-inference.md)\n- [Basic Usage](#basic-usage.md)\n- [Named Vectors](#named-vectors.md)\n- [Query-Time Inference](#query-time-inference.md)\n- [Advanced Features](#advanced-features.md)\n- [Model Configuration Options](#model-configuration-options.md)\n- [Parallel Processing](#parallel-processing.md)\n- [Integration with Client Operations](#integration-with-client-operations.md)\n- [Internal Architecture](#internal-architecture.md)\n- [Object Detection and Processing](#object-detection-and-processing.md)\n- [Model Management](#model-management.md)\n- [Compatibility](#compatibility.md)\n- [Limitations](#limitations.md)",
      "index": 8,
      "token_count": 536,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 15377,
      "end_char": 17425
    },
    {
      "content": "ations.md)",
      "index": 9,
      "token_count": 3,
      "metadata": {
        "title": "_qdrant_qdrant-client_4.4-local-inference",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_4.4-local-inference.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_4.4-local-inference.md",
        "file_name": "_qdrant_qdrant-client_4.4-local-inference.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.482133",
        "total_chunks": 10
      },
      "start_char": 17325,
      "end_char": 19373
    },
    {
      "content": "Implementation Details | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Implementation Details\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_5-implementation-details",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5-implementation-details.md",
        "file_name": "_qdrant_qdrant-client_5-implementation-details.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.518642",
        "total_chunks": 5
      },
      "start_char": 0,
      "end_char": 2028
    },
    {
      "content": "/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Implementation Details\n\nRelevant source files\n\n- [qdrant\\_client/local/geo.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py)\n- [qdrant\\_client/local/payload\\_filters.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py)\n- [qdrant\\_client/local/payload\\_value\\_extractor.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py)\n- [tests/fixtures/filters.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/fixtures/filters.py)\n- [tests/fixtures/payload.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/fixtures/payload.py)\n\nThis document covers the internal implementation details of the qdrant-client library's core systems, including payload filtering, value extraction, and geographic operations. These components provide the foundation for local vector database operations and query processing.\n\nFor information about the overall client architecture, see [Client Architecture](qdrant/qdrant-client/2-client-architecture.md). For details about search operations that use these systems, see [Search Operations](qdrant/qdrant-client/3.1-search-operations.md). For payload filtering usage patterns, see [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md).\n\n## Payload Filtering Architecture\n\nThe payload filtering system provides comprehensive condition evaluation for both local and remote operations. The system supports boolean logic, range queries, text matching, geographic constraints, and nested object filtering.\n\n### Core Filter Components\n\n```\n```\n\nThe filtering system processes `models.Filter` objects through a hierarchical evaluation structure. The main entry point `check_filter()` coordinates boolean logic operators (`must`, `must_not`, `should`, `min_should`) which delegate to specific condition evaluators.\n\n**Sources:** [qdrant\\_client/local/payload\\_filters.py275-312](https://github.",
      "index": 1,
      "token_count": 469,
      "metadata": {
        "title": "_qdrant_qdrant-client_5-implementation-details",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5-implementation-details.md",
        "file_name": "_qdrant_qdrant-client_5-implementation-details.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.518642",
        "total_chunks": 5
      },
      "start_char": 1928,
      "end_char": 3957
    },
    {
      "content": "ondition evaluators.\n\n**Sources:** [qdrant\\_client/local/payload\\_filters.py275-312](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L275-L312)\n\n### Condition Evaluation Flow\n\n```\n```\n\nThe `check_condition()` function dispatches to specialized handlers based on condition type. Each handler implements the specific logic for its condition category.\n\n**Sources:** [qdrant\\_client/local/payload\\_filters.py166-226](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L166-L226)\n\n## Value Extraction System\n\nThe value extraction system provides flexible access to nested payload data using JSON path expressions. It supports array indexing, wildcard operations, and deep object traversal.\n\n### JSON Path Processing\n\n```\n```\n\nThe `value_by_key()` function supports complex path expressions for accessing nested data structures. The `flat` parameter controls whether list values are flattened or preserved as arrays.\n\n**Sources:** [qdrant\\_client/local/payload\\_value\\_extractor.py11-81](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py#L11-L81)\n\n### Value Extraction Process\n\n```\n```\n\nThe extraction process recursively traverses the payload structure, handling different data types and accumulating results based on the flattening mode.\n\n**Sources:** [qdrant\\_client/local/payload\\_value\\_extractor.py32-80](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py#L32-L80)\n\n## Geographic Operations\n\nThe geographic operations system provides distance calculations and spatial containment checks for location-based filtering.\n\n### Distance Calculation\n\n```\n```\n\nThe `geo_distance()` function implements the Haversine formula for calculating great-circle distances between two points on Earth's surface.\n\n**Sources:** [qdrant\\_client/local/geo.py7-29](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py#L7-L29)\n\n### Polygon Containment\n\n```",
      "index": 2,
      "token_count": 501,
      "metadata": {
        "title": "_qdrant_qdrant-client_5-implementation-details",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5-implementation-details.md",
        "file_name": "_qdrant_qdrant-client_5-implementation-details.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.518642",
        "total_chunks": 5
      },
      "start_char": 3857,
      "end_char": 5906
    },
    {
      "content": "qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py#L7-L29)\n\n### Polygon Containment\n\n```\n```\n\nThe polygon containment system uses ray casting to determine if a point lies within a polygon, supporting both exterior boundaries and interior holes.\n\n**Sources:** [qdrant\\_client/local/geo.py45-91](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py#L45-L91)\n\n## Integration Architecture\n\nThe implementation systems work together to provide comprehensive filtering and data access capabilities for the local vector database.\n\n### System Integration\n\n```\n```\n\nThe integration architecture shows how filtering, value extraction, and geographic operations combine to process queries efficiently. The `calculate_payload_mask()` function coordinates all systems to produce boolean masks for result filtering.\n\n**Sources:** [qdrant\\_client/local/payload\\_filters.py315-333](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L315-L333)\n\n### Performance Considerations\n\n| Component                  | Optimization                  | Implementation                             |\n| -------------------------- | ----------------------------- | ------------------------------------------ |\n| `calculate_payload_mask()` | Vectorized boolean operations | Uses NumPy arrays for mask generation      |\n| `value_by_key()`           | Path parsing caching          | JSON path items parsed once per key        |\n| `geo_distance()`           | Mathematical optimization     | Direct Haversine implementation            |\n| `check_condition()`        | Early termination             | Short-circuit evaluation for boolean logic |\n\nThe implementation prioritizes performance through vectorized operations, caching strategies, and efficient algorithms for common operations.\n\n**Sources:** [qdrant\\_client/local/payload\\_filters.py320-333](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L320-L333) [qdrant\\_client/local/payload\\_value\\_extractor.",
      "index": 3,
      "token_count": 444,
      "metadata": {
        "title": "_qdrant_qdrant-client_5-implementation-details",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5-implementation-details.md",
        "file_name": "_qdrant_qdrant-client_5-implementation-details.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.518642",
        "total_chunks": 5
      },
      "start_char": 5806,
      "end_char": 7854
    },
    {
      "content": "2/qdrant_client/local/payload_filters.py#L320-L333) [qdrant\\_client/local/payload\\_value\\_extractor.py11-28](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py#L11-L28) [qdrant\\_client/local/geo.py7-29](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py#L7-L29)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Implementation Details](#implementation-details.md)\n- [Payload Filtering Architecture](#payload-filtering-architecture.md)\n- [Core Filter Components](#core-filter-components.md)\n- [Condition Evaluation Flow](#condition-evaluation-flow.md)\n- [Value Extraction System](#value-extraction-system.md)\n- [JSON Path Processing](#json-path-processing.md)\n- [Value Extraction Process](#value-extraction-process.md)\n- [Geographic Operations](#geographic-operations.md)\n- [Distance Calculation](#distance-calculation.md)\n- [Polygon Containment](#polygon-containment.md)\n- [Integration Architecture](#integration-architecture.md)\n- [System Integration](#system-integration.md)\n- [Performance Considerations](#performance-considerations.md)",
      "index": 4,
      "token_count": 300,
      "metadata": {
        "title": "_qdrant_qdrant-client_5-implementation-details",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5-implementation-details.md",
        "file_name": "_qdrant_qdrant-client_5-implementation-details.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.518642",
        "total_chunks": 5
      },
      "start_char": 7754,
      "end_char": 9802
    },
    {
      "content": "Payload Filtering | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Payload Filtering\n\nRelevant source files\n\n- [qdrant\\_client/local/geo.",
      "index": 0,
      "token_count": 622,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.1-payload-filtering",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.1-payload-filtering.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "file_name": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.542605",
        "total_chunks": 7
      },
      "start_char": 0,
      "end_char": 2046
    },
    {
      "content": "mentation-system.md)\n\nMenu\n\n# Payload Filtering\n\nRelevant source files\n\n- [qdrant\\_client/local/geo.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py)\n- [qdrant\\_client/local/payload\\_filters.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py)\n- [qdrant\\_client/local/payload\\_value\\_extractor.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py)\n- [tests/fixtures/filters.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/fixtures/filters.py)\n- [tests/fixtures/payload.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/fixtures/payload.py)\n\nPayload filtering is a core functionality in the Qdrant client that enables filtering vector search results based on metadata attached to vectors. This document explains how payload filtering works in the client implementation, the available filter types, and how they are processed.\n\nFor information about search operations that use these filters, see [Search Operations](qdrant/qdrant-client/3.1-search-operations.md). For details about expression evaluation involving filters, see [Expression Evaluation](qdrant/qdrant-client/4.3-hybrid-search.md).\n\n## 1. Filter Structure Overview\n\nPayload filters in Qdrant follow a boolean query structure similar to Elasticsearch's Query DSL. They combine conditions with boolean operators to create complex filtering expressions.\n\n```\n```\n\nSources: [qdrant\\_client/local/payload\\_filters.py275-312](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L275-L312)\n\n### Filter Boolean Logic\n\nA filter combines conditions using boolean logic:\n\n| Operator     | Description                              | Implementation              |\n| ------------ | ---------------------------------------- | --------------------------- |\n| `must`       | All conditions must match (AND)          | `check_must` function       |",
      "index": 1,
      "token_count": 470,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.1-payload-filtering",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.1-payload-filtering.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "file_name": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.542605",
        "total_chunks": 7
      },
      "start_char": 1946,
      "end_char": 3942
    },
    {
      "content": "------- |\n| `must`       | All conditions must match (AND)          | `check_must` function       |\n| `must_not`   | All conditions must NOT match (NOT)      | `check_must_not` function   |\n| `should`     | At least one condition should match (OR) | `check_should` function     |\n| `min_should` | At least N conditions should match       | `check_min_should` function |\n\nSources: [qdrant\\_client/local/payload\\_filters.py229-272](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L229-L272)\n\n## 2. Condition Types\n\nConditions are the building blocks of filters. Qdrant supports various condition types to filter points based on their payload, ID, or vector existence.\n\n### Field Conditions\n\nField conditions operate on specific payload fields identified by a key path. They can use various matchers:\n\n```\n```\n\nSources: [qdrant\\_client/local/payload\\_filters.py150-159](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L150-L159)\n\n### Special Condition Types\n\nIn addition to field conditions, Qdrant supports special condition types:\n\n| Condition Type       | Description                                  | Implementation                 |\n| -------------------- | -------------------------------------------- | ------------------------------ |\n| `IsEmptyCondition`   | Checks if a field is empty or doesn't exist  | `check_condition` function     |\n| `IsNullCondition`    | Checks if a field is explicitly null         | `check_condition` function     |\n| `HasIdCondition`     | Checks if a point ID is in the provided list | `check_condition` function     |\n| `HasVectorCondition` | Checks if a point has a named vector         | `check_condition` function     |\n| `NestedCondition`    | Applies a filter to nested objects           | `check_nested_filter` function |\n\nSources: [qdrant\\_client/local/payload\\_filters.py166-226](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L166-L226)\n\n## 3.",
      "index": 2,
      "token_count": 500,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.1-payload-filtering",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.1-payload-filtering.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "file_name": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.542605",
        "total_chunks": 7
      },
      "start_char": 3842,
      "end_char": 5868
    },
    {
      "content": "thub.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L166-L226)\n\n## 3. Field Matchers Implementation\n\n### Match Condition Types\n\nMatch conditions check for equality or inclusion:\n\n```\n```\n\nThe implementation checks these conditions in the `check_match` function, which handles different types of matching operations:\n\n| Match Type    | Implementation                       | Line Reference |\n| ------------- | ------------------------------------ | -------------- |\n| `MatchValue`  | Exact equality comparison            | Line 152       |\n| `MatchText`   | Substring search using `in` operator | Line 154       |\n| `MatchAny`    | Value membership in array            | Line 156       |\n| `MatchExcept` | Value exclusion from array           | Line 158       |\n\nSources: [qdrant\\_client/local/payload\\_filters.py150-159](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L150-L159)\n\n### Range Conditions\n\nRange conditions filter numeric or datetime values:\n\n```\n```\n\nThe `check_range` and `check_datetime_range` functions validate whether values fall within specified ranges:\n\n| Function                | Purpose                   | Implementation Details                     |\n| ----------------------- | ------------------------- | ------------------------------------------ |\n| `check_range`           | Numeric range validation  | Checks `lt`, `lte`, `gt`, `gte` conditions |\n| `check_datetime_range`  | Datetime range validation | Parses datetime strings, handles timezones |\n| `check_range_interface` | Dispatcher function       | Routes to appropriate range checker        |\n\nSources: [qdrant\\_client/local/payload\\_filters.py99-147](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L99-L147)\n\n### Geo Conditions\n\nQdrant provides several geo-spatial filtering capabilities implemented in the `check_geo_radius`, `check_geo_bounding_box`, and `check_geo_polygon` functions:\n\n```\n```",
      "index": 3,
      "token_count": 463,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.1-payload-filtering",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.1-payload-filtering.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "file_name": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.542605",
        "total_chunks": 7
      },
      "start_char": 5768,
      "end_char": 7776
    },
    {
      "content": "d in the `check_geo_radius`, `check_geo_bounding_box`, and `check_geo_polygon` functions:\n\n```\n```\n\nThe implementation uses mathematical algorithms implemented in separate functions:\n\n| Geo Function             | Algorithm                  | Implementation                                           |\n| ------------------------ | -------------------------- | -------------------------------------------------------- |\n| `check_geo_radius`       | Haversine formula          | Calls `geo_distance` from geo module                     |\n| `check_geo_bounding_box` | Coordinate bounds checking | Direct coordinate comparison with anti-meridian handling |\n| `check_geo_polygon`      | Ray-casting algorithm      | Calls `boolean_point_in_polygon` from geo module         |\n\nSources: [qdrant\\_client/local/payload\\_filters.py46-96](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L46-L96) [qdrant\\_client/local/geo.py7-91](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py#L7-L91)\n\n### Values Count Condition\n\nThe values count condition filters based on the number of values in a field:\n\n```\n```\n\nThe `check_values_count` function determines whether a field has the required number of values, using the helper function `get_value_counts` to calculate actual counts:\n\n```\n```\n\nSources: [qdrant\\_client/local/payload\\_filters.py13-43](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L13-L43)\n\n## 4. Nested Filtering\n\nQdrant supports filtering on nested objects and arrays using dot notation and array indexing:\n\n```\n```\n\nThe `NestedCondition` is particularly powerful as it allows applying a complete filter to each element of an array:\n\n```\n```\n\nThe `check_nested_filter` function handles nested filtering by applying the filter to each element in the specified array. It uses the `value_by_key` function from the payload value extractor module to navigate nested structures:\n\n```\n```",
      "index": 4,
      "token_count": 449,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.1-payload-filtering",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.1-payload-filtering.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "file_name": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.542605",
        "total_chunks": 7
      },
      "start_char": 7676,
      "end_char": 9677
    },
    {
      "content": "e_by_key` function from the payload value extractor module to navigate nested structures:\n\n```\n```\n\nThe `value_by_key` function supports JSON path notation with array indexing and wildcard access patterns.\n\nSources: [qdrant\\_client/local/payload\\_filters.py162-163](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L162-L163) [qdrant\\_client/local/payload\\_value\\_extractor.py11-81](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py#L11-L81)\n\n## 5. Filter Processing Flow\n\nWhen a search request includes a filter, the filtering process follows these steps:\n\nFilter Processing Flow Diagram\n\n```\n```\n\nThe key function in this process is `calculate_payload_mask`, which applies the filter to all payloads and returns a boolean mask that indicates which points match the filter.\n\nSources: [qdrant\\_client/local/payload\\_filters.py315-333](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L315-L333)\n\n## 6. Performance Considerations\n\nPayload filtering takes place after vector similarity search in the Qdrant client implementation. This means that:\n\n1. The filter is applied to the top-k results from the vector search\n2. If you need to filter first, consider using `prefiltration=True` in your search request\n3. Complex filters on large result sets can impact performance\n\nFor optimal performance:\n\n- Use simple conditions when possible\n- Avoid deeply nested filters\n- Consider indexing frequently filtered fields (server-side)\n- For local mode, filters operate in-memory without indexing\n\nSources: [qdrant\\_client/local/payload\\_filters.py315-333](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L315-L333)\n\n## 7. Integration with Formula Expressions\n\nPayload filters can also be used within formula expressions to adjust scores based on payload values:\n\n```\n```",
      "index": 5,
      "token_count": 485,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.1-payload-filtering",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.1-payload-filtering.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "file_name": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.542605",
        "total_chunks": 7
      },
      "start_char": 9577,
      "end_char": 11523
    },
    {
      "content": "ers can also be used within formula expressions to adjust scores based on payload values:\n\n```\n```\n\nThe `check_condition` function is reused in the formula expression evaluation to determine if conditions are met.\n\nSources: [qdrant\\_client/hybrid/formula.py33-36](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L33-L36)\n\nThis integration allows for powerful hybrid search capabilities where both vector similarity and metadata influence the final ranking.\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Payload Filtering](#payload-filtering.md)\n- [1. Filter Structure Overview](#1-filter-structure-overview.md)\n- [Filter Boolean Logic](#filter-boolean-logic.md)\n- [2. Condition Types](#2-condition-types.md)\n- [Field Conditions](#field-conditions.md)\n- [Special Condition Types](#special-condition-types.md)\n- [3. Field Matchers Implementation](#3-field-matchers-implementation.md)\n- [Match Condition Types](#match-condition-types.md)\n- [Range Conditions](#range-conditions.md)\n- [Geo Conditions](#geo-conditions.md)\n- [Values Count Condition](#values-count-condition.md)\n- [4. Nested Filtering](#4-nested-filtering.md)\n- [5. Filter Processing Flow](#5-filter-processing-flow.md)\n- [6. Performance Considerations](#6-performance-considerations.md)\n- [7. Integration with Formula Expressions](#7-integration-with-formula-expressions.md)",
      "index": 6,
      "token_count": 337,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.1-payload-filtering",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.1-payload-filtering.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "file_name": "_qdrant_qdrant-client_5.1-payload-filtering.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.542605",
        "total_chunks": 7
      },
      "start_char": 11423,
      "end_char": 13471
    },
    {
      "content": "Type Inspector System | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Type Inspector System\n\nRelevant source files",
      "index": 0,
      "token_count": 613,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.2-type-inspector-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "file_name": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.563646",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2026
    },
    {
      "content": "t/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Type Inspector System\n\nRelevant source files\n\n- [qdrant\\_client/\\_pydantic\\_compat.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/_pydantic_compat.py)\n- [qdrant\\_client/embed/embed\\_inspector.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.py)\n- [qdrant\\_client/embed/schema\\_parser.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py)\n- [qdrant\\_client/embed/type\\_inspector.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py)\n- [tools/populate\\_inspection\\_cache.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/populate_inspection_cache.py)\n\nThe Type Inspector System is responsible for detecting objects requiring inference (embeddings) within Pydantic models used in the Qdrant client. It analyzes model schemas to identify paths to `Document`, `Image`, and `InferenceObject` types, enabling automatic embedding generation during data operations. The system includes schema parsing, type detection, and caching mechanisms to optimize performance.\n\nFor information about the actual embedding generation process, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md). For details about local inference model management, see [Local Inference](qdrant/qdrant-client/4.4-local-inference.md).\n\n## Core Components\n\nThe Type Inspector System consists of three main components that work together to detect inference objects in Pydantic models:\n\n```\n```\n\n**Sources:** [qdrant\\_client/embed/type\\_inspector.py12-23](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L12-L23) [qdrant\\_client/embed/schema\\_parser.py29-69](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L29-L69) [qdrant\\_client/embed/embed\\_inspector.py13-21](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.",
      "index": 1,
      "token_count": 550,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.2-type-inspector-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "file_name": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.563646",
        "total_chunks": 6
      },
      "start_char": 1926,
      "end_char": 3973
    },
    {
      "content": ".py13-21](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.py#L13-L21)\n\n## Schema Parsing System\n\nThe `ModelSchemaParser` class analyzes Pydantic model JSON schemas to identify paths to inference objects. It maintains internal state including definitions, recursive references, and cached paths:\n\n```\n```\n\n**Sources:** [qdrant\\_client/embed/schema\\_parser.py238-287](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L238-L287) [qdrant\\_client/embed/schema\\_parser.py91-151](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L91-L151) [qdrant\\_client/embed/schema\\_parser.py153-236](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L153-L236)\n\n## Type Detection Process\n\nThe `Inspector` class performs the actual detection of inference objects within model instances. It uses a recursive traversal approach to examine nested structures:\n\n| Component                 | Purpose                                | Key Methods                               |\n| ------------------------- | -------------------------------------- | ----------------------------------------- |\n| `Inspector.inspect()`     | Main entry point for detection         | Returns `bool` if inference objects found |\n| `_inspect_model()`        | Examine individual BaseModel instances | Checks against `INFERENCE_OBJECT_TYPES`   |\n| `_inspect_inner_models()` | Traverse nested structures             | Handles lists, dicts, and nested models   |\n\n```\n```\n\n**Sources:** [qdrant\\_client/embed/type\\_inspector.py24-50](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L24-L50) [qdrant\\_client/embed/type\\_inspector.py52-66](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L52-L66) [qdrant\\_client/embed/type\\_inspector.py68-149](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L68-L149)",
      "index": 2,
      "token_count": 541,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.2-type-inspector-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "file_name": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.563646",
        "total_chunks": 6
      },
      "start_char": 3873,
      "end_char": 5921
    },
    {
      "content": "ps://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L68-L149)\n\n## Caching and Performance Optimization\n\nThe system implements a comprehensive caching strategy to avoid repeated schema parsing and path computation:\n\n### Cache Structure\n\n| Cache Component   | Storage Format               | Purpose                               |\n| ----------------- | ---------------------------- | ------------------------------------- |\n| `_cache`          | `dict[str, list[str]]`       | String paths to inference objects     |\n| `path_cache`      | `dict[str, list[FieldPath]]` | Structured path objects for traversal |\n| `_defs`           | `dict[str, dict]`            | Schema definitions from `$defs`       |\n| `_recursive_refs` | `set[str]`                   | Detected recursive references         |\n\n### Cache Population\n\nThe inspection cache is pre-populated using the `populate_inspection_cache.py` tool, which processes all Pydantic models in the `qdrant_client.models` module:\n\n```\n```\n\n**Sources:** [tools/populate\\_inspection\\_cache.py34-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/populate_inspection_cache.py#L34-L76) [qdrant\\_client/embed/schema\\_parser.py74-89](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L74-L89) [qdrant\\_client/embed/schema\\_parser.py289-305](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L289-L305)\n\n## Pydantic Compatibility Layer\n\nThe system supports both Pydantic v1 and v2 through a compatibility layer that abstracts version-specific functionality:\n\n| Function              | Pydantic v1            | Pydantic v2                 | Purpose                     |\n| --------------------- | ---------------------- | --------------------------- | --------------------------- |\n| `model_fields_set()`  | `model.__fields_set__` | `model.model_fields_set`    | Get set model fields        |\n| `model_json_schema()` | `model.schema_json()`  | `model.",
      "index": 3,
      "token_count": 486,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.2-type-inspector-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "file_name": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.563646",
        "total_chunks": 6
      },
      "start_char": 5821,
      "end_char": 7842
    },
    {
      "content": "s_set`    | Get set model fields        |\n| `model_json_schema()` | `model.schema_json()`  | `model.model_json_schema()` | Extract JSON schema         |\n| `model_fields()`      | `model.__fields__`     | `model.model_fields`        | Get model field definitions |\n\n**Sources:** [qdrant\\_client/\\_pydantic\\_compat.py44-62](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/_pydantic_compat.py#L44-L62) [qdrant\\_client/embed/type\\_inspector.py73](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L73-L73) [qdrant\\_client/embed/schema\\_parser.py254](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/schema_parser.py#L254-L254)\n\n## Integration with FastEmbed System\n\nThe Type Inspector System integrates with the FastEmbed system by providing two inspection modes:\n\n### Detection Mode (`Inspector`)\n\nUsed to determine if any inference objects are present in a model, triggering embedding generation when needed.\n\n### Collection Mode (`InspectorEmbed`)\n\nUsed to collect all paths to inference objects for batch processing and embedding replacement.\n\n```\n```\n\n**Sources:** [qdrant\\_client/embed/type\\_inspector.py12-23](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py#L12-L23) [qdrant\\_client/embed/embed\\_inspector.py13-21](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.py#L13-L21) [qdrant\\_client/embed/embed\\_inspector.py23-47](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/embed_inspector.py#L23-L47)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Type Inspector System](#type-inspector-system.md)\n- [Core Components](#core-components.md)\n- [Schema Parsing System](#schema-parsing-system.md)\n- [Type Detection Process](#type-detection-process.md)\n- [Caching and Performance Optimization](#caching-and-performance-optimization.md)\n- [Cache Structure](#cache-structure.md)\n- [Cache Population](#cache-population.md)",
      "index": 4,
      "token_count": 567,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.2-type-inspector-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "file_name": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.563646",
        "total_chunks": 6
      },
      "start_char": 7742,
      "end_char": 9783
    },
    {
      "content": "ptimization.md)\n- [Cache Structure](#cache-structure.md)\n- [Cache Population](#cache-population.md)\n- [Pydantic Compatibility Layer](#pydantic-compatibility-layer.md)\n- [Integration with FastEmbed System](#integration-with-fastembed-system.md)\n- [Detection Mode (\\`Inspector\\`)](#detection-mode-inspector.md)\n- [Collection Mode (\\`InspectorEmbed\\`)](#collection-mode-inspectorembed.md)",
      "index": 5,
      "token_count": 97,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.2-type-inspector-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "file_name": "_qdrant_qdrant-client_5.2-type-inspector-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.563646",
        "total_chunks": 6
      },
      "start_char": 9683,
      "end_char": 11731
    },
    {
      "content": "Expression Evaluation | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Expression Evaluation\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.3-expression-evaluation",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "file_name": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.597510",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2026
    },
    {
      "content": "t/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Expression Evaluation\n\nRelevant source files\n\n- [qdrant\\_client/embed/\\_inspection\\_cache.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/_inspection_cache.py)\n- [qdrant\\_client/hybrid/formula.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py)\n- [tests/fixtures/expressions.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/fixtures/expressions.py)\n\n## Purpose and Scope\n\nThis document covers the expression evaluation system used in Qdrant's hybrid search and formula queries. The system provides a comprehensive framework for evaluating complex mathematical, geographical, and conditional expressions that can reference point scores, payload values, and external variables. This evaluation system is primarily used in hybrid search scenarios where custom scoring formulas need to be applied to search results.\n\nFor information about payload filtering conditions, see [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md). For details about the type inspection system that detects inference objects, see [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md).\n\n## System Architecture\n\nThe expression evaluation system is built around a recursive evaluation engine that processes a tree of expression objects. Each expression type has specific evaluation logic that can reference point data, scores from multiple search stages, and external defaults.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py19-26](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L26) [qdrant\\_client/hybrid/formula.py266-298](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L266-L298) [qdrant\\_client/hybrid/formula.py245-263](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L245-L263)\n\n## Core Expression Types\n\n### Mathematical Expressions",
      "index": 1,
      "token_count": 508,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.3-expression-evaluation",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "file_name": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.597510",
        "total_chunks": 6
      },
      "start_char": 1926,
      "end_char": 3937
    },
    {
      "content": "qdrant_client/hybrid/formula.py#L245-L263)\n\n## Core Expression Types\n\n### Mathematical Expressions\n\nThe system supports a comprehensive set of mathematical operations that can be combined recursively to create complex formulas.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py38-49](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L38-L49) [qdrant\\_client/hybrid/formula.py51-55](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L51-L55) [qdrant\\_client/hybrid/formula.py68-89](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L68-L89) [qdrant\\_client/hybrid/formula.py101-116](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L101-L116) [qdrant\\_client/hybrid/formula.py118-150](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L118-L150)\n\n### Variable Resolution System\n\nVariables in expressions can reference two types of data: payload fields and search scores from different stages.\n\n| Variable Type   | Pattern                     | Example                     | Resolution                    |\n| --------------- | --------------------------- | --------------------------- | ----------------------------- |\n| Payload Field   | `\"field.name\"`              | `\"price\"`, `\"nested.value\"` | Extracted from point payload  |\n| Score Reference | `\"$score\"` or `\"$score[n]\"` | `\"$score\"`, `\"$score[1]\"`   | Retrieved from search results |\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py301-331](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L301-L331) [qdrant\\_client/hybrid/formula.py266-298](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L266-L298) [qdrant\\_client/hybrid/formula.py245-263](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L245-L263)\n\n## Decay Functions",
      "index": 2,
      "token_count": 613,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.3-expression-evaluation",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "file_name": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.597510",
        "total_chunks": 6
      },
      "start_char": 3837,
      "end_char": 5820
    },
    {
      "content": "/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L245-L263)\n\n## Decay Functions\n\nDecay functions provide sophisticated scoring mechanisms that decrease based on distance from a target value. Three types are supported:\n\n### Linear Decay\n\n```\nscore = max(0, -λ * |x - target| + 1)\nwhere λ = (1 - midpoint) / scale\n```\n\n### Exponential Decay\n\n```\nscore = exp(λ * |x - target|)\nwhere λ = ln(midpoint) / scale\n```\n\n### Gaussian Decay\n\n```\nscore = exp(λ * (x - target)²)\nwhere λ = ln(midpoint) / scale²\n```\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py186-211](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L186-L211) [qdrant\\_client/hybrid/formula.py216-242](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L216-L242) [qdrant\\_client/hybrid/formula.py13-16](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L13-L16)\n\n## Geographical and Datetime Expressions\n\n### Geographical Distance Calculation\n\nThe `GeoDistance` expression calculates the distance between two geographical points using the haversine formula.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py152-166](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L152-L166) [qdrant\\_client/local/geo.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py)\n\n### Datetime Expressions\n\nTwo types of datetime expressions are supported:\n\n| Type                    | Purpose                  | Example                                |\n| ----------------------- | ------------------------ | -------------------------------------- |\n| `DatetimeExpression`    | Literal datetime values  | `{\"datetime\": \"2023-01-01T00:00:00Z\"}` |\n| `DatetimeKeyExpression` | Payload field references | `{\"datetime_key\": \"created_at\"}`       |\n\nSources: [qdrant\\_client/hybrid/formula.py168-184](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.",
      "index": 3,
      "token_count": 608,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.3-expression-evaluation",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "file_name": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.597510",
        "total_chunks": 6
      },
      "start_char": 5720,
      "end_char": 7734
    },
    {
      "content": "rmula.py168-184](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L168-L184) [qdrant\\_client/local/datetime\\_utils.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/datetime_utils.py)\n\n## Error Handling and Validation\n\nThe expression evaluation system includes comprehensive error handling for mathematical edge cases and invalid inputs.\n\n### Mathematical Error Handling\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py80-89](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L80-L89) [qdrant\\_client/hybrid/formula.py96-99](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L96-L99) [qdrant\\_client/hybrid/formula.py133-139](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L133-L139) [qdrant\\_client/hybrid/formula.py334-335](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L334-L335)\n\n### Validation Functions\n\nThe system includes several validation functions to ensure data integrity:\n\n- `is_number()`: Validates that a value is a numeric type (excluding boolean)\n- `raise_non_finite_error()`: Provides consistent error reporting for mathematical errors\n- Domain validation for decay parameters (midpoint and scale ranges)\n\nSources: [qdrant\\_client/hybrid/formula.py338-339](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L338-L339) [qdrant\\_client/hybrid/formula.py235-240](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L235-L240)\n\n## Testing Infrastructure\n\nThe expression evaluation system includes comprehensive test fixtures for generating random expressions and validating functionality.\n\n```\n```\n\nSources: [tests/fixtures/expressions.py8-111](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/fixtures/expressions.py#L8-L111) [qdrant\\_client/hybrid/formula.py342-370](https://github.",
      "index": 4,
      "token_count": 609,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.3-expression-evaluation",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "file_name": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.597510",
        "total_chunks": 6
      },
      "start_char": 7634,
      "end_char": 9633
    },
    {
      "content": "cd2/tests/fixtures/expressions.py#L8-L111) [qdrant\\_client/hybrid/formula.py342-370](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L342-L370)\n\n## Integration with Search System\n\nThe expression evaluation system is integrated with Qdrant's hybrid search capabilities, allowing complex scoring formulas to be applied to search results across multiple stages.\n\n```\n```\n\nSources: [qdrant\\_client/hybrid/formula.py19-26](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/hybrid/formula.py#L19-L26) [qdrant\\_client/conversions/common\\_types.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/common_types.py)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Expression Evaluation](#expression-evaluation.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [System Architecture](#system-architecture.md)\n- [Core Expression Types](#core-expression-types.md)\n- [Mathematical Expressions](#mathematical-expressions.md)\n- [Variable Resolution System](#variable-resolution-system.md)\n- [Decay Functions](#decay-functions.md)\n- [Linear Decay](#linear-decay.md)\n- [Exponential Decay](#exponential-decay.md)\n- [Gaussian Decay](#gaussian-decay.md)\n- [Geographical and Datetime Expressions](#geographical-and-datetime-expressions.md)\n- [Geographical Distance Calculation](#geographical-distance-calculation.md)\n- [Datetime Expressions](#datetime-expressions.md)\n- [Error Handling and Validation](#error-handling-and-validation.md)\n- [Mathematical Error Handling](#mathematical-error-handling.md)\n- [Validation Functions](#validation-functions.md)\n- [Testing Infrastructure](#testing-infrastructure.md)\n- [Integration with Search System](#integration-with-search-system.md)",
      "index": 5,
      "token_count": 463,
      "metadata": {
        "title": "_qdrant_qdrant-client_5.3-expression-evaluation",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "file_name": "_qdrant_qdrant-client_5.3-expression-evaluation.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.597510",
        "total_chunks": 6
      },
      "start_char": 9533,
      "end_char": 11581
    },
    {
      "content": "Development & Testing | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Development & Testing\n\nRelevant source files\n\n- [.",
      "index": 0,
      "token_count": 615,
      "metadata": {
        "title": "_qdrant_qdrant-client_6-development-and-testing",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6-development-and-testing.md",
        "file_name": "_qdrant_qdrant-client_6-development-and-testing.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.736330",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2030
    },
    {
      "content": "rant-client/6.3-documentation-system.md)\n\nMenu\n\n# Development & Testing\n\nRelevant source files\n\n- [.github/workflows/integration-tests.yml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml)\n- [poetry.lock](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/poetry.lock)\n- [pyproject.toml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml)\n- [tests/integration-tests.sh](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh)\n\nThis document covers the development setup, testing frameworks, and CI/CD pipeline for the qdrant-client Python library. It explains how to set up a development environment, run tests, and contribute to the project.\n\nFor information about the overall project structure and client architecture, see [Client Architecture](qdrant/qdrant-client/2-client-architecture.md). For details about implementation internals, see [Implementation Details](qdrant/qdrant-client/5-implementation-details.md).\n\n## Project Configuration and Dependencies\n\nThe qdrant-client project uses Poetry for dependency management and is configured through `pyproject.toml`. The project supports Python versions 3.9 through 3.13 and includes comprehensive development tooling.\n\n### Core Dependencies\n\nThe project's main dependencies are defined in [pyproject.toml16-36](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L16-L36):\n\n```\n```\n\n**Sources:** [pyproject.toml16-79](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L16-L79)\n\n### Python Version Support Matrix\n\nThe project uses version-specific NumPy dependencies to ensure compatibility across Python versions:\n\n| Python Version | NumPy Version |\n| -------------- | ------------- |\n| 3.9            | >=1.21,<2.1.0 |\n| 3.10-3.11      | >=1.21        |\n| 3.12           | >=1.26        |\n| 3.13+          | >=2.1.0       |\n\n**Sources:** [pyproject.toml19-24](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L19-L24)",
      "index": 1,
      "token_count": 549,
      "metadata": {
        "title": "_qdrant_qdrant-client_6-development-and-testing",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6-development-and-testing.md",
        "file_name": "_qdrant_qdrant-client_6-development-and-testing.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.736330",
        "total_chunks": 6
      },
      "start_char": 1930,
      "end_char": 3955
    },
    {
      "content": "pyproject.toml19-24](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L19-L24)\n\n### Development Tool Configuration\n\nThe project includes strict type checking and testing configurations:\n\n```\n```\n\n**Sources:** [pyproject.toml68-75](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L68-L75)\n\n## Testing Framework\n\nThe qdrant-client project implements a comprehensive testing strategy with multiple test types and CI/CD integration.\n\n### Integration Test Infrastructure\n\nThe integration testing system uses Docker containers to test against real Qdrant instances:\n\n```\n```\n\n**Sources:** [tests/integration-tests.sh1-51](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L1-L51)\n\n### CI/CD Pipeline\n\nThe GitHub Actions workflow provides comprehensive testing across multiple Python versions and test types:\n\n```\n```\n\n**Sources:** [.github/workflows/integration-tests.yml1-77](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L1-L77)\n\n### Test Types and Execution\n\nThe testing framework includes several specialized test categories:\n\n1. **Congruence Tests**: Verify that local and remote implementations produce identical results\n2. **Integration Tests**: Test against live Qdrant service instances\n3. **Async Client Tests**: Validate async client generation consistency\n4. **Cache Tests**: Test inspection cache population and consistency\n5. **Coverage Tests**: Ensure conversion layer coverage\n6. **Docstring Tests**: Validate code examples in documentation\n7. **Backward Compatibility Tests**: Test against older Qdrant versions\n\n### Test Environment Configuration\n\nThe integration test script supports environment-based configuration:\n\n| Environment Variable      | Default   | Purpose                     |\n| ------------------------- | --------- | --------------------------- |\n| `QDRANT_VERSION`          | `v1.14.1` | Qdrant Docker image version |\n| `IGNORE_CONGRUENCE_TESTS` | `false`   | Skip congruence tests       |",
      "index": 2,
      "token_count": 467,
      "metadata": {
        "title": "_qdrant_qdrant-client_6-development-and-testing",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6-development-and-testing.md",
        "file_name": "_qdrant_qdrant-client_6-development-and-testing.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.736330",
        "total_chunks": 6
      },
      "start_char": 3855,
      "end_char": 5894
    },
    {
      "content": "rant Docker image version |\n| `IGNORE_CONGRUENCE_TESTS` | `false`   | Skip congruence tests       |\n| `REST_PORT`               | `6333`    | REST API port               |\n| `GRPC_PORT`               | `6334`    | gRPC API port               |\n| `P2P_PORT`                | `6335`    | P2P cluster port            |\n\n**Sources:** [tests/integration-tests.sh14-21](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L14-L21)\n\n### Backward Compatibility Testing\n\nThe project maintains backward compatibility through automated testing against multiple Qdrant versions:\n\n```\n```\n\nWhen running backward compatibility tests, congruence tests are automatically skipped to focus on API compatibility rather than behavioral equivalence.\n\n**Sources:** [tests/integration-tests.sh38-45](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L38-L45) [.github/workflows/integration-tests.yml65-70](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L65-L70)\n\n## Documentation System\n\nThe project uses Sphinx for documentation generation with support for Jupyter notebooks and automated API documentation.\n\n### Documentation Dependencies\n\nThe documentation system requires specific dependencies defined in `pyproject.toml`:\n\n```\n```\n\n**Sources:** [pyproject.toml48-54](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L48-L54)\n\n### Documentation Testing\n\nThe CI pipeline includes documentation testing through docstring validation:\n\n```\n```\n\nThis ensures that code examples in documentation remain functional and accurate.\n\n**Sources:** [.github/workflows/integration-tests.yml56-58](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L56-L58)\n\n## Development Workflow\n\nThe project follows a structured development workflow with automated checks and quality assurance.\n\n### Code Quality Tools\n\nThe development environment includes several code quality tools:",
      "index": 3,
      "token_count": 484,
      "metadata": {
        "title": "_qdrant_qdrant-client_6-development-and-testing",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6-development-and-testing.md",
        "file_name": "_qdrant_qdrant-client_6-development-and-testing.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.736330",
        "total_chunks": 6
      },
      "start_char": 5794,
      "end_char": 7804
    },
    {
      "content": "surance.\n\n### Code Quality Tools\n\nThe development environment includes several code quality tools:\n\n- **Ruff**: Fast Python linter (pinned to version 0.4.3)\n- **Autoflake**: Removes unused imports and variables\n- **Pre-commit**: Git hooks for automated checks\n- **Pyright**: Strict type checking\n- **MyPy**: Additional type analysis\n\n### Testing Workflow\n\n1. **Local Development**: Run tests locally using pytest\n2. **Pre-commit Hooks**: Automatic code quality checks\n3. **CI Pipeline**: Comprehensive testing across Python versions\n4. **Integration Testing**: Docker-based testing against Qdrant service\n5. **Backward Compatibility**: Automated testing against older versions\n\n### FastEmbed Integration Testing\n\nThe project includes specialized testing for FastEmbed integration:\n\n```\n```\n\nThis ensures the library works correctly both with and without the optional FastEmbed dependency.\n\n**Sources:** [.github/workflows/integration-tests.yml71-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L71-L76)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Development & Testing](#development-testing.md)\n- [Project Configuration and Dependencies](#project-configuration-and-dependencies.md)\n- [Core Dependencies](#core-dependencies.md)\n- [Python Version Support Matrix](#python-version-support-matrix.md)\n- [Development Tool Configuration](#development-tool-configuration.md)\n- [Testing Framework](#testing-framework.md)\n- [Integration Test Infrastructure](#integration-test-infrastructure.md)\n- [CI/CD Pipeline](#cicd-pipeline.md)\n- [Test Types and Execution](#test-types-and-execution.md)\n- [Test Environment Configuration](#test-environment-configuration.md)\n- [Backward Compatibility Testing](#backward-compatibility-testing.md)\n- [Documentation System](#documentation-system.md)\n- [Documentation Dependencies](#documentation-dependencies.md)\n- [Documentation Testing](#documentation-testing.md)\n- [Development Workflow](#development-workflow.md)",
      "index": 4,
      "token_count": 439,
      "metadata": {
        "title": "_qdrant_qdrant-client_6-development-and-testing",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6-development-and-testing.md",
        "file_name": "_qdrant_qdrant-client_6-development-and-testing.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.736330",
        "total_chunks": 6
      },
      "start_char": 7704,
      "end_char": 9726
    },
    {
      "content": "ocumentation Testing](#documentation-testing.md)\n- [Development Workflow](#development-workflow.md)\n- [Code Quality Tools](#code-quality-tools.md)\n- [Testing Workflow](#testing-workflow.md)\n- [FastEmbed Integration Testing](#fastembed-integration-testing.md)",
      "index": 5,
      "token_count": 58,
      "metadata": {
        "title": "_qdrant_qdrant-client_6-development-and-testing",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6-development-and-testing.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6-development-and-testing.md",
        "file_name": "_qdrant_qdrant-client_6-development-and-testing.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.736330",
        "total_chunks": 6
      },
      "start_char": 9626,
      "end_char": 11674
    },
    {
      "content": "Project Setup | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Project Setup\n\nRelevant source files\n\n- [.github/workflows/integration-tests.",
      "index": 0,
      "token_count": 620,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.1-project-setup",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.1-project-setup.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.1-project-setup.md",
        "file_name": "_qdrant_qdrant-client_6.1-project-setup.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.758697",
        "total_chunks": 6
      },
      "start_char": 0,
      "end_char": 2049
    },
    {
      "content": "on-system.md)\n\nMenu\n\n# Project Setup\n\nRelevant source files\n\n- [.github/workflows/integration-tests.yml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml)\n- [poetry.lock](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/poetry.lock)\n- [pyproject.toml](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml)\n- [tests/integration-tests.sh](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh)\n\nThis document covers the project configuration, dependency management, build system, and development environment setup for the qdrant-client Python library. It explains how Poetry is used to manage dependencies, testing frameworks, and the continuous integration pipeline.\n\nFor information about the testing framework and test execution, see [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md). For documentation generation and maintenance, see [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md).\n\n## Build System Architecture\n\nThe qdrant-client project uses Poetry as its primary build system and dependency manager, with configuration centralized in `pyproject.toml`. The build system supports multiple Python versions and provides optional feature sets through extras.\n\n```\n```\n\n**Sources:** [pyproject.toml1-79](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L1-L79) [pyproject.toml64-66](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L64-L66)\n\n## Dependency Management\n\nThe project manages dependencies through Poetry's sophisticated dependency resolution system, supporting different Python versions with conditional dependencies and optional feature sets.\n\n### Core Dependencies\n\n| Dependency    | Version Constraint                 | Purpose                                  |\n| ------------- | ---------------------------------- | ---------------------------------------- |\n| `httpx`       | `>=0.20.0` with `http2` extras     | HTTP client for REST API communication   |",
      "index": 1,
      "token_count": 463,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.1-project-setup",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.1-project-setup.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.1-project-setup.md",
        "file_name": "_qdrant_qdrant-client_6.1-project-setup.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.758697",
        "total_chunks": 6
      },
      "start_char": 1949,
      "end_char": 3998
    },
    {
      "content": "|\n| `httpx`       | `>=0.20.0` with `http2` extras     | HTTP client for REST API communication   |\n| `numpy`       | Version-specific constraints       | Numerical operations and vector handling |\n| `pydantic`    | `>=1.10.8,!=2.0.*,!=2.1.*,!=2.2.0` | Data validation and serialization        |\n| `grpcio`      | `>=1.41.0`                         | gRPC communication protocol              |\n| `protobuf`    | `>=3.20.0`                         | Protocol buffer serialization            |\n| `urllib3`     | `>=1.26.14,<3`                     | HTTP utilities                           |\n| `portalocker` | `^2.7.0`                           | File locking for local storage           |\n\n**Sources:** [pyproject.toml16-35](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L16-L35)\n\n### Python Version Support\n\nThe project supports Python 3.9 through 3.13 with version-specific numpy constraints:\n\n```\n```\n\n**Sources:** [pyproject.toml17-24](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L17-L24) [.github/workflows/integration-tests.yml16-21](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L16-L21)\n\n### Optional Dependencies\n\nThe project provides optional extras for embedding functionality:\n\n- **`fastembed`**: Enables text and image embedding through the FastEmbed library\n- **`fastembed-gpu`**: Provides GPU-accelerated embedding capabilities\n\n**Sources:** [pyproject.toml30-35](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L30-L35) [pyproject.toml60-62](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L60-L62)\n\n## Development Environment Setup\n\n### Initial Setup\n\n1. **Install Poetry**: The project requires Poetry for dependency management\n2. **Configure Virtual Environment**: Poetry can be configured to create or skip virtual environments\n3. **Install Dependencies**: Install all dependency groups including optional extras\n\n```\n```\n\n**Sources:** [.github/workflows/integration-tests.",
      "index": 2,
      "token_count": 556,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.1-project-setup",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.1-project-setup.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.1-project-setup.md",
        "file_name": "_qdrant_qdrant-client_6.1-project-setup.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.758697",
        "total_chunks": 6
      },
      "start_char": 3898,
      "end_char": 5928
    },
    {
      "content": "ndency groups including optional extras\n\n```\n```\n\n**Sources:** [.github/workflows/integration-tests.yml36-39](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L36-L39)\n\n### Development Tools Configuration\n\nThe project includes several development tools with specific configurations:\n\n| Tool         | Configuration                      | Purpose                         |\n| ------------ | ---------------------------------- | ------------------------------- |\n| `pytest`     | Custom markers for fastembed tests | Test execution and organization |\n| `pyright`    | Strict type checking mode          | Static type analysis            |\n| `ruff`       | Version 0.4.3                      | Code linting and formatting     |\n| `autoflake`  | Version ^2.2.1                     | Unused import removal           |\n| `pre-commit` | Version ^4.2.0                     | Git hook automation             |\n\n**Sources:** [pyproject.toml37-46](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L37-L46) [pyproject.toml68-79](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L68-L79)\n\n## Configuration Files\n\n### pyproject.toml Structure\n\nThe main configuration file is organized into several sections:\n\n```\n```\n\n**Sources:** [pyproject.toml1-79](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L1-L79)\n\n### Package Metadata\n\nThe package is configured with the following metadata:\n\n- **Name**: `qdrant-client`\n- **Version**: `1.14.3`\n- **License**: `Apache-2.0`\n- **Package Structure**: Single package `qdrant_client` with gRPC stub exclusions\n\n**Sources:** [pyproject.toml1-14](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L1-L14)\n\n## Testing Infrastructure\n\n### Test Execution Framework\n\nThe project uses a comprehensive testing setup with multiple test types:\n\n```\n```\n\n**Sources:** [tests/integration-tests.sh1-51](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L1-L51) [.",
      "index": 3,
      "token_count": 527,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.1-project-setup",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.1-project-setup.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.1-project-setup.md",
        "file_name": "_qdrant_qdrant-client_6.1-project-setup.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.758697",
        "total_chunks": 6
      },
      "start_char": 5828,
      "end_char": 7858
    },
    {
      "content": ".sh1-51](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L1-L51) [.github/workflows/integration-tests.yml40-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L40-L76)\n\n### Test Execution Script\n\nThe integration test script (`tests/integration-tests.sh`) manages the complete test lifecycle:\n\n1. **Docker Setup**: Launches Qdrant service with specific port configuration\n2. **Service Health Check**: Waits for service availability\n3. **Test Execution**: Runs appropriate test suites based on configuration\n4. **Cleanup**: Ensures proper Docker container shutdown\n\n**Sources:** [tests/integration-tests.sh23-46](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L23-L46)\n\n### Test Configuration\n\nPytest is configured with custom markers for handling optional dependencies:\n\n- **`fastembed`**: Tests requiring FastEmbed package\n- **`no_fastembed`**: Tests that don't require FastEmbed package\n\n**Sources:** [pyproject.toml71-75](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L71-L75)\n\n## CI/CD Pipeline\n\n### GitHub Actions Workflow\n\nThe continuous integration pipeline runs comprehensive tests across multiple Python versions:\n\n```\n```\n\n**Sources:** [.github/workflows/integration-tests.yml1-77](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L1-L77)\n\n### Test Environment Configuration\n\nThe CI pipeline configures specific environment variables and test conditions:\n\n- **`QDRANT_VERSION`**: Controls which Qdrant version to test against\n- **`IGNORE_CONGRUENCE_TESTS`**: Skips local vs remote consistency tests\n- **`HF_TOKEN`**: Provides access to Hugging Face models for FastEmbed tests\n\n**Sources:** [tests/integration-tests.sh14-44](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L14-L44) [.github/workflows/integration-tests.yml60-69](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.",
      "index": 4,
      "token_count": 535,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.1-project-setup",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.1-project-setup.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.1-project-setup.md",
        "file_name": "_qdrant_qdrant-client_6.1-project-setup.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.758697",
        "total_chunks": 6
      },
      "start_char": 7758,
      "end_char": 9800
    },
    {
      "content": "yml60-69](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L60-L69)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Project Setup](#project-setup.md)\n- [Build System Architecture](#build-system-architecture.md)\n- [Dependency Management](#dependency-management.md)\n- [Core Dependencies](#core-dependencies.md)\n- [Python Version Support](#python-version-support.md)\n- [Optional Dependencies](#optional-dependencies.md)\n- [Development Environment Setup](#development-environment-setup.md)\n- [Initial Setup](#initial-setup.md)\n- [Development Tools Configuration](#development-tools-configuration.md)\n- [Configuration Files](#configuration-files.md)\n- [pyproject.toml Structure](#pyprojecttoml-structure.md)\n- [Package Metadata](#package-metadata.md)\n- [Testing Infrastructure](#testing-infrastructure.md)\n- [Test Execution Framework](#test-execution-framework.md)\n- [Test Execution Script](#test-execution-script.md)\n- [Test Configuration](#test-configuration.md)\n- [CI/CD Pipeline](#cicd-pipeline.md)\n- [GitHub Actions Workflow](#github-actions-workflow.md)\n- [Test Environment Configuration](#test-environment-configuration.md)",
      "index": 5,
      "token_count": 288,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.1-project-setup",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.1-project-setup.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.1-project-setup.md",
        "file_name": "_qdrant_qdrant-client_6.1-project-setup.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.758697",
        "total_chunks": 6
      },
      "start_char": 9700,
      "end_char": 11748
    },
    {
      "content": "Testing Framework | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Testing Framework\n\nRelevant source files",
      "index": 0,
      "token_count": 611,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.2-testing-framework",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "file_name": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.788165",
        "total_chunks": 8
      },
      "start_char": 0,
      "end_char": 2018
    },
    {
      "content": "drant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Testing Framework\n\nRelevant source files\n\n- [tests/congruence\\_tests/test\\_search.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_search.py)\n- [tests/congruence\\_tests/test\\_sparse\\_search.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_sparse_search.py)\n- [tests/congruence\\_tests/test\\_updates.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_updates.py)\n- [tests/test\\_in\\_memory.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_in_memory.py)\n- [tests/test\\_local\\_persistence.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_local_persistence.py)\n- [tests/test\\_qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py)\n\nThis page documents the testing methodology and organization of the test suite for the qdrant-client library. It provides an overview of how tests are structured, configured, and executed to ensure the library's functionality and compatibility.\n\n## Purpose and Scope\n\nThe qdrant-client testing framework is designed to verify the correctness, reliability, and compatibility of the client library across different environments, configurations, and usage patterns. It includes unit tests, integration tests, and specialized test suites to provide comprehensive coverage of the codebase.\n\n## Testing Architecture\n\nThe testing architecture of qdrant-client is organized around three main test categories that verify different aspects of client functionality and ensure consistency across implementations.\n\n### Test Framework Structure\n\n```\n```\n\nSources: [tests/test\\_qdrant\\_client.py1-1161](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L1-L1161) [tests/congruence\\_tests/test\\_common.py58-63](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_common.py#L58-L63) [tests/test\\_local\\_persistence.",
      "index": 1,
      "token_count": 520,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.2-testing-framework",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "file_name": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.788165",
        "total_chunks": 8
      },
      "start_char": 1918,
      "end_char": 3958
    },
    {
      "content": "client/blob/ac6f6cd2/tests/congruence_tests/test_common.py#L58-L63) [tests/test\\_local\\_persistence.py1-153](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_local_persistence.py#L1-L153) [tests/test\\_in\\_memory.py1-123](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_in_memory.py#L1-L123)\n\n## Test Dependencies and Configuration\n\nThe testing framework relies on several Python testing libraries as specified in the project's configuration.\n\n| Dependency     | Version | Purpose                   |\n| -------------- | ------- | ------------------------- |\n| pytest         | ^7.1    | Main testing framework    |\n| coverage       | ^6.3.3  | Test coverage measurement |\n| pytest-asyncio | ^0.21.0 | Testing asynchronous code |\n| pytest-timeout | ^2.1.0  | Testing timeout scenarios |\n| pytest-mock    | ^3.14.0 | Test mocking capabilities |\n| autoflake      | ^2.2.1  | Code quality checks       |\n| ruff           | 0.4.3   | Linting and formatting    |\n\nThe project defines custom pytest markers to categorize tests:\n\n```\n[tool.pytest.ini_options]\nmarkers = [\n    \"fastembed: marks tests that require the fastembed package (deselect with '-m \\\"not fastembed\\\"')\",\n    \"no_fastembed: marks tests that do not require the fastembed package (deselect with '-m \\\"not no_fastembed\\\"')\"\n]\n```\n\nThese markers allow selective test execution based on the availability of optional dependencies.\n\nSources: [pyproject.toml37-44](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L37-L44) [pyproject.toml70-74](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L70-L74)\n\n## Test Organization\n\n### Unit Tests\n\nUnit tests focus on testing individual components of the client library in isolation. The main test file `tests/test_qdrant_client.py` contains numerous test cases that verify:\n\n1. Client initialization with different parameters\n2. Collection creation and management\n3. Point operations (upsert, delete, search)\n4. Filtering and payload operations\n5.",
      "index": 2,
      "token_count": 537,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.2-testing-framework",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "file_name": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.788165",
        "total_chunks": 8
      },
      "start_char": 3858,
      "end_char": 5877
    },
    {
      "content": "n and management\n3. Point operations (upsert, delete, search)\n4. Filtering and payload operations\n5. Protocol handling (REST vs gRPC)\n\nExample test parameterization from the codebase:\n\n```\n```\n\nThis approach ensures features are tested across both REST and gRPC protocols, as well as with different parallelism settings.\n\nSources: [tests/test\\_qdrant\\_client.py93-206](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L93-L206) [tests/test\\_qdrant\\_client.py208-275](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L208-L275)\n\n### Integration Tests\n\nIntegration tests in `test_qdrant_client.py` verify end-to-end functionality with parameterized testing across different client configurations. Key test functions include:\n\n| Test Function                    | Parameters                                  | Purpose                                |\n| -------------------------------- | ------------------------------------------- | -------------------------------------- |\n| `test_qdrant_client_integration` | `prefer_grpc`, `numpy_upload`, `local_mode` | Full client functionality testing      |\n| `test_records_upload`            | `prefer_grpc`, `parallel`                   | Record upload with different protocols |\n| `test_point_upload`              | `prefer_grpc`, `parallel`                   | Point upload operations                |\n| `test_multiple_vectors`          | `prefer_grpc`                               | Multi-vector collection handling       |\n| `test_upload_collection`         | `prefer_grpc`, `parallel`                   | Collection upload operations           |\n\nIntegration Test Execution Flow:\n\n```\n```\n\nSources: [tests/integration-tests.sh13-47](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L13-L47) [tests/test\\_qdrant\\_client.py243-378](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L243-L378) [tests/test\\_qdrant\\_client.py488-1102](https://github.",
      "index": 3,
      "token_count": 480,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.2-testing-framework",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "file_name": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.788165",
        "total_chunks": 8
      },
      "start_char": 5777,
      "end_char": 7799
    },
    {
      "content": "f6cd2/tests/test_qdrant_client.py#L243-L378) [tests/test\\_qdrant\\_client.py488-1102](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L488-L1102)\n\n### Congruence Tests\n\nCongruence tests verify behavioral consistency between `QdrantLocal` and `QdrantRemote` implementations. The `test_common.py` module provides client initialization fixtures:\n\n```\n```\n\nCongruence Test Categories:\n\n```\n```\n\nThe integration test script conditionally skips congruence tests for backward compatibility testing:\n\n```\n```\n\nSources: [tests/congruence\\_tests/test\\_common.py58-84](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_common.py#L58-L84) [tests/congruence\\_tests/test\\_updates.py23-84](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_updates.py#L23-L84) [tests/congruence\\_tests/test\\_search.py148-179](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/congruence_tests/test_search.py#L148-L179) [tests/integration-tests.sh41-45](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L41-L45)\n\n## CI/CD Integration\n\nThe GitHub Actions workflow executes a comprehensive test matrix across multiple Python versions with specialized test categories.\n\n### CI Workflow Steps\n\n```\n```\n\n### Test Matrix Configuration\n\n| Step                    | Python Versions | Purpose                           |\n| ----------------------- | --------------- | --------------------------------- |\n| Poetry Installation     | 3.9-3.13        | Install all dependencies          |\n| Async Client Generation | 3.10 only       | Test code generation              |\n| Cache Consistency       | 3.10 only       | Test inspection cache             |\n| Coverage Testing        | 3.9-3.13        | Measure test coverage             |\n| Integration Tests       | 3.9-3.13        | Full functionality testing        |\n| Backward Compatibility  | 3.9-3.13        | Test against Qdrant v1.13.6       |\n| No-FastEmbed Tests      | 3.9-3.",
      "index": 4,
      "token_count": 563,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.2-testing-framework",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "file_name": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.788165",
        "total_chunks": 8
      },
      "start_char": 7699,
      "end_char": 9725
    },
    {
      "content": "tibility  | 3.9-3.13        | Test against Qdrant v1.13.6       |\n| No-FastEmbed Tests      | 3.9-3.13        | Test optional dependency handling |\n\n### Environment Variables\n\n- `QDRANT_VERSION`: Controls Qdrant server version for testing\n- `IGNORE_CONGRUENCE_TESTS`: Skips congruence tests when set to \"true\"\n\nSources: [.github/workflows/integration-tests.yml14-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L14-L76)\n\n## Test Execution\n\n### Local Development Testing\n\nThe test suite supports various execution modes for local development:\n\n```\n```\n\n### Integration Testing Process\n\nThe `integration-tests.sh` script orchestrates Docker-based testing:\n\nIntegration Test Flow:\n\n```\n```\n\nEnvironment Variables:\n\n- `QDRANT_VERSION`: Specifies Qdrant server version (default: v1.14.0)\n- `IGNORE_CONGRUENCE_TESTS`: Skip congruence tests when set to \"true\"\n\nSources: [tests/integration-tests.sh13-47](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/integration-tests.sh#L13-L47)\n\n## Specialized Test Categories\n\n### Protocol Testing\n\nProtocol testing ensures consistent behavior across REST and gRPC implementations using parameterized tests:\n\n```\n```\n\nKey parameterized test functions:\n\n- `test_records_upload(prefer_grpc, parallel)`\n- `test_point_upload(prefer_grpc, parallel)`\n- `test_multiple_vectors(prefer_grpc)`\n- `test_qdrant_client_integration(prefer_grpc, numpy_upload, local_mode)`\n\nSources: [tests/test\\_qdrant\\_client.py243-244](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L243-L244) [tests/test\\_qdrant\\_client.py312-313](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L312-L313) [tests/test\\_qdrant\\_client.py488-491](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_qdrant_client.py#L488-L491)\n\n### Local Mode Testing\n\nLocal mode tests verify in-process and persistence functionality:",
      "index": 5,
      "token_count": 552,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.2-testing-framework",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "file_name": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.788165",
        "total_chunks": 8
      },
      "start_char": 9625,
      "end_char": 11574
    },
    {
      "content": "8-L491)\n\n### Local Mode Testing\n\nLocal mode tests verify in-process and persistence functionality:\n\n| Test File                   | Test Functions                                                                                            | Purpose                                        |\n| --------------------------- | --------------------------------------------------------------------------------------------------------- | ---------------------------------------------- |\n| `test_local_persistence.py` | `test_local_dense_persistence()`, `test_local_sparse_persistence()`                                       | Verify data persistence across client restarts |\n| `test_in_memory.py`         | `test_dense_in_memory_key_filter_returns_results()`, `test_sparse_in_memory_key_filter_returns_results()` | Verify in-memory operation correctness         |\n\n### FastEmbed Integration\n\nFastEmbed integration testing uses pytest markers to handle optional dependencies:\n\n```\n```\n\nThe CI workflow validates graceful degradation when fastembed is unavailable:\n\n```\n```\n\nSources: [.github/workflows/integration-tests.yml72-76](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/.github/workflows/integration-tests.yml#L72-L76) [pyproject.toml70-74](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/pyproject.toml#L70-L74) [tests/test\\_local\\_persistence.py92-153](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_local_persistence.py#L92-L153) [tests/test\\_in\\_memory.py11-123](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_in_memory.py#L11-L123)\n\n## Conclusion\n\nThe qdrant-client testing framework provides comprehensive test coverage across different client configurations, protocols, and environments. The combination of unit tests, integration tests, and specialized test suites ensures that the client behaves correctly and consistently in various scenarios.",
      "index": 6,
      "token_count": 388,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.2-testing-framework",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "file_name": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.788165",
        "total_chunks": 8
      },
      "start_char": 11474,
      "end_char": 13376
    },
    {
      "content": "lized test suites ensures that the client behaves correctly and consistently in various scenarios.\n\nThe test architecture supports both local development testing and automated CI testing, with special consideration for backward compatibility and optional dependency testing. This ensures that the client remains reliable as both the client and server evolve over time.\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Testing Framework](#testing-framework.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Testing Architecture](#testing-architecture.md)\n- [Test Framework Structure](#test-framework-structure.md)\n- [Test Dependencies and Configuration](#test-dependencies-and-configuration.md)\n- [Test Organization](#test-organization.md)\n- [Unit Tests](#unit-tests.md)\n- [Integration Tests](#integration-tests.md)\n- [Congruence Tests](#congruence-tests.md)\n- [CI/CD Integration](#cicd-integration.md)\n- [CI Workflow Steps](#ci-workflow-steps.md)\n- [Test Matrix Configuration](#test-matrix-configuration.md)\n- [Environment Variables](#environment-variables.md)\n- [Test Execution](#test-execution.md)\n- [Local Development Testing](#local-development-testing.md)\n- [Integration Testing Process](#integration-testing-process.md)\n- [Specialized Test Categories](#specialized-test-categories.md)\n- [Protocol Testing](#protocol-testing.md)\n- [Local Mode Testing](#local-mode-testing.md)\n- [FastEmbed Integration](#fastembed-integration.md)\n- [Conclusion](#conclusion.md)",
      "index": 7,
      "token_count": 329,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.2-testing-framework",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.2-testing-framework.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "file_name": "_qdrant_qdrant-client_6.2-testing-framework.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.788165",
        "total_chunks": 8
      },
      "start_char": 13276,
      "end_char": 15324
    },
    {
      "content": "Documentation System | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Documentation System\n\nRelevant source files\n\n- [docs/source/conf.",
      "index": 0,
      "token_count": 617,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.3-documentation-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.3-documentation-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "file_name": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.824849",
        "total_chunks": 8
      },
      "start_char": 0,
      "end_char": 2044
    },
    {
      "content": "-documentation-system.md)\n\nMenu\n\n# Documentation System\n\nRelevant source files\n\n- [docs/source/conf.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py)\n- [docs/source/index.rst](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst)\n- [docs/source/quickstart.ipynb](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/quickstart.ipynb)\n\nThe Qdrant Client documentation system generates comprehensive API documentation from Python docstrings using Sphinx. The system includes API reference documentation, interactive examples, and automated deployment to a public website.\n\n## Documentation Architecture\n\nThe documentation system processes Python source code and generates structured HTML documentation:\n\n```\n```\n\nSources: [docs/source/conf.py30-37](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L30-L37) [docs/source/index.rst1-183](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L1-L183) [docs/source/quickstart.ipynb1-358](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/quickstart.ipynb#L1-L358)\n\n## Sphinx Configuration\n\nThe documentation system uses Sphinx with several extensions configured in `docs/source/conf.py`:\n\n| Extension                                        | Purpose                                    |\n| ------------------------------------------------ | ------------------------------------------ |\n| `sphinx.ext.napoleon`                            | Parses NumPy and Google-style docstrings   |\n| `sphinx.ext.autodoc`                             | Generates documentation from docstrings    |\n| `sphinx.ext.viewcode`                            | Adds source code links to documentation    |\n| `sphinx.ext.intersphinx`                         | Links to other Sphinx documentations       |\n| `nbsphinx`                                       | Renders Jupyter notebooks as documentation |\n| `IPython.sphinxext.ipython_console_highlighting` | Syntax highlighting for IPython            |",
      "index": 1,
      "token_count": 455,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.3-documentation-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.3-documentation-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "file_name": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.824849",
        "total_chunks": 8
      },
      "start_char": 1944,
      "end_char": 3991
    },
    {
      "content": "| `IPython.sphinxext.ipython_console_highlighting` | Syntax highlighting for IPython            |\n\nKey configuration settings:\n\n```\n```\n\nThe system uses the `qdrant_sphinx_theme` for consistent styling and excludes test files and gRPC-generated code from documentation.\n\nSources: [docs/source/conf.py30-37](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L30-L37) [docs/source/conf.py40-55](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L40-L55) [docs/source/conf.py71-74](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L71-L74) [docs/source/conf.py80](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L80-L80)\n\n## Interactive Examples System\n\nThe documentation includes a comprehensive Jupyter notebook at `docs/source/quickstart.ipynb` that demonstrates:\n\n### Installation Options\n\n- Standard installation: `pip install qdrant-client`\n- FastEmbed integration: `pip install 'qdrant-client[fastembed]'`\n\n### Client Initialization Examples\n\n```\n```\n\n### API Usage Patterns\n\nThe notebook demonstrates two main usage patterns:\n\n```\n```\n\n### Code Examples Integration\n\nThe notebook includes working examples for:\n\n- Collection creation with `VectorParams` and `Distance` enums\n- Point insertion using `PointStruct`\n- Search operations with `Filter`, `FieldCondition`, and `MatchValue`\n- Async/await patterns for asynchronous operations\n\nSources: [docs/source/quickstart.ipynb40-41](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/quickstart.ipynb#L40-L41) [docs/source/quickstart.ipynb100-108](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/quickstart.ipynb#L100-L108) [docs/source/quickstart.ipynb210-217](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/quickstart.ipynb#L210-L217) [docs/source/quickstart.ipynb244-257](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/quickstart.ipynb#L244-L257)\n\n## Documentation Generation Process",
      "index": 2,
      "token_count": 582,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.3-documentation-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.3-documentation-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "file_name": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.824849",
        "total_chunks": 8
      },
      "start_char": 3891,
      "end_char": 5902
    },
    {
      "content": "-client/blob/ac6f6cd2/docs/source/quickstart.ipynb#L244-L257)\n\n## Documentation Generation Process\n\nThe documentation build process transforms Python source code into structured HTML documentation:\n\n```\n```\n\n### Local Development Build\n\nFor local development, the build command generates API documentation and builds HTML output:\n\n```\n```\n\nThe `--force` flag overwrites existing files, `--separate` creates individual files for each module, and `--no-toc` excludes table of contents files.\n\nSources: [docs/source/conf.py71-74](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L71-L74) [docs/source/conf.py30-37](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L30-L37)\n\n## Code Documentation Coverage\n\nThe documentation system provides comprehensive coverage of the client library's public API:\n\n### Primary Client Classes\n\n| Class                  | Module                              | Documentation Focus               |\n| ---------------------- | ----------------------------------- | --------------------------------- |\n| `QdrantClient`         | `qdrant_client.qdrant_client`       | Main synchronous client interface |\n| `AsyncQdrantClient`    | `qdrant_client.async_qdrant_client` | Asynchronous client interface     |\n| `QdrantFastembedMixin` | `qdrant_client.qdrant_fastembed`    | FastEmbed integration methods     |\n\n### Data Models and Types\n\nThe documentation extensively covers data models from `qdrant_client.http.models.models`:\n\n```\n```\n\n### Exception Handling\n\nThe system documents all exception types from `qdrant_client.http.exceptions`, providing developers with comprehensive error handling guidance.\n\nSources: [docs/source/index.rst146-149](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L146-L149) [docs/source/index.rst172-176](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L172-L176) [docs/source/index.rst168-182](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L168-L182)",
      "index": 3,
      "token_count": 517,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.3-documentation-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.3-documentation-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "file_name": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.824849",
        "total_chunks": 8
      },
      "start_char": 5802,
      "end_char": 7843
    },
    {
      "content": "rst168-182](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L168-L182)\n\n## Documentation Theme and Styling\n\nThe documentation uses a custom theme configuration optimized for the Qdrant ecosystem:\n\n### Theme Configuration\n\n```\n```\n\n### Content Filtering\n\nThe documentation system excludes certain modules from generation:\n\n```\n```\n\nThis ensures the documentation focuses on the public API without including internal implementation details or test code.\n\nSources: [docs/source/conf.py80](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L80-L80) [docs/source/conf.py93-105](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L93-L105) [docs/source/conf.py71-74](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/conf.py#L71-L74)\n\n## Documentation Structure\n\nThe main documentation structure is defined in `docs/source/index.rst`:\n\n```\n```\n\n### Key Documentation Sections\n\nThe documentation includes these main sections:\n\n| Section                 | Content                                                       | File Reference                                                                                                                  |\n| ----------------------- | ------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------- |\n| **Examples**            | Installation, basic usage, async client examples              | [docs/source/index.rst15-142](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L15-L142)             |\n| **Highlighted Classes** | `PointStruct`, `Filter`, `VectorParams`, `BinaryQuantization` | [docs/source/index.rst146-149](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L146-L149)           |\n| **API Reference**       | Individual module documentation                               | [docs/source/index.rst168-176](https://github.",
      "index": 4,
      "token_count": 453,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.3-documentation-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.3-documentation-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "file_name": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.824849",
        "total_chunks": 8
      },
      "start_char": 7743,
      "end_char": 9780
    },
    {
      "content": "module documentation                               | [docs/source/index.rst168-176](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L168-L176)           |\n| **Quickstart Notebook** | Interactive examples with FastEmbed                           | [docs/source/quickstart.ipynb1-358](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/quickstart.ipynb#L1-L358) |\n| **Complete API**        | Full client API documentation                                 | [docs/source/index.rst178-182](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L178-L182)           |\n\nSources: [docs/source/index.rst151-182](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L151-L182) [docs/source/index.rst146-149](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/index.rst#L146-L149) [docs/source/quickstart.ipynb1-358](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/docs/source/quickstart.ipynb#L1-L358)\n\n## Documentation References in Code\n\nThe README file contains references to the documentation:\n\n```\n```\n\nThis indicates that the primary documentation for the API is hosted on the website, which is automatically generated from the codebase.\n\nSources: [README.md32-34](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L32-L34)\n\n## Documentation and Testing\n\nThe repository contains benchmark tests for both REST and gRPC upload operations, which include documentation in the form of comments and print statements. While these aren't part of the formal documentation system, they provide information about the performance characteristics of different API modes.\n\nSources: [tests/benches/test\\_rest\\_upload.py1-50](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/benches/test_rest_upload.py#L1-L50) [tests/benches/test\\_grpc\\_upload.py1-50](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/benches/test_grpc_upload.py#L1-L50)\n\n## Accessing the Documentation",
      "index": 5,
      "token_count": 568,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.3-documentation-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.3-documentation-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "file_name": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.824849",
        "total_chunks": 8
      },
      "start_char": 9680,
      "end_char": 11677
    },
    {
      "content": "ant-client/blob/ac6f6cd2/tests/benches/test_grpc_upload.py#L1-L50)\n\n## Accessing the Documentation\n\nUsers can access the Qdrant Client documentation in several ways:\n\n1. **Online Documentation**: The primary documentation is hosted at [python-client.qdrant.tech](https://python-client.qdrant.tech/)\n2. **Local Documentation**: After building locally, documentation is available in the `docs/html` directory\n3. **GitHub README**: Basic usage examples and installation instructions are provided in the README\n4. **Code Docstrings**: Documentation is embedded in the code itself\n\nSources: [README.md21-37](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/README.md#L21-L37)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Documentation System](#documentation-system.md)\n- [Documentation Architecture](#documentation-architecture.md)\n- [Sphinx Configuration](#sphinx-configuration.md)\n- [Interactive Examples System](#interactive-examples-system.md)\n- [Installation Options](#installation-options.md)\n- [Client Initialization Examples](#client-initialization-examples.md)\n- [API Usage Patterns](#api-usage-patterns.md)\n- [Code Examples Integration](#code-examples-integration.md)\n- [Documentation Generation Process](#documentation-generation-process.md)\n- [Local Development Build](#local-development-build.md)\n- [Code Documentation Coverage](#code-documentation-coverage.md)\n- [Primary Client Classes](#primary-client-classes.md)\n- [Data Models and Types](#data-models-and-types.md)\n- [Exception Handling](#exception-handling.md)\n- [Documentation Theme and Styling](#documentation-theme-and-styling.md)\n- [Theme Configuration](#theme-configuration.md)\n- [Content Filtering](#content-filtering.md)\n- [Documentation Structure](#documentation-structure.md)\n- [Key Documentation Sections](#key-documentation-sections.md)\n- [Documentation References in Code](#documentation-references-in-code.md)\n- [Documentation and Testing](#documentation-and-testing.md)\n- [Accessing the Documentation](#accessing-the-documentation.md)",
      "index": 6,
      "token_count": 464,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.3-documentation-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.3-documentation-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "file_name": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.824849",
        "total_chunks": 8
      },
      "start_char": 11577,
      "end_char": 13625
    },
    {
      "content": "g](#documentation-and-testing.md)\n- [Accessing the Documentation](#accessing-the-documentation.md)",
      "index": 7,
      "token_count": 23,
      "metadata": {
        "title": "_qdrant_qdrant-client_6.3-documentation-system",
        "source": "qdrant_qdrant-client\\_qdrant_qdrant-client_6.3-documentation-system.md",
        "chunk_method": "simple_fallback",
        "source_repo": "qdrant_qdrant-client",
        "source_subdir": "root",
        "category": "general",
        "file_path": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "file_name": "_qdrant_qdrant-client_6.3-documentation-system.md",
        "collection": "qdrant_ecosystem",
        "processed_date": "2025-10-16T00:18:05.824849",
        "total_chunks": 8
      },
      "start_char": 13525,
      "end_char": 15573
    }
  ]
}