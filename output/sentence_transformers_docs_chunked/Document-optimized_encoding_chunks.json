[
  {
    "chunk_id": "sentence_transformers_docs:UKPLab\\sentence-transformers\\Document-optimized_encoding.md:chunk:0",
    "content": "document_embeddings = model.encode_document([\n    \"Climate change affects marine ecosystems...\",\n    \"AI development began in the 1950s...\"\n])\n```\n\n**Sources:** [sentence_transformers/SentenceTransformer.py:416-543](), [sentence_transformers/SentenceTransformer.py:545-675](), [README.md:60-87]()\n\n## SparseEncoder: Sparse Embeddings\n\n`SparseEncoder` models create sparse vector representations where most values are zero, enabling efficient neural lexical search and hybrid retrieval systems.\n\n### Basic Usage\n\n```python\nfrom sentence_transformers import SparseEncoder\n\n# Load a sparse encoder model\nmodel = SparseEncoder(\"naver/splade-cocondenser-ensembledistil\")\n\nsentences = [\n    \"The weather is lovely today.\",\n    \"It's so sunny outside!\",\n    \"He drove to the stadium.\",\n]\n\n# Generate sparse embeddings\nembeddings = model.encode(sentences)\nprint(embeddings.shape)\n# (3, 30522) - vocabulary size dimensions\n\n# Calculate similarities (using dot product for sparse vectors)\nsimilarities = model.",
    "metadata": {
      "source_file": "UKPLab\\sentence-transformers\\Document-optimized_encoding.md",
      "source_collection": "sentence_transformers_docs",
      "subdirectory": "UKPLab",
      "filename": "Document-optimized_encoding.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 236,
      "char_count": 1000,
      "start_char": 0,
      "end_char": 1000
    }
  },
  {
    "chunk_id": "sentence_transformers_docs:UKPLab\\sentence-transformers\\Document-optimized_encoding.md:chunk:1",
    "content": "ze dimensions\n\n# Calculate similarities (using dot product for sparse vectors)\nsimilarities = model.similarity(embeddings, embeddings)\nprint(similarities)\n# tensor([[35.629, 9.154, 0.098],\n#         [9.154, 27.478, 0.019],\n#         [0.098, 0.019, 29.553]])\n\n# Check sparsity statistics\nstats = SparseEncoder.sparsity(embeddings)\nprint(f\"Sparsity: {stats['sparsity_ratio']:.2%}\")\n# Sparsity: 99.84%\n```\n\n### Query and Document Encoding\n\n```python",
    "metadata": {
      "source_file": "UKPLab\\sentence-transformers\\Document-optimized_encoding.md",
      "source_collection": "sentence_transformers_docs",
      "subdirectory": "UKPLab",
      "filename": "Document-optimized_encoding.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 155,
      "char_count": 446,
      "start_char": 900,
      "end_char": 1924
    }
  }
]