[
  {
    "chunk_id": "sentence_transformers_docs:UKPLab\\sentence-transformers\\Specialized_encoding_for_retrieval.md:chunk:0",
    "content": "query_embeddings = model.encode_query(\"machine learning algorithms\")\ndocument_embeddings = model.encode_document([\n    \"Machine learning uses statistical techniques...\",\n    \"Deep learning is a subset of machine learning...\"\n])\n```\n\n**Sources:** [sentence_transformers/sparse_encoder/SparseEncoder.py:181-293](), [sentence_transformers/sparse_encoder/SparseEncoder.py:295-410](), [README.md:134-167]()\n\n## CrossEncoder: Reranking and Classification\n\n`CrossEncoder` models take pairs of texts as input and output similarity scores or classification labels, providing high-precision reranking capabilities.\n\n### Basic Usage\n\n```python\nfrom sentence_transformers import CrossEncoder\n\n# Load a cross-encoder model\nmodel = CrossEncoder(\"cross-encoder/ms-marco-MiniLM-L6-v2\")\n\n# Define query and candidate passages\nquery = \"How many people live in Berlin?\"\npassages = [\n    \"Berlin had a population of 3,520,031 registered inhabitants in an area of 891.82 square kilometers.\",",
    "metadata": {
      "source_file": "UKPLab\\sentence-transformers\\Specialized_encoding_for_retrieval.md",
      "source_collection": "sentence_transformers_docs",
      "subdirectory": "UKPLab",
      "filename": "Specialized_encoding_for_retrieval.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "token_count": 231,
      "char_count": 970,
      "start_char": 0,
      "end_char": 971
    }
  },
  {
    "chunk_id": "sentence_transformers_docs:UKPLab\\sentence-transformers\\Specialized_encoding_for_retrieval.md:chunk:1",
    "content": "rlin had a population of 3,520,031 registered inhabitants in an area of 891.82 square kilometers.\",\n    \"Berlin has a yearly total of about 135 million day visitors, making it one of the most-visited cities in the European Union.\",\n    \"In 2013 around 600,000 Berliners were registered in one of the more than 2,300 sport and fitness clubs.\",\n]\n\n# Predict similarity scores for query-passage pairs\nscores = model.predict([(query, passage) for passage in passages])\nprint(scores)\n# [8.607139 5.506266 6.352977]\n```\n\n### Ranking Documents\n\n```python",
    "metadata": {
      "source_file": "UKPLab\\sentence-transformers\\Specialized_encoding_for_retrieval.md",
      "source_collection": "sentence_transformers_docs",
      "subdirectory": "UKPLab",
      "filename": "Specialized_encoding_for_retrieval.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "token_count": 166,
      "char_count": 547,
      "start_char": 871,
      "end_char": 1895
    }
  }
]