[
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:0",
    "content": "# Document Chunking\n\n\nRelevant source files\n\n- [.github/SECURITY.md](https://github.com/docling-project/docling/blob/f7244a43/.github/SECURITY.md)\n- [CHANGELOG.md](https://github.com/docling-project/docling/blob/f7244a43/CHANGELOG.md)\n- [CITATION.cff](https://github.com/docling-project/docling/blob/f7244a43/CITATION.cff)\n- [README.md](https://github.com/docling-project/docling/blob/f7244a43/README.md)\n- [docs/examples/minimal\\_vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docs/examples/minimal_vlm_pipeline.py)\n- [docs/index.md](https://github.com/docling-project/docling/blob/f7244a43/docs/index.md)\n- [docs/usage/index.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/index.md)\n- [docs/usage/mcp.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/mcp.md)\n- [docs/usage/vision\\_models.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/vision_models.md)\n- [mkdocs.yml](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml)\n- [pyproject.toml](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml)\n- [uv.lock](https://github.com/docling-project/docling/blob/f7244a43/uv.lock)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Document Chunking",
      "heading_level": 1,
      "chunk_index": 0,
      "collection": "docling",
      "char_count": 1207,
      "estimated_tokens": 301,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:1",
    "content": "## Purpose and Scope\n\n\nDocument chunking is the process of breaking down large documents into smaller, semantically meaningful segments that can be efficiently processed by downstream systems. In Docling, chunking operates on `DoclingDocument` objects after conversion is complete, transforming the hierarchical document structure into manageable chunks suitable for retrieval-augmented generation (RAG), vector database indexing, and other AI/ML workflows.\n\nThis page covers:\n\n- Chunking architecture and placement in the Docling workflow\n- The `HierarchicalChunker` from `docling-core[chunking]`\n- Hybrid chunking strategies that combine structural and text-based approaches\n- Integration patterns with retrieval systems and vector databases\n\nFor information about document conversion and the `DoclingDocument` format, see [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md). For export formats that precede chunking, see [Export Formats](docling-project/docling/8.1-export-formats.md). For framework-specific integrations that consume chunks, see [Framework Integrations](docling-project/docling/8.3-framework-integrations.md).\n\nSources: [pyproject.toml47](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L47-L47) [mkdocs.yml77-103](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L77-L103)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Purpose and Scope",
      "heading_level": 2,
      "chunk_index": 1,
      "collection": "docling",
      "char_count": 1373,
      "estimated_tokens": 343,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:2",
    "content": "## Chunking in the Docling Workflow\n\n\nChunking is a post-conversion operation that transforms the unified `DoclingDocument` representation into smaller segments. The following diagram illustrates where chunking fits in the overall processing pipeline:\n\n```\n```\n\n**Chunking Workflow Position**\n\nThe chunking layer operates after document conversion is complete and before downstream consumption. It accepts a `DoclingDocument` as input and produces a list of chunks, each containing:\n\n- Text content\n- Metadata (source location, document structure context)\n- Optional embeddings (when integrated with embedding models)\n\nSources: [pyproject.toml47](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L47-L47) Diagram 1 and 2 from high-level overview",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Chunking in the Docling Workflow",
      "heading_level": 2,
      "chunk_index": 2,
      "collection": "docling",
      "char_count": 768,
      "estimated_tokens": 192,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:3",
    "content": "## Chunking Dependencies\n\n\nDocling's chunking functionality is provided by the `docling-core` library with the `chunking` extra:\n\n```\n```\n\nThis dependency includes:\n\n- `HierarchicalChunker` - structure-aware chunking based on document hierarchy\n- `HybridChunker` - combines hierarchical and text-based chunking\n- Tokenizer integration for precise chunk size control\n- Metadata preservation for provenance tracking\n\nSources: [pyproject.toml47](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L47-L47)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Chunking Dependencies",
      "heading_level": 2,
      "chunk_index": 3,
      "collection": "docling",
      "char_count": 523,
      "estimated_tokens": 130,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:4",
    "content": "## Chunking Strategies\n\n\nDocling supports multiple chunking strategies through the `docling-core` library. The primary strategies are:",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Chunking Strategies",
      "heading_level": 2,
      "chunk_index": 4,
      "collection": "docling",
      "char_count": 134,
      "estimated_tokens": 33,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:5",
    "content": "### Document Structure-Based Chunking\n\n\n| Strategy              | Description                                                       | Use Case                                               |\n| --------------------- | ----------------------------------------------------------------- | ------------------------------------------------------ |\n| **Hierarchical**      | Chunks based on document structure (sections, paragraphs, tables) | Preserving document semantics, maintaining context     |\n| **Hybrid**            | Combines hierarchical structure with text-based splitting         | Balancing structure preservation with size constraints |\n| **Metadata-Enriched** | Includes provenance and structural metadata in each chunk         | Retrieval systems requiring context attribution        |",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Document Structure-Based Chunking",
      "heading_level": 3,
      "chunk_index": 5,
      "collection": "docling",
      "char_count": 794,
      "estimated_tokens": 198,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:6",
    "content": "### Chunking Parameters\n\n\n```\n```\n\n**Configuration Parameters**\n\n- `max_tokens`: Maximum number of tokens per chunk (typical: 512, 1024, 2048)\n- `overlap`: Number of overlapping tokens between adjacent chunks (typical: 50-200)\n- `tokenizer`: Tokenization method (e.g., `tiktoken` for GPT models, `transformers` tokenizers)\n- `merge_peers`: Whether to merge sibling elements in the document hierarchy\n\nSources: [mkdocs.yml102-103](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L102-L103)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Chunking Parameters",
      "heading_level": 3,
      "chunk_index": 6,
      "collection": "docling",
      "char_count": 508,
      "estimated_tokens": 127,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:7",
    "content": "## HierarchicalChunker Implementation\n\n\nThe `HierarchicalChunker` from `docling-core` is the primary chunking mechanism. It respects document structure while enforcing size constraints:",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "HierarchicalChunker Implementation",
      "heading_level": 2,
      "chunk_index": 7,
      "collection": "docling",
      "char_count": 185,
      "estimated_tokens": 46,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:8",
    "content": "### Chunking Process Flow\n\n\n```\n```\n\n**Hierarchical Chunking Algorithm**\n\n1. **Traverse Document Tree**: Walk the `DoclingDocument` hierarchy depth-first\n2. **Respect Boundaries**: Avoid splitting structural elements (tables, figures) when possible\n3. **Size Enforcement**: Split text elements that exceed `max_tokens`\n4. **Metadata Preservation**: Each chunk maintains links to its source location\n5. **Overlap Generation**: Create overlapping tokens between chunks for context continuity\n\nSources: Examples in [mkdocs.yml102-103](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L102-L103)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Chunking Process Flow",
      "heading_level": 3,
      "chunk_index": 8,
      "collection": "docling",
      "char_count": 610,
      "estimated_tokens": 152,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:9",
    "content": "## Hybrid Chunking\n\n\nHybrid chunking combines the benefits of structure-aware and text-based chunking strategies:\n\n```\n```\n\n**Hybrid Chunking Workflow**\n\nThe hybrid approach uses the `HybridChunker` from `docling-core`, which:\n\n1. **Primary Pass**: Chunks based on document structure (sections, headings, lists)\n2. **Secondary Pass**: For oversized structural chunks, applies text-based splitting\n3. **Optimization**: Merges small adjacent chunks when they fit within size limits\n4. **Metadata Merging**: Combines provenance data from merged elements",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Hybrid Chunking",
      "heading_level": 2,
      "chunk_index": 9,
      "collection": "docling",
      "char_count": 550,
      "estimated_tokens": 137,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:10",
    "content": "### Typical Usage Pattern\n\n\nExample chunking configuration for hybrid strategy:\n\n```\n```\n\nSources: [mkdocs.yml102-103](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L102-L103) [README.md35](https://github.com/docling-project/docling/blob/f7244a43/README.md#L35-L35)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Typical Usage Pattern",
      "heading_level": 3,
      "chunk_index": 10,
      "collection": "docling",
      "char_count": 287,
      "estimated_tokens": 71,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:11",
    "content": "## Integration with Retrieval Systems\n\n\nDocument chunks serve as the input to retrieval systems. The typical integration pattern:\n\n```\n```\n\n**Retrieval-Augmented Generation (RAG) Pipeline**\n\nThe standard RAG integration pattern with Docling chunking:\n\n1. **Document Conversion**: Use `DocumentConverter` to parse source documents\n2. **Chunking**: Apply `HierarchicalChunker` or `HybridChunker` to create semantically meaningful segments\n3. **Embedding**: Generate vector embeddings for each chunk using embedding models\n4. **Indexing**: Store chunks with embeddings in a vector database\n5. **Retrieval**: Query the vector store to find relevant chunks\n6. **Generation**: Pass retrieved chunks as context to an LLM for response generation\n\nSources: [mkdocs.yml107-127](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L107-L127) [README.md37](https://github.com/docling-project/docling/blob/f7244a43/README.md#L37-L37)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Integration with Retrieval Systems",
      "heading_level": 2,
      "chunk_index": 11,
      "collection": "docling",
      "char_count": 936,
      "estimated_tokens": 234,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:12",
    "content": "## Framework Integration Examples\n\n\nDocling's chunking integrates seamlessly with popular AI frameworks:",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Framework Integration Examples",
      "heading_level": 2,
      "chunk_index": 12,
      "collection": "docling",
      "char_count": 104,
      "estimated_tokens": 26,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:13",
    "content": "### Integration Table\n\n\n| Framework      | Chunk Consumer                                        | Example Location                                                                                                             |\n| -------------- | ----------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| **LangChain**  | `Document` objects with `page_content` and `metadata` | [examples/rag\\_langchain.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_langchain.ipynb)       |\n| **LlamaIndex** | `Document` nodes in `VectorStoreIndex`                | [examples/rag\\_llamaindex.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_llamaindex.ipynb)     |\n| **Haystack**   | `Document` objects for `DocumentStore`                | [examples/rag\\_haystack.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_haystack.ipynb)         |\n| **Milvus**     | Text chunks with vector embeddings                    | [examples/rag\\_milvus.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_milvus.ipynb)             |\n| **Weaviate**   | Objects with `text` property                          | [examples/rag\\_weaviate.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_weaviate.ipynb)         |\n| **OpenSearch** | Documents with `text` and `metadata` fields           | [examples/rag\\_opensearch.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_opensearch.ipynb)     |\n| **Qdrant**     | Points with payload containing chunk text             | [examples/retrieval\\_qdrant.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/retrieval_qdrant.ipynb) |\n\nSources: [mkdocs.yml107-127](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L107-L127)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Integration Table",
      "heading_level": 3,
      "chunk_index": 13,
      "collection": "docling",
      "char_count": 1950,
      "estimated_tokens": 487,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:14",
    "content": "## Chunking with Metadata Preservation\n\n\nEach chunk produced by Docling's chunkers includes rich metadata for provenance tracking:\n\n```\n```\n\n**Metadata Fields in Chunks**\n\nEach chunk's metadata enables:\n\n- **Source Attribution**: Trace back to exact location in original document\n- **Context Reconstruction**: Recover document structure around the chunk\n- **Visual Grounding**: Link to bounding boxes for visual highlighting\n- **Hierarchical Navigation**: Understand chunk's position in document outline",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Chunking with Metadata Preservation",
      "heading_level": 2,
      "chunk_index": 14,
      "collection": "docling",
      "char_count": 503,
      "estimated_tokens": 125,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:15",
    "content": "### Example Chunk Metadata\n\n\nA chunk from a PDF document might have metadata like:\n\n```\n```\n\nSources: Based on docling-core chunking API patterns, [mkdocs.yml75-103](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L75-L103)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Example Chunk Metadata",
      "heading_level": 3,
      "chunk_index": 15,
      "collection": "docling",
      "char_count": 243,
      "estimated_tokens": 60,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:16",
    "content": "### Integration with Vector Databases\n\n\nExample pattern for indexing chunks in a vector database:\n\n```\n```\n\nSources: [mkdocs.yml102-127](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L102-L127)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Integration with Vector Databases",
      "heading_level": 3,
      "chunk_index": 16,
      "collection": "docling",
      "char_count": 215,
      "estimated_tokens": 53,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:17",
    "content": "## Serialization and Chunking\n\n\nDocling supports serializing chunks for storage and downstream processing. The relationship between serialization and chunking:\n\n```\n```\n\n**Chunking vs Serialization**\n\n- **Serialization** ([Export Formats](docling-project/docling/8.1-export-formats.md)): Converts entire `DoclingDocument` to a specific format (JSON, Markdown, HTML)\n- **Chunking**: Breaks document into smaller pieces with preserved metadata\n- **Combined Usage**: Often serialize chunks individually for vector database storage\n\nSources: [mkdocs.yml100-103](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L100-L103) [README.md35](https://github.com/docling-project/docling/blob/f7244a43/README.md#L35-L35)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Serialization and Chunking",
      "heading_level": 2,
      "chunk_index": 17,
      "collection": "docling",
      "char_count": 726,
      "estimated_tokens": 181,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:18",
    "content": "## Advanced Chunking Examples\n\n\nFor detailed examples demonstrating chunking in real-world scenarios, refer to:",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Advanced Chunking Examples",
      "heading_level": 2,
      "chunk_index": 18,
      "collection": "docling",
      "char_count": 111,
      "estimated_tokens": 27,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:19",
    "content": "| Example                    | Description                                  | Location                                                                                                                                                             |\n| -------------------------- | -------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **Hybrid Chunking**        | Combining structural and text-based chunking | [examples/hybrid\\_chunking.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/hybrid_chunking.ipynb)                                           |\n| **Advanced Chunking**      | Custom chunking strategies and serialization | [examples/advanced\\_chunking\\_and\\_serialization.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/advanced_chunking_and_serialization.ipynb) |\n| **RAG with LangChain**     | Using chunks for retrieval in LangChain      | [examples/rag\\_langchain.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_langchain.ipynb)                                               |\n| **RAG with LlamaIndex**    | Indexing chunks in LlamaIndex                | [examples/rag\\_llamaindex.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_llamaindex.ipynb)                                             |\n| **Milvus Integration**     | Storing chunks in Milvus vector database     | [examples/rag\\_milvus.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_milvus.ipynb)                                                     |\n| **OpenSearch Integration** | Indexing chunks in OpenSearch                | [examples/rag\\_opensearch.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_opensearch.ipynb)                                             |",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Advanced Chunking Examples",
      "heading_level": 2,
      "chunk_index": 19,
      "collection": "docling",
      "char_count": 1959,
      "estimated_tokens": 489,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:20",
    "content": "in OpenSearch                | [examples/rag\\_opensearch.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_opensearch.ipynb)                                             |\n\nSources: [mkdocs.yml100-127](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L100-L127)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Advanced Chunking Examples",
      "heading_level": 2,
      "chunk_index": 20,
      "collection": "docling",
      "char_count": 306,
      "estimated_tokens": 76,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:21",
    "content": "### Chunk Size Selection\n\n\n- **Small chunks (256-512 tokens)**: Better precision, more retrieval overhead\n- **Medium chunks (512-1024 tokens)**: Balanced approach for most use cases\n- **Large chunks (1024-2048 tokens)**: Better context, may lose precision",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Chunk Size Selection",
      "heading_level": 3,
      "chunk_index": 21,
      "collection": "docling",
      "char_count": 255,
      "estimated_tokens": 63,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:22",
    "content": "### Overlap Configuration\n\n\n- **No overlap (0 tokens)**: Fastest processing, risk of splitting concepts\n- **Small overlap (50-100 tokens)**: Minimal redundancy, some context preservation\n- **Medium overlap (100-200 tokens)**: Recommended for most scenarios\n- **Large overlap (200+ tokens)**: Maximum context continuity, higher storage cost",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Overlap Configuration",
      "heading_level": 3,
      "chunk_index": 22,
      "collection": "docling",
      "char_count": 339,
      "estimated_tokens": 84,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:23",
    "content": "### Structure Preservation\n\n\n- Use `HierarchicalChunker` when document structure is important (research papers, technical docs)\n- Use `HybridChunker` for mixed content (long reports with varying section sizes)\n- Set `merge_peers=True` to combine related small elements (list items, short paragraphs)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Structure Preservation",
      "heading_level": 3,
      "chunk_index": 23,
      "collection": "docling",
      "char_count": 299,
      "estimated_tokens": 74,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:24",
    "content": "### Metadata Utilization\n\n\n- Always preserve chunk metadata for provenance tracking\n- Use `headings` metadata for context-aware retrieval\n- Leverage `bbox` data for visual grounding in UI applications\n- Store `doc_items` paths for reconstructing document structure\n\nSources: Based on chunking examples in [mkdocs.yml100-127](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L100-L127)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "Metadata Utilization",
      "heading_level": 3,
      "chunk_index": 24,
      "collection": "docling",
      "char_count": 503,
      "estimated_tokens": 125,
      "total_chunks": 26
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_8.2-document-chunking.md:chunk:25",
    "content": "### On this page\n\n\n- [Document Chunking](#document-chunking.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Chunking in the Docling Workflow](#chunking-in-the-docling-workflow.md)\n- [Chunking Dependencies](#chunking-dependencies.md)\n- [Chunking Strategies](#chunking-strategies.md)\n- [Document Structure-Based Chunking](#document-structure-based-chunking.md)\n- [Chunking Parameters](#chunking-parameters.md)\n- [HierarchicalChunker Implementation](#hierarchicalchunker-implementation.md)\n- [Chunking Process Flow](#chunking-process-flow.md)\n- [Hybrid Chunking](#hybrid-chunking.md)\n- [Typical Usage Pattern](#typical-usage-pattern.md)\n- [Integration with Retrieval Systems](#integration-with-retrieval-systems.md)\n- [Framework Integration Examples](#framework-integration-examples.md)\n- [Integration Table](#integration-table.md)\n- [Chunking with Metadata Preservation](#chunking-with-metadata-preservation.md)\n- [Example Chunk Metadata](#example-chunk-metadata.md)\n- [Usage Patterns](#usage-patterns.md)\n- [Basic Chunking Example](#basic-chunking-example.md)\n- [Advanced Chunking Configuration](#advanced-chunking-configuration.md)\n- [Integration with Vector Databases](#integration-with-vector-databases.md)\n- [Serialization and Chunking](#serialization-and-chunking.md)\n- [Advanced Chunking Examples](#advanced-chunking-examples.md)\n- [Best Practices](#best-practices.md)\n- [Chunk Size Selection](#chunk-size-selection.md)\n- [Overlap Configuration](#overlap-configuration.md)\n- [Structure Preservation](#structure-preservation.md)\n- [Metadata Utilization](#metadata-utilization.md)",
    "metadata": {
      "source": "_docling-project_docling_8.2-document-chunking.md",
      "heading": "On this page",
      "heading_level": 3,
      "chunk_index": 25,
      "collection": "docling",
      "char_count": 1587,
      "estimated_tokens": 396,
      "total_chunks": 26
    }
  }
]