[
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:0",
    "content": "# Command Line Interface\n\n\nRelevant source files\n\n- [.github/SECURITY.md](https://github.com/docling-project/docling/blob/f7244a43/.github/SECURITY.md)\n- [CHANGELOG.md](https://github.com/docling-project/docling/blob/f7244a43/CHANGELOG.md)\n- [CITATION.cff](https://github.com/docling-project/docling/blob/f7244a43/CITATION.cff)\n- [docling/cli/main.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py)\n- [docling/datamodel/base\\_models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py)\n- [docling/datamodel/document.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py)\n- [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py)\n- [docling/document\\_converter.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py)\n- [pyproject.toml](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml)\n- [uv.lock](https://github.com/docling-project/docling/blob/f7244a43/uv.lock)\n\nThis document covers Docling's command-line interface tools for document conversion and model management. The CLI provides access to Docling's document processing capabilities through two main commands: the primary `docling` command for document conversion and the `docling-tools` command for model artifact management.\n\nFor information about using Docling programmatically, see [Python SDK](docling-project/docling/7-python-sdk.md). For details about the underlying processing pipelines, see [Processing Pipelines](docling-project/docling/5-processing-pipelines.md).",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "Command Line Interface",
      "heading_level": 1,
      "chunk_index": 0,
      "collection": "docling",
      "char_count": 1681,
      "estimated_tokens": 420,
      "total_chunks": 10
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:1",
    "content": "## Overview\n\n\nDocling provides two CLI entry points defined in [pyproject.toml86-88](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L86-L88):\n\n- **`docling`** - Main document conversion interface supporting batch processing of various document formats\n- **`docling-tools`** - Utility for downloading and managing AI model artifacts\n\nBoth tools are built using the Typer framework and provide comprehensive help through the `--help` flag.\n\n**CLI Entry Points Architecture**\n\n```\n```\n\nSources: [pyproject.toml86-88](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L86-L88) [docling/cli/main.py136-141](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L136-L141)",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "Overview",
      "heading_level": 2,
      "chunk_index": 1,
      "collection": "docling",
      "char_count": 736,
      "estimated_tokens": 184,
      "total_chunks": 10
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:2",
    "content": "## Document Conversion Command\n\n\nThe primary `docling convert` command processes documents through a comprehensive interface supporting multiple input/output formats, processing pipelines, and configuration options.",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "Document Conversion Command",
      "heading_level": 2,
      "chunk_index": 2,
      "collection": "docling",
      "char_count": 215,
      "estimated_tokens": 53,
      "total_chunks": 10
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:3",
    "content": "### Core Parameters\n\n\nThe CLI accepts the following main parameter categories:\n\n**Input/Output Configuration:**\n\n- `input_sources` - File paths, directories, or URLs to process\n- `--from` - Input format filtering ([docling/cli/main.py303-307](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L303-L307))\n- `--to` - Output format selection ([docling/cli/main.py308-310](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L308-L310))\n- `--output` - Output directory ([docling/cli/main.py432-434](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L432-L434))\n\n**Processing Pipeline Options:**\n\n- `--pipeline` - Choose between `standard`, `vlm`, or `asr` pipelines ([docling/cli/main.py330-333](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L330-L333))\n- `--vlm-model` - VLM model selection for vision-language processing ([docling/cli/main.py334-337](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L334-L337))\n- `--asr-model` - ASR model for audio processing ([docling/cli/main.py338-341](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L338-L341))\n\n**OCR Configuration:**\n\n- `--ocr/--no-ocr` - Enable/disable OCR processing ([docling/cli/main.py342-347](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L342-L347))\n- `--force-ocr` - Replace existing text with OCR ([docling/cli/main.py348-354](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L348-L354))\n- `--ocr-engine` - OCR engine selection ([docling/cli/main.py355-365](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L355-L365))\n- `--ocr-lang` - Language configuration ([docling/cli/main.py366-372](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L366-L372))",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "Core Parameters",
      "heading_level": 3,
      "chunk_index": 3,
      "collection": "docling",
      "char_count": 1897,
      "estimated_tokens": 474,
      "total_chunks": 10
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:4",
    "content": "### Processing Pipeline Selection\n\n\n**Pipeline Processing Flow**\n\n```\n```\n\nSources: [docling/cli/main.py330-333](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L330-L333) [docling/datamodel/pipeline\\_options.py347-351](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py#L347-L351)",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "Processing Pipeline Selection",
      "heading_level": 3,
      "chunk_index": 4,
      "collection": "docling",
      "char_count": 354,
      "estimated_tokens": 88,
      "total_chunks": 10
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:5",
    "content": "### Format Support and Export Options\n\n\nThe CLI supports multiple input formats through the `FormatToExtensions` mapping and provides various export options:\n\n**Supported Output Formats:**\n\n- **JSON** - Complete document structure with metadata ([docling/cli/main.py207-212](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L207-L212))\n- **HTML** - Web-viewable format with optional split-page view ([docling/cli/main.py215-246](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L215-L246))\n- **Markdown** - Human-readable text format ([docling/cli/main.py259-264](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L259-L264))\n- **TXT** - Plain text extraction ([docling/cli/main.py249-256](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L249-L256))\n- **DocTags** - Document token format ([docling/cli/main.py267-270](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L267-L270))\n\n**Image Export Modes:** The `--image-export-mode` parameter controls how images are handled in exports ([docling/cli/main.py323-329](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L323-L329)):\n\n- `PLACEHOLDER` - Mark image positions only\n- `EMBEDDED` - Base64 encoded images inline\n- `REFERENCED` - External PNG files with references",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "Format Support and Export Options",
      "heading_level": 3,
      "chunk_index": 5,
      "collection": "docling",
      "char_count": 1383,
      "estimated_tokens": 345,
      "total_chunks": 10
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:6",
    "content": "### Advanced Configuration\n\n\n**PDF Processing Options:**\n\n- `--pdf-backend` - Backend selection (DLPARSE\\_V4, DLPARSE\\_V2, PYPDFIUM2) ([docling/cli/main.py373-375](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L373-L375))\n- `--table-mode` - Table structure model mode (FAST/ACCURATE) ([docling/cli/main.py376-379](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L376-L379))\n- `--enrich-code` - Enable code enrichment ([docling/cli/main.py380-383](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L380-L383))\n- `--enrich-formula` - Enable formula enrichment ([docling/cli/main.py384-387](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L384-L387))\n\n**Performance and Resource Control:**\n\n- `--num-threads` - Threading configuration ([docling/cli/main.py478](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L478-L478))\n- `--device` - Accelerator device selection ([docling/cli/main.py479-481](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L479-L481))\n- `--document-timeout` - Per-document timeout ([docling/cli/main.py471-477](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L471-L477))\n- `--abort-on-error` - Error handling behavior ([docling/cli/main.py424-431](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L424-L431))\n\nSources: [docling/cli/main.py294-500](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L294-L500) [docling/datamodel/pipeline\\_options.py232-239](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py#L232-L239)",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "Advanced Configuration",
      "heading_level": 3,
      "chunk_index": 6,
      "collection": "docling",
      "char_count": 1737,
      "estimated_tokens": 434,
      "total_chunks": 10
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:7",
    "content": "## CLI Processing Workflow\n\n\nThe main processing workflow in the `convert` command follows this pattern:\n\n**CLI Processing Implementation**\n\n```\n```\n\nSources: [docling/cli/main.py294-500](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L294-L500) [docling/cli/main.py186-285](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L186-L285)",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "CLI Processing Workflow",
      "heading_level": 2,
      "chunk_index": 7,
      "collection": "docling",
      "char_count": 392,
      "estimated_tokens": 98,
      "total_chunks": 10
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:8",
    "content": "## Command Examples\n\n\n**Basic Document Conversion:**\n\n```\n```\n\n**Batch Processing with VLM Pipeline:**\n\n```\n```\n\n**OCR Configuration:**\n\n```\n```\n\n**Advanced PDF Processing:**\n\n```\n```\n\nSources: [docling/cli/main.py294-500](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L294-L500)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "Command Examples",
      "heading_level": 2,
      "chunk_index": 8,
      "collection": "docling",
      "char_count": 410,
      "estimated_tokens": 102,
      "total_chunks": 10
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_6-command-line-interface.md:chunk:9",
    "content": "### On this page\n\n\n- [Command Line Interface](#command-line-interface.md)\n- [Overview](#overview.md)\n- [Document Conversion Command](#document-conversion-command.md)\n- [Core Parameters](#core-parameters.md)\n- [Processing Pipeline Selection](#processing-pipeline-selection.md)\n- [Format Support and Export Options](#format-support-and-export-options.md)\n- [Advanced Configuration](#advanced-configuration.md)\n- [CLI Processing Workflow](#cli-processing-workflow.md)\n- [Command Examples](#command-examples.md)",
    "metadata": {
      "source": "_docling-project_docling_6-command-line-interface.md",
      "heading": "On this page",
      "heading_level": 3,
      "chunk_index": 9,
      "collection": "docling",
      "char_count": 507,
      "estimated_tokens": 126,
      "total_chunks": 10
    }
  }
]