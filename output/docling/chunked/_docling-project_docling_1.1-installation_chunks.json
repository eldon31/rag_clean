[
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:0",
    "content": "# Installation\n\n\nRelevant source files\n\n- [.github/SECURITY.md](https://github.com/docling-project/docling/blob/f7244a43/.github/SECURITY.md)\n- [CHANGELOG.md](https://github.com/docling-project/docling/blob/f7244a43/CHANGELOG.md)\n- [CITATION.cff](https://github.com/docling-project/docling/blob/f7244a43/CITATION.cff)\n- [docling/cli/models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/models.py)\n- [docling/models/auto\\_ocr\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/auto_ocr_model.py)\n- [docling/models/picture\\_description\\_vlm\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/picture_description_vlm_model.py)\n- [docling/models/plugins/defaults.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/plugins/defaults.py)\n- [docling/models/rapid\\_ocr\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py)\n- [docling/utils/model\\_downloader.py](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/model_downloader.py)\n- [pyproject.toml](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml)\n- [uv.lock](https://github.com/docling-project/docling/blob/f7244a43/uv.lock)",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Installation",
      "heading_level": 1,
      "chunk_index": 0,
      "collection": "docling",
      "char_count": 1279,
      "estimated_tokens": 319,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:1",
    "content": "## Purpose and Scope\n\n\nThis page provides comprehensive instructions for installing Docling, including system requirements, dependency management, and model artifact setup. It covers base installation, optional feature packages, platform-specific considerations, and offline deployment scenarios.\n\nFor information about using Docling after installation, see [Quick Start](docling-project/docling/1.2-quick-start.md). For advanced configuration options, see [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md).\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Purpose and Scope",
      "heading_level": 2,
      "chunk_index": 1,
      "collection": "docling",
      "char_count": 566,
      "estimated_tokens": 141,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:2",
    "content": "### Python Version\n\n\nDocling requires **Python 3.9 or higher, but less than 4.0**. The package supports Python 3.9 through 3.13.\n\n```\nrequires-python = '>=3.9,<4.0'\n```",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Python Version",
      "heading_level": 3,
      "chunk_index": 2,
      "collection": "docling",
      "char_count": 168,
      "estimated_tokens": 42,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:3",
    "content": "### Platform Support\n\n\nDocling is tested and supported on:\n\n| Platform    | Architecture                             | Notes                                        |\n| ----------- | ---------------------------------------- | -------------------------------------------- |\n| **macOS**   | x86\\_64, arm64                           | Full support including native OCR (`ocrmac`) |\n| **Linux**   | x86\\_64, aarch64, armv7l, ppc64le, s390x | vLLM backend only on x86\\_64                 |\n| **Windows** | x86\\_64, i686                            | Full support                                 |\n\nSources: [pyproject.toml19-32](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L19-L32) [pyproject.toml94-100](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L94-L100)\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Platform Support",
      "heading_level": 3,
      "chunk_index": 3,
      "collection": "docling",
      "char_count": 812,
      "estimated_tokens": 203,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:4",
    "content": "### Standard Installation\n\n\nInstall Docling using pip or uv:\n\n```\n```\n\nor with uv:\n\n```\n```\n\nThis installs the core package with the following key dependencies:\n\n| Dependency                   | Purpose                                  |\n| ---------------------------- | ---------------------------------------- |\n| `docling-core`               | Unified document data model and chunking |\n| `docling-parse`              | Text extraction from PDFs                |\n| `docling-ibm-models`         | AI model implementations                 |\n| `pypdfium2`                  | PDF rendering backend                    |\n| `rapidocr`                   | Default OCR engine (Python <3.14)        |\n| `python-docx`, `python-pptx` | Office document parsing                  |\n| `beautifulsoup4`, `lxml`     | HTML/XML parsing                         |\n| `openpyxl`                   | Excel file support                       |\n| `pillow`                     | Image processing                         |\n| `transformers`, `accelerate` | ML model inference                       |",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Standard Installation",
      "heading_level": 3,
      "chunk_index": 4,
      "collection": "docling",
      "char_count": 1073,
      "estimated_tokens": 268,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:5",
    "content": "### Installation Architecture\n\n\n```\n```\n\nSources: [pyproject.toml45-76](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L45-L76) [pyproject.toml91-110](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L91-L110)\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Installation Architecture",
      "heading_level": 3,
      "chunk_index": 5,
      "collection": "docling",
      "char_count": 262,
      "estimated_tokens": 65,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:6",
    "content": "## Optional Extras\n\n\nDocling provides several optional feature packages installed via extras syntax:\n\n```\n```",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Optional Extras",
      "heading_level": 2,
      "chunk_index": 6,
      "collection": "docling",
      "char_count": 109,
      "estimated_tokens": 27,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:7",
    "content": "#### Tesseract OCR\n\n\nPython binding for Tesseract OCR:\n\n```\n```\n\nInstalls: `tesserocr>=2.7.1,<3.0.0`\n\n**Note**: Requires Tesseract system libraries. On RHEL/CentOS, also install OSD data:\n\n```\n```",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Tesseract OCR",
      "heading_level": 4,
      "chunk_index": 7,
      "collection": "docling",
      "char_count": 196,
      "estimated_tokens": 49,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:8",
    "content": "#### macOS Native OCR\n\n\nNative Vision framework OCR (macOS only):\n\n```\n```\n\nInstalls: `ocrmac>=1.0.0,<2.0.0` (only on Darwin systems)",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "macOS Native OCR",
      "heading_level": 4,
      "chunk_index": 8,
      "collection": "docling",
      "char_count": 133,
      "estimated_tokens": 33,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:9",
    "content": "#### RapidOCR with ONNX Runtime\n\n\nOptimized OCR with ONNX backend:\n\n```\n```\n\nInstalls: `rapidocr>=3.3,<4.0.0` + `onnxruntime>=1.7.0,<2.0.0`\n\n**Note**: `rapidocr` is included in base installation for Python <3.14, but without `onnxruntime`. This extra adds ONNX acceleration.",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "RapidOCR with ONNX Runtime",
      "heading_level": 4,
      "chunk_index": 9,
      "collection": "docling",
      "char_count": 274,
      "estimated_tokens": 68,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:10",
    "content": "### Vision Language Models (VLM)\n\n\nFor end-to-end document understanding with VLMs:\n\n```\n```\n\nIncludes:\n\n- `transformers>=4.46.0,<5.0.0` - HuggingFace Transformers backend\n- `accelerate>=1.2.1,<2.0.0` - Model acceleration\n- `mlx-vlm>=0.3.0,<1.0.0` - Apple Silicon acceleration (macOS arm64, Python ≥3.10)\n- `vllm>=0.10.0,<1.0.0` - Optimized inference (Linux x86\\_64, Python ≥3.10)\n- `qwen-vl-utils>=0.0.11` - Qwen VL utilities\n\n**Platform Requirements**:\n\n- `mlx-vlm`: macOS (arm64) and Python ≥3.10\n- `vllm`: Linux (x86\\_64) and Python ≥3.10",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Vision Language Models (VLM)",
      "heading_level": 3,
      "chunk_index": 10,
      "collection": "docling",
      "char_count": 542,
      "estimated_tokens": 135,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:11",
    "content": "### Audio Transcription (ASR)\n\n\nFor processing audio files:\n\n```\n```\n\nInstalls: `openai-whisper>=20250625`",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Audio Transcription (ASR)",
      "heading_level": 3,
      "chunk_index": 11,
      "collection": "docling",
      "char_count": 106,
      "estimated_tokens": 26,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:12",
    "content": "### Optional Extras Summary Table\n\n\n| Extra       | Purpose                | Platform Constraints                                             | Key Dependencies                          |\n| ----------- | ---------------------- | ---------------------------------------------------------------- | ----------------------------------------- |\n| `easyocr`   | Deep learning OCR      | All                                                              | `easyocr>=1.7`                            |\n| `tesserocr` | Tesseract binding      | All (requires system libs)                                       | `tesserocr>=2.7.1`                        |\n| `ocrmac`    | Native macOS OCR       | macOS only                                                       | `ocrmac>=1.0.0`                           |\n| `rapidocr`  | ONNX-accelerated OCR   | All                                                              | `rapidocr>=3.3`, `onnxruntime>=1.7.0`     |\n| `vlm`       | Vision language models | mlx: macOS arm64, Python ≥3.10 vllm: Linux x86\\_64, Python ≥3.10 | `transformers>=4.46.0`, `mlx-vlm`, `vllm` |\n| `asr`       | Audio transcription    | All                                                              | `openai-whisper>=20250625`                |\n\nSources: [pyproject.toml91-110](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L91-L110)\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Optional Extras Summary Table",
      "heading_level": 3,
      "chunk_index": 12,
      "collection": "docling",
      "char_count": 1371,
      "estimated_tokens": 342,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:13",
    "content": "## Model Artifacts\n\n\nDocling uses pre-trained AI models for document understanding. Models can be downloaded automatically (online mode) or pre-downloaded for offline deployment.",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Model Artifacts",
      "heading_level": 2,
      "chunk_index": 13,
      "collection": "docling",
      "char_count": 178,
      "estimated_tokens": 44,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:14",
    "content": "### Automatic Download (Online Mode)\n\n\nBy default, models are downloaded automatically on first use from HuggingFace or ModelScope. They are cached in:\n\n```\n~/.cache/docling/models/\n```\n\nor the directory specified by the `DOCLING_CACHE_DIR` environment variable.",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Automatic Download (Online Mode)",
      "heading_level": 3,
      "chunk_index": 14,
      "collection": "docling",
      "char_count": 262,
      "estimated_tokens": 65,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:15",
    "content": "### Pre-downloading Models (Offline Mode)\n\n\nThe `docling-tools` CLI provides commands for pre-downloading models.",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Pre-downloading Models (Offline Mode)",
      "heading_level": 3,
      "chunk_index": 15,
      "collection": "docling",
      "char_count": 113,
      "estimated_tokens": 28,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:16",
    "content": "#### Download Default Models\n\n\nDownload the standard set of models (layout, tableformer, code\\_formula, picture\\_classifier, rapidocr):\n\n```\n```",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Download Default Models",
      "heading_level": 4,
      "chunk_index": 16,
      "collection": "docling",
      "char_count": 144,
      "estimated_tokens": 36,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:17",
    "content": "#### Available Model Options\n\n\n| Model                | Description                                  | Default |\n| -------------------- | -------------------------------------------- | ------- |\n| `layout`             | Heron layout analysis model                  | ✓       |\n| `tableformer`        | Table structure recognition                  | ✓       |\n| `code_formula`       | Code and formula detection                   | ✓       |\n| `picture_classifier` | Image classification                         | ✓       |\n| `rapidocr`           | RapidOCR models (both torch and onnxruntime) | ✓       |\n| `easyocr`            | EasyOCR models                               | ✗       |\n| `smolvlm`            | SmolVLM vision model                         | ✗       |\n| `granitedocling`     | GraniteDocling VLM (Transformers)            | ✗       |\n| `granitedocling_mlx` | GraniteDocling VLM (MLX, macOS)              | ✗       |\n| `smoldocling`        | SmolDocling VLM (Transformers)               | ✗       |\n| `smoldocling_mlx`    | SmolDocling VLM (MLX, macOS)                 | ✗       |\n| `granite_vision`     | Granite Vision picture description           | ✗       |",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Available Model Options",
      "heading_level": 4,
      "chunk_index": 17,
      "collection": "docling",
      "char_count": 1178,
      "estimated_tokens": 294,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:18",
    "content": "### Using Pre-downloaded Models\n\n\nAfter downloading, configure Docling to use local artifacts:\n\n**CLI**:\n\n```\n```\n\n**Python**:\n\n```\n```",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Using Pre-downloaded Models",
      "heading_level": 3,
      "chunk_index": 18,
      "collection": "docling",
      "char_count": 135,
      "estimated_tokens": 33,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:19",
    "content": "### Model Download Architecture\n\n\n```\n```\n\nSources: [docling/cli/models.py54-136](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/models.py#L54-L136) [docling/utils/model\\_downloader.py30-158](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/model_downloader.py#L30-L158)\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Model Download Architecture",
      "heading_level": 3,
      "chunk_index": 19,
      "collection": "docling",
      "char_count": 319,
      "estimated_tokens": 79,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:20",
    "content": "## OCR Engine Selection\n\n\nDocling's `OcrAutoModel` automatically selects the best available OCR engine based on platform and installed packages.",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "OCR Engine Selection",
      "heading_level": 2,
      "chunk_index": 20,
      "collection": "docling",
      "char_count": 144,
      "estimated_tokens": 36,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:21",
    "content": "### Selection Priority\n\n\nThe auto-selection follows this priority order:\n\n```\n```\n\n**Priority Order**:\n\n1. **OcrMacModel** (macOS only) - Uses native Vision framework\n2. **RapidOcrModel with onnxruntime** - Fast ONNX-accelerated inference\n3. **EasyOcrModel** - Deep learning-based OCR\n4. **RapidOcrModel with torch** - PyTorch-based inference\n\nIf no engine is found, a warning is logged: \"No OCR engine found. Please review the install details.\"\n\nSources: [docling/models/auto\\_ocr\\_model.py41-121](https://github.com/docling-project/docling/blob/f7244a43/docling/models/auto_ocr_model.py#L41-L121)\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Selection Priority",
      "heading_level": 3,
      "chunk_index": 21,
      "collection": "docling",
      "char_count": 603,
      "estimated_tokens": 150,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:22",
    "content": "## RapidOCR Model Configuration\n\n\nRapidOCR requires model files to be downloaded. The system automatically manages this through `RapidOcrModel.download_models()`.",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "RapidOCR Model Configuration",
      "heading_level": 2,
      "chunk_index": 22,
      "collection": "docling",
      "char_count": 162,
      "estimated_tokens": 40,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:23",
    "content": "### Default Models\n\n\nRapidOCR uses PP-OCRv4 models from ModelScope:\n\n| Component      | Purpose               | ONNX Path                                                     | Torch Path                                              |\n| -------------- | --------------------- | ------------------------------------------------------------- | ------------------------------------------------------- |\n| Detection      | Text region detection | `onnx/PP-OCRv4/det/ch_PP-OCRv4_det_infer.onnx`                | `torch/PP-OCRv4/det/ch_PP-OCRv4_det_infer.pth`          |\n| Classification | Text orientation      | `onnx/PP-OCRv4/cls/ch_ppocr_mobile_v2.0_cls_infer.onnx`       | `torch/PP-OCRv4/cls/ch_ptocr_mobile_v2.0_cls_infer.pth` |\n| Recognition    | Character recognition | `onnx/PP-OCRv4/rec/ch_PP-OCRv4_rec_infer.onnx`                | `torch/PP-OCRv4/rec/ch_PP-OCRv4_rec_infer.pth`          |\n| Keys           | Character dictionary  | `paddle/PP-OCRv4/rec/ch_PP-OCRv4_rec_infer/ppocr_keys_v1.txt` | Same                                                    |",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Default Models",
      "heading_level": 3,
      "chunk_index": 23,
      "collection": "docling",
      "char_count": 1058,
      "estimated_tokens": 264,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:24",
    "content": "### Model Download Process\n\n\nWhen `docling-tools download rapidocr` is executed:\n\n1. Both `onnxruntime` and `torch` backend models are downloaded\n2. Models are fetched from ModelScope CDN\n3. Files are stored in `{cache_dir}/models/RapidOcr/`\n4. Model paths follow the structure defined in `_default_models` dictionary\n\nSources: [docling/models/rapid\\_ocr\\_model.py38-80](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py#L38-L80) [docling/models/rapid\\_ocr\\_model.py202-224](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py#L202-L224)\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Model Download Process",
      "heading_level": 3,
      "chunk_index": 24,
      "collection": "docling",
      "char_count": 622,
      "estimated_tokens": 155,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:25",
    "content": "### macOS\n\n\n**Native OCR**:\n\n- Install `ocrmac` extra for native Vision framework OCR\n- Automatically selected by `OcrAutoModel` on macOS\n- Best performance on Apple Silicon with MLX models\n\n**MLX Acceleration**:\n\n- For VLM models on Apple Silicon (arm64), install `vlm` extra\n- Enables `mlx-vlm>=0.3.0` (Python ≥3.10 required)\n- Provides hardware acceleration for M1/M2/M3 chips\n\n**Example**:\n\n```\n```",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "macOS",
      "heading_level": 3,
      "chunk_index": 25,
      "collection": "docling",
      "char_count": 402,
      "estimated_tokens": 100,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:26",
    "content": "### Linux\n\n\n**CUDA Support**:\n\n- Core dependencies support CUDA acceleration\n- VLM extra includes `vllm` for optimized inference (x86\\_64 only, Python ≥3.10)\n- Use `--device=cuda` or `DOCLING_DEVICE=cuda` for GPU acceleration\n\n**System Dependencies for Tesseract**:\n\n```\n```\n\n**Example**:\n\n```\n```",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Linux",
      "heading_level": 3,
      "chunk_index": 26,
      "collection": "docling",
      "char_count": 297,
      "estimated_tokens": 74,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:27",
    "content": "### Windows\n\n\nWindows is fully supported for core functionality and most OCR engines.\n\n**Limitations**:\n\n- `vllm` backend not available (Linux x86\\_64 only)\n- `mlx-vlm` not available (macOS only)\n\n**Example**:\n\n```\n```\n\nSources: [pyproject.toml55](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L55-L55) [pyproject.toml94-99](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L94-L99)\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Windows",
      "heading_level": 3,
      "chunk_index": 27,
      "collection": "docling",
      "char_count": 436,
      "estimated_tokens": 109,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:28",
    "content": "### Verify OCR Engine\n\n\nTest OCR engine selection:\n\n```\n```\n\nExpected log output:\n\n```\nINFO: Auto OCR model selected rapidocr with onnxruntime.\n```\n\nor\n\n```\nINFO: Auto OCR model selected ocrmac.\n```",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Verify OCR Engine",
      "heading_level": 3,
      "chunk_index": 28,
      "collection": "docling",
      "char_count": 198,
      "estimated_tokens": 49,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:29",
    "content": "### Verify Model Downloads\n\n\nCheck that models are cached:\n\n```\n```\n\nExpected directories:\n\n- `Heron/` - Layout model\n- `TableFormer/` - Table structure model\n- `RapidOcr/` - OCR models\n- Other model directories based on usage",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Verify Model Downloads",
      "heading_level": 3,
      "chunk_index": 29,
      "collection": "docling",
      "char_count": 226,
      "estimated_tokens": 56,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:30",
    "content": "### Verify VLM Installation\n\n\nIf VLM extra is installed:\n\n```\n```\n\nSources: [docling/models/auto\\_ocr\\_model.py42-120](https://github.com/docling-project/docling/blob/f7244a43/docling/models/auto_ocr_model.py#L42-L120) [docling/cli/models.py54-136](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/models.py#L54-L136)\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Verify VLM Installation",
      "heading_level": 3,
      "chunk_index": 30,
      "collection": "docling",
      "char_count": 342,
      "estimated_tokens": 85,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:31",
    "content": "### Common Issues\n\n\n**Issue**: `No OCR engine found` warning\n\n**Solution**: Install at least one OCR engine:\n\n```\n```\n\n**Issue**: `ImportError: transformers >=4.46 is not installed`\n\n**Solution**: Install VLM extra:\n\n```\n```\n\n**Issue**: RapidOCR returns empty results\n\n**Solution**: Ensure models are downloaded:\n\n```\n```\n\n**Issue**: Tesseract OSD errors on RHEL\n\n**Solution**: Install OSD data package:\n\n```\n```",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Common Issues",
      "heading_level": 3,
      "chunk_index": 31,
      "collection": "docling",
      "char_count": 412,
      "estimated_tokens": 103,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:32",
    "content": "### Dependency Conflicts\n\n\nIf you encounter dependency conflicts, consider using `uv` for better dependency resolution:\n\n```\n```\n\nSources: [docling/models/rapid\\_ocr\\_model.py100-106](https://github.com/docling-project/docling/blob/f7244a43/docling/models/rapid_ocr_model.py#L100-L106) [docling/models/picture\\_description\\_vlm\\_model.py56-62](https://github.com/docling-project/docling/blob/f7244a43/docling/models/picture_description_vlm_model.py#L56-L62)\n\n---",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Dependency Conflicts",
      "heading_level": 3,
      "chunk_index": 32,
      "collection": "docling",
      "char_count": 462,
      "estimated_tokens": 115,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:33",
    "content": "## Environment Variables\n\n\nThe following environment variables affect installation and runtime behavior:\n\n| Variable              | Purpose                               | Default                    |\n| --------------------- | ------------------------------------- | -------------------------- |\n| `DOCLING_CACHE_DIR`   | Model cache directory                 | `~/.cache/docling`         |\n| `DOCLING_DEVICE`      | Compute device (cpu, cuda, mps, auto) | `auto`                     |\n| `OMP_NUM_THREADS`     | OpenMP thread count                   | System default             |\n| `DOCLING_NUM_THREADS` | Docling-specific thread count         | Value of `OMP_NUM_THREADS` |\n\nExample:\n\n```\n```\n\nSources: [pyproject.toml1-110](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L1-L110)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "Environment Variables",
      "heading_level": 2,
      "chunk_index": 33,
      "collection": "docling",
      "char_count": 907,
      "estimated_tokens": 226,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:34",
    "content": "### On this page",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "On this page",
      "heading_level": 3,
      "chunk_index": 34,
      "collection": "docling",
      "char_count": 16,
      "estimated_tokens": 4,
      "total_chunks": 36
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_1.1-installation.md:chunk:35",
    "content": "- [Installation](#installation.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [System Requirements](#system-requirements.md)\n- [Python Version](#python-version.md)\n- [Platform Support](#platform-support.md)\n- [Base Installation](#base-installation.md)\n- [Standard Installation](#standard-installation.md)\n- [Installation Architecture](#installation-architecture.md)\n- [Optional Extras](#optional-extras.md)\n- [OCR Engines](#ocr-engines.md)\n- [EasyOCR](#easyocr.md)\n- [Tesseract OCR](#tesseract-ocr.md)\n- [macOS Native OCR](#macos-native-ocr.md)\n- [RapidOCR with ONNX Runtime](#rapidocr-with-onnx-runtime.md)\n- [Vision Language Models (VLM)](#vision-language-models-vlm.md)\n- [Audio Transcription (ASR)](#audio-transcription-asr.md)\n- [Optional Extras Summary Table](#optional-extras-summary-table.md)\n- [Model Artifacts](#model-artifacts.md)\n- [Automatic Download (Online Mode)](#automatic-download-online-mode.md)\n- [Pre-downloading Models (Offline Mode)](#pre-downloading-models-offline-mode.md)\n- [Download Default Models](#download-default-models.md)\n- [Download Specific Models](#download-specific-models.md)\n- [Download All Available Models](#download-all-available-models.md)\n- [Available Model Options](#available-model-options.md)\n- [Download Arbitrary HuggingFace Models](#download-arbitrary-huggingface-models.md)\n- [Using Pre-downloaded Models](#using-pre-downloaded-models.md)\n- [Model Download Architecture](#model-download-architecture.md)\n- [OCR Engine Selection](#ocr-engine-selection.md)\n- [Selection Priority](#selection-priority.md)\n- [RapidOCR Model Configuration](#rapidocr-model-configuration.md)\n- [Default Models](#default-models.md)\n- [Model Download Process](#model-download-process.md)\n- [Platform-Specific Setup](#platform-specific-setup.md)\n- [macOS](#macos.md)\n- [Linux](#linux.md)\n- [Windows](#windows.md)\n- [Verification](#verification.md)\n- [Verify Installation](#verify-installation.md)\n- [Verify OCR Engine](#verify-ocr-engine.md)\n- [Verify Model Downloads](#verify-model-downloads.md)\n- [Verify VLM Installation](#verify-vlm-installation.md)\n- [Troubleshooting](#troubleshooting.md)\n- [Common Issues](#common-issues.md)\n- [Dependency Conflicts](#dependency-conflicts.md)\n- [Environment Variables](#environment-variables.md)",
    "metadata": {
      "source": "_docling-project_docling_1.1-installation.md",
      "heading": "On this page",
      "heading_level": 3,
      "chunk_index": 35,
      "collection": "docling",
      "char_count": 2264,
      "estimated_tokens": 566,
      "total_chunks": 36
    }
  }
]