[
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:0",
    "content": "# Office Document Backends\n\n\nRelevant source files\n\n- [docling/backend/msword\\_backend.py](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py)\n- [docling/cli/main.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py)\n- [docling/datamodel/base\\_models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py)\n- [docling/datamodel/document.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py)\n- [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py)\n- [docling/document\\_converter.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py)\n- [tests/data/docx/textbox.docx](https://github.com/docling-project/docling/blob/f7244a43/tests/data/docx/textbox.docx)\n- [tests/data/docx/unit\\_test\\_formatting.docx](https://github.com/docling-project/docling/blob/f7244a43/tests/data/docx/unit_test_formatting.docx)\n- [tests/data/groundtruth/docling\\_v2/unit\\_test\\_formatting.docx.itxt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/unit_test_formatting.docx.itxt)\n- [tests/data/groundtruth/docling\\_v2/unit\\_test\\_formatting.docx.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/unit_test_formatting.docx.json)\n- [tests/data/groundtruth/docling\\_v2/unit\\_test\\_formatting.docx.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/unit_test_formatting.docx.md)\n- [tests/test\\_backend\\_msword.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msword.py)\n\nThis document covers the backend implementations for Microsoft Office document formats in Docling, specifically Word (DOCX) and Excel (XLSX) processing. These backends parse declarative document formats into the universal `DoclingDocument` representation.",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Office Document Backends",
      "heading_level": 1,
      "chunk_index": 0,
      "collection": "docling",
      "char_count": 2025,
      "estimated_tokens": 506,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:1",
    "content": "osoft Office document formats in Docling, specifically Word (DOCX) and Excel (XLSX) processing. These backends parse declarative document formats into the universal `DoclingDocument` representation.\n\nFor PDF document processing, see [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md). For web and text format backends, see [Web and Text Document Backends](docling-project/docling/3.3-web-and-markup-backends.md).",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Office Document Backends",
      "heading_level": 1,
      "chunk_index": 1,
      "collection": "docling",
      "char_count": 443,
      "estimated_tokens": 110,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:2",
    "content": "## Overview\n\n\nDocling's office document backends handle structured document formats that contain explicit markup and formatting information. Unlike PDF documents that require AI/ML models for layout analysis, office documents can be processed directly through their XML structure and metadata.\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py32-40](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L32-L40) [docling/backend/msexcel\\_backend.py28-31](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L28-L31)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Overview",
      "heading_level": 2,
      "chunk_index": 2,
      "collection": "docling",
      "char_count": 598,
      "estimated_tokens": 149,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:3",
    "content": "## Microsoft Word Backend\n\n\nThe `MsWordDocumentBackend` processes DOCX files by parsing their Office Open XML structure using the python-docx library and custom XML processing.",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Microsoft Word Backend",
      "heading_level": 2,
      "chunk_index": 3,
      "collection": "docling",
      "char_count": 176,
      "estimated_tokens": 44,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:4",
    "content": "### Core Architecture\n\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py40-92](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L40-L92) [docling/backend/msword\\_backend.py170-281](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L170-L281)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Core Architecture",
      "heading_level": 3,
      "chunk_index": 4,
      "collection": "docling",
      "char_count": 329,
      "estimated_tokens": 82,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:5",
    "content": "### Document Element Processing\n\n\nThe Word backend processes various document elements through specialized handlers:\n\n| Element Type | Handler Method                | Key Features                             |\n| ------------ | ----------------------------- | ---------------------------------------- |\n| Paragraphs   | `_handle_text_elements()`     | Style detection, formatting, hyperlinks  |\n| Tables       | `_handle_tables()`            | Cell extraction, merged cells, structure |\n| Images       | `_handle_pictures()`          | Inline images, relationship parsing      |\n| Textboxes    | `_handle_textbox_content()`   | Position-aware text extraction           |\n| Equations    | `_handle_equations_in_text()` | OMML to LaTeX conversion                 |\n| Lists        | `_add_list_item()`            | Numbered and bulleted lists              |\n\nSources: [docling/backend/msword\\_backend.py801-944](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L801-L944) [docling/backend/msword\\_backend.py1074-1197](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L1074-L1197)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Document Element Processing",
      "heading_level": 3,
      "chunk_index": 5,
      "collection": "docling",
      "char_count": 1159,
      "estimated_tokens": 289,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:6",
    "content": "### List Processing\n\n\nThe backend handles complex list structures with proper nesting and numbering:\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py335-421](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L335-L421) [docling/backend/msword\\_backend.py1405-1485](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L1405-L1485)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "List Processing",
      "heading_level": 3,
      "chunk_index": 6,
      "collection": "docling",
      "char_count": 415,
      "estimated_tokens": 103,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:7",
    "content": "## Microsoft Excel Backend\n\n\nThe `MsExcelDocumentBackend` processes Excel workbooks by treating each worksheet as a separate page and extracting data tables and images.",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Microsoft Excel Backend",
      "heading_level": 2,
      "chunk_index": 7,
      "collection": "docling",
      "char_count": 168,
      "estimated_tokens": 42,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:8",
    "content": "### Core Architecture\n\n\n```\n```\n\nSources: [docling/backend/msexcel\\_backend.py89-176](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L89-L176) [docling/backend/msexcel\\_backend.py177-226](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L177-L226)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Core Architecture",
      "heading_level": 3,
      "chunk_index": 8,
      "collection": "docling",
      "char_count": 335,
      "estimated_tokens": 83,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:9",
    "content": "### Table Detection Algorithm\n\n\nThe Excel backend uses a sophisticated algorithm to detect and extract data tables:\n\n```\n```\n\nSources: [docling/backend/msexcel\\_backend.py293-394](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L293-L394) [docling/backend/msexcel\\_backend.py320-478](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L320-L478)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Table Detection Algorithm",
      "heading_level": 3,
      "chunk_index": 9,
      "collection": "docling",
      "char_count": 430,
      "estimated_tokens": 107,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:10",
    "content": "### Page and Size Management\n\n\nExcel worksheets are converted to document pages with proper sizing:\n\n| Feature          | Implementation               | Purpose                           |\n| ---------------- | ---------------------------- | --------------------------------- |\n| Page Numbers     | `workbook.index(sheet) + 1`  | Sequential page numbering         |\n| Page Size        | `_find_page_size()`          | Calculate bounding box dimensions |\n| Cell Coordinates | `(col, row)` tuples          | 0-based indexing system           |\n| Content Layers   | `_get_sheet_content_layer()` | Mark invisible sheets             |\n\nSources: [docling/backend/msexcel\\_backend.py194-205](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L194-L205) [docling/backend/msexcel\\_backend.py526-552](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L526-L552)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Page and Size Management",
      "heading_level": 3,
      "chunk_index": 10,
      "collection": "docling",
      "char_count": 934,
      "estimated_tokens": 233,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:11",
    "content": "## Integration with Document Converter\n\n\nBoth office document backends integrate with the main document conversion pipeline through the format detection and backend selection system:\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py111-112](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L111-L112) [docling/backend/msexcel\\_backend.py146-147](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L146-L147)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Integration with Document Converter",
      "heading_level": 2,
      "chunk_index": 11,
      "collection": "docling",
      "char_count": 495,
      "estimated_tokens": 123,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:12",
    "content": "### Declarative Document Processing\n\n\nBoth backends inherit from `DeclarativeDocumentBackend`, which provides:\n\n- Direct structural parsing without AI/ML models\n- Format-specific input validation\n- Standardized conversion interface\n- Error handling and cleanup\n\nSources: [docling/backend/abstract\\_backend.py](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/abstract_backend.py) [docling/backend/msword\\_backend.py32](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L32-L32) [docling/backend/msexcel\\_backend.py29](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L29-L29)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Declarative Document Processing",
      "heading_level": 3,
      "chunk_index": 12,
      "collection": "docling",
      "char_count": 683,
      "estimated_tokens": 170,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:13",
    "content": "### Document Structure Creation\n\n\nBoth backends create hierarchical document structures using:\n\n- Parent-child relationships through `parents` dictionary\n- Group labels for semantic organization\n- Provenance information for element positioning\n- Content layer management for visibility\n\nSources: [docling/backend/msword\\_backend.py56-67](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L56-L67) [docling/backend/msexcel\\_backend.py105-109](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L105-L109)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Document Structure Creation",
      "heading_level": 3,
      "chunk_index": 13,
      "collection": "docling",
      "char_count": 585,
      "estimated_tokens": 146,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:14",
    "content": "### Error Handling and Validation\n\n\nThe backends implement robust error handling:\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py81-91](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L81-L91) [docling/backend/msexcel\\_backend.py112-125](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L112-L125)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "Error Handling and Validation",
      "heading_level": 3,
      "chunk_index": 14,
      "collection": "docling",
      "char_count": 490,
      "estimated_tokens": 122,
      "total_chunks": 16
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_3.2-office-document-backends.md:chunk:15",
    "content": "### On this page\n\n\n- [Office Document Backends](#office-document-backends.md)\n- [Overview](#overview.md)\n- [Microsoft Word Backend](#microsoft-word-backend.md)\n- [Core Architecture](#core-architecture.md)\n- [Document Element Processing](#document-element-processing.md)\n- [List Processing](#list-processing.md)\n- [Microsoft Excel Backend](#microsoft-excel-backend.md)\n- [Core Architecture](#core-architecture-1.md)\n- [Table Detection Algorithm](#table-detection-algorithm.md)\n- [Page and Size Management](#page-and-size-management.md)\n- [Integration with Document Converter](#integration-with-document-converter.md)\n- [Common Features and Patterns](#common-features-and-patterns.md)\n- [Declarative Document Processing](#declarative-document-processing.md)\n- [Document Structure Creation](#document-structure-creation.md)\n- [Error Handling and Validation](#error-handling-and-validation.md)",
    "metadata": {
      "source": "_docling-project_docling_3.2-office-document-backends.md",
      "heading": "On this page",
      "heading_level": 3,
      "chunk_index": 15,
      "collection": "docling",
      "char_count": 889,
      "estimated_tokens": 222,
      "total_chunks": 16
    }
  }
]