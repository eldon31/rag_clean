[
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:0",
    "content": "# Testing Framework\n\n\nRelevant source files",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Testing Framework",
      "heading_level": 1,
      "chunk_index": 0,
      "collection": "docling",
      "char_count": 43,
      "estimated_tokens": 10,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:1",
    "content": "- [docling/backend/html\\_backend.py](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/html_backend.py)\n- [docling/models/tesseract\\_ocr\\_cli\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/tesseract_ocr_cli_model.py)\n- [docling/models/tesseract\\_ocr\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/tesseract_ocr_model.py)\n- [tests/data/groundtruth/docling\\_v2/example\\_06.html.itxt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_06.html.itxt)\n- [tests/data/groundtruth/docling\\_v2/example\\_06.html.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_06.html.json)\n- [tests/data/groundtruth/docling\\_v2/example\\_06.html.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_06.html.md)\n- [tests/data/groundtruth/docling\\_v2/example\\_09.html.itxt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_09.html.itxt)\n- [tests/data/groundtruth/docling\\_v2/example\\_09.html.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_09.html.json)\n- [tests/data/groundtruth/docling\\_v2/example\\_09.html.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/example_09.html.md)\n- [tests/data/groundtruth/docling\\_v2/wiki\\_duck.html.itxt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/wiki_duck.html.itxt)\n- [tests/data/groundtruth/docling\\_v2/wiki\\_duck.html.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/wiki_duck.html.json)\n- [tests/data/groundtruth/docling\\_v2/wiki\\_duck.html.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/wiki_duck.html.md)\n- [tests/data\\_scanned/sample\\_with\\_rotation\\_mismatch.pdf](https://github.com/docling-project/docling/blob/f7244a43/tests/data_scanned/sample_with_rotation_mismatch.pdf)\n- [tests/test\\_backend\\_docling\\_parse.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_docling_parse.py)\n- [tests/test\\_backend\\_docling\\_parse\\_v2.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_docling_parse_v2.py)\n- [tests/test\\_backend\\_html.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_html.py)\n- [tests/test\\_backend\\_pdfium.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_pdfium.py)\n- [tests/test\\_e2e\\_ocr\\_conversion.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_e2e_ocr_conversion.py)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Testing Framework",
      "heading_level": 1,
      "chunk_index": 1,
      "collection": "docling",
      "char_count": 2787,
      "estimated_tokens": 696,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:2",
    "content": "docling-project/docling/blob/f7244a43/tests/test_backend_pdfium.py)\n- [tests/test\\_e2e\\_ocr\\_conversion.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_e2e_ocr_conversion.py)\n\nThis document covers Docling's comprehensive testing infrastructure, including verification utilities, ground truth data management, and test patterns for document backends. For information about CI/CD workflows and development processes, see [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md). For details on ground truth data formats and schema evolution, see [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md).",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Testing Framework",
      "heading_level": 1,
      "chunk_index": 2,
      "collection": "docling",
      "char_count": 676,
      "estimated_tokens": 169,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:3",
    "content": "## Architecture Overview\n\n\nThe testing framework provides systematic verification of document conversion results across multiple formats and backends. It compares conversion outputs against versioned ground truth data using both exact and fuzzy matching techniques.",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Architecture Overview",
      "heading_level": 2,
      "chunk_index": 3,
      "collection": "docling",
      "char_count": 265,
      "estimated_tokens": 66,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:4",
    "content": "### Core Testing Flow\n\n\n```\n```\n\nSources: [tests/verify\\_utils.py1-510](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L1-L510) [tests/test\\_backend\\_msexcel.py1-101](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L1-L101)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Core Testing Flow",
      "heading_level": 3,
      "chunk_index": 4,
      "collection": "docling",
      "char_count": 294,
      "estimated_tokens": 73,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:5",
    "content": "### Testing Infrastructure Components\n\n\n```\n```\n\nSources: [tests/verify\\_utils.py1-510](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L1-L510) [tests/test\\_backend\\_msexcel.py1-101](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L1-L101) [tests/test\\_backend\\_csv.py1-88](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_csv.py#L1-L88)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Testing Infrastructure Components",
      "heading_level": 3,
      "chunk_index": 5,
      "collection": "docling",
      "char_count": 435,
      "estimated_tokens": 108,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:6",
    "content": "### Text and String Verification\n\n\nThe framework provides sophisticated text comparison with support for fuzzy matching using Levenshtein distance:\n\n```\n```\n\nThe `verify_text()` function at [tests/verify\\_utils.py55-62](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L55-L62) handles both exact and fuzzy text matching. The Levenshtein distance implementation at [tests/verify\\_utils.py31-52](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L31-L52) provides efficient edit distance calculation for OCR-based fuzzy matching.\n\nSources: [tests/verify\\_utils.py31-62](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L31-L62)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Text and String Verification",
      "heading_level": 3,
      "chunk_index": 6,
      "collection": "docling",
      "char_count": 715,
      "estimated_tokens": 178,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:7",
    "content": "### Document Structure Verification\n\n\nDocument structure verification ensures that converted documents maintain proper hierarchical organization:\n\n| Function                    | Purpose                         | Key Validations                                         |\n| --------------------------- | ------------------------------- | ------------------------------------------------------- |\n| `verify_docitems()`         | Validates DoclingDocument items | Text content, table structure, picture data, provenance |\n| `verify_cells()`            | Validates page cell data        | Cell count, text content, bounding boxes                |\n| `verify_table_v2()`         | Validates table structure       | Row/column counts, cell properties, headers             |\n| `verify_picture_image_v2()` | Validates image data            | Size, mode, binary content                              |\n\nThe `verify_docitems()` function at [tests/verify\\_utils.py230-291](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L230-L291) performs comprehensive validation of document items including type checking, provenance verification, and content validation.\n\nSources: [tests/verify\\_utils.py65-96](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L65-L96) [tests/verify\\_utils.py170-211](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L170-L211) [tests/verify\\_utils.py214-221](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L214-L221) [tests/verify\\_utils.py230-291](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L230-L291)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Document Structure Verification",
      "heading_level": 3,
      "chunk_index": 7,
      "collection": "docling",
      "char_count": 1669,
      "estimated_tokens": 417,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:8",
    "content": "### Versioned Ground Truth System\n\n\nThe framework supports multiple ground truth versions to accommodate schema evolution:\n\n```\n```\n\nGround truth data is organized with precision controls defined by constants:\n\n- `COORD_PREC = 2` for coordinate decimal places\n- `CONFID_PREC = 3` for confidence decimal places\n\nSources: [tests/verify\\_utils.py27-28](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L27-L28) [tests/verify\\_utils.py302-386](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L302-L386) [tests/verify\\_utils.py388-478](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L388-L478)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Versioned Ground Truth System",
      "heading_level": 3,
      "chunk_index": 8,
      "collection": "docling",
      "char_count": 681,
      "estimated_tokens": 170,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:9",
    "content": "### Ground Truth Generation and Validation\n\n\nThe framework supports both generation and validation modes controlled by the `generate` parameter:\n\n```\n```\n\nThe `verify_conversion_result_v2()` function at [tests/verify\\_utils.py388-478](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L388-L478) demonstrates this dual-mode operation with comprehensive file handling for all supported export formats.\n\nSources: [tests/verify\\_utils.py421-448](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L421-L448) [tests/verify\\_utils.py449-478](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L449-L478) [tests/verify\\_utils.py481-495](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L481-L495)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Ground Truth Generation and Validation",
      "heading_level": 3,
      "chunk_index": 9,
      "collection": "docling",
      "char_count": 805,
      "estimated_tokens": 201,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:10",
    "content": "### Standard Test Backend Structure\n\n\nAll backend test files follow a consistent pattern for systematic testing:\n\n```\n```\n\nExample implementation pattern from Excel backend testing at [tests/test\\_backend\\_msexcel.py58-73](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L58-L73):\n\n| Step | Function                       | Purpose                                  |\n| ---- | ------------------------------ | ---------------------------------------- |\n| 1    | `get_excel_paths()`            | Discover `.xlsx` and `.xlsm` files       |\n| 2    | `get_converter()`              | Create converter with `InputFormat.XLSX` |\n| 3    | `test_e2e_excel_conversions()` | Execute end-to-end validation            |\n| 4    | `verify_export()`              | Validate Markdown and indented text      |\n| 5    | `verify_document()`            | Validate JSON document structure         |\n\nSources: [tests/test\\_backend\\_msexcel.py19-32](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L19-L32) [tests/test\\_backend\\_msexcel.py58-73](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L58-L73) [tests/test\\_backend\\_csv.py15-31](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_csv.py#L15-L31)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Standard Test Backend Structure",
      "heading_level": 3,
      "chunk_index": 10,
      "collection": "docling",
      "char_count": 1322,
      "estimated_tokens": 330,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:11",
    "content": "### Backend-Specific Testing Features\n\n\nDifferent backends have specialized testing requirements:\n\n```\n```\n\nThe Excel backend includes specialized page validation at [tests/test\\_backend\\_msexcel.py75-100](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L75-L100) that verifies page counts and cell dimensions. The CSV backend at [tests/test\\_backend\\_csv.py42-50](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_csv.py#L42-L50) demonstrates warning handling for inconsistent column data.\n\nSources: [tests/test\\_backend\\_msexcel.py75-100](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msexcel.py#L75-L100) [tests/test\\_backend\\_csv.py42-50](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_csv.py#L42-L50) [tests/test\\_backend\\_patent\\_uspto.py91-134](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_patent_uspto.py#L91-L134) [tests/test\\_backend\\_jats.py28-54](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_jats.py#L28-L54)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Backend-Specific Testing Features",
      "heading_level": 3,
      "chunk_index": 11,
      "collection": "docling",
      "char_count": 1106,
      "estimated_tokens": 276,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:12",
    "content": "### Fuzzy Matching Implementation\n\n\nThe framework provides sophisticated fuzzy matching for OCR-based tests where exact text matching is impractical:\n\n```\n```\n\nThe Levenshtein algorithm at [tests/verify\\_utils.py31-52](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L31-L52) uses optimized memory usage by ensuring the shorter string is processed first and uses row buffering for efficient computation.\n\nDefault fuzzy threshold is set to 0.4 (40% difference tolerance) at [tests/verify\\_utils.py55-62](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L55-L62) making it suitable for OCR output validation where minor character recognition errors are expected.\n\nSources: [tests/verify\\_utils.py31-62](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L31-L62) [tests/verify\\_utils.py159-161](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L159-L161) [tests/verify\\_utils.py190-194](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L190-L194)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "Fuzzy Matching Implementation",
      "heading_level": 3,
      "chunk_index": 12,
      "collection": "docling",
      "char_count": 1093,
      "estimated_tokens": 273,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:13",
    "content": "### OCR Engine Testing\n\n\nThe framework accommodates different OCR engines through engine-specific suffixes in ground truth filenames:\n\n| OCR Engine | Suffix Pattern | Example                   |\n| ---------- | -------------- | ------------------------- |\n| Default    | None           | `document.json`           |\n| Tesseract  | `.tesseract`   | `document.tesseract.json` |\n| EasyOCR    | `.easyocr`     | `document.easyocr.json`   |\n| RapidOCR   | `.rapidocr`    | `document.rapidocr.json`  |\n\nEngine-specific ground truth handling is implemented at [tests/verify\\_utils.py322-333](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L322-L333) for v1 format and [tests/verify\\_utils.py408-419](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L408-L419) for v2 format.\n\nSources: [tests/verify\\_utils.py322-333](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L322-L333) [tests/verify\\_utils.py408-419](https://github.com/docling-project/docling/blob/f7244a43/tests/verify_utils.py#L408-L419)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "OCR Engine Testing",
      "heading_level": 3,
      "chunk_index": 13,
      "collection": "docling",
      "char_count": 1182,
      "estimated_tokens": 295,
      "total_chunks": 15
    }
  },
  {
    "chunk_id": "docling:_docling-project_docling_9.1-testing-framework.md:chunk:14",
    "content": "### On this page\n\n\n- [Testing Framework](#testing-framework.md)\n- [Architecture Overview](#architecture-overview.md)\n- [Core Testing Flow](#core-testing-flow.md)\n- [Testing Infrastructure Components](#testing-infrastructure-components.md)\n- [Core Verification Functions](#core-verification-functions.md)\n- [Text and String Verification](#text-and-string-verification.md)\n- [Document Structure Verification](#document-structure-verification.md)\n- [Ground Truth Data Management](#ground-truth-data-management.md)\n- [Versioned Ground Truth System](#versioned-ground-truth-system.md)\n- [Ground Truth Generation and Validation](#ground-truth-generation-and-validation.md)\n- [Test Backend Patterns](#test-backend-patterns.md)\n- [Standard Test Backend Structure](#standard-test-backend-structure.md)\n- [Backend-Specific Testing Features](#backend-specific-testing-features.md)\n- [Fuzzy Matching and OCR Testing](#fuzzy-matching-and-ocr-testing.md)\n- [Fuzzy Matching Implementation](#fuzzy-matching-implementation.md)\n- [OCR Engine Testing](#ocr-engine-testing.md)",
    "metadata": {
      "source": "_docling-project_docling_9.1-testing-framework.md",
      "heading": "On this page",
      "heading_level": 3,
      "chunk_index": 14,
      "collection": "docling",
      "char_count": 1056,
      "estimated_tokens": 264,
      "total_chunks": 15
    }
  }
]