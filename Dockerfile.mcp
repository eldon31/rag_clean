# üèÜ Ultimate Qdrant MCP Server Docker Image
# Containerized deployment for production-ready semantic search
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements-mcp.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements-mcp.txt

# Copy the MCP server and related files
COPY mcp_server/ ./mcp_server/
COPY mcp_config.json .

# Set environment variables
ENV QDRANT_HOST=qdrant
ENV QDRANT_PORT=6333
ENV EMBEDDING_MODEL=nomic-ai/CodeRankEmbed
ENV PYTHONPATH=/app

# Expose MCP server port (if needed for HTTP mode)
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "
import sys
sys.path.append('/app')
try:
    from mcp_server.ultimate_qdrant_mcp_v2 import ULTIMATE_COLLECTIONS
    print(f'‚úÖ MCP Server healthy - {len(ULTIMATE_COLLECTIONS)} collections available')
    exit(0)
except Exception as e:
    print(f'‚ùå MCP Server unhealthy: {e}')
    exit(1)
"

# Run the MCP server
CMD ["python", "mcp_server/ultimate_qdrant_mcp_v2.py"]