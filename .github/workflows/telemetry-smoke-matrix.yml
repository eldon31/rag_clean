name: Telemetry Smoke Matrix

on:
  push:
    branches: [main]
    paths:
      - 'scripts/embed_collections_v6.py'
      - 'processor/**/*.py'
      - 'tests/test_telemetry_smoke.py'
  pull_request:
    branches: [main]
  schedule:
    # Run weekly on Sundays at 2 AM UTC to keep baselines fresh
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      force_regenerate:
        description: 'Force regenerate all artifacts'
        required: false
        default: 'false'

jobs:
  smoke-matrix:
    name: Generate Telemetry Smoke Matrix
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        toggle_config:
          - name: defaults
            flags: ''
            description: 'Default configuration (both stages enabled)'
          - name: disable-rerank
            flags: '--disable-rerank'
            description: 'Rerank disabled, sparse enabled'
          - name: disable-sparse
            flags: '--disable-sparse'
            description: 'Sparse disabled, rerank enabled'
          - name: disable-both
            flags: '--disable-rerank --disable-sparse'
            description: 'Both stages disabled (legacy dense-only)'
          - name: enable-synonyms
            flags: '--enable-rerank --enable-sparse'
            description: 'Explicit enable flags (synonym validation)'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install test dependencies
          pip install pytest pytest-mock
          # Install core embedder dependencies (torch, sentence-transformers, etc.)
          # Note: Full requirements.txt not available, installing minimal set for CLI smoke tests
          pip install torch sentence-transformers qdrant-client prometheus-client
      
      - name: Verify test corpus exists
        run: |
          if [ ! -d "Chunked/Docling" ]; then
            echo "ERROR: Test corpus Chunked/Docling not found"
            echo "Smoke matrix requires Docling corpus for realistic validation"
            exit 1
          fi
          echo "Test corpus verified: $(find Chunked/Docling -name '*.json' | wc -l) chunk files found"
      
      - name: Run smoke test - ${{ matrix.toggle_config.name }}
        id: smoke_run
        run: |
          set -o pipefail
          TIMESTAMP=$(date +%Y%m%d)
          CLI_OUTPUT="docs/qa/assessments/1.4-telemetry-smoke-evidence/cli-output-${{ matrix.toggle_config.name }}-${TIMESTAMP}.txt"
          
          echo "Running: python scripts/embed_collections_v6.py --chunked-dir Chunked/Docling ${{ matrix.toggle_config.flags }}"
          echo "Description: ${{ matrix.toggle_config.description }}"
          
          # Run CLI with toggle flags and capture output
          python scripts/embed_collections_v6.py --chunked-dir Chunked/Docling ${{ matrix.toggle_config.flags }} 2>&1 | tee "${CLI_OUTPUT}"
          EXIT_CODE=${PIPESTATUS[0]}
          
          if [ $EXIT_CODE -ne 0 ]; then
            echo "ERROR: CLI execution failed with exit code $EXIT_CODE"
            exit $EXIT_CODE
          fi
          
          # Verify processing_summary.json was generated
          if [ ! -f "processing_summary.json" ]; then
            echo "ERROR: processing_summary.json not generated"
            exit 1
          fi
          
          # Copy to evidence directory with timestamp
          SUMMARY_OUTPUT="docs/qa/assessments/1.4-telemetry-smoke-evidence/processing_summary_${{ matrix.toggle_config.name }}_${TIMESTAMP}.json"
          cp processing_summary.json "${SUMMARY_OUTPUT}"
          
          echo "cli_output=${CLI_OUTPUT}" >> $GITHUB_OUTPUT
          echo "summary_output=${SUMMARY_OUTPUT}" >> $GITHUB_OUTPUT
          echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT
      
      - name: Validate artifact structure - ${{ matrix.toggle_config.name }}
        run: |
          SUMMARY="${{ steps.smoke_run.outputs.summary_output }}"
          python -c "import json; data = json.load(open('${SUMMARY}')); required = ['collection_name', 'chunk_count', 'timestamp', 'feature_toggles']; missing = [k for k in required if k not in data]; assert not missing, f'Missing: {missing}'; print('✓ Valid structure')"
      
      - name: Run regression tests
        run: |
          pytest tests/test_telemetry_smoke.py -v --tb=short
      
      - name: Validate Prometheus endpoint (mock mode)
        id: prometheus_validation
        run: |
          TIMESTAMP=$(date +%Y%m%d)
          VALIDATION_OUTPUT="docs/qa/assessments/1.4-telemetry-smoke-evidence/prometheus-validation-${{ matrix.toggle_config.name }}-${TIMESTAMP}.json"
          
          echo "Running Prometheus endpoint validation in mock mode..."
          python scripts/validate_prometheus_endpoint.py \
            --mock-mode \
            --mock-port 19090 \
            --username prometheus_user \
            --password prometheus_pass \
            --output "${VALIDATION_OUTPUT}"
          
          VALIDATION_EXIT_CODE=$?
          
          echo "validation_output=${VALIDATION_OUTPUT}" >> $GITHUB_OUTPUT
          echo "validation_exit_code=${VALIDATION_EXIT_CODE}" >> $GITHUB_OUTPUT
          
          if [ $VALIDATION_EXIT_CODE -eq 0 ]; then
            echo "✓ Prometheus validation PASSED"
          elif [ $VALIDATION_EXIT_CODE -eq 2 ]; then
            echo "⚠ Prometheus validation completed with WARNINGS"
          else
            echo "✗ Prometheus validation FAILED"
            exit 1
          fi
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: telemetry-smoke-${{ matrix.toggle_config.name }}
          path: |
            ${{ steps.smoke_run.outputs.cli_output }}
            ${{ steps.smoke_run.outputs.summary_output }}
            ${{ steps.prometheus_validation.outputs.validation_output }}
          retention-days: 90
  
  consolidate-evidence:
    name: Consolidate and Commit Evidence
    needs: smoke-matrix
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule' || github.event.inputs.force_regenerate == 'true'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      
      - name: Consolidate evidence files
        run: |
          mkdir -p docs/qa/assessments/1.4-telemetry-smoke-evidence/
          find artifacts/ -name 'cli-output-*.txt' -exec cp {} docs/qa/assessments/1.4-telemetry-smoke-evidence/ \; || true
          find artifacts/ -name 'processing_summary_*.json' -exec cp {} docs/qa/assessments/1.4-telemetry-smoke-evidence/ \; || true
          find artifacts/ -name 'prometheus-validation-*.json' -exec cp {} docs/qa/assessments/1.4-telemetry-smoke-evidence/ \; || true
          TIMESTAMP=$(date +%Y-%m-%d)
          echo "# Telemetry Smoke Matrix Evidence Manifest" > docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "Generated: ${TIMESTAMP}" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "Workflow: Telemetry Smoke Matrix CI" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "Commit: ${{ github.sha }}" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "## Evidence Files" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          ls -lh docs/qa/assessments/1.4-telemetry-smoke-evidence/ >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "## Validation Summary" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "### CLI Execution Tests (5 toggle combinations)" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "- defaults" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "- disable-rerank" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "- disable-sparse" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "- disable-both" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "- enable-synonyms" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "### Prometheus Authentication/TLS Validation" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "Mock server validation executed for each toggle combination:" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "- ✓ Authentication required (401 without credentials)" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "- ✓ Valid credentials accepted (200 with basic auth)" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "- ✓ TLS connection validation" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "" >> docs/qa/assessments/1.4-telemetry-smoke-evidence/MANIFEST.md
          echo "Evidence manifest generated"
      
      - name: Check for changes
        id: git_status
        run: |
          git add docs/qa/assessments/1.4-telemetry-smoke-evidence/
          if git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes to commit (artifacts identical to previous run)"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in telemetry smoke evidence"
          fi
      
      - name: Commit updated evidence
        if: steps.git_status.outputs.changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "chore(qa): Refresh telemetry smoke matrix evidence - $(date +%Y-%m-%d)"
      
      - name: Push changes
        if: steps.git_status.outputs.changes == 'true'
        run: |
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Summary
        run: |
          echo "## Telemetry Smoke Matrix - Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ✅ All toggle combinations validated" >> $GITHUB_STEP_SUMMARY
          echo "**Artifacts:** 15 files (5 CLI logs + 5 JSON summaries + 5 Prometheus validation reports)" >> $GITHUB_STEP_SUMMARY
          echo "**Changes committed:** ${{ steps.git_status.outputs.changes }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Toggle Matrix Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ defaults" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ disable-rerank" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ disable-sparse" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ disable-both" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ enable-synonyms" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Prometheus Validation" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Authentication enforcement verified (401 without credentials)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Valid credentials accepted (200 with basic auth)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ TLS connection validation completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** Validations run against mock Prometheus server in CI. For staging/production validation, see \`docs/qa/assessments/1.4-security-controls-20251025.md\`" >> $GITHUB_STEP_SUMMARY
