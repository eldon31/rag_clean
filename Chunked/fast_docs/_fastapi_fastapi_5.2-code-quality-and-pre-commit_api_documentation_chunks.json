[
  {
    "text": "## Quality Assurance Integration  The code quality system integrates with the broader development workflow through standardized scripts and dependency management:",
    "metadata": {
      "chunk_id": "39e29221648e-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Quality Assurance Integration"
      ],
      "heading_text": "Quality Assurance Integration",
      "token_count": 22,
      "char_count": 162,
      "start_char": 0,
      "end_char": 162,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "chunking_strategy": "hierarchical_precise",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:52:19.944286",
      "document_id": "39e29221648e",
      "document_name": "_fastapi_fastapi_5.2-code-quality-and-pre-commit",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi",
      "relative_path": "Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "hierarchy_path": "Quality Assurance Integration",
      "chunk_hash": "2181950bbf3a6243",
      "content_digest": "2181950bbf3a6243",
      "chunk_length": 162,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "quality",
          "the",
          "assurance",
          "integration",
          "code",
          "system",
          "integrates",
          "with",
          "broader",
          "development",
          "workflow",
          "through",
          "standardized",
          "scripts",
          "and",
          "dependency",
          "management"
        ],
        "term_weights": [
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "assurance",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "integrates",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "broader",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "development",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "workflow",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "standardized",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "scripts",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "dependency",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "management",
            "tf": 1,
            "weight": 0.052632
          }
        ],
        "unique_terms": 17,
        "total_terms": 19
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Quality Assurance Integration",
        "assurance",
        "broader",
        "code",
        "development",
        "integrates",
        "integration",
        "quality",
        "system",
        "the",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "overall": 0.7533333333333333
    }
  },
  {
    "text": "## Code Linting and Formatting with Ruff  FastAPI uses Ruff as its primary tool for both code linting and formatting, replacing multiple traditional tools with a single, fast implementation.",
    "metadata": {
      "chunk_id": "39e29221648e-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Code Linting and Formatting with Ruff"
      ],
      "heading_text": "Code Linting and Formatting with Ruff",
      "token_count": 39,
      "char_count": 190,
      "start_char": 0,
      "end_char": 190,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5382758620689655,
      "chunking_strategy": "hierarchical_precise",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:52:19.941920",
      "document_id": "39e29221648e",
      "document_name": "_fastapi_fastapi_5.2-code-quality-and-pre-commit",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi",
      "relative_path": "Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "hierarchy_path": "Code Linting and Formatting with Ruff",
      "chunk_hash": "95c6858cde605ae3",
      "content_digest": "95c6858cde605ae3",
      "chunk_length": 190,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "linting",
          "and",
          "formatting",
          "with",
          "ruff",
          "fastapi",
          "uses",
          "its",
          "primary",
          "tool",
          "for",
          "both",
          "replacing",
          "multiple",
          "traditional",
          "tools",
          "single",
          "fast",
          "implementation"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "linting",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "formatting",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "ruff",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "fastapi",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "its",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "primary",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "tool",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "both",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "replacing",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "traditional",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "tools",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "fast",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.038462
          }
        ],
        "unique_terms": 20,
        "total_terms": 26
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Code Linting and Formatting with Ruff",
        "and",
        "code",
        "fastapi",
        "formatting",
        "its",
        "linting",
        "primary",
        "ruff",
        "uses",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5382758620689655,
      "overall": 0.7460919540229884
    }
  },
  {
    "text": "## Test Coverage Infrastructure  The repository includes comprehensive test coverage tracking using the `coverage` tool.",
    "metadata": {
      "chunk_id": "39e29221648e-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Test Coverage Infrastructure"
      ],
      "heading_text": "Test Coverage Infrastructure",
      "token_count": 19,
      "char_count": 120,
      "start_char": 0,
      "end_char": 120,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.32999999999999996,
      "chunking_strategy": "hierarchical_precise",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:52:19.943107",
      "document_id": "39e29221648e",
      "document_name": "_fastapi_fastapi_5.2-code-quality-and-pre-commit",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi",
      "relative_path": "Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "hierarchy_path": "Test Coverage Infrastructure",
      "chunk_hash": "e778fdfd0bd63605",
      "content_digest": "e778fdfd0bd63605",
      "chunk_length": 120,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "coverage",
          "test",
          "the",
          "infrastructure",
          "repository",
          "includes",
          "comprehensive",
          "tracking",
          "using",
          "tool"
        ],
        "term_weights": [
          {
            "term": "coverage",
            "tf": 3,
            "weight": 0.214286
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "infrastructure",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "repository",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "includes",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "comprehensive",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "tracking",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "tool",
            "tf": 1,
            "weight": 0.071429
          }
        ],
        "unique_terms": 10,
        "total_terms": 14
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Test Coverage Infrastructure",
        "comprehensive",
        "coverage",
        "includes",
        "infrastructure",
        "repository",
        "test",
        "the",
        "tool",
        "tracking",
        "using"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.32999999999999996,
      "overall": 0.6766666666666666
    }
  },
  {
    "text": "## Type Checking with mypy  FastAPI uses mypy for static type checking to ensure type safety across the codebase.",
    "metadata": {
      "chunk_id": "39e29221648e-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Type Checking with mypy"
      ],
      "heading_text": "Type Checking with mypy",
      "token_count": 25,
      "char_count": 113,
      "start_char": 0,
      "end_char": 113,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.3268421052631579,
      "chunking_strategy": "hierarchical_precise",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:52:19.942795",
      "document_id": "39e29221648e",
      "document_name": "_fastapi_fastapi_5.2-code-quality-and-pre-commit",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi",
      "relative_path": "Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "hierarchy_path": "Type Checking with mypy",
      "chunk_hash": "3e68fb5041189e59",
      "content_digest": "3e68fb5041189e59",
      "chunk_length": 113,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "type",
          "checking",
          "mypy",
          "with",
          "fastapi",
          "uses",
          "for",
          "static",
          "ensure",
          "safety",
          "across",
          "the",
          "codebase"
        ],
        "term_weights": [
          {
            "term": "type",
            "tf": 3,
            "weight": 0.176471
          },
          {
            "term": "checking",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "mypy",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "fastapi",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "static",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "ensure",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "safety",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "across",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "codebase",
            "tf": 1,
            "weight": 0.058824
          }
        ],
        "unique_terms": 13,
        "total_terms": 17
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Type Checking with mypy",
        "checking",
        "ensure",
        "fastapi",
        "for",
        "mypy",
        "safety",
        "static",
        "type",
        "uses",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.3268421052631579,
      "overall": 0.6756140350877193
    }
  },
  {
    "text": "# Code Quality and Pre-commit  Relevant source files  - [.pre-commit-config.yaml](https://github.com/fastapi/fastapi/blob/3e2dbf91/.pre-commit-config.yaml) - [requirements-tests.txt](https://github.com/fastapi/fastapi/blob/3e2dbf91/requirements-tests.txt) - [requirements.txt](https://github.com/fastapi/fastapi/blob/3e2dbf91/requirements.txt) - [scripts/format.sh](https://github.com/fastapi/fastapi/blob/3e2dbf91/scripts/format.sh) - [scripts/lint.sh](https://github.com/fastapi/fastapi/blob/3e2dbf91/scripts/lint.sh) - [scripts/test-cov-html.sh](https://github.com/fastapi/fastapi/blob/3e2dbf91/scripts/test-cov-html.sh) - [scripts/test.sh](https://github.com/fastapi/fastapi/blob/3e2dbf91/scripts/test.sh) - [tests/test\\_tutorial/test\\_cookie\\_param\\_models/test\\_tutorial002.py](https://github.com/fastapi/fastapi/blob/3e2dbf91/tests/test_tutorial/test_cookie_param_models/test_tutorial002.py) - [tests/test\\_tutorial/test\\_sql\\_databases/test\\_tutorial002.py](https://github.com/fastapi/fastapi/blob/3e2dbf91/tests/test_tutorial/test_sql_databases/test_tutorial002.py) - [tests/test\\_typing\\_python39.py](https://github.com/fastapi/fastapi/blob/3e2dbf91/tests/test_typing_python39.py) - [tests/test\\_union\\_body.py](https://github.com/fastapi/fastapi/blob/3e2dbf91/tests/test_union_body.py) - [tests/test\\_union\\_inherited\\_body.py](https://github.com/fastapi/fastapi/blob/3e2dbf91/tests/test_union_inherited_body.py) - [tests/utils.py](https://github.com/fastapi/fastapi/blob/3e2dbf91/tests/utils.py)  This document covers the code quality infrastructure and pre-commit hook system used in the FastAPI repository. It details the configuration and usage of linting, formatting, type checking, and automated quality gates that ensure code consistency and reliability.",
    "metadata": {
      "chunk_id": "39e29221648e-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Code Quality and Pre-commit"
      ],
      "heading_text": "Code Quality and Pre-commit",
      "token_count": 477,
      "char_count": 1772,
      "start_char": 0,
      "end_char": 1772,
      "semantic_score": 0.27480894327163696,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7459169014084508,
      "chunking_strategy": "hierarchical_precise",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:52:19.940055",
      "document_id": "39e29221648e",
      "document_name": "_fastapi_fastapi_5.2-code-quality-and-pre-commit",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_filename": "_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\fastapi_fastapi",
      "relative_path": "Docs\\FAST_DOCS\\fastapi_fastapi\\_fastapi_fastapi_5.2-code-quality-and-pre-commit.md",
      "hierarchy_path": "Code Quality and Pre-commit",
      "chunk_hash": "4ebf90374abc1d4d",
      "content_digest": "4ebf90374abc1d4d",
      "chunk_length": 1772,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "fastapi",
          "test",
          "tests",
          "https",
          "github",
          "com",
          "blob",
          "3e2dbf91",
          "scripts",
          "and",
          "pre",
          "commit",
          "requirements",
          "txt",
          "tutorial",
          "tutorial002",
          "union",
          "body",
          "code",
          "quality"
        ],
        "term_weights": [
          {
            "term": "fastapi",
            "tf": 27,
            "weight": 0.114407
          },
          {
            "term": "test",
            "tf": 22,
            "weight": 0.09322
          },
          {
            "term": "tests",
            "tf": 14,
            "weight": 0.059322
          },
          {
            "term": "https",
            "tf": 13,
            "weight": 0.055085
          },
          {
            "term": "github",
            "tf": 13,
            "weight": 0.055085
          },
          {
            "term": "com",
            "tf": 13,
            "weight": 0.055085
          },
          {
            "term": "blob",
            "tf": 13,
            "weight": 0.055085
          },
          {
            "term": "3e2dbf91",
            "tf": 13,
            "weight": 0.055085
          },
          {
            "term": "scripts",
            "tf": 8,
            "weight": 0.033898
          },
          {
            "term": "and",
            "tf": 5,
            "weight": 0.021186
          },
          {
            "term": "pre",
            "tf": 4,
            "weight": 0.016949
          },
          {
            "term": "commit",
            "tf": 4,
            "weight": 0.016949
          },
          {
            "term": "requirements",
            "tf": 4,
            "weight": 0.016949
          },
          {
            "term": "txt",
            "tf": 4,
            "weight": 0.016949
          },
          {
            "term": "tutorial",
            "tf": 4,
            "weight": 0.016949
          },
          {
            "term": "tutorial002",
            "tf": 4,
            "weight": 0.016949
          },
          {
            "term": "union",
            "tf": 4,
            "weight": 0.016949
          },
          {
            "term": "body",
            "tf": 4,
            "weight": 0.016949
          },
          {
            "term": "code",
            "tf": 3,
            "weight": 0.012712
          },
          {
            "term": "quality",
            "tf": 3,
            "weight": 0.012712
          }
        ],
        "unique_terms": 60,
        "total_terms": 236
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "3e2dbf91",
        "Code Quality and Pre-commit",
        "and",
        "blob",
        "com",
        "fastapi",
        "github",
        "https",
        "scripts",
        "test",
        "tests"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.27480894327163696,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7459169014084508,
      "overall": 0.6402419482266959
    }
  }
]