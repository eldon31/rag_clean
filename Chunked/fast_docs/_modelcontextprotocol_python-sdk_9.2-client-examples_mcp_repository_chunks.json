[
  {
    "text": "## Usage Examples",
    "metadata": {
      "chunk_id": "d16105a9fe60-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Usage Examples"
      ],
      "heading_text": "Usage Examples",
      "token_count": 3,
      "char_count": 17,
      "start_char": 0,
      "end_char": 17,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:59:42.999440",
      "document_id": "d16105a9fe60",
      "document_name": "_modelcontextprotocol_python-sdk_9.2-client-examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk",
      "relative_path": "Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "hierarchy_path": "Usage Examples",
      "chunk_hash": "40ba86df7413777b",
      "content_digest": "40ba86df7413777b",
      "chunk_length": 17,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "usage",
          "examples"
        ],
        "term_weights": [
          {
            "term": "usage",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Usage Examples",
        "examples",
        "usage"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "## LLM Integration Patterns  The client demonstrates how to integrate MCP tools with LLM providers through structured prompting and tool calling protocols.",
    "metadata": {
      "chunk_id": "d16105a9fe60-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "LLM Integration Patterns"
      ],
      "heading_text": "LLM Integration Patterns",
      "token_count": 26,
      "char_count": 155,
      "start_char": 0,
      "end_char": 155,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5763636363636364,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:59:42.998975",
      "document_id": "d16105a9fe60",
      "document_name": "_modelcontextprotocol_python-sdk_9.2-client-examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk",
      "relative_path": "Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "hierarchy_path": "LLM Integration Patterns",
      "chunk_hash": "a213e420ffbc3f66",
      "content_digest": "a213e420ffbc3f66",
      "chunk_length": 155,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "llm",
          "integration",
          "patterns",
          "the",
          "client",
          "demonstrates",
          "how",
          "integrate",
          "mcp",
          "tools",
          "with",
          "providers",
          "through",
          "structured",
          "prompting",
          "and",
          "tool",
          "calling",
          "protocols"
        ],
        "term_weights": [
          {
            "term": "llm",
            "tf": 2,
            "weight": 0.1
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "patterns",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "client",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "demonstrates",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "integrate",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "mcp",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "tools",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "providers",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "structured",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "prompting",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "tool",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "calling",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "protocols",
            "tf": 1,
            "weight": 0.05
          }
        ],
        "unique_terms": 19,
        "total_terms": 20
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "LLM Integration Patterns",
        "client",
        "demonstrates",
        "how",
        "integrate",
        "integration",
        "llm",
        "mcp",
        "patterns",
        "the",
        "tools"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5763636363636364,
      "overall": 0.7587878787878788
    }
  },
  {
    "text": "### Basic Client Setup  The simple-chatbot can be configured through a JSON configuration file: ``` ```",
    "metadata": {
      "chunk_id": "d16105a9fe60-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Basic Client Setup"
      ],
      "heading_text": "Basic Client Setup",
      "token_count": 20,
      "char_count": 103,
      "start_char": 0,
      "end_char": 103,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.57125,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:59:42.999512",
      "document_id": "d16105a9fe60",
      "document_name": "_modelcontextprotocol_python-sdk_9.2-client-examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk",
      "relative_path": "Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "hierarchy_path": "Basic Client Setup",
      "chunk_hash": "76cb98260d89d803",
      "content_digest": "76cb98260d89d803",
      "chunk_length": 103,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "basic",
          "client",
          "setup",
          "the",
          "simple",
          "chatbot",
          "can",
          "configured",
          "through",
          "json",
          "configuration",
          "file"
        ],
        "term_weights": [
          {
            "term": "basic",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "client",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "setup",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "chatbot",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "configured",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "file",
            "tf": 1,
            "weight": 0.083333
          }
        ],
        "unique_terms": 12,
        "total_terms": 12
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Basic Client Setup",
        "basic",
        "can",
        "chatbot",
        "client",
        "configured",
        "json",
        "setup",
        "simple",
        "the",
        "through"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.57125,
      "overall": 0.7570833333333334
    }
  },
  {
    "text": "## Tool Discovery and Execution  The client implements comprehensive tool management with LLM integration:",
    "metadata": {
      "chunk_id": "d16105a9fe60-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tool Discovery and Execution"
      ],
      "heading_text": "Tool Discovery and Execution",
      "token_count": 17,
      "char_count": 106,
      "start_char": 0,
      "end_char": 106,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.36857142857142855,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:59:42.998255",
      "document_id": "d16105a9fe60",
      "document_name": "_modelcontextprotocol_python-sdk_9.2-client-examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk",
      "relative_path": "Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "hierarchy_path": "Tool Discovery and Execution",
      "chunk_hash": "91f10c9676889d2e",
      "content_digest": "91f10c9676889d2e",
      "chunk_length": 106,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "tool",
          "discovery",
          "and",
          "execution",
          "the",
          "client",
          "implements",
          "comprehensive",
          "management",
          "with",
          "llm",
          "integration"
        ],
        "term_weights": [
          {
            "term": "tool",
            "tf": 2,
            "weight": 0.153846
          },
          {
            "term": "discovery",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "execution",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "client",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "implements",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "comprehensive",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "management",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "llm",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.076923
          }
        ],
        "unique_terms": 12,
        "total_terms": 13
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tool Discovery and Execution",
        "and",
        "client",
        "comprehensive",
        "discovery",
        "execution",
        "implements",
        "management",
        "the",
        "tool",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.36857142857142855,
      "overall": 0.6895238095238095
    }
  },
  {
    "text": "### Tool Call Protocol  The client implements a JSON-based tool calling protocol: ``` ``` The system message instructs the LLM on tool usage patterns and response formatting, ensuring consistent tool invocation and natural language result processing. Sources: [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py283-321](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L283-L321) [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py341-361](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L341-L361)",
    "metadata": {
      "chunk_id": "d16105a9fe60-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tool Call Protocol"
      ],
      "heading_text": "Tool Call Protocol",
      "token_count": 155,
      "char_count": 669,
      "start_char": 0,
      "end_char": 669,
      "semantic_score": 0.42988133430480957,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.736153846153846,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:59:42.999298",
      "document_id": "d16105a9fe60",
      "document_name": "_modelcontextprotocol_python-sdk_9.2-client-examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_filename": "_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk",
      "relative_path": "Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "hierarchy_path": "Tool Call Protocol",
      "chunk_hash": "d4066b4726295d0b",
      "content_digest": "d4066b4726295d0b",
      "chunk_length": 669,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "simple",
          "chatbot",
          "tool",
          "examples",
          "clients",
          "mcp",
          "main",
          "the",
          "protocol",
          "and",
          "https",
          "github",
          "com",
          "modelcontextprotocol",
          "python",
          "sdk",
          "blob",
          "146d7efb",
          "call",
          "client"
        ],
        "term_weights": [
          {
            "term": "simple",
            "tf": 8,
            "weight": 0.089888
          },
          {
            "term": "chatbot",
            "tf": 8,
            "weight": 0.089888
          },
          {
            "term": "tool",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "examples",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "clients",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "mcp",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "main",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.033708
          },
          {
            "term": "protocol",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "modelcontextprotocol",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "sdk",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "146d7efb",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "call",
            "tf": 1,
            "weight": 0.011236
          },
          {
            "term": "client",
            "tf": 1,
            "weight": 0.011236
          }
        ],
        "unique_terms": 48,
        "total_terms": 89
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tool Call Protocol",
        "and",
        "chatbot",
        "clients",
        "examples",
        "main",
        "mcp",
        "protocol",
        "simple",
        "the",
        "tool"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.42988133430480957,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.736153846153846,
      "overall": 0.6886783934862185
    }
  }
]