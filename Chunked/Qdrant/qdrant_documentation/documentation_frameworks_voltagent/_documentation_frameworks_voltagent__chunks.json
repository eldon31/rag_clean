[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 660,
      "end_char": 1333,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.230786",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1335,
      "end_char": 6996,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.258798",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 6998,
      "end_char": 9345,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.265521",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9347,
      "end_char": 10020,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.267555",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10022,
      "end_char": 15683,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.291012",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Frameworks](https://qdrant.tech/documentation/frameworks/) - - VoltAgent",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 608,
      "char_count": 2480,
      "start_char": 15685,
      "end_char": 18165,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.298066",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 608,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "96592eef2b1ae6ff",
      "content_digest": "96592eef2b1ae6ff",
      "chunk_length": 2480,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.109589
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.082192
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.047945
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034247
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.023973
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020548
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.006849
          }
        ],
        "unique_terms": 98,
        "total_terms": 292
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "overall": 0.8338666666666666
    }
  },
  {
    "text": "## Installation  Create a new VoltAgent project with Qdrant integration: ```bash npm create voltagent-app@latest -- --example with-qdrant cd with-qdrant ``` This command generates a fully configured project combining VoltAgent and Qdrant, including example data and two distinct agent implementation patterns. Install the dependencies: ```bash npm install ```",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Installation"
      ],
      "heading_text": "Installation",
      "token_count": 72,
      "char_count": 359,
      "start_char": 18591,
      "end_char": 18950,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7261702127659574,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.299788",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 72,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Installation",
      "chunk_hash": "0978e88ea20347d3",
      "content_digest": "0978e88ea20347d3",
      "chunk_length": 359,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "voltagent",
          "with",
          "create",
          "project",
          "bash",
          "npm",
          "example",
          "and",
          "install",
          "installation",
          "new",
          "integration",
          "app",
          "latest",
          "this",
          "command",
          "generates",
          "fully",
          "configured"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.090909
          },
          {
            "term": "voltagent",
            "tf": 3,
            "weight": 0.068182
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.068182
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "bash",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "npm",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "example",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "install",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "installation",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "new",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "app",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "latest",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "command",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "generates",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "fully",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "configured",
            "tf": 1,
            "weight": 0.022727
          }
        ],
        "unique_terms": 30,
        "total_terms": 44
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Installation",
        "and",
        "bash",
        "create",
        "example",
        "install",
        "npm",
        "project",
        "qdrant",
        "voltagent",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7261702127659574,
      "overall": 0.8087234042553191
    }
  },
  {
    "text": "## Environment Setup  Create a `.env` file with your configuration: ```env",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Environment Setup"
      ],
      "heading_text": "Environment Setup",
      "token_count": 16,
      "char_count": 74,
      "start_char": 18956,
      "end_char": 19030,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.300147",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 16,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Environment Setup",
      "chunk_hash": "328ebc934eaaf30a",
      "content_digest": "328ebc934eaaf30a",
      "chunk_length": 74,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "env",
          "environment",
          "setup",
          "create",
          "file",
          "with",
          "your",
          "configuration"
        ],
        "term_weights": [
          {
            "term": "env",
            "tf": 2,
            "weight": 0.222222
          },
          {
            "term": "environment",
            "tf": 1,
            "weight": 0.111111
          },
          {
            "term": "setup",
            "tf": 1,
            "weight": 0.111111
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.111111
          },
          {
            "term": "file",
            "tf": 1,
            "weight": 0.111111
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.111111
          },
          {
            "term": "your",
            "tf": 1,
            "weight": 0.111111
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.111111
          }
        ],
        "unique_terms": 8,
        "total_terms": 9
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Environment Setup",
        "configuration",
        "create",
        "env",
        "environment",
        "file",
        "setup",
        "with",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "# OpenAI API key for embeddings and LLM OPENAI_API_KEY=your-openai-api-key-here ``` Start your VoltAgent application: ```bash npm run dev ``` Refer to source code of example [here](https://github.com/VoltAgent/voltagent/tree/main/examples/with-qdrant).",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "OpenAI API key for embeddings and LLM"
      ],
      "heading_text": "OpenAI API key for embeddings and LLM",
      "token_count": 64,
      "char_count": 252,
      "start_char": 19188,
      "end_char": 19440,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5784615384615385,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.301196",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 64,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "OpenAI API key for embeddings and LLM",
      "chunk_hash": "fbf35a2631fb3457",
      "content_digest": "fbf35a2631fb3457",
      "chunk_length": 252,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "openai",
          "api",
          "key",
          "voltagent",
          "your",
          "here",
          "for",
          "embeddings",
          "and",
          "llm",
          "start",
          "application",
          "bash",
          "npm",
          "run",
          "dev",
          "refer",
          "source",
          "code",
          "example"
        ],
        "term_weights": [
          {
            "term": "openai",
            "tf": 3,
            "weight": 0.078947
          },
          {
            "term": "api",
            "tf": 3,
            "weight": 0.078947
          },
          {
            "term": "key",
            "tf": 3,
            "weight": 0.078947
          },
          {
            "term": "voltagent",
            "tf": 3,
            "weight": 0.078947
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "here",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "embeddings",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "llm",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "start",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "application",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "bash",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "npm",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "run",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "dev",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "refer",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "source",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.026316
          }
        ],
        "unique_terms": 28,
        "total_terms": 38
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "OpenAI API key for embeddings and LLM",
        "and",
        "api",
        "embeddings",
        "for",
        "here",
        "key",
        "llm",
        "openai",
        "voltagent",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5784615384615385,
      "overall": 0.7594871794871794
    }
  },
  {
    "text": "## How It Works\n\nThe sections below demonstrate the construction of this example and provide guidance on adapting it to your needs.",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0013",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "How It Works"
      ],
      "heading_text": "How It Works",
      "token_count": 24,
      "char_count": 131,
      "start_char": 19445,
      "end_char": 19576,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.301408",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 24,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "How It Works",
      "chunk_hash": "b8f765da75b84ddb",
      "content_digest": "b8f765da75b84ddb",
      "chunk_length": 131,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "how",
          "works",
          "sections",
          "below",
          "demonstrate",
          "construction",
          "this",
          "example",
          "and",
          "provide",
          "guidance",
          "adapting",
          "your",
          "needs"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 2,
            "weight": 0.125
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "works",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "sections",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "below",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "demonstrate",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "construction",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "guidance",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "adapting",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "your",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "needs",
            "tf": 1,
            "weight": 0.0625
          }
        ],
        "unique_terms": 15,
        "total_terms": 16
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "How It Works",
        "and",
        "below",
        "construction",
        "demonstrate",
        "example",
        "how",
        "sections",
        "the",
        "this",
        "works"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.7542424242424243
    }
  },
  {
    "text": "### Create the Qdrant Retriever  Create `src/retriever/index.ts`: ```typescript import { BaseRetriever, type BaseMessage, type RetrieveOptions } from \"@voltagent/core\"; import { QdrantClient } from \"@qdrant/js-client-rest\";  // Initialize Qdrant client const qdrant = new QdrantClient({   url: process.env.QDRANT_URL || \"http://localhost:6333\",   apiKey: process.env.QDRANT_API_KEY, });  const collectionName = \"voltagent-knowledge-base\"; ``` **Key Components Explained**:  - **Qdrant Client**: Connects to Qdrant’s REST API - **Collection**: A named container for your vectors in Qdrant - **Open Source & Cloud**: Use locally or as a managed service",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Create the Qdrant Retriever"
      ],
      "heading_text": "Create the Qdrant Retriever",
      "token_count": 172,
      "char_count": 650,
      "start_char": 19578,
      "end_char": 20228,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5361538461538461,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.303358",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 172,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Create the Qdrant Retriever",
      "chunk_hash": "60307927010a826c",
      "content_digest": "60307927010a826c",
      "chunk_length": 650,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "create",
          "retriever",
          "import",
          "type",
          "from",
          "voltagent",
          "qdrantclient",
          "rest",
          "const",
          "url",
          "process",
          "env",
          "api",
          "key",
          "the",
          "src",
          "index",
          "typescript"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 9,
            "weight": 0.123288
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "retriever",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "import",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "voltagent",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "qdrantclient",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "rest",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "const",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "url",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "env",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "api",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "src",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "index",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "typescript",
            "tf": 1,
            "weight": 0.013699
          }
        ],
        "unique_terms": 49,
        "total_terms": 73
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Create the Qdrant Retriever",
        "client",
        "create",
        "from",
        "import",
        "qdrant",
        "qdrantclient",
        "rest",
        "retriever",
        "type",
        "voltagent"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5361538461538461,
      "overall": 0.7453846153846153
    }
  },
  {
    "text": "### Initialize Collection and Sample Data  The provided example handles automatic creation and initialization of your Qdrant collection with data: ```typescript async function initializeCollection() {   try {     // Check if collection exists     let exists = false;     try {       await qdrant.getCollection(collectionName);       exists = true;       console.log(`📋 Collection \"${collectionName}\" already exists`);     } catch (error) {       console.log(`📋 Creating new collection \"${collectionName}\"...`);     }      // Create collection if it doesn't exist     if (!exists) {       await qdrant.createCollection(collectionName, {         vectors: { size: 1536, distance: \"Cosine\" },       });       console.log(`✅ Collection \"${collectionName}\" created successfully`);     }      // Check if we need to populate with sample data     const stats = await qdrant.count(collectionName);     if (stats.count === 0) {       console.log(\"📚 Populating collection with sample documents...\");       // Generate embeddings for sample documents using OpenAI       const OpenAI = await import(\"openai\");       const openai = new OpenAI.default({         apiKey: process.env.OPENAI_API_KEY!,       });       const points = [];       for (const record of sampleRecords) {         try {           const embeddingResponse = await openai.embeddings.create({             model: \"text-embedding-3-small\",             input: record.payload.text,           });           points.push({             id: record.id,             vector: embeddingResponse.data[0].embedding,             payload: record.payload,           });         } catch (error) {           console.error(`Error generating embedding for ${record.id}:`, error);         }       }       if (points.length > 0) {         await qdrant.upsert(collectionName, { points });         console.log(`✅ Successfully upserted ${points.length} documents to collection`);       }     } else {       console.log(`📊 Collection already contains ${stats.count} documents`);     }   } catch (error) {     console.error(\"Error initializing Qdrant collection:\", error);   } } ``` **What This Does**:  - Creates a Qdrant collection with cosine similarity - Generates embeddings using OpenAI’s API - Adds the embeddings and payloads to Qdrant",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Initialize Collection and Sample Data"
      ],
      "heading_text": "Initialize Collection and Sample Data",
      "token_count": 490,
      "char_count": 2266,
      "start_char": 20232,
      "end_char": 22498,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7164560669456068,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.308817",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 490,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Initialize Collection and Sample Data",
      "chunk_hash": "e14d6c3afa711443",
      "content_digest": "e14d6c3afa711443",
      "chunk_length": 2266,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "collection",
          "error",
          "qdrant",
          "console",
          "openai",
          "collectionname",
          "await",
          "log",
          "const",
          "exists",
          "points",
          "record",
          "sample",
          "data",
          "with",
          "documents",
          "embeddings",
          "and",
          "try",
          "catch"
        ],
        "term_weights": [
          {
            "term": "collection",
            "tf": 12,
            "weight": 0.057692
          },
          {
            "term": "error",
            "tf": 9,
            "weight": 0.043269
          },
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.038462
          },
          {
            "term": "console",
            "tf": 8,
            "weight": 0.038462
          },
          {
            "term": "openai",
            "tf": 8,
            "weight": 0.038462
          },
          {
            "term": "collectionname",
            "tf": 7,
            "weight": 0.033654
          },
          {
            "term": "await",
            "tf": 6,
            "weight": 0.028846
          },
          {
            "term": "log",
            "tf": 6,
            "weight": 0.028846
          },
          {
            "term": "const",
            "tf": 6,
            "weight": 0.028846
          },
          {
            "term": "exists",
            "tf": 5,
            "weight": 0.024038
          },
          {
            "term": "points",
            "tf": 5,
            "weight": 0.024038
          },
          {
            "term": "record",
            "tf": 5,
            "weight": 0.024038
          },
          {
            "term": "sample",
            "tf": 4,
            "weight": 0.019231
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.019231
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.019231
          },
          {
            "term": "documents",
            "tf": 4,
            "weight": 0.019231
          },
          {
            "term": "embeddings",
            "tf": 4,
            "weight": 0.019231
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.014423
          },
          {
            "term": "try",
            "tf": 3,
            "weight": 0.014423
          },
          {
            "term": "catch",
            "tf": 3,
            "weight": 0.014423
          }
        ],
        "unique_terms": 92,
        "total_terms": 208
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": true
      },
      "search_keywords": [
        "Initialize Collection and Sample Data",
        "await",
        "collection",
        "collectionname",
        "console",
        "const",
        "error",
        "exists",
        "log",
        "openai",
        "qdrant"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7164560669456068,
      "overall": 0.7721520223152023
    }
  },
  {
    "text": "## Further Reading  - [VoltAgent Documentation](https://voltagent.dev/docs/) - [VoltAgent Examples](https://github.com/VoltAgent/voltagent/tree/main/examples) - [VoltAgent Qdrant Official Docs](https://voltagent.dev/docs/rag/qdrant/)",
    "metadata": {
      "chunk_id": "ffa8c5c79008-0018",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "filename": "_documentation_frameworks_voltagent_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Further Reading"
      ],
      "heading_text": "Further Reading",
      "token_count": 62,
      "char_count": 233,
      "start_char": 27047,
      "end_char": 27280,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5042857142857142,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:31.322133",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 62,
      "document_id": "ffa8c5c79008",
      "document_name": "_documentation_frameworks_voltagent_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "source_filename": "_documentation_frameworks_voltagent_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_voltagent\\_documentation_frameworks_voltagent_.md",
      "hierarchy_path": "Further Reading",
      "chunk_hash": "304876c5df973735",
      "content_digest": "304876c5df973735",
      "chunk_length": 233,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "voltagent",
          "https",
          "docs",
          "dev",
          "examples",
          "qdrant",
          "further",
          "reading",
          "documentation",
          "github",
          "com",
          "tree",
          "main",
          "official",
          "rag"
        ],
        "term_weights": [
          {
            "term": "voltagent",
            "tf": 7,
            "weight": 0.25
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.107143
          },
          {
            "term": "docs",
            "tf": 3,
            "weight": 0.107143
          },
          {
            "term": "dev",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "further",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "reading",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "documentation",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "tree",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "main",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "official",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.035714
          }
        ],
        "unique_terms": 15,
        "total_terms": 28
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Further Reading",
        "dev",
        "docs",
        "documentation",
        "examples",
        "further",
        "github",
        "https",
        "qdrant",
        "reading",
        "voltagent"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5042857142857142,
      "overall": 0.6680952380952382
    }
  }
]