[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 683,
      "end_char": 1356,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.438639",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1358,
      "end_char": 7019,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.469825",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 7021,
      "end_char": 9368,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.476977",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9370,
      "end_char": 10043,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.479099",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10045,
      "end_char": 15706,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.503416",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Examples](https://qdrant.tech/documentation/examples/) - - Blog-Reading Chatbot with GPT-4o",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 616,
      "char_count": 2499,
      "start_char": 15708,
      "end_char": 18207,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.89921875,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.510614",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 616,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "7d7edcde5f5c3ecf",
      "content_digest": "7d7edcde5f5c3ecf",
      "chunk_length": 2499,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.108108
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.081081
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.077703
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.077703
          },
          {
            "term": "examples",
            "tf": 16,
            "weight": 0.054054
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.033784
          },
          {
            "term": "with",
            "tf": 10,
            "weight": 0.033784
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030405
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.023649
          },
          {
            "term": "chatbot",
            "tf": 7,
            "weight": 0.023649
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.016892
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.016892
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013514
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013514
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013514
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010135
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010135
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010135
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010135
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.006757
          }
        ],
        "unique_terms": 96,
        "total_terms": 296
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.89921875,
      "overall": 0.8330729166666666
    }
  },
  {
    "text": "# Blog-Reading Chatbot with GPT-4o  | Time: 90 min | Level: Advanced | [GitHub](https://github.com/qdrant/examples/blob/langchain-lcel-rag/langchain-lcel-rag/Langchain-LCEL-RAG-Demo.ipynb) |   | | ------------ | --------------- | --------------------------------------------------------------------------------------------------------------------- | - |  In this tutorial, you will build a RAG system that combines blog content ingestion with the capabilities of semantic search. **OpenAI’s GPT-4o LLM** is powerful, but scaling its use requires us to supply context systematically. RAG enhances the LLM’s generation of answers by retrieving relevant documents to aid the question-answering process. This setup showcases the integration of advanced search and AI language processing to improve information retrieval and generation tasks. A notebook for this tutorial is available on [GitHub](https://github.com/qdrant/examples/blob/langchain-lcel-rag/langchain-lcel-rag/Langchain-LCEL-RAG-Demo.ipynb). **Data Privacy and Sovereignty:** RAG applications often rely on sensitive or proprietary internal data. Running the entire stack within your own environment becomes crucial for maintaining control over this data. Qdrant Hybrid Cloud deployed on [Scaleway](https://www.scaleway.com/) addresses this need perfectly, offering a secure, scalable platform that still leverages the full potential of RAG. Scaleway offers serverless [Functions](https://www.scaleway.com/en/serverless-functions/) and serverless [Jobs](https://www.scaleway.com/en/serverless-jobs/), both of which are ideal for embedding creation in large-scale RAG cases.",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Blog-Reading Chatbot with GPT-4o"
      ],
      "heading_text": "Blog-Reading Chatbot with GPT-4o",
      "token_count": 343,
      "char_count": 1633,
      "start_char": 18209,
      "end_char": 19842,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7261954545454545,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.511920",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 343,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Blog-Reading Chatbot with GPT-4o",
      "chunk_hash": "726b162193b0aba4",
      "content_digest": "726b162193b0aba4",
      "chunk_length": 1633,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "rag",
          "langchain",
          "lcel",
          "the",
          "https",
          "com",
          "this",
          "scaleway",
          "github",
          "and",
          "serverless",
          "qdrant",
          "for",
          "data",
          "www",
          "blog",
          "with",
          "gpt",
          "advanced",
          "examples"
        ],
        "term_weights": [
          {
            "term": "rag",
            "tf": 11,
            "weight": 0.057592
          },
          {
            "term": "langchain",
            "tf": 6,
            "weight": 0.031414
          },
          {
            "term": "lcel",
            "tf": 6,
            "weight": 0.031414
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.031414
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.026178
          },
          {
            "term": "com",
            "tf": 5,
            "weight": 0.026178
          },
          {
            "term": "this",
            "tf": 5,
            "weight": 0.026178
          },
          {
            "term": "scaleway",
            "tf": 5,
            "weight": 0.026178
          },
          {
            "term": "github",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "serverless",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.015707
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.015707
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.015707
          },
          {
            "term": "www",
            "tf": 3,
            "weight": 0.015707
          },
          {
            "term": "blog",
            "tf": 2,
            "weight": 0.010471
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.010471
          },
          {
            "term": "gpt",
            "tf": 2,
            "weight": 0.010471
          },
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.010471
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.010471
          }
        ],
        "unique_terms": 118,
        "total_terms": 191
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Blog-Reading Chatbot with GPT-4o",
        "and",
        "com",
        "github",
        "https",
        "langchain",
        "lcel",
        "rag",
        "scaleway",
        "the",
        "this"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7261954545454545,
      "overall": 0.7753984848484848
    }
  },
  {
    "text": "## Components  - **Cloud Host:** [Scaleway on managed Kubernetes](https://www.scaleway.com/en/kubernetes-kapsule/) for compatibility with Qdrant Hybrid Cloud. - **Vector Database:** Qdrant Hybrid Cloud as the vector search engine for retrieval. - **LLM:** GPT-4o, developed by OpenAI is utilized as the generator for producing answers. - **Framework:** [LangChain](https://www.langchain.com/) for extensive RAG capabilities. > Langchain [supports a wide range of LLMs](https://python.langchain.com/docs/integrations/chat/), and GPT-4o is used as the main generator in this tutorial. You can easily swap it out for your preferred model that might be launched on your premises to complete the fully private setup. For the sake of simplicity, we used the OpenAI APIs, but LangChain makes the transition seamless.",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Components"
      ],
      "heading_text": "Components",
      "token_count": 186,
      "char_count": 809,
      "start_char": 19847,
      "end_char": 20656,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7171028037383177,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.512651",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 186,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Components",
      "chunk_hash": "45a803e3f9675393",
      "content_digest": "45a803e3f9675393",
      "chunk_length": 809,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "for",
          "langchain",
          "cloud",
          "https",
          "com",
          "scaleway",
          "kubernetes",
          "www",
          "qdrant",
          "hybrid",
          "vector",
          "gpt",
          "openai",
          "generator",
          "used",
          "your",
          "components",
          "host",
          "managed"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 7,
            "weight": 0.068627
          },
          {
            "term": "for",
            "tf": 6,
            "weight": 0.058824
          },
          {
            "term": "langchain",
            "tf": 5,
            "weight": 0.04902
          },
          {
            "term": "cloud",
            "tf": 3,
            "weight": 0.029412
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.029412
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.029412
          },
          {
            "term": "scaleway",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "kubernetes",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "www",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "gpt",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "openai",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "generator",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "used",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "components",
            "tf": 1,
            "weight": 0.009804
          },
          {
            "term": "host",
            "tf": 1,
            "weight": 0.009804
          },
          {
            "term": "managed",
            "tf": 1,
            "weight": 0.009804
          }
        ],
        "unique_terms": 70,
        "total_terms": 102
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Components",
        "cloud",
        "com",
        "for",
        "https",
        "kubernetes",
        "langchain",
        "qdrant",
        "scaleway",
        "the",
        "www"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7171028037383177,
      "overall": 0.7723676012461058
    }
  },
  {
    "text": "## Prerequisites  To prepare the environment for working with Qdrant and related libraries, it’s necessary to install all required Python packages. This can be done using Poetry, a tool for dependency management and packaging in Python. The code snippet imports various libraries essential for the tasks ahead, including `bs4` for parsing HTML and XML documents, `langchain` and its community extensions for working with language models and document loaders, and `Qdrant` for vector storage and retrieval. These imports lay the groundwork for utilizing Qdrant alongside other tools for natural language processing and machine learning tasks. Qdrant will be running on a specific URL and access will be restricted by the API key. Make sure to store them both as environment variables as well: ```shell export QDRANT_URL=\"https://qdrant.example.com\" export QDRANT_API_KEY=\"your-api-key\" ``` *Optional:* Whenever you use LangChain, you can also [configure LangSmith](https://docs.smith.langchain.com/), which will help us trace, monitor and debug LangChain applications. You can sign up for LangSmith [here](https://smith.langchain.com/). ```shell export LANGCHAIN_TRACING_V2=true export LANGCHAIN_API_KEY=\"your-api-key\" export LANGCHAIN_PROJECT=\"your-project\"  # if not specified, defaults to \"default\" ``` Now you can get started: ```python import getpass import os  import bs4 from langchain import hub from langchain_community.document_loaders import WebBaseLoader from langchain_qdrant import Qdrant from langchain_core.output_parsers import StrOutputParser from langchain_core.runnables import RunnablePassthrough from langchain_openai import ChatOpenAI, OpenAIEmbeddings from langchain_text_splitters import RecursiveCharacterTextSplitter ``` Set up the OpenAI API key: ```python os.environ[\"OPENAI_API_KEY\"] = getpass.getpass() ``` Initialize the language model: ```python llm = ChatOpenAI(model=\"gpt-4o\") ``` It is here that we configure both the Embeddings and LLM. You can replace this with your own models using Ollama or other services. Scaleway has some great [L4 GPU Instances](https://www.scaleway.com/en/l4-gpu-instance/) you can use for compute here.",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Prerequisites"
      ],
      "heading_text": "Prerequisites",
      "token_count": 479,
      "char_count": 2165,
      "start_char": 21573,
      "end_char": 23738,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7422130111524163,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.518640",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 479,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Prerequisites",
      "chunk_hash": "723695578f0c7075",
      "content_digest": "723695578f0c7075",
      "chunk_length": 2165,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "langchain",
          "and",
          "for",
          "import",
          "qdrant",
          "the",
          "api",
          "key",
          "from",
          "can",
          "you",
          "python",
          "export",
          "https",
          "com",
          "your",
          "with",
          "language",
          "will",
          "here"
        ],
        "term_weights": [
          {
            "term": "langchain",
            "tf": 15,
            "weight": 0.052083
          },
          {
            "term": "and",
            "tf": 11,
            "weight": 0.038194
          },
          {
            "term": "for",
            "tf": 10,
            "weight": 0.034722
          },
          {
            "term": "import",
            "tf": 10,
            "weight": 0.034722
          },
          {
            "term": "qdrant",
            "tf": 9,
            "weight": 0.03125
          },
          {
            "term": "the",
            "tf": 8,
            "weight": 0.027778
          },
          {
            "term": "api",
            "tf": 7,
            "weight": 0.024306
          },
          {
            "term": "key",
            "tf": 7,
            "weight": 0.024306
          },
          {
            "term": "from",
            "tf": 7,
            "weight": 0.024306
          },
          {
            "term": "can",
            "tf": 6,
            "weight": 0.020833
          },
          {
            "term": "you",
            "tf": 6,
            "weight": 0.020833
          },
          {
            "term": "python",
            "tf": 5,
            "weight": 0.017361
          },
          {
            "term": "export",
            "tf": 5,
            "weight": 0.017361
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.013889
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.013889
          },
          {
            "term": "your",
            "tf": 4,
            "weight": 0.013889
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.010417
          },
          {
            "term": "language",
            "tf": 3,
            "weight": 0.010417
          },
          {
            "term": "will",
            "tf": 3,
            "weight": 0.010417
          },
          {
            "term": "here",
            "tf": 3,
            "weight": 0.010417
          }
        ],
        "unique_terms": 147,
        "total_terms": 288
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Prerequisites",
        "and",
        "api",
        "can",
        "for",
        "from",
        "import",
        "key",
        "langchain",
        "qdrant",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7422130111524163,
      "overall": 0.7807376703841387
    }
  },
  {
    "text": "## Download and parse data  To begin working with blog post contents, the process involves loading and parsing the HTML content. This is achieved using `urllib` and `BeautifulSoup`, which are tools designed for such tasks. After the content is loaded and parsed, it is indexed using Qdrant, a powerful tool for managing and querying vector data. The code snippet demonstrates how to load, chunk, and index the contents of a blog post by specifying the URL of the blog and the specific HTML elements to parse. This step is crucial for preparing the data for further processing and analysis with Qdrant. ```python",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Download and parse data"
      ],
      "heading_text": "Download and parse data",
      "token_count": 124,
      "char_count": 611,
      "start_char": 23751,
      "end_char": 24362,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6929411764705883,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.520641",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 124,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Download and parse data",
      "chunk_hash": "44141f067c14275e",
      "content_digest": "44141f067c14275e",
      "chunk_length": 611,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "and",
          "for",
          "data",
          "blog",
          "parse",
          "with",
          "post",
          "contents",
          "html",
          "content",
          "this",
          "using",
          "qdrant",
          "download",
          "begin",
          "working",
          "process",
          "involves",
          "loading"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 9,
            "weight": 0.102273
          },
          {
            "term": "and",
            "tf": 8,
            "weight": 0.090909
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.045455
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.034091
          },
          {
            "term": "blog",
            "tf": 3,
            "weight": 0.034091
          },
          {
            "term": "parse",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "post",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "contents",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "html",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "download",
            "tf": 1,
            "weight": 0.011364
          },
          {
            "term": "begin",
            "tf": 1,
            "weight": 0.011364
          },
          {
            "term": "working",
            "tf": 1,
            "weight": 0.011364
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.011364
          },
          {
            "term": "involves",
            "tf": 1,
            "weight": 0.011364
          },
          {
            "term": "loading",
            "tf": 1,
            "weight": 0.011364
          }
        ],
        "unique_terms": 57,
        "total_terms": 88
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Download and parse data",
        "and",
        "blog",
        "contents",
        "data",
        "for",
        "html",
        "parse",
        "post",
        "the",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6929411764705883,
      "overall": 0.764313725490196
    }
  },
  {
    "text": "### Chunking data  When dealing with large documents, such as a blog post exceeding 42,000 characters, it’s crucial to manage the data efficiently for processing. Many models have a limited context window and struggle with long inputs, making it difficult to extract or find relevant information. To overcome this, the document is divided into smaller chunks. This approach enhances the model’s ability to process and retrieve the most pertinent sections of the document effectively. In this scenario, the document is split into chunks using the `RecursiveCharacterTextSplitter` with a specified chunk size and overlap. This method ensures that no critical information is lost between chunks. Following the splitting, these chunks are then indexed into Qdrant—a vector database for efficient similarity search and storage of embeddings. The `Qdrant.from_documents` function is utilized for indexing, with documents being the split chunks and embeddings generated through `OpenAIEmbeddings`. The entire process is facilitated within an in-memory database, signifying that the operations are performed without the need for persistent storage, and the collection is named “lilianweng” for reference. This chunking and indexing strategy significantly improves the management and retrieval of information from large documents, making it a practical solution for handling extensive texts in data processing workflows. ```python text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200) text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200) splits = text_splitter.split_documents(docs)  vectorstore = Qdrant.from_documents(     documents=splits,     embedding=OpenAIEmbeddings(),     collection_name=\"lilianweng\",     url=os.environ[\"QDRANT_URL\"],     api_key=os.environ[\"QDRANT_API_KEY\"], ) ```",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Chunking data"
      ],
      "heading_text": "Chunking data",
      "token_count": 361,
      "char_count": 1842,
      "start_char": 24678,
      "end_char": 26520,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.512354054054054,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.525332",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 361,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Chunking data",
      "chunk_hash": "7fb7b0846235eb4a",
      "content_digest": "7fb7b0846235eb4a",
      "chunk_length": 1842,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "and",
          "documents",
          "for",
          "this",
          "chunks",
          "chunk",
          "qdrant",
          "with",
          "data",
          "information",
          "document",
          "into",
          "split",
          "recursivecharactertextsplitter",
          "size",
          "overlap",
          "from",
          "text",
          "splitter"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 15,
            "weight": 0.067873
          },
          {
            "term": "and",
            "tf": 8,
            "weight": 0.036199
          },
          {
            "term": "documents",
            "tf": 7,
            "weight": 0.031674
          },
          {
            "term": "for",
            "tf": 6,
            "weight": 0.027149
          },
          {
            "term": "this",
            "tf": 5,
            "weight": 0.022624
          },
          {
            "term": "chunks",
            "tf": 5,
            "weight": 0.022624
          },
          {
            "term": "chunk",
            "tf": 5,
            "weight": 0.022624
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.022624
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.0181
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "information",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "into",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "split",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "recursivecharactertextsplitter",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "size",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "overlap",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "from",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "text",
            "tf": 3,
            "weight": 0.013575
          },
          {
            "term": "splitter",
            "tf": 3,
            "weight": 0.013575
          }
        ],
        "unique_terms": 127,
        "total_terms": 221
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Chunking data",
        "and",
        "chunk",
        "chunks",
        "data",
        "documents",
        "for",
        "qdrant",
        "the",
        "this",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.512354054054054,
      "overall": 0.704118018018018
    }
  },
  {
    "text": "## Next steps:\n\nWe built a solid foundation for a simple chatbot, but there is still a lot to do. If you want to make the system production-ready, you should consider implementing the mechanism into your existing stack. We recommend\n\nOur vector database can easily be hosted on [Scaleway](https://www.scaleway.com/), our trusted [Qdrant Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/) partner. This means that Qdrant can be run from your Scaleway region, but the database itself can still be managed from within Qdrant Cloud’s interface. Both products have been tested for compatibility and scalability, and we recommend their [managed Kubernetes](https://www.scaleway.com/en/kubernetes-kapsule/) service. Their French deployment regions e.g. France are excellent for network latency and data sovereignty. For hosted GPUs, try [rendering with L4 GPU instances](https://www.scaleway.com/en/l4-gpu-instance/).\n\nIf you have any questions, feel free to ask on our [Discord community](https://qdrant.to/discord).",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Next steps:"
      ],
      "heading_text": "Next steps:",
      "token_count": 225,
      "char_count": 1022,
      "start_char": 28034,
      "end_char": 29056,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7144274809160306,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.530069",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 225,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Next steps:",
      "chunk_hash": "76760d27f684c1b7",
      "content_digest": "76760d27f684c1b7",
      "chunk_length": 1022,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "scaleway",
          "https",
          "qdrant",
          "for",
          "you",
          "the",
          "our",
          "can",
          "www",
          "com",
          "cloud",
          "and",
          "but",
          "still",
          "your",
          "recommend",
          "database",
          "hosted",
          "hybrid",
          "from"
        ],
        "term_weights": [
          {
            "term": "scaleway",
            "tf": 5,
            "weight": 0.036765
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.036765
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.036765
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "you",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "our",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "can",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "www",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "cloud",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "but",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "still",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "recommend",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "hosted",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.014706
          }
        ],
        "unique_terms": 91,
        "total_terms": 136
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Next steps:",
        "can",
        "com",
        "for",
        "https",
        "our",
        "qdrant",
        "scaleway",
        "the",
        "www",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7144274809160306,
      "overall": 0.7714758269720101
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/examples/rag-chatbot-scaleway.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Blog-Reading Chatbot with GPT-4o](#blog-reading-chatbot-with-gpt-4o.md)    - [Components](#components.md)   - [Deploying Qdrant Hybrid Cloud on Scaleway](#deploying-qdrant-hybrid-cloud-on-scaleway.md)   - [Prerequisites](#prerequisites.md)   - [Download and parse data](#download-and-parse-data.md)     - [Chunking data](#chunking-data.md)   - [Retrieve and generate content](#retrieve-and-generate-content.md)     - [Invoking the RAG Chain](#invoking-the-rag-chain.md)   - [Next steps:](#next-steps.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/examples/rag-chatbot-scaleway.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "5cb4c88f5bf0-0016",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 302,
      "char_count": 1081,
      "start_char": 29058,
      "end_char": 30139,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.52685,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:25.532209",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 302,
      "document_id": "5cb4c88f5bf0",
      "document_name": "_documentation_examples_rag-chatbot-scaleway_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "source_filename": "_documentation_examples_rag-chatbot-scaleway_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_rag-chatbot-scaleway\\_documentation_examples_rag-chatbot-scaleway_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "2aee91d01adc802c",
      "content_digest": "2aee91d01adc802c",
      "chunk_length": 1081,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "page",
          "github",
          "landing",
          "https",
          "com",
          "content",
          "rag",
          "chatbot",
          "scaleway",
          "and",
          "data",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "documentation",
          "examples",
          "create"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.059259
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.051852
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.051852
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.044444
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "content",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "rag",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "chatbot",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "scaleway",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.022222
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.014815
          }
        ],
        "unique_terms": 55,
        "total_terms": 135
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "chatbot",
        "com",
        "content",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "rag",
        "scaleway"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.52685,
      "overall": 0.6756166666666666
    }
  }
]