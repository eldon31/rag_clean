[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 696,
      "end_char": 1369,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.879339",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1371,
      "end_char": 7032,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.912528",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 7034,
      "end_char": 9381,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.923737",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9383,
      "end_char": 10056,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.927064",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10058,
      "end_char": 15719,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.964553",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - Multilingual & Multimodal RAG with LlamaIndex",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 603,
      "char_count": 2452,
      "start_char": 15721,
      "end_char": 18173,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9031496062992126,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.978206",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 603,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "4156d4c48c79c8ba",
      "content_digest": "4156d4c48c79c8ba",
      "chunk_length": 2452,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "llamaindex",
          "for"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 31,
            "weight": 0.106897
          },
          {
            "term": "documentation",
            "tf": 23,
            "weight": 0.07931
          },
          {
            "term": "https",
            "tf": 22,
            "weight": 0.075862
          },
          {
            "term": "tech",
            "tf": 22,
            "weight": 0.075862
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.048276
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034483
          },
          {
            "term": "with",
            "tf": 10,
            "weight": 0.034483
          },
          {
            "term": "rag",
            "tf": 10,
            "weight": 0.034483
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.024138
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.02069
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017241
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017241
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013793
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013793
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013793
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010345
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010345
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010345
          },
          {
            "term": "llamaindex",
            "tf": 3,
            "weight": 0.010345
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010345
          }
        ],
        "unique_terms": 98,
        "total_terms": 290
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9031496062992126,
      "overall": 0.8343832020997374
    }
  },
  {
    "text": "## Overview\n\nWe often understand and share information more effectively when combining different types of data. For example, the taste of comfort food can trigger childhood memories. We might describe a song with just “pam pam clap” sounds. Instead of writing paragraphs. Sometimes, we may use emojis and stickers to express how we feel or to share complex ideas.\n\nModalities of data such as **text**, **images**, **video** and **audio** in various combinations form valuable use cases for Semantic Search applications.\n\nVector databases, being **modality-agnostic**, are perfect for building these applications.\n\nIn this simple tutorial, we are working with two simple modalities: **image** and **text** data. However, you can create a Semantic Search application with any combination of modalities if you choose the right embedding model to bridge the **semantic gap**.\n\n> The **semantic gap** refers to the difference between low-level features (aka brightness) and high-level concepts (aka cuteness).\n\nFor example, the [vdr-2b-multi-v1 model](https://huggingface.co/llamaindex/vdr-2b-multi-v1) from LlamaIndex is designed for multilingual embedding, particularly effective for visual document retrieval across multiple languages and domains. It allows for searching and querying visually rich multilingual documents without the need for OCR or other data extraction pipelines.",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Overview"
      ],
      "heading_text": "Overview",
      "token_count": 278,
      "char_count": 1380,
      "start_char": 18784,
      "end_char": 20164,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7098952879581152,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.981154",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 278,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Overview",
      "chunk_hash": "158a3f7a47452a28",
      "content_digest": "158a3f7a47452a28",
      "chunk_length": 1380,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "for",
          "and",
          "the",
          "data",
          "semantic",
          "with",
          "modalities",
          "share",
          "example",
          "can",
          "pam",
          "use",
          "text",
          "search",
          "applications",
          "are",
          "simple",
          "you",
          "embedding",
          "model"
        ],
        "term_weights": [
          {
            "term": "for",
            "tf": 8,
            "weight": 0.045977
          },
          {
            "term": "and",
            "tf": 7,
            "weight": 0.04023
          },
          {
            "term": "the",
            "tf": 7,
            "weight": 0.04023
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.017241
          },
          {
            "term": "modalities",
            "tf": 3,
            "weight": 0.017241
          },
          {
            "term": "share",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "example",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "pam",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "applications",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "simple",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.011494
          }
        ],
        "unique_terms": 125,
        "total_terms": 174
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Overview",
        "and",
        "can",
        "data",
        "example",
        "for",
        "modalities",
        "semantic",
        "share",
        "the",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7098952879581152,
      "overall": 0.7699650959860384
    }
  },
  {
    "text": "## Dataset\n\nTo make the demonstration simple, we created a tiny dataset of images and their captions for you.\n\nImages can be downloaded from [here](https://github.com/qdrant/examples/tree/master/multimodal-search/images). It’s **important** to place them in the same folder as your code/notebook, in the folder named `images`.",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Dataset"
      ],
      "heading_text": "Dataset",
      "token_count": 73,
      "char_count": 326,
      "start_char": 20347,
      "end_char": 20673,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.982520",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 73,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Dataset",
      "chunk_hash": "37d5e9ce4528504c",
      "content_digest": "37d5e9ce4528504c",
      "chunk_length": 326,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "images",
          "the",
          "dataset",
          "folder",
          "make",
          "demonstration",
          "simple",
          "created",
          "tiny",
          "and",
          "their",
          "captions",
          "for",
          "you",
          "can",
          "downloaded",
          "from",
          "here",
          "https",
          "github"
        ],
        "term_weights": [
          {
            "term": "images",
            "tf": 4,
            "weight": 0.095238
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.071429
          },
          {
            "term": "dataset",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "folder",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "make",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "demonstration",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "created",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "tiny",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "their",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "captions",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "downloaded",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "here",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.02381
          }
        ],
        "unique_terms": 35,
        "total_terms": 42
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Dataset",
        "and",
        "created",
        "dataset",
        "demonstration",
        "folder",
        "images",
        "make",
        "simple",
        "the",
        "tiny"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "overall": 0.7133333333333333
    }
  },
  {
    "text": "## Vectorize data  `LlamaIndex`’s `vdr-2b-multi-v1` model supports cross-lingual retrieval, allowing for effective searches across languages and domains. It encodes document page screenshots into dense single-vector representations, eliminating the need for OCR and other complex data extraction processes. Let’s embed the images and their captions in the **shared embedding space**. ```python from llama_index.embeddings.huggingface import HuggingFaceEmbedding  model = HuggingFaceEmbedding(     model_name=\"llamaindex/vdr-2b-multi-v1\",     device=\"cpu\",  # \"mps\" for mac, \"cuda\" for nvidia GPUs     trust_remote_code=True, )  documents = [     {\"caption\": \"An image about plane emergency safety.\", \"image\": \"images/image-1.png\"},     {\"caption\": \"An image about airplane components.\", \"image\": \"images/image-2.png\"},     {\"caption\": \"An image about COVID safety restrictions.\", \"image\": \"images/image-3.png\"},     {\"caption\": \"An confidential image about UFO sightings.\", \"image\": \"images/image-4.png\"},     {\"caption\": \"An image about unusual footprints on Aralar 2011.\", \"image\": \"images/image-5.png\"}, ]  text_embeddings = model.get_text_embedding_batch([doc[\"caption\"] for doc in documents]) image_embeddings = model.get_image_embedding_batch([doc[\"image\"] for doc in documents]) ```",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Vectorize data"
      ],
      "heading_text": "Vectorize data",
      "token_count": 306,
      "char_count": 1289,
      "start_char": 20675,
      "end_char": 21964,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5067253731343283,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.985943",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 306,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Vectorize data",
      "chunk_hash": "467e6e0f0d2ec09e",
      "content_digest": "467e6e0f0d2ec09e",
      "chunk_length": 1289,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "image",
          "for",
          "images",
          "caption",
          "model",
          "about",
          "png",
          "doc",
          "and",
          "the",
          "embedding",
          "embeddings",
          "documents",
          "data",
          "llamaindex",
          "vdr",
          "multi",
          "huggingfaceembedding",
          "safety",
          "text"
        ],
        "term_weights": [
          {
            "term": "image",
            "tf": 18,
            "weight": 0.118421
          },
          {
            "term": "for",
            "tf": 6,
            "weight": 0.039474
          },
          {
            "term": "images",
            "tf": 6,
            "weight": 0.039474
          },
          {
            "term": "caption",
            "tf": 6,
            "weight": 0.039474
          },
          {
            "term": "model",
            "tf": 5,
            "weight": 0.032895
          },
          {
            "term": "about",
            "tf": 5,
            "weight": 0.032895
          },
          {
            "term": "png",
            "tf": 5,
            "weight": 0.032895
          },
          {
            "term": "doc",
            "tf": 4,
            "weight": 0.026316
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.019737
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.019737
          },
          {
            "term": "embedding",
            "tf": 3,
            "weight": 0.019737
          },
          {
            "term": "embeddings",
            "tf": 3,
            "weight": 0.019737
          },
          {
            "term": "documents",
            "tf": 3,
            "weight": 0.019737
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.013158
          },
          {
            "term": "llamaindex",
            "tf": 2,
            "weight": 0.013158
          },
          {
            "term": "vdr",
            "tf": 2,
            "weight": 0.013158
          },
          {
            "term": "multi",
            "tf": 2,
            "weight": 0.013158
          },
          {
            "term": "huggingfaceembedding",
            "tf": 2,
            "weight": 0.013158
          },
          {
            "term": "safety",
            "tf": 2,
            "weight": 0.013158
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.013158
          }
        ],
        "unique_terms": 86,
        "total_terms": 152
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Vectorize data",
        "about",
        "and",
        "caption",
        "doc",
        "for",
        "image",
        "images",
        "model",
        "png",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5067253731343283,
      "overall": 0.7022417910447761
    }
  },
  {
    "text": "## Upload data to Qdrant  1. **Create a client object for Qdrant**. ```python from qdrant_client import QdrantClient, models",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Upload data to Qdrant"
      ],
      "heading_text": "Upload data to Qdrant",
      "token_count": 36,
      "char_count": 124,
      "start_char": 21968,
      "end_char": 22092,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.987096",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 36,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Upload data to Qdrant",
      "chunk_hash": "b1b5d2f02c4fb6b4",
      "content_digest": "b1b5d2f02c4fb6b4",
      "chunk_length": 124,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "upload",
          "data",
          "create",
          "object",
          "for",
          "python",
          "from",
          "import",
          "qdrantclient",
          "models"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.2
          },
          {
            "term": "client",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "upload",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "object",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "import",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "qdrantclient",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 12,
        "total_terms": 15
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Upload data to Qdrant",
        "client",
        "create",
        "data",
        "for",
        "from",
        "import",
        "object",
        "python",
        "qdrant",
        "upload"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "# docker run -p 6333:6333 qdrant/qdrant client = QdrantClient(url=\"http://localhost:6333/\") ``` 2. **Create a new collection for the images with captions**. ```python COLLECTION_NAME = \"llama-multi\"  if not client.collection_exists(COLLECTION_NAME):     client.create_collection(         collection_name=COLLECTION_NAME,         vectors_config={             \"image\": models.VectorParams(size=len(image_embeddings[0]), distance=models.Distance.COSINE),             \"text\": models.VectorParams(size=len(text_embeddings[0]), distance=models.Distance.COSINE),         }     ) ``` 3. **Upload our images with captions to the Collection**. ```python client.upload_points(     collection_name=COLLECTION_NAME,     points=[         models.PointStruct(             id=idx,             vector={                 \"text\": text_embeddings[idx],                 \"image\": image_embeddings[idx],             },             payload=doc         )         for idx, doc in enumerate(documents)     ] ) ```",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "docker run -p 6333:6333 qdrant/qdrant"
      ],
      "heading_text": "docker run -p 6333:6333 qdrant/qdrant",
      "token_count": 215,
      "char_count": 984,
      "start_char": 22095,
      "end_char": 23079,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.990034",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 215,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "docker run -p 6333:6333 qdrant/qdrant",
      "chunk_hash": "b92348dd995ff256",
      "content_digest": "b92348dd995ff256",
      "chunk_length": 984,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "collection",
          "name",
          "models",
          "client",
          "image",
          "embeddings",
          "distance",
          "text",
          "idx",
          "6333",
          "qdrant",
          "create",
          "for",
          "the",
          "images",
          "with",
          "captions",
          "python",
          "vectorparams",
          "size"
        ],
        "term_weights": [
          {
            "term": "collection",
            "tf": 10,
            "weight": 0.103093
          },
          {
            "term": "name",
            "tf": 6,
            "weight": 0.061856
          },
          {
            "term": "models",
            "tf": 5,
            "weight": 0.051546
          },
          {
            "term": "client",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "image",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "embeddings",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "distance",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "text",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "idx",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "6333",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "images",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "captions",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "vectorparams",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "size",
            "tf": 2,
            "weight": 0.020619
          }
        ],
        "unique_terms": 44,
        "total_terms": 97
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "6333",
        "client",
        "collection",
        "distance",
        "docker run -p 6333:6333 qdrant/qdrant",
        "embeddings",
        "idx",
        "image",
        "models",
        "name",
        "text"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "overall": 0.71
    }
  },
  {
    "text": "### Text-to-Image  Let’s see what image we will get to the query “*Adventures on snow hills*”. ```python from PIL import Image  find_image = model.get_query_embedding(\"Adventures on snow hills\")  Image.open(client.query_points(     collection_name=COLLECTION_NAME,     query=find_image,     using=\"image\",     with_payload=[\"image\"],     limit=1 ).points[0].payload['image']) ``` Let’s also run the same query in Italian and compare the results.",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Text-to-Image"
      ],
      "heading_text": "Text-to-Image",
      "token_count": 108,
      "char_count": 445,
      "start_char": 23096,
      "end_char": 23541,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5453191489361702,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.992497",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 108,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Text-to-Image",
      "chunk_hash": "933c8442fa998769",
      "content_digest": "933c8442fa998769",
      "chunk_length": 445,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "image",
          "query",
          "the",
          "let",
          "get",
          "adventures",
          "snow",
          "hills",
          "find",
          "points",
          "collection",
          "name",
          "payload",
          "text",
          "see",
          "what",
          "will",
          "python",
          "from",
          "pil"
        ],
        "term_weights": [
          {
            "term": "image",
            "tf": 9,
            "weight": 0.152542
          },
          {
            "term": "query",
            "tf": 5,
            "weight": 0.084746
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "let",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "get",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "adventures",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "snow",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "hills",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "find",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "name",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "text",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "see",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "what",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "will",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "pil",
            "tf": 1,
            "weight": 0.016949
          }
        ],
        "unique_terms": 35,
        "total_terms": 59
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Text-to-Image",
        "adventures",
        "find",
        "get",
        "hills",
        "image",
        "let",
        "points",
        "query",
        "snow",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5453191489361702,
      "overall": 0.7151063829787233
    }
  },
  {
    "text": "### Multilingual Search  Now, let’s do a multilingual search using an Italian query: ```python Image.open(client.query_points(     collection_name=COLLECTION_NAME,     query=model.get_query_embedding(\"Avventure sulle colline innevate\"),     using=\"image\",     with_payload=[\"image\"],     limit=1 ).points[0].payload['image']) ``` **Response:**",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Multilingual Search"
      ],
      "heading_text": "Multilingual Search",
      "token_count": 80,
      "char_count": 343,
      "start_char": 23545,
      "end_char": 23888,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.566923076923077,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.993934",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 80,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Multilingual Search",
      "chunk_hash": "ef2d6493d6a50465",
      "content_digest": "ef2d6493d6a50465",
      "chunk_length": 343,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "query",
          "image",
          "multilingual",
          "search",
          "using",
          "points",
          "collection",
          "name",
          "payload",
          "now",
          "let",
          "italian",
          "python",
          "open",
          "client",
          "model",
          "get",
          "embedding",
          "avventure",
          "sulle"
        ],
        "term_weights": [
          {
            "term": "query",
            "tf": 4,
            "weight": 0.105263
          },
          {
            "term": "image",
            "tf": 4,
            "weight": 0.105263
          },
          {
            "term": "multilingual",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "name",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "now",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "let",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "italian",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "open",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "client",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "get",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "embedding",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "avventure",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "sulle",
            "tf": 1,
            "weight": 0.026316
          }
        ],
        "unique_terms": 25,
        "total_terms": 38
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Multilingual Search",
        "collection",
        "image",
        "multilingual",
        "name",
        "now",
        "payload",
        "points",
        "query",
        "search",
        "using"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.566923076923077,
      "overall": 0.7223076923076923
    }
  },
  {
    "text": "### Image-to-Text  Now, let’s do a reverse search with the following image: ```python client.query_points(     collection_name=COLLECTION_NAME,     query=model.get_image_embedding(\"images/image-2.png\"),       # Now we are searching only among text vectors with our image query     using=\"text\",     with_payload=[\"caption\"],     limit=1 ).points[0].payload['caption'] ``` **Response:** ```text 'An image about plane emergency safety.' ```",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0016",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Image-to-Text"
      ],
      "heading_text": "Image-to-Text",
      "token_count": 99,
      "char_count": 438,
      "start_char": 23892,
      "end_char": 24330,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5690697674418604,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.995257",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 99,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Image-to-Text",
      "chunk_hash": "c6c74c21bfcde460",
      "content_digest": "c6c74c21bfcde460",
      "chunk_length": 438,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "image",
          "text",
          "with",
          "query",
          "now",
          "points",
          "collection",
          "name",
          "payload",
          "caption",
          "let",
          "reverse",
          "search",
          "the",
          "following",
          "python",
          "client",
          "model",
          "get",
          "embedding"
        ],
        "term_weights": [
          {
            "term": "image",
            "tf": 6,
            "weight": 0.113208
          },
          {
            "term": "text",
            "tf": 4,
            "weight": 0.075472
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.056604
          },
          {
            "term": "query",
            "tf": 3,
            "weight": 0.056604
          },
          {
            "term": "now",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "name",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "caption",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "let",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "reverse",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "search",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "following",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "client",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "get",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "embedding",
            "tf": 1,
            "weight": 0.018868
          }
        ],
        "unique_terms": 35,
        "total_terms": 53
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Image-to-Text",
        "caption",
        "collection",
        "image",
        "name",
        "now",
        "payload",
        "points",
        "query",
        "text",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5690697674418604,
      "overall": 0.7230232558139534
    }
  },
  {
    "text": "## Next steps\n\nUse cases of even just Image & Text Multimodal Search are countless: E-Commerce, Media Management, Content Recommendation, Emotion Recognition Systems, Biomedical Image Retrieval, Spoken Sign Language Transcription, etc.\n\nImagine a scenario: a user wants to find a product similar to a picture they have, but they also have specific textual requirements, like “*in beige colour*”. You can search using just texts or images and combine their embeddings in a **late fusion manner** (summing and weighting might work surprisingly well).\n\nMoreover, using [Discovery Search](https://qdrant.tech/articles/discovery-search/) with both modalities, you can provide users with information that is impossible to retrieve unimodally!\n\nJoin our [Discord community](https://qdrant.to/discord), where we talk about vector search and similarity learning, experiment, and have fun!",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0017",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Next steps"
      ],
      "heading_text": "Next steps",
      "token_count": 183,
      "char_count": 879,
      "start_char": 24335,
      "end_char": 25214,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7416949152542373,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.996277",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 183,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Next steps",
      "chunk_hash": "d0ee9b61fe69214a",
      "content_digest": "d0ee9b61fe69214a",
      "chunk_length": 879,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "search",
          "and",
          "have",
          "just",
          "image",
          "they",
          "you",
          "can",
          "using",
          "discovery",
          "https",
          "qdrant",
          "with",
          "discord",
          "next",
          "steps",
          "use",
          "cases",
          "even",
          "text"
        ],
        "term_weights": [
          {
            "term": "search",
            "tf": 5,
            "weight": 0.045045
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.036036
          },
          {
            "term": "have",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "just",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "image",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "they",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "discovery",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "next",
            "tf": 1,
            "weight": 0.009009
          },
          {
            "term": "steps",
            "tf": 1,
            "weight": 0.009009
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.009009
          },
          {
            "term": "cases",
            "tf": 1,
            "weight": 0.009009
          },
          {
            "term": "even",
            "tf": 1,
            "weight": 0.009009
          },
          {
            "term": "text",
            "tf": 1,
            "weight": 0.009009
          }
        ],
        "unique_terms": 91,
        "total_terms": 111
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Next steps",
        "and",
        "can",
        "discovery",
        "have",
        "image",
        "just",
        "search",
        "they",
        "using",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7416949152542373,
      "overall": 0.8138983050847456
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/multimodal-search.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Multilingual & Multimodal Search with LlamaIndex](#multilingual--multimodal-search-with-llamaindex.md)    - [Overview](#overview.md)    - [Setup](#setup.md)    - [Dataset](#dataset.md)    - [Vectorize data](#vectorize-data.md)    - [Upload data to Qdrant](#upload-data-to-qdrant.md)    - [Search](#search.md)      - [Text-to-Image](#text-to-image.md)     - [Multilingual Search](#multilingual-search.md)     - [Image-to-Text](#image-to-text.md)    - [Next steps](#next-steps.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/multimodal-search.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "d67c35cecfd6-0018",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "filename": "_documentation_multimodal-search_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 297,
      "char_count": 1032,
      "start_char": 25216,
      "end_char": 26248,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.515,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:33.999362",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 297,
      "document_id": "d67c35cecfd6",
      "document_name": "_documentation_multimodal-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "source_filename": "_documentation_multimodal-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_multimodal-search\\_documentation_multimodal-search_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "cf97e6defc383450",
      "content_digest": "cf97e6defc383450",
      "chunk_length": 1032,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "search",
          "page",
          "github",
          "landing",
          "https",
          "com",
          "multimodal",
          "multilingual",
          "data",
          "text",
          "image",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "create"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.067227
          },
          {
            "term": "search",
            "tf": 8,
            "weight": 0.067227
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.058824
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.058824
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.05042
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "multimodal",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "multilingual",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "text",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "image",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.02521
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.016807
          }
        ],
        "unique_terms": 45,
        "total_terms": 119
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "com",
        "data",
        "github",
        "https",
        "landing",
        "multilingual",
        "multimodal",
        "page",
        "qdrant",
        "search"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.515,
      "overall": 0.6716666666666667
    }
  }
]