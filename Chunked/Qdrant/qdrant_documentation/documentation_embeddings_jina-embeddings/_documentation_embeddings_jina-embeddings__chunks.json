[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "476d74c6528d-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 666,
      "end_char": 1339,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.675045",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "476d74c6528d-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1341,
      "end_char": 7002,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.701018",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "476d74c6528d-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 7004,
      "end_char": 9351,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.710532",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "476d74c6528d-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9353,
      "end_char": 10026,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.715317",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "476d74c6528d-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10028,
      "end_char": 15689,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.749414",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Embeddings](https://qdrant.tech/documentation/embeddings/) - - Jina Embeddings",
    "metadata": {
      "chunk_id": "476d74c6528d-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 611,
      "char_count": 2486,
      "start_char": 15691,
      "end_char": 18177,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9023809523809525,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.759158",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 611,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "20bf3c6668e579cc",
      "content_digest": "20bf3c6668e579cc",
      "chunk_length": 2486,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "embeddings"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.109215
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.081911
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.078498
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.078498
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.047782
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.03413
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030717
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030717
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.023891
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020478
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017065
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017065
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013652
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013652
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013652
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010239
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010239
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010239
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010239
          },
          {
            "term": "embeddings",
            "tf": 3,
            "weight": 0.010239
          }
        ],
        "unique_terms": 98,
        "total_terms": 293
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9023809523809525,
      "overall": 0.8341269841269842
    }
  },
  {
    "text": "## Technical Summary  | Model                      | Dimension                                    | Language                         | MRL (matryoshka) | Context                | | -------------------------- | -------------------------------------------- | -------------------------------- | ---------------- | ---------------------- | | **jina-embeddings-v4**     | **2048 (single-vector), 128 (multi-vector)** | **Multilingual (30+)**           | **Yes**          | **32768 + Text/Image** | | jina-clip-v2               | 1024                                         | Multilingual (100+, focus on 30) | Yes              | Text/Image             | | jina-embeddings-v3         | 1024                                         | Multilingual (89 languages)      | Yes              | 8192                   | | jina-embeddings-v2-base-en | 768                                          | English                          | No               | 8192                   | | jina-embeddings-v2-base-de | 768                                          | German & English                 | No               | 8192                   | | jina-embeddings-v2-base-es | 768                                          | Spanish & English                | No               | 8192                   | | jina-embeddings-v2-base-zh | 768                                          | Chinese & English                | No               | 8192                   |  > Jina recommends using `jina-embeddings-v4` for all tasks. On top of the backbone, `jina-embeddings-v4` has been trained with 5 task-specific adapters for different embedding uses. Include `task` in your request to optimize your downstream application:  - **retrieval.query**: Used to encode user queries or questions in retrieval tasks. - **retrieval.passage**: Used to encode large documents in retrieval tasks at indexing time. - **code.query**: Used to encode user queries or questions in code related retrieval tasks. - **code.passage**: Used to encode large documents in code related retrieval tasks at indexing time. - **text-matching**: Used to encode text for similarity matching, such as measuring similarity between two sentences. Similarly, `jina-embeddings-v3` has been trained with 5 task-specific adapters for different embedding uses. Include `task` in your request to optimize your downstream application:  - **retrieval.query**: Used to encode user queries or questions in retrieval tasks. - **retrieval.passage**: Used to encode large documents in retrieval tasks at indexing time. - **classification**: Used to encode text for text classification tasks. - **text-matching**: Used to encode text for similarity matching, such as measuring similarity between two sentences. - **separation**: Used for clustering or reranking tasks. `jina-embeddings-v4`, `jina-embeddings-v3` and `jina-clip-v2` support **Matryoshka Representation Learning**, allowing users to control the embedding dimension with minimal performance loss. Include `dimensions` in your request to select the desired dimension. By default, **dimensions** is set to 2048 (`jina-embeddings-v4`) or 1024 (`jina-embeddings-v3` and `jina-clip-v2`), and a number between 256 and 2048 is recommended. You can reference the table below for hints on dimension vs. performance for the `jina-embeddings-v3` model. Similar results hold for the others. | Dimension                                | 32    | 64    | 128   | 256   | 512   | 768  | 1024  | | ---------------------------------------- | ----- | ----- | ----- | ----- | ----- | ---- | ----- | | Average Retrieval Performance (nDCG\\@10) | 52.54 | 58.54 | 61.64 | 62.72 | 63.16 | 63.3 | 63.35 |  `jina-embeddings-v4` and `jina-embeddings-v3` supports [Late Chunking](https://jina.ai/news/late-chunking-in-long-context-embedding-models/), the technique to leverage the model’s long-context capabilities for generating contextual chunk embeddings. Include `late_chunking=True` in your request to enable contextual chunked representation. When set to true, Jina AI API will concatenate all sentences in the input field and feed them as a single string to the model. Internally, the model embeds this long concatenated string and then performs late chunking, returning a list of embeddings that matches the size of the input list.",
    "metadata": {
      "chunk_id": "476d74c6528d-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Technical Summary"
      ],
      "heading_text": "Technical Summary",
      "token_count": 937,
      "char_count": 4291,
      "start_char": 18452,
      "end_char": 22743,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6281553398058253,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.761991",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 937,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Technical Summary",
      "chunk_hash": "e9b546e17cacc691",
      "content_digest": "e9b546e17cacc691",
      "chunk_length": 4291,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "jina",
          "embeddings",
          "the",
          "for",
          "retrieval",
          "used",
          "tasks",
          "encode",
          "text",
          "and",
          "your",
          "model",
          "dimension",
          "8192",
          "768",
          "1024",
          "base",
          "english",
          "task",
          "embedding"
        ],
        "term_weights": [
          {
            "term": "jina",
            "tf": 22,
            "weight": 0.057592
          },
          {
            "term": "embeddings",
            "tf": 18,
            "weight": 0.04712
          },
          {
            "term": "the",
            "tf": 13,
            "weight": 0.034031
          },
          {
            "term": "for",
            "tf": 11,
            "weight": 0.028796
          },
          {
            "term": "retrieval",
            "tf": 11,
            "weight": 0.028796
          },
          {
            "term": "used",
            "tf": 10,
            "weight": 0.026178
          },
          {
            "term": "tasks",
            "tf": 9,
            "weight": 0.02356
          },
          {
            "term": "encode",
            "tf": 9,
            "weight": 0.02356
          },
          {
            "term": "text",
            "tf": 8,
            "weight": 0.020942
          },
          {
            "term": "and",
            "tf": 7,
            "weight": 0.018325
          },
          {
            "term": "your",
            "tf": 6,
            "weight": 0.015707
          },
          {
            "term": "model",
            "tf": 5,
            "weight": 0.013089
          },
          {
            "term": "dimension",
            "tf": 5,
            "weight": 0.013089
          },
          {
            "term": "8192",
            "tf": 5,
            "weight": 0.013089
          },
          {
            "term": "768",
            "tf": 5,
            "weight": 0.013089
          },
          {
            "term": "1024",
            "tf": 4,
            "weight": 0.010471
          },
          {
            "term": "base",
            "tf": 4,
            "weight": 0.010471
          },
          {
            "term": "english",
            "tf": 4,
            "weight": 0.010471
          },
          {
            "term": "task",
            "tf": 4,
            "weight": 0.010471
          },
          {
            "term": "embedding",
            "tf": 4,
            "weight": 0.010471
          }
        ],
        "unique_terms": 149,
        "total_terms": 382
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Technical Summary",
        "and",
        "embeddings",
        "encode",
        "for",
        "jina",
        "retrieval",
        "tasks",
        "text",
        "the",
        "used"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6281553398058253,
      "overall": 0.776051779935275
    }
  },
  {
    "text": "## Example",
    "metadata": {
      "chunk_id": "476d74c6528d-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Example"
      ],
      "heading_text": "Example",
      "token_count": 2,
      "char_count": 10,
      "start_char": 22749,
      "end_char": 22759,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.762900",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 2,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Example",
      "chunk_hash": "09a9cecaabaf6904",
      "content_digest": "09a9cecaabaf6904",
      "chunk_length": 10,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "example"
        ],
        "term_weights": [
          {
            "term": "example",
            "tf": 1,
            "weight": 1.0
          }
        ],
        "unique_terms": 1,
        "total_terms": 1
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Example",
        "example"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### Text-to-Text Retrieval  The code below demonstrates how to use `jina-embeddings-v4` with Qdrant: ```python import requests  import qdrant_client from qdrant_client.models import Distance, VectorParams, Batch",
    "metadata": {
      "chunk_id": "476d74c6528d-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Text-to-Text Retrieval"
      ],
      "heading_text": "Text-to-Text Retrieval",
      "token_count": 52,
      "char_count": 211,
      "start_char": 22761,
      "end_char": 22972,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.765,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.763428",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 52,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Text-to-Text Retrieval",
      "chunk_hash": "b73302adb95d0bd5",
      "content_digest": "b73302adb95d0bd5",
      "chunk_length": 211,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "import",
          "text",
          "client",
          "retrieval",
          "the",
          "code",
          "below",
          "demonstrates",
          "how",
          "use",
          "jina",
          "embeddings",
          "with",
          "python",
          "requests",
          "from",
          "models",
          "distance",
          "vectorparams"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.111111
          },
          {
            "term": "import",
            "tf": 3,
            "weight": 0.111111
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "client",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "retrieval",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "below",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "demonstrates",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "jina",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "embeddings",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "requests",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "distance",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "vectorparams",
            "tf": 1,
            "weight": 0.037037
          }
        ],
        "unique_terms": 21,
        "total_terms": 27
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Text-to-Text Retrieval",
        "below",
        "client",
        "code",
        "demonstrates",
        "how",
        "import",
        "qdrant",
        "retrieval",
        "text",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.765,
      "overall": 0.7883333333333332
    }
  },
  {
    "text": "# Provide Jina API key and choose one of the available models.\nJINA_API_KEY = \"jina_xxxxxxxxxxx\"\nMODEL = \"jina-embeddings-v4\"\nDIMENSIONS = 2048 # Or choose your desired output vector dimensionality.\nTASK = 'retrieval.passage' # For indexing, or set to retrieval.query for querying",
    "metadata": {
      "chunk_id": "476d74c6528d-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Provide Jina API key and choose one of the available models."
      ],
      "heading_text": "Provide Jina API key and choose one of the available models.",
      "token_count": 73,
      "char_count": 280,
      "start_char": 22975,
      "end_char": 23255,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5314634146341464,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.763749",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 73,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Provide Jina API key and choose one of the available models.",
      "chunk_hash": "a3fcc575fce30407",
      "content_digest": "a3fcc575fce30407",
      "chunk_length": 280,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "jina",
          "api",
          "key",
          "choose",
          "retrieval",
          "for",
          "provide",
          "and",
          "one",
          "the",
          "available",
          "models",
          "xxxxxxxxxxx",
          "model",
          "embeddings",
          "dimensions",
          "2048",
          "your",
          "desired",
          "output"
        ],
        "term_weights": [
          {
            "term": "jina",
            "tf": 4,
            "weight": 0.111111
          },
          {
            "term": "api",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "choose",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "retrieval",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "one",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "available",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "xxxxxxxxxxx",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "embeddings",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "dimensions",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "2048",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "your",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "desired",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "output",
            "tf": 1,
            "weight": 0.027778
          }
        ],
        "unique_terms": 28,
        "total_terms": 36
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Provide Jina API key and choose one of the available models.",
        "and",
        "api",
        "choose",
        "for",
        "jina",
        "key",
        "one",
        "provide",
        "retrieval",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5314634146341464,
      "overall": 0.6104878048780488
    }
  },
  {
    "text": "# Get embeddings from the API url = \"https://api.jina.ai/v1/embeddings\"  headers = {     \"Content-Type\": \"application/json\",     \"Authorization\": f\"Bearer {JINA_API_KEY}\", }  data = {     \"input\": [\"Your text string goes here\", \"You can send multiple texts\"],     \"model\": MODEL,     \"dimensions\": DIMENSIONS,     \"task\": TASK,     \"late_chunking\": True, }  response = requests.post(url, headers=headers, json=data) embeddings = [d[\"embedding\"] for d in response.json()[\"data\"]]",
    "metadata": {
      "chunk_id": "476d74c6528d-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Get embeddings from the API"
      ],
      "heading_text": "Get embeddings from the API",
      "token_count": 125,
      "char_count": 478,
      "start_char": 23257,
      "end_char": 23735,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.550377358490566,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.764434",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 125,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Get embeddings from the API",
      "chunk_hash": "d5b1bc9062302617",
      "content_digest": "d5b1bc9062302617",
      "chunk_length": 478,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "embeddings",
          "api",
          "headers",
          "json",
          "data",
          "url",
          "jina",
          "model",
          "dimensions",
          "task",
          "response",
          "get",
          "from",
          "the",
          "https",
          "content",
          "type",
          "application",
          "authorization",
          "bearer"
        ],
        "term_weights": [
          {
            "term": "embeddings",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "api",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "headers",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "json",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "url",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "jina",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "dimensions",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "task",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "response",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "get",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "content",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "application",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "authorization",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "bearer",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 39,
        "total_terms": 55
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Get embeddings from the API",
        "api",
        "data",
        "dimensions",
        "embeddings",
        "headers",
        "jina",
        "json",
        "model",
        "task",
        "url"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.550377358490566,
      "overall": 0.7167924528301887
    }
  },
  {
    "text": "### Text-to-Image Retrieval  The code below demonstrates how to use `jina-embeddings-v4` with Qdrant: ```python import requests from qdrant_client import QdrantClient from qdrant_client.models import Distance, VectorParams, PointStruct",
    "metadata": {
      "chunk_id": "476d74c6528d-0013",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Text-to-Image Retrieval"
      ],
      "heading_text": "Text-to-Image Retrieval",
      "token_count": 57,
      "char_count": 235,
      "start_char": 24121,
      "end_char": 24356,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7553846153846154,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.765631",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 57,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Text-to-Image Retrieval",
      "chunk_hash": "a5c7df4c105a7f0b",
      "content_digest": "a5c7df4c105a7f0b",
      "chunk_length": 235,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "import",
          "from",
          "client",
          "text",
          "image",
          "retrieval",
          "the",
          "code",
          "below",
          "demonstrates",
          "how",
          "use",
          "jina",
          "embeddings",
          "with",
          "python",
          "requests",
          "qdrantclient",
          "models"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.103448
          },
          {
            "term": "import",
            "tf": 3,
            "weight": 0.103448
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "client",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "text",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "image",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "retrieval",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "below",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "demonstrates",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "jina",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "embeddings",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "requests",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "qdrantclient",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.034483
          }
        ],
        "unique_terms": 23,
        "total_terms": 29
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Text-to-Image Retrieval",
        "below",
        "client",
        "code",
        "from",
        "image",
        "import",
        "qdrant",
        "retrieval",
        "text",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7553846153846154,
      "overall": 0.785128205128205
    }
  },
  {
    "text": "# Provide your Jina API key and choose the model.\nJINA_API_KEY = \"jina_xxxxxxxxxxx\"\nMODEL = \"jina-embeddings-v4\"\nDIMENSIONS = 2048  # Set the desired output vector dimensionality.",
    "metadata": {
      "chunk_id": "476d74c6528d-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Provide your Jina API key and choose the model."
      ],
      "heading_text": "Provide your Jina API key and choose the model.",
      "token_count": 51,
      "char_count": 179,
      "start_char": 24359,
      "end_char": 24538,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5438461538461539,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.765896",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 51,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Provide your Jina API key and choose the model.",
      "chunk_hash": "56364b6c74cf043b",
      "content_digest": "56364b6c74cf043b",
      "chunk_length": 179,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "jina",
          "api",
          "key",
          "the",
          "model",
          "provide",
          "your",
          "and",
          "choose",
          "xxxxxxxxxxx",
          "embeddings",
          "dimensions",
          "2048",
          "set",
          "desired",
          "output",
          "vector",
          "dimensionality"
        ],
        "term_weights": [
          {
            "term": "jina",
            "tf": 4,
            "weight": 0.16
          },
          {
            "term": "api",
            "tf": 2,
            "weight": 0.08
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.08
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.08
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.08
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "your",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "choose",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "xxxxxxxxxxx",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "embeddings",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "dimensions",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "2048",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "desired",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "output",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.04
          },
          {
            "term": "dimensionality",
            "tf": 1,
            "weight": 0.04
          }
        ],
        "unique_terms": 18,
        "total_terms": 25
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Provide your Jina API key and choose the model.",
        "and",
        "api",
        "choose",
        "jina",
        "key",
        "model",
        "provide",
        "the",
        "xxxxxxxxxxx",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5438461538461539,
      "overall": 0.7146153846153845
    }
  },
  {
    "text": "# Get embeddings from the Jina API url = \"https://api.jina.ai/v1/embeddings\" headers = {     \"Content-Type\": \"application/json\",     \"Authorization\": f\"Bearer {JINA_API_KEY}\", } data = {     \"input\": [         {\"text\": text_input},         {\"image\": image_url},     ],     \"model\": MODEL,     \"dimensions\": DIMENSIONS, }  response = requests.post(url, headers=headers, json=data) response_data = response.json()[\"data\"]",
    "metadata": {
      "chunk_id": "476d74c6528d-0016",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Get embeddings from the Jina API"
      ],
      "heading_text": "Get embeddings from the Jina API",
      "token_count": 107,
      "char_count": 419,
      "start_char": 24676,
      "end_char": 25095,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.766638",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 107,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Get embeddings from the Jina API",
      "chunk_hash": "5f59e3d4907fd006",
      "content_digest": "5f59e3d4907fd006",
      "chunk_length": 419,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "data",
          "jina",
          "api",
          "url",
          "headers",
          "json",
          "response",
          "embeddings",
          "input",
          "text",
          "image",
          "model",
          "dimensions",
          "get",
          "from",
          "the",
          "https",
          "content",
          "type",
          "application"
        ],
        "term_weights": [
          {
            "term": "data",
            "tf": 4,
            "weight": 0.086957
          },
          {
            "term": "jina",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "api",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "url",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "headers",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "json",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "response",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "input",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "image",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "dimensions",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "get",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "content",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "application",
            "tf": 1,
            "weight": 0.021739
          }
        ],
        "unique_terms": 25,
        "total_terms": 46
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Get embeddings from the Jina API",
        "api",
        "data",
        "embeddings",
        "headers",
        "input",
        "jina",
        "json",
        "response",
        "text",
        "url"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.7157142857142856
    }
  },
  {
    "text": "# The model doesn't differentiate between images and text, so we extract output based on the input order.\ntext_embedding = response_data[0][\"embedding\"]\nimage_embedding = response_data[1][\"embedding\"]",
    "metadata": {
      "chunk_id": "476d74c6528d-0017",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "The model doesn't differentiate between images and text, so we extract output based on the input order."
      ],
      "heading_text": "The model doesn't differentiate between images and text, so we extract output based on the input order.",
      "token_count": 41,
      "char_count": 200,
      "start_char": 25097,
      "end_char": 25297,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.565,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.766920",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 41,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "The model doesn't differentiate between images and text, so we extract output based on the input order.",
      "chunk_hash": "629cd503f403556c",
      "content_digest": "629cd503f403556c",
      "chunk_length": 200,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "embedding",
          "the",
          "text",
          "response",
          "data",
          "model",
          "doesn",
          "differentiate",
          "between",
          "images",
          "and",
          "extract",
          "output",
          "based",
          "input",
          "order",
          "image"
        ],
        "term_weights": [
          {
            "term": "embedding",
            "tf": 4,
            "weight": 0.166667
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "response",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "doesn",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "differentiate",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "between",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "images",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "extract",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "output",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "order",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "image",
            "tf": 1,
            "weight": 0.041667
          }
        ],
        "unique_terms": 17,
        "total_terms": 24
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "The model doesn't differentiate between images and text, so we extract output based on the input order.",
        "between",
        "data",
        "differentiate",
        "doesn",
        "embedding",
        "images",
        "model",
        "response",
        "text",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.565,
      "overall": 0.6549999999999999
    }
  },
  {
    "text": "# Get the embedding for the search query from the Jina API url = \"https://api.jina.ai/v1/embeddings\" headers = {     \"Content-Type\": \"application/json\",     \"Authorization\": f\"Bearer {JINA_API_KEY}\", } data = {     \"input\": [{\"text\": search_query}],     \"model\": MODEL,     \"dimensions\": DIMENSIONS,     # \"task\": \"retrieval.query\" # Uncomment this line for text-to-text retrieval tasks }  response = requests.post(url, headers=headers, json=data) query_embedding = response.json()[\"data\"][0][\"embedding\"]  search_results = client.query_points(     collection_name=collection_name,     query=query_embedding,     using=\"image_vector\",     limit=5 ).points  for result in search_results:     print(f\"ID: {result.id}, Score: {result.score}\") ```",
    "metadata": {
      "chunk_id": "476d74c6528d-0021",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Get the embedding for the search query from the Jina API"
      ],
      "heading_text": "Get the embedding for the search query from the Jina API",
      "token_count": 182,
      "char_count": 743,
      "start_char": 26023,
      "end_char": 26766,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5350704225352113,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.768997",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 182,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Get the embedding for the search query from the Jina API",
      "chunk_hash": "f66bff80a18ce64b",
      "content_digest": "f66bff80a18ce64b",
      "chunk_length": 743,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "query",
          "embedding",
          "search",
          "the",
          "for",
          "jina",
          "api",
          "headers",
          "json",
          "data",
          "text",
          "result",
          "url",
          "model",
          "dimensions",
          "retrieval",
          "response",
          "results",
          "points",
          "collection"
        ],
        "term_weights": [
          {
            "term": "query",
            "tf": 7,
            "weight": 0.081395
          },
          {
            "term": "embedding",
            "tf": 4,
            "weight": 0.046512
          },
          {
            "term": "search",
            "tf": 4,
            "weight": 0.046512
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "jina",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "api",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "headers",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "json",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "text",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "result",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "url",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "dimensions",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "retrieval",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "response",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "results",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.023256
          }
        ],
        "unique_terms": 46,
        "total_terms": 86
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Get the embedding for the search query from the Jina API",
        "api",
        "data",
        "embedding",
        "for",
        "headers",
        "jina",
        "json",
        "query",
        "search",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5350704225352113,
      "overall": 0.7116901408450703
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/embeddings/jina-embeddings.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Jina Embeddings](#jina-embeddings.md)    - [Technical Summary](#technical-summary.md)    - [Example](#example.md)      - [Text-to-Text Retrieval](#text-to-text-retrieval.md)     - [Text-to-Image Retrieval](#text-to-image-retrieval.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/embeddings/jina-embeddings.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "476d74c6528d-0022",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "filename": "_documentation_embeddings_jina-embeddings_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 223,
      "char_count": 806,
      "start_char": 26768,
      "end_char": 27574,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5321052631578947,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:22.771017",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 223,
      "document_id": "476d74c6528d",
      "document_name": "_documentation_embeddings_jina-embeddings_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "source_filename": "_documentation_embeddings_jina-embeddings_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_jina-embeddings\\_documentation_embeddings_jina-embeddings_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "39974f01dca38a43",
      "content_digest": "39974f01dca38a43",
      "chunk_length": 806,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "page",
          "github",
          "qdrant",
          "landing",
          "embeddings",
          "text",
          "https",
          "com",
          "jina",
          "retrieval",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "create",
          "issues",
          "new"
        ],
        "term_weights": [
          {
            "term": "page",
            "tf": 7,
            "weight": 0.070707
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.070707
          },
          {
            "term": "qdrant",
            "tf": 6,
            "weight": 0.060606
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.060606
          },
          {
            "term": "embeddings",
            "tf": 6,
            "weight": 0.060606
          },
          {
            "term": "text",
            "tf": 6,
            "weight": 0.060606
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.040404
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.040404
          },
          {
            "term": "jina",
            "tf": 4,
            "weight": 0.040404
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.040404
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.030303
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "issues",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "new",
            "tf": 2,
            "weight": 0.020202
          }
        ],
        "unique_terms": 38,
        "total_terms": 99
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "com",
        "embeddings",
        "github",
        "https",
        "jina",
        "landing",
        "page",
        "qdrant",
        "retrieval",
        "text"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5321052631578947,
      "overall": 0.6773684210526315
    }
  }
]