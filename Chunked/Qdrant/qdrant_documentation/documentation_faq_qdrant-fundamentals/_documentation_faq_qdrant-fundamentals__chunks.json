[
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "0e140382edb6-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 1045,
      "end_char": 3013,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.344830",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "0e140382edb6-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 3695,
      "end_char": 5683,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.355348",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)",
    "metadata": {
      "chunk_id": "0e140382edb6-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 83,
      "char_count": 311,
      "start_char": 5685,
      "end_char": 5996,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.357406",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 83,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "f059a5deb61e367d",
      "content_digest": "f059a5deb61e367d",
      "chunk_length": 311,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "faq",
          "https",
          "tech",
          "documentation",
          "fundamentals",
          "database",
          "optimization",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.228571
          },
          {
            "term": "faq",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "tech",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "documentation",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "fundamentals",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 14,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "release",
        "support",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.7209090909090908
    }
  },
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "0e140382edb6-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 6373,
      "end_char": 8341,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.368706",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "0e140382edb6-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 9023,
      "end_char": 11011,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.378048",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)  - [Documentation](https://qdrant.tech/documentation/) - - [Faq](https://qdrant.tech/documentation/faq/) - - Qdrant Fundamentals",
    "metadata": {
      "chunk_id": "0e140382edb6-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 119,
      "char_count": 440,
      "start_char": 11013,
      "end_char": 11453,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.380029",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 119,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "e92c13b7b099c33b",
      "content_digest": "e92c13b7b099c33b",
      "chunk_length": 440,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "faq",
          "https",
          "documentation",
          "tech",
          "fundamentals",
          "database",
          "optimization",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 11,
            "weight": 0.229167
          },
          {
            "term": "faq",
            "tf": 6,
            "weight": 0.125
          },
          {
            "term": "https",
            "tf": 6,
            "weight": 0.125
          },
          {
            "term": "documentation",
            "tf": 6,
            "weight": 0.125
          },
          {
            "term": "tech",
            "tf": 5,
            "weight": 0.104167
          },
          {
            "term": "fundamentals",
            "tf": 4,
            "weight": 0.083333
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.020833
          }
        ],
        "unique_terms": 14,
        "total_terms": 48
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "release",
        "support",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5,
      "overall": 0.6999999999999998
    }
  },
  {
    "text": "### What is the maximum size of vector metadata that can be stored?\n\nThere is no inherent limitation on metadata size, but it should be [optimized for performance and resource usage](https://qdrant.tech/documentation/guides/optimize/). Users can set upper limits in the configuration.",
    "metadata": {
      "chunk_id": "0e140382edb6-0013",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "What is the maximum size of vector metadata that can be stored?"
      ],
      "heading_text": "What is the maximum size of vector metadata that can be stored?",
      "token_count": 58,
      "char_count": 284,
      "start_char": 12885,
      "end_char": 13169,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7515384615384616,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.381627",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 58,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "What is the maximum size of vector metadata that can be stored?",
      "chunk_hash": "e91c17bfb3dbb9fd",
      "content_digest": "e91c17bfb3dbb9fd",
      "chunk_length": 284,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "size",
          "metadata",
          "can",
          "what",
          "maximum",
          "vector",
          "that",
          "stored",
          "there",
          "inherent",
          "limitation",
          "but",
          "should",
          "optimized",
          "for",
          "performance",
          "and",
          "resource",
          "usage"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "size",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "metadata",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "what",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "maximum",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "stored",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "there",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "inherent",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "limitation",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "but",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "should",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "optimized",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "performance",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "resource",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "usage",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 31,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "What is the maximum size of vector metadata that can be stored?",
        "can",
        "maximum",
        "metadata",
        "size",
        "stored",
        "that",
        "the",
        "there",
        "vector",
        "what"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7515384615384616,
      "overall": 0.7838461538461537
    }
  },
  {
    "text": "### Can the same similarity search query yield different results on different machines?\n\nYes, due to differences in hardware configurations and parallel processing, results may vary slightly.",
    "metadata": {
      "chunk_id": "0e140382edb6-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Can the same similarity search query yield different results on different machines?"
      ],
      "heading_text": "Can the same similarity search query yield different results on different machines?",
      "token_count": 31,
      "char_count": 191,
      "start_char": 13171,
      "end_char": 13362,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5677777777777778,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.381780",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 31,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "Can the same similarity search query yield different results on different machines?",
      "chunk_hash": "8e34bc3a41187287",
      "content_digest": "8e34bc3a41187287",
      "chunk_length": 191,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "different",
          "results",
          "can",
          "the",
          "same",
          "similarity",
          "search",
          "query",
          "yield",
          "machines",
          "yes",
          "due",
          "differences",
          "hardware",
          "configurations",
          "and",
          "parallel",
          "processing",
          "may",
          "vary"
        ],
        "term_weights": [
          {
            "term": "different",
            "tf": 2,
            "weight": 0.086957
          },
          {
            "term": "results",
            "tf": 2,
            "weight": 0.086957
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "same",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "similarity",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "search",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "query",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "yield",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "machines",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "yes",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "due",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "differences",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "hardware",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "configurations",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "parallel",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "may",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "vary",
            "tf": 1,
            "weight": 0.043478
          }
        ],
        "unique_terms": 21,
        "total_terms": 23
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Can the same similarity search query yield different results on different machines?",
        "can",
        "different",
        "machines",
        "query",
        "results",
        "same",
        "search",
        "similarity",
        "the",
        "yield"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5677777777777778,
      "overall": 0.755925925925926
    }
  },
  {
    "text": "### How do I choose the right vector embeddings for my use case?\n\nThis depends on the nature of your data and the specific application. Consider factors like dimensionality, domain-specific models, and the performance characteristics of different embeddings.",
    "metadata": {
      "chunk_id": "0e140382edb6-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "How do I choose the right vector embeddings for my use case?"
      ],
      "heading_text": "How do I choose the right vector embeddings for my use case?",
      "token_count": 45,
      "char_count": 258,
      "start_char": 13364,
      "end_char": 13622,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5505263157894736,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.381963",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 45,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "How do I choose the right vector embeddings for my use case?",
      "chunk_hash": "5da538fc8766cde1",
      "content_digest": "5da538fc8766cde1",
      "chunk_length": 258,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "embeddings",
          "and",
          "specific",
          "how",
          "choose",
          "right",
          "vector",
          "for",
          "use",
          "case",
          "this",
          "depends",
          "nature",
          "your",
          "data",
          "application",
          "consider",
          "factors",
          "like"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.125
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "specific",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "choose",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "right",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "case",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "depends",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "nature",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "your",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "application",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "consider",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "factors",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "like",
            "tf": 1,
            "weight": 0.03125
          }
        ],
        "unique_terms": 26,
        "total_terms": 32
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "How do I choose the right vector embeddings for my use case?",
        "and",
        "choose",
        "embeddings",
        "for",
        "how",
        "right",
        "specific",
        "the",
        "use",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5505263157894736,
      "overall": 0.7501754385964912
    }
  },
  {
    "text": "### Vectors in the collection don’t match what I uploaded. There are two possible reasons for this:  - You used the `Cosine` distance metric in the [collection settings](https://qdrant.tech/concepts/collections/#collections). In this case, Qdrant pre-normalizes your vectors for faster distance computation. If you strictly need the original vectors to be preserved, consider using the `Dot` distance metric instead. - You used the `uint8` [datatype](https://qdrant.tech/documentation/concepts/vectors/#datatypes) to store vectors. `uint8` requires a special format for input values, which might not be compatible with the typical output of embedding models.",
    "metadata": {
      "chunk_id": "0e140382edb6-0020",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Vectors in the collection don’t match what I uploaded."
      ],
      "heading_text": "Vectors in the collection don’t match what I uploaded.",
      "token_count": 144,
      "char_count": 658,
      "start_char": 14845,
      "end_char": 15503,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5123529411764706,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.383189",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 144,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "Vectors in the collection don’t match what I uploaded.",
      "chunk_hash": "8bf88e5336077b35",
      "content_digest": "8bf88e5336077b35",
      "chunk_length": 658,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "vectors",
          "for",
          "you",
          "distance",
          "qdrant",
          "collection",
          "this",
          "used",
          "metric",
          "https",
          "tech",
          "concepts",
          "collections",
          "uint8",
          "don",
          "match",
          "what",
          "uploaded",
          "there"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 7,
            "weight": 0.082353
          },
          {
            "term": "vectors",
            "tf": 5,
            "weight": 0.058824
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "you",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "distance",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "used",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "metric",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "tech",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "concepts",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "uint8",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "don",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "match",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "what",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "uploaded",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "there",
            "tf": 1,
            "weight": 0.011765
          }
        ],
        "unique_terms": 58,
        "total_terms": 85
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Vectors in the collection don’t match what I uploaded.",
        "collection",
        "distance",
        "for",
        "metric",
        "qdrant",
        "the",
        "this",
        "used",
        "vectors",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5123529411764706,
      "overall": 0.7041176470588235
    }
  },
  {
    "text": "### How does Qdrant handle real-time data updates and search?\n\nQdrant supports live updates for vector data, with newly inserted, updated and deleted vectors available for immediate search. The system uses full-scan search on unindexed segments during background index updates.",
    "metadata": {
      "chunk_id": "0e140382edb6-0022",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "How does Qdrant handle real-time data updates and search?"
      ],
      "heading_text": "How does Qdrant handle real-time data updates and search?",
      "token_count": 53,
      "char_count": 277,
      "start_char": 15517,
      "end_char": 15794,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.383596",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 53,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "How does Qdrant handle real-time data updates and search?",
      "chunk_hash": "5ef77c92b59dcb40",
      "content_digest": "5ef77c92b59dcb40",
      "chunk_length": 277,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "updates",
          "search",
          "qdrant",
          "data",
          "and",
          "for",
          "how",
          "does",
          "handle",
          "real",
          "time",
          "supports",
          "live",
          "vector",
          "with",
          "newly",
          "inserted",
          "updated",
          "deleted",
          "vectors"
        ],
        "term_weights": [
          {
            "term": "updates",
            "tf": 3,
            "weight": 0.075
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.075
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "does",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "handle",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "real",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "time",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "live",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "newly",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "inserted",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "updated",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "deleted",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.025
          }
        ],
        "unique_terms": 32,
        "total_terms": 40
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "How does Qdrant handle real-time data updates and search?",
        "and",
        "data",
        "does",
        "for",
        "handle",
        "how",
        "qdrant",
        "real",
        "search",
        "updates"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "overall": 0.7533333333333333
    }
  },
  {
    "text": "### My search results contain vectors with null values. Why?\n\nBy default, Qdrant tries to minimize network traffic and doesn’t return vectors in search results. But you can force Qdrant to do so by setting the `with_vector` parameter of the Search/Scroll to `true`.\n\nIf you’re still seeing `\"vector\": null` in your results, it might be that the vector you’re passing is not in the correct format, or there’s an issue with how you’re calling the upsert method.",
    "metadata": {
      "chunk_id": "0e140382edb6-0023",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "My search results contain vectors with null values. Why?"
      ],
      "heading_text": "My search results contain vectors with null values. Why?",
      "token_count": 104,
      "char_count": 459,
      "start_char": 15796,
      "end_char": 16255,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5315584415584416,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.383890",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 104,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "My search results contain vectors with null values. Why?",
      "chunk_hash": "e953d33e0670f7d6",
      "content_digest": "e953d33e0670f7d6",
      "chunk_length": 459,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "you",
          "search",
          "results",
          "with",
          "vector",
          "vectors",
          "null",
          "qdrant",
          "contain",
          "values",
          "why",
          "default",
          "tries",
          "minimize",
          "network",
          "traffic",
          "and",
          "doesn",
          "return"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 5,
            "weight": 0.083333
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.066667
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.05
          },
          {
            "term": "results",
            "tf": 3,
            "weight": 0.05
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.05
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.05
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "null",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "contain",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "why",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "default",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "tries",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "minimize",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "network",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "traffic",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "doesn",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "return",
            "tf": 1,
            "weight": 0.016667
          }
        ],
        "unique_terms": 42,
        "total_terms": 60
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "My search results contain vectors with null values. Why?",
        "contain",
        "null",
        "qdrant",
        "results",
        "search",
        "the",
        "vector",
        "vectors",
        "with",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5315584415584416,
      "overall": 0.7105194805194804
    }
  },
  {
    "text": "### How can I search without a vector?\n\nYou are likely looking for the [scroll](https://qdrant.tech/documentation/concepts/points/#scroll-points) method. It allows you to retrieve the records based on filters or even iterate over all the records in the collection.",
    "metadata": {
      "chunk_id": "0e140382edb6-0024",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "How can I search without a vector?"
      ],
      "heading_text": "How can I search without a vector?",
      "token_count": 56,
      "char_count": 264,
      "start_char": 16257,
      "end_char": 16521,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5483333333333333,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.384085",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 56,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "How can I search without a vector?",
      "chunk_hash": "de5f003de3d55261",
      "content_digest": "de5f003de3d55261",
      "chunk_length": 264,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "you",
          "scroll",
          "points",
          "records",
          "how",
          "can",
          "search",
          "without",
          "vector",
          "are",
          "likely",
          "looking",
          "for",
          "https",
          "qdrant",
          "tech",
          "documentation",
          "concepts",
          "method"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.111111
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "scroll",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "records",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "search",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "without",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "likely",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "looking",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "tech",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "documentation",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "concepts",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.027778
          }
        ],
        "unique_terms": 29,
        "total_terms": 36
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "How can I search without a vector?",
        "can",
        "how",
        "points",
        "records",
        "scroll",
        "search",
        "the",
        "vector",
        "without",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5483333333333333,
      "overall": 0.7161111111111111
    }
  },
  {
    "text": "### Does Qdrant support a full-text search or a hybrid search? Qdrant is a vector search engine in the first place, and we only implement full-text support as long as it doesn’t compromise the vector search use case. That includes both the interface and the performance. What Qdrant can do:  - Search with full-text filters - Apply full-text filters to the vector search (i.e., perform vector search among the records with specific words or phrases) - Do prefix search and semantic [search-as-you-type](https://qdrant.tech/articles/search-as-you-type/) - Sparse vectors, as used in [SPLADE](https://github.com/naver/splade) or similar models - [Multi-vectors](https://qdrant.tech/documentation/concepts/vectors/#multivectors), for example ColBERT and other late-interaction models - Combination of the [multiple searches](https://qdrant.tech/documentation/concepts/hybrid-queries/)  What Qdrant doesn’t plan to support:  - Non-vector-based retrieval or ranking functions - Built-in ontologies or knowledge graphs - Query analyzers and other NLP tools  Of course, you can always combine Qdrant with any specialized tool you need, including full-text search engines. Read more about [our approach](https://qdrant.tech/articles/hybrid-search/) to hybrid search.",
    "metadata": {
      "chunk_id": "0e140382edb6-0025",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 25,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Does Qdrant support a full-text search or a hybrid search?"
      ],
      "heading_text": "Does Qdrant support a full-text search or a hybrid search?",
      "token_count": 282,
      "char_count": 1258,
      "start_char": 16523,
      "end_char": 17781,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6772611464968153,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.384734",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 282,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "Does Qdrant support a full-text search or a hybrid search?",
      "chunk_hash": "59b512995782ab33",
      "content_digest": "59b512995782ab33",
      "chunk_length": 1258,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "search",
          "qdrant",
          "the",
          "full",
          "text",
          "vector",
          "and",
          "https",
          "hybrid",
          "you",
          "tech",
          "support",
          "with",
          "vectors",
          "doesn",
          "what",
          "can",
          "filters",
          "type",
          "articles"
        ],
        "term_weights": [
          {
            "term": "search",
            "tf": 13,
            "weight": 0.078313
          },
          {
            "term": "qdrant",
            "tf": 9,
            "weight": 0.054217
          },
          {
            "term": "the",
            "tf": 7,
            "weight": 0.042169
          },
          {
            "term": "full",
            "tf": 5,
            "weight": 0.03012
          },
          {
            "term": "text",
            "tf": 5,
            "weight": 0.03012
          },
          {
            "term": "vector",
            "tf": 5,
            "weight": 0.03012
          },
          {
            "term": "and",
            "tf": 5,
            "weight": 0.03012
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.03012
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.024096
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.024096
          },
          {
            "term": "tech",
            "tf": 4,
            "weight": 0.024096
          },
          {
            "term": "support",
            "tf": 3,
            "weight": 0.018072
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.018072
          },
          {
            "term": "vectors",
            "tf": 3,
            "weight": 0.018072
          },
          {
            "term": "doesn",
            "tf": 2,
            "weight": 0.012048
          },
          {
            "term": "what",
            "tf": 2,
            "weight": 0.012048
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.012048
          },
          {
            "term": "filters",
            "tf": 2,
            "weight": 0.012048
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.012048
          },
          {
            "term": "articles",
            "tf": 2,
            "weight": 0.012048
          }
        ],
        "unique_terms": 94,
        "total_terms": 166
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Does Qdrant support a full-text search or a hybrid search?",
        "and",
        "full",
        "https",
        "hybrid",
        "qdrant",
        "search",
        "text",
        "the",
        "vector",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6772611464968153,
      "overall": 0.792420382165605
    }
  },
  {
    "text": "### How many collections can I create?\n\nAs many as you want, but be aware that each collection requires additional resources. It is *highly* recommended not to create many small collections, as it will lead to significant resource consumption overhead.\n\nWe consider creating a collection for each user/dialog/document as an antipattern.\n\nPlease read more about collections, isolation, and multiple users in our [Multitenancy](https://qdrant.tech/documentation/tutorials/multiple-partitions/) tutorial.",
    "metadata": {
      "chunk_id": "0e140382edb6-0027",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 27,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "How many collections can I create?"
      ],
      "heading_text": "How many collections can I create?",
      "token_count": 98,
      "char_count": 501,
      "start_char": 17801,
      "end_char": 18302,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.543125,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.385377",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 98,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "How many collections can I create?",
      "chunk_hash": "ed9641fdc21e94bb",
      "content_digest": "ed9641fdc21e94bb",
      "chunk_length": 501,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "many",
          "collections",
          "create",
          "each",
          "collection",
          "multiple",
          "how",
          "can",
          "you",
          "want",
          "but",
          "aware",
          "that",
          "requires",
          "additional",
          "resources",
          "highly",
          "recommended",
          "not",
          "small"
        ],
        "term_weights": [
          {
            "term": "many",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "collections",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "each",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "multiple",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "want",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "but",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "aware",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "requires",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "additional",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "resources",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "highly",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "recommended",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "not",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "small",
            "tf": 1,
            "weight": 0.017544
          }
        ],
        "unique_terms": 49,
        "total_terms": 57
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "How many collections can I create?",
        "can",
        "collection",
        "collections",
        "create",
        "each",
        "how",
        "many",
        "multiple",
        "want",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.543125,
      "overall": 0.714375
    }
  },
  {
    "text": "### How do I upload a large number of vectors into a Qdrant collection?\n\nRead about our recommendations in the [bulk upload](https://qdrant.tech/documentation/tutorials/bulk-upload/) tutorial.",
    "metadata": {
      "chunk_id": "0e140382edb6-0028",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 28,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "How do I upload a large number of vectors into a Qdrant collection?"
      ],
      "heading_text": "How do I upload a large number of vectors into a Qdrant collection?",
      "token_count": 42,
      "char_count": 192,
      "start_char": 18304,
      "end_char": 18496,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5769565217391305,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.385564",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 42,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "How do I upload a large number of vectors into a Qdrant collection?",
      "chunk_hash": "84c4821e27b2bf50",
      "content_digest": "84c4821e27b2bf50",
      "chunk_length": 192,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "upload",
          "qdrant",
          "bulk",
          "how",
          "large",
          "number",
          "vectors",
          "into",
          "collection",
          "read",
          "about",
          "our",
          "recommendations",
          "the",
          "https",
          "tech",
          "documentation",
          "tutorials",
          "tutorial"
        ],
        "term_weights": [
          {
            "term": "upload",
            "tf": 3,
            "weight": 0.130435
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.086957
          },
          {
            "term": "bulk",
            "tf": 2,
            "weight": 0.086957
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "large",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "number",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "collection",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "read",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "about",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "our",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "recommendations",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "tech",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "documentation",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "tutorials",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "tutorial",
            "tf": 1,
            "weight": 0.043478
          }
        ],
        "unique_terms": 19,
        "total_terms": 23
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "How do I upload a large number of vectors into a Qdrant collection?",
        "bulk",
        "collection",
        "how",
        "into",
        "large",
        "number",
        "qdrant",
        "read",
        "upload",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5769565217391305,
      "overall": 0.7256521739130434
    }
  },
  {
    "text": "### Should I create payload indexes before or after uploading?\n\nCreate payload indexes before uploading to avoid index rebuilding. However, there are scenarios where defining idexes after uploading is okay. For example, you can configure a new filter logic after launch.\n\nYou should always index first if you know your filters upfront. If you need to index another payload later, you can still do it, but be aware of the performance hit.",
    "metadata": {
      "chunk_id": "0e140382edb6-0035",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 35,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Should I create payload indexes before or after uploading?"
      ],
      "heading_text": "Should I create payload indexes before or after uploading?",
      "token_count": 84,
      "char_count": 437,
      "start_char": 19862,
      "end_char": 20299,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.715,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.386856",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 84,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "Should I create payload indexes before or after uploading?",
      "chunk_hash": "1e132eeac63fbdb0",
      "content_digest": "1e132eeac63fbdb0",
      "chunk_length": 437,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "you",
          "payload",
          "after",
          "uploading",
          "index",
          "should",
          "create",
          "indexes",
          "before",
          "can",
          "avoid",
          "rebuilding",
          "however",
          "there",
          "are",
          "scenarios",
          "where",
          "defining",
          "idexes",
          "okay"
        ],
        "term_weights": [
          {
            "term": "you",
            "tf": 5,
            "weight": 0.084746
          },
          {
            "term": "payload",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "after",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "uploading",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "index",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "should",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "indexes",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "before",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "avoid",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "rebuilding",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "however",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "there",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "scenarios",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "where",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "defining",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "idexes",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "okay",
            "tf": 1,
            "weight": 0.016949
          }
        ],
        "unique_terms": 42,
        "total_terms": 59
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Should I create payload indexes before or after uploading?",
        "after",
        "before",
        "can",
        "create",
        "index",
        "indexes",
        "payload",
        "should",
        "uploading",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.715,
      "overall": 0.7716666666666666
    }
  },
  {
    "text": "## Should I create one Qdrant collection per user?\n\nNo. Creating one collection per user is more resource intensive.\n\nInstead of creating separate collections for each user, we recommend creating a [single collection](https://qdrant.tech/documentation/guides/multiple-partitions/) and separate access using payloads. Each Qdrant point can have a payload as metadata. For multitenancy, you can include a `user_id` or `tenant_id` for each point. To optimize storage further, you can enable [tenant indexing](https://qdrant.tech/documentation/concepts/indexing/#tenant-index) for payload fields.",
    "metadata": {
      "chunk_id": "0e140382edb6-0036",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "filename": "_documentation_faq_qdrant-fundamentals_.md",
      "file_extension": ".md",
      "chunk_index": 36,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Should I create one Qdrant collection per user?"
      ],
      "heading_text": "Should I create one Qdrant collection per user?",
      "token_count": 127,
      "char_count": 592,
      "start_char": 20301,
      "end_char": 20893,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.513943661971831,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.387245",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 127,
      "document_id": "0e140382edb6",
      "document_name": "_documentation_faq_qdrant-fundamentals_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "source_filename": "_documentation_faq_qdrant-fundamentals_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_faq_qdrant-fundamentals\\_documentation_faq_qdrant-fundamentals_.md",
      "hierarchy_path": "Should I create one Qdrant collection per user?",
      "chunk_hash": "a4e1c97945e834ed",
      "content_digest": "a4e1c97945e834ed",
      "chunk_length": 592,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "user",
          "for",
          "collection",
          "creating",
          "each",
          "can",
          "tenant",
          "one",
          "per",
          "separate",
          "https",
          "tech",
          "documentation",
          "point",
          "payload",
          "you",
          "indexing",
          "should",
          "create"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.054054
          },
          {
            "term": "user",
            "tf": 4,
            "weight": 0.054054
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.054054
          },
          {
            "term": "collection",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "creating",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "each",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "can",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "tenant",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "one",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "per",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "separate",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "tech",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "point",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "should",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.013514
          }
        ],
        "unique_terms": 45,
        "total_terms": 74
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Should I create one Qdrant collection per user?",
        "can",
        "collection",
        "creating",
        "each",
        "for",
        "one",
        "per",
        "qdrant",
        "tenant",
        "user"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.513943661971831,
      "overall": 0.7046478873239437
    }
  }
]