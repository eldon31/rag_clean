[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "5c59c3443216-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 676,
      "end_char": 1349,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.887968",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "5c59c3443216-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1351,
      "end_char": 7012,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.923132",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "5c59c3443216-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 7014,
      "end_char": 9361,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.933873",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "5c59c3443216-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9363,
      "end_char": 10036,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.937361",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "5c59c3443216-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10038,
      "end_char": 15699,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.973279",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - Simple Agentic RAG System",
    "metadata": {
      "chunk_id": "5c59c3443216-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 597,
      "char_count": 2432,
      "start_char": 15701,
      "end_char": 18133,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.985828",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 597,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "11b0a3a40ad04dcb",
      "content_digest": "11b0a3a40ad04dcb",
      "chunk_length": 2432,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "rag",
          "with",
          "data",
          "chatbot",
          "system",
          "send",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 31,
            "weight": 0.107266
          },
          {
            "term": "documentation",
            "tf": 23,
            "weight": 0.079585
          },
          {
            "term": "https",
            "tf": 22,
            "weight": 0.076125
          },
          {
            "term": "tech",
            "tf": 22,
            "weight": 0.076125
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.048443
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034602
          },
          {
            "term": "rag",
            "tf": 10,
            "weight": 0.034602
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.031142
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.024221
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020761
          },
          {
            "term": "system",
            "tf": 6,
            "weight": 0.020761
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017301
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013841
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013841
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013841
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010381
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010381
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010381
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010381
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.00692
          }
        ],
        "unique_terms": 98,
        "total_terms": 289
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "overall": 0.8338666666666666
    }
  },
  {
    "text": "# Agentic RAG With CrewAI & Qdrant Vector Database  | Time: 45 min | Level: Beginner | Output: [GitHub](https://github.com/qdrant/examples/tree/master/agentic_rag_zoom_crewai) |   | | ------------ | --------------- | ---------------------------------------------------------------------------------------- | - |  By combining the power of Qdrant for vector search and CrewAI for orchestrating modular agents, you can build systems that don’t just answer questions but analyze, interpret, and act. Traditional RAG systems focus on fetching data and generating responses, but they lack the ability to reason deeply or handle multi-step processes. In this tutorial, we’ll walk you through building an Agentic RAG system step by step. By the end, you’ll have a working framework for storing data in a Qdrant Vector Database and extracting insights using CrewAI agents in conjunction with Vector Search over your data. We already built this app for you. [Clone this repository](https://github.com/qdrant/examples/tree/master/agentic_rag_zoom_crewai) and follow along with the tutorial.",
    "metadata": {
      "chunk_id": "5c59c3443216-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Agentic RAG With CrewAI & Qdrant Vector Database"
      ],
      "heading_text": "Agentic RAG With CrewAI & Qdrant Vector Database",
      "token_count": 224,
      "char_count": 1080,
      "start_char": 18135,
      "end_char": 19215,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6970422535211268,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.987948",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 224,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Agentic RAG With CrewAI & Qdrant Vector Database",
      "chunk_hash": "b7c505bebf255b58",
      "content_digest": "b7c505bebf255b58",
      "chunk_length": 1080,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "rag",
          "crewai",
          "qdrant",
          "and",
          "agentic",
          "vector",
          "the",
          "for",
          "you",
          "with",
          "github",
          "data",
          "step",
          "this",
          "database",
          "https",
          "com",
          "examples",
          "tree",
          "master"
        ],
        "term_weights": [
          {
            "term": "rag",
            "tf": 5,
            "weight": 0.037594
          },
          {
            "term": "crewai",
            "tf": 5,
            "weight": 0.037594
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.037594
          },
          {
            "term": "and",
            "tf": 5,
            "weight": 0.037594
          },
          {
            "term": "agentic",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "vector",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.022556
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.022556
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.022556
          },
          {
            "term": "step",
            "tf": 3,
            "weight": 0.022556
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.022556
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.015038
          }
        ],
        "unique_terms": 80,
        "total_terms": 133
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Agentic RAG With CrewAI & Qdrant Vector Database",
        "agentic",
        "and",
        "crewai",
        "for",
        "qdrant",
        "rag",
        "the",
        "vector",
        "with",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6970422535211268,
      "overall": 0.7990140845070423
    }
  },
  {
    "text": "## What You’ll Build\n\nIn this hands-on tutorial, we’ll create a system that:\n\n1. Uses Qdrant to store and retrieve meeting transcripts as vector embeddings\n2. Leverages CrewAI agents to analyze and summarize meeting data\n3. Presents insights in a simple Streamlit interface for easy interaction\n\nThis project demonstrates how to build a Vector Search powered Agentic workflow to extract insights from meeting recordings. By combining Qdrant’s vector search capabilities with CrewAI agents, users can search through and analyze their own meeting content.\n\nThe application first converts the meeting transcript into vector embeddings and stores them in a Qdrant vector database. It then uses CrewAI agents to query the vector database and extract insights from the meeting content. Finally, it uses Anthropic Claude to generate natural language responses to user queries based on the extracted insights from the vector database.",
    "metadata": {
      "chunk_id": "5c59c3443216-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "What You’ll Build"
      ],
      "heading_text": "What You’ll Build",
      "token_count": 173,
      "char_count": 926,
      "start_char": 19220,
      "end_char": 20146,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6785714285714285,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.989240",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 173,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "What You’ll Build",
      "chunk_hash": "863a997588eaecf6",
      "content_digest": "863a997588eaecf6",
      "chunk_length": 926,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "vector",
          "meeting",
          "the",
          "and",
          "insights",
          "uses",
          "qdrant",
          "crewai",
          "agents",
          "search",
          "from",
          "database",
          "build",
          "this",
          "embeddings",
          "analyze",
          "extract",
          "content",
          "what",
          "you"
        ],
        "term_weights": [
          {
            "term": "vector",
            "tf": 7,
            "weight": 0.060345
          },
          {
            "term": "meeting",
            "tf": 6,
            "weight": 0.051724
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.051724
          },
          {
            "term": "and",
            "tf": 5,
            "weight": 0.043103
          },
          {
            "term": "insights",
            "tf": 4,
            "weight": 0.034483
          },
          {
            "term": "uses",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "crewai",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "agents",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "from",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "database",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "build",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "analyze",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "extract",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "what",
            "tf": 1,
            "weight": 0.008621
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.008621
          }
        ],
        "unique_terms": 73,
        "total_terms": 116
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "What You’ll Build",
        "agents",
        "and",
        "crewai",
        "insights",
        "meeting",
        "qdrant",
        "search",
        "the",
        "uses",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6785714285714285,
      "overall": 0.7595238095238095
    }
  },
  {
    "text": "### How Does It Work?\n\nWhen you interact with the system, here’s what happens behind the scenes:\n\nFirst the user submits a query to the system. In this example, we want to find out the average length of Marketing meetings. Since one of the data points from the meetings is the duration of the meeting, the agent can calculate the average duration of the meetings by averaging the duration of all meetings with the keyword “Marketing” in the topic or content.\n\nNext, the agent used the `search_meetings` tool to search the Qdrant vector database for the most semantically similar meeting points. We asked about Marketing meetings, so the agent searched the database with the search meeting tool for all meetings with the keyword “Marketing” in the topic or content.\n\nNext, the agent used the `calculator` tool to find the average duration of the meetings.\n\nFinally, the agent used the `Information Synthesizer` tool to synthesize the analysis and present it in a natural language format.\n\nThe user sees the final output in a chat-like interface.\n\nThe user can then continue to interact with the system by asking more questions.",
    "metadata": {
      "chunk_id": "5c59c3443216-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "How Does It Work?"
      ],
      "heading_text": "How Does It Work?",
      "token_count": 227,
      "char_count": 1126,
      "start_char": 20148,
      "end_char": 21274,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.643191489361702,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.990484",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 227,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "How Does It Work?",
      "chunk_hash": "08db3b5828a46dca",
      "content_digest": "08db3b5828a46dca",
      "chunk_length": 1126,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "meetings",
          "with",
          "agent",
          "marketing",
          "duration",
          "tool",
          "system",
          "user",
          "average",
          "meeting",
          "used",
          "search",
          "interact",
          "find",
          "points",
          "can",
          "all",
          "keyword",
          "topic"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 35,
            "weight": 0.220126
          },
          {
            "term": "meetings",
            "tf": 8,
            "weight": 0.050314
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.031447
          },
          {
            "term": "agent",
            "tf": 5,
            "weight": 0.031447
          },
          {
            "term": "marketing",
            "tf": 4,
            "weight": 0.025157
          },
          {
            "term": "duration",
            "tf": 4,
            "weight": 0.025157
          },
          {
            "term": "tool",
            "tf": 4,
            "weight": 0.025157
          },
          {
            "term": "system",
            "tf": 3,
            "weight": 0.018868
          },
          {
            "term": "user",
            "tf": 3,
            "weight": 0.018868
          },
          {
            "term": "average",
            "tf": 3,
            "weight": 0.018868
          },
          {
            "term": "meeting",
            "tf": 3,
            "weight": 0.018868
          },
          {
            "term": "used",
            "tf": 3,
            "weight": 0.018868
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.018868
          },
          {
            "term": "interact",
            "tf": 2,
            "weight": 0.012579
          },
          {
            "term": "find",
            "tf": 2,
            "weight": 0.012579
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.012579
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.012579
          },
          {
            "term": "all",
            "tf": 2,
            "weight": 0.012579
          },
          {
            "term": "keyword",
            "tf": 2,
            "weight": 0.012579
          },
          {
            "term": "topic",
            "tf": 2,
            "weight": 0.012579
          }
        ],
        "unique_terms": 78,
        "total_terms": 159
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "How Does It Work?",
        "agent",
        "average",
        "duration",
        "marketing",
        "meetings",
        "system",
        "the",
        "tool",
        "user",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.643191489361702,
      "overall": 0.781063829787234
    }
  },
  {
    "text": "### Architecture  The system is built on three main components:  - **Qdrant Vector Database**: Stores meeting transcripts and summaries as vector embeddings, enabling semantic search - **CrewAI Framework**: Coordinates AI agents that handle different aspects of meeting analysis - **Anthropic Claude**: Provides natural language understanding and response generation  1. **Data Processing Pipeline**     - Processes meeting transcripts and metadata    - Creates embeddings with SentenceTransformer    - Manages Qdrant collection and data upload  2. **AI Agent System**     - Implements CrewAI agent logic    - Handles vector search integration    - Processes queries with Claude  3. **User Interface**     - Provides chat-like web interface    - Shows real-time processing feedback    - Maintains conversation history  ---",
    "metadata": {
      "chunk_id": "5c59c3443216-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Architecture"
      ],
      "heading_text": "Architecture",
      "token_count": 155,
      "char_count": 822,
      "start_char": 21276,
      "end_char": 22098,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5199065420560748,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.991259",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 155,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Architecture",
      "chunk_hash": "47ad90c4ebea0add",
      "content_digest": "47ad90c4ebea0add",
      "chunk_length": 822,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "and",
          "vector",
          "meeting",
          "system",
          "qdrant",
          "transcripts",
          "embeddings",
          "search",
          "crewai",
          "claude",
          "provides",
          "data",
          "processing",
          "processes",
          "with",
          "agent",
          "interface",
          "architecture",
          "the",
          "built"
        ],
        "term_weights": [
          {
            "term": "and",
            "tf": 4,
            "weight": 0.046512
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "meeting",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "transcripts",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "crewai",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "claude",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "provides",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "processing",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "processes",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "agent",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "interface",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "built",
            "tf": 1,
            "weight": 0.011628
          }
        ],
        "unique_terms": 65,
        "total_terms": 86
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Architecture",
        "and",
        "claude",
        "crewai",
        "embeddings",
        "meeting",
        "qdrant",
        "search",
        "system",
        "transcripts",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5199065420560748,
      "overall": 0.7399688473520248
    }
  },
  {
    "text": "## Setup  1. **Clone the Repository**: ```bash git clone https://github.com/qdrant/examples.git cd agentic_rag_zoom_crewai ``` 2. **Create and Activate a Python Virtual Environment with Python 3.10 for compatibility**: ```bash python3.10 -m venv venv source venv/bin/activate  # Windows: venv\\Scripts\\activate ``` 3. **Install Dependencies**: ```bash pip install -r requirements.txt ``` 4. **Configure Environment Variables**: Create a `.env.local` file with: ```bash openai_api_key=your_openai_key_here anthropic_api_key=your_anthropic_key_here qdrant_url=your_qdrant_url_here qdrant_api_key=your_qdrant_api_key_here ``` ---",
    "metadata": {
      "chunk_id": "5c59c3443216-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Setup"
      ],
      "heading_text": "Setup",
      "token_count": 165,
      "char_count": 625,
      "start_char": 22584,
      "end_char": 23209,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5416129032258065,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:09.998301",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 165,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Setup",
      "chunk_hash": "2f2ea1085bb67244",
      "content_digest": "2f2ea1085bb67244",
      "chunk_length": 625,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "key",
          "qdrant",
          "bash",
          "venv",
          "api",
          "your",
          "here",
          "activate",
          "clone",
          "git",
          "create",
          "python",
          "environment",
          "with",
          "install",
          "openai",
          "anthropic",
          "url",
          "setup",
          "the"
        ],
        "term_weights": [
          {
            "term": "key",
            "tf": 6,
            "weight": 0.072289
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.060241
          },
          {
            "term": "bash",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "venv",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "api",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "your",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "here",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "activate",
            "tf": 3,
            "weight": 0.036145
          },
          {
            "term": "clone",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "git",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "environment",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "install",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "openai",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "anthropic",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "url",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "setup",
            "tf": 1,
            "weight": 0.012048
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.012048
          }
        ],
        "unique_terms": 47,
        "total_terms": 83
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Setup",
        "activate",
        "api",
        "bash",
        "clone",
        "git",
        "here",
        "key",
        "qdrant",
        "venv",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5416129032258065,
      "overall": 0.6805376344086022
    }
  },
  {
    "text": "### 1. Process Meeting Data  The [`data_loader.py`](https://github.com/qdrant/examples/blob/master/agentic_rag_zoom_crewai/vector/data_loader.py) script processes meeting data and stores it in Qdrant: ```bash python vector/data_loader.py ``` After this script has run, you should see a new collection in your Qdrant Cloud account called `zoom_recordings`. This collection contains the vector embeddings of the meeting transcripts. The points in the collection contain the original meeting data, including the topic, content, and summary.",
    "metadata": {
      "chunk_id": "5c59c3443216-0013",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "1. Process Meeting Data"
      ],
      "heading_text": "1. Process Meeting Data",
      "token_count": 113,
      "char_count": 537,
      "start_char": 23229,
      "end_char": 23766,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7103125,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:10.001440",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 113,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "1. Process Meeting Data",
      "chunk_hash": "d693955d0e74bf60",
      "content_digest": "d693955d0e74bf60",
      "chunk_length": 537,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "data",
          "meeting",
          "loader",
          "qdrant",
          "vector",
          "collection",
          "zoom",
          "script",
          "and",
          "this",
          "process",
          "https",
          "github",
          "com",
          "examples",
          "blob",
          "master",
          "agentic",
          "rag"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 7,
            "weight": 0.09589
          },
          {
            "term": "data",
            "tf": 6,
            "weight": 0.082192
          },
          {
            "term": "meeting",
            "tf": 4,
            "weight": 0.054795
          },
          {
            "term": "loader",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "collection",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "zoom",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "script",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "master",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "agentic",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.013699
          }
        ],
        "unique_terms": 47,
        "total_terms": 73
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "1. Process Meeting Data",
        "and",
        "collection",
        "data",
        "loader",
        "meeting",
        "qdrant",
        "script",
        "the",
        "vector",
        "zoom"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7103125,
      "overall": 0.7701041666666666
    }
  },
  {
    "text": "### 2. Launch the Interface  The [`streamlit_app.py`](https://github.com/qdrant/examples/blob/master/agentic_rag_zoom_crewai/vector/streamlit_app.py) is located in the `vector` folder. To launch it, run: ```bash streamlit run vector/streamlit_app.py ``` When you run this script, you will be able to interact with the system through a chat-like interface. Ask questions about the meeting content, and the system will use the AI agents to find the most relevant information and present it in a natural language format.",
    "metadata": {
      "chunk_id": "5c59c3443216-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "2. Launch the Interface"
      ],
      "heading_text": "2. Launch the Interface",
      "token_count": 116,
      "char_count": 517,
      "start_char": 23770,
      "end_char": 24287,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.715,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:10.004376",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 116,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "2. Launch the Interface",
      "chunk_hash": "3ef3816d5f937260",
      "content_digest": "3ef3816d5f937260",
      "chunk_length": 517,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "streamlit",
          "app",
          "vector",
          "run",
          "launch",
          "interface",
          "you",
          "will",
          "system",
          "and",
          "https",
          "github",
          "com",
          "qdrant",
          "examples",
          "blob",
          "master",
          "agentic",
          "rag"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 8,
            "weight": 0.112676
          },
          {
            "term": "streamlit",
            "tf": 4,
            "weight": 0.056338
          },
          {
            "term": "app",
            "tf": 3,
            "weight": 0.042254
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.042254
          },
          {
            "term": "run",
            "tf": 3,
            "weight": 0.042254
          },
          {
            "term": "launch",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "interface",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "will",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "master",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "agentic",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.014085
          }
        ],
        "unique_terms": 49,
        "total_terms": 71
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "2. Launch the Interface",
        "app",
        "interface",
        "launch",
        "run",
        "streamlit",
        "system",
        "the",
        "vector",
        "will",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.715,
      "overall": 0.7716666666666666
    }
  },
  {
    "text": "## Conclusion  This tutorial has demonstrated how to build a sophisticated meeting analysis system that combines vector search with AI agents. Let’s recap the key components we’ve covered:  1. **Vector Search Integration**     - Efficient storage and retrieval of meeting content using Qdrant    - Semantic search capabilities through vector embeddings    - Batched processing for optimal performance  2. **AI Agent Framework**     - Tool-based approach for modular functionality    - Specialized agents for research and analysis    - Integration with Claude for intelligent insights  3. **Interactive Interface**     - Real-time feedback and progress tracking    - Persistent chat history    - Configurable search and analysis settings  The resulting system demonstrates the power of combining vector search with AI agents to create an intelligent meeting assistant. By following this tutorial, you’ve learned how to:  - Process and store meeting data efficiently - Implement semantic search capabilities - Create specialized AI agents for analysis - Build an intuitive user interface  This foundation can be extended in many ways, such as:  - Adding more specialized agents - Implementing additional analysis tools - Enhancing the user interface - Integrating with other data sources  The code is available in the [repository](https://github.com/qdrant/examples/tree/master/agentic_rag_zoom_crewai), and we encourage you to experiment with your own modifications and improvements. ---",
    "metadata": {
      "chunk_id": "5c59c3443216-0021",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Conclusion"
      ],
      "heading_text": "Conclusion",
      "token_count": 273,
      "char_count": 1486,
      "start_char": 31057,
      "end_char": 32543,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6810447761194031,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:10.027822",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 273,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Conclusion",
      "chunk_hash": "648aadc80dea25b6",
      "content_digest": "648aadc80dea25b6",
      "chunk_length": 1486,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "and",
          "search",
          "the",
          "analysis",
          "with",
          "agents",
          "for",
          "meeting",
          "vector",
          "this",
          "specialized",
          "interface",
          "tutorial",
          "how",
          "build",
          "system",
          "integration",
          "qdrant",
          "semantic",
          "capabilities"
        ],
        "term_weights": [
          {
            "term": "and",
            "tf": 7,
            "weight": 0.040936
          },
          {
            "term": "search",
            "tf": 6,
            "weight": 0.035088
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.035088
          },
          {
            "term": "analysis",
            "tf": 5,
            "weight": 0.02924
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.02924
          },
          {
            "term": "agents",
            "tf": 5,
            "weight": 0.02924
          },
          {
            "term": "for",
            "tf": 5,
            "weight": 0.02924
          },
          {
            "term": "meeting",
            "tf": 4,
            "weight": 0.023392
          },
          {
            "term": "vector",
            "tf": 4,
            "weight": 0.023392
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.017544
          },
          {
            "term": "specialized",
            "tf": 3,
            "weight": 0.017544
          },
          {
            "term": "interface",
            "tf": 3,
            "weight": 0.017544
          },
          {
            "term": "tutorial",
            "tf": 2,
            "weight": 0.011696
          },
          {
            "term": "how",
            "tf": 2,
            "weight": 0.011696
          },
          {
            "term": "build",
            "tf": 2,
            "weight": 0.011696
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.011696
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.011696
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.011696
          },
          {
            "term": "semantic",
            "tf": 2,
            "weight": 0.011696
          },
          {
            "term": "capabilities",
            "tf": 2,
            "weight": 0.011696
          }
        ],
        "unique_terms": 114,
        "total_terms": 171
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Conclusion",
        "agents",
        "analysis",
        "and",
        "for",
        "meeting",
        "search",
        "the",
        "this",
        "vector",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6810447761194031,
      "overall": 0.7936815920398009
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/agentic-rag-crewai-zoom.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Agentic RAG With CrewAI & Qdrant Vector Database](#agentic-rag-with-crewai--qdrant-vector-database.md)    - [What You’ll Build](#what-youll-build.md)      - [How Does It Work?](#how-does-it-work.md)     - [Architecture](#architecture.md)    - [Getting Started](#getting-started.md)    - [Setup](#setup.md)    - [Usage](#usage.md)      - [1. Process Meeting Data](#1-process-meeting-data.md)     - [2. Launch the Interface](#2-launch-the-interface.md)     - [The Data Pipeline](#the-data-pipeline.md)     - [Building the AI Agent System](#building-the-ai-agent-system.md)     - [Orchestrating the Workflow](#orchestrating-the-workflow.md)     - [Building the User Interface](#building-the-user-interface.md)    - [Conclusion](#conclusion.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/agentic-rag-crewai-zoom.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "5c59c3443216-0022",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 368,
      "char_count": 1306,
      "start_char": 32546,
      "end_char": 33852,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5391128712871287,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:10.032714",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 368,
      "document_id": "5c59c3443216",
      "document_name": "_documentation_agentic-rag-crewai-zoom_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "source_filename": "_documentation_agentic-rag-crewai-zoom_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_agentic-rag-crewai-zoom\\_documentation_agentic-rag-crewai-zoom_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "7f8bdfbd7287497b",
      "content_digest": "7f8bdfbd7287497b",
      "chunk_length": 1306,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "qdrant",
          "page",
          "github",
          "landing",
          "https",
          "com",
          "agentic",
          "rag",
          "crewai",
          "data",
          "interface",
          "building",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 10,
            "weight": 0.063694
          },
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.050955
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.044586
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.044586
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.038217
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.025478
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.025478
          },
          {
            "term": "agentic",
            "tf": 4,
            "weight": 0.025478
          },
          {
            "term": "rag",
            "tf": 4,
            "weight": 0.025478
          },
          {
            "term": "crewai",
            "tf": 4,
            "weight": 0.025478
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.025478
          },
          {
            "term": "interface",
            "tf": 4,
            "weight": 0.025478
          },
          {
            "term": "building",
            "tf": 4,
            "weight": 0.025478
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.019108
          },
          {
            "term": "you",
            "tf": 3,
            "weight": 0.019108
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.012739
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.012739
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.012739
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.012739
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.012739
          }
        ],
        "unique_terms": 62,
        "total_terms": 157
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "agentic",
        "com",
        "crewai",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "rag",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5391128712871287,
      "overall": 0.679704290429043
    }
  }
]