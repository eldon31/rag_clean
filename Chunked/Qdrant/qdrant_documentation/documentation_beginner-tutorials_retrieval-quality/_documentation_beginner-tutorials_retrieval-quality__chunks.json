[
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "d6430f165fd1-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 1048,
      "end_char": 3016,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.151594",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "d6430f165fd1-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 3698,
      "end_char": 5686,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.161063",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)",
    "metadata": {
      "chunk_id": "d6430f165fd1-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 83,
      "char_count": 311,
      "start_char": 5688,
      "end_char": 5999,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.162356",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 83,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "f059a5deb61e367d",
      "content_digest": "f059a5deb61e367d",
      "chunk_length": 311,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "faq",
          "https",
          "tech",
          "documentation",
          "fundamentals",
          "database",
          "optimization",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.228571
          },
          {
            "term": "faq",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "tech",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "documentation",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "fundamentals",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 14,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "release",
        "support",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.7209090909090908
    }
  },
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "d6430f165fd1-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 6376,
      "end_char": 8344,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.174100",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "d6430f165fd1-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 9026,
      "end_char": 11014,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.183838",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)  - [Documentation](https://qdrant.tech/documentation/) - - [Beginner tutorials](https://qdrant.tech/documentation/beginner-tutorials/) - - Measure Search Quality",
    "metadata": {
      "chunk_id": "d6430f165fd1-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 121,
      "char_count": 473,
      "start_char": 11016,
      "end_char": 11489,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7081818181818181,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.185820",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 121,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "a166d163a1a0499a",
      "content_digest": "a166d163a1a0499a",
      "chunk_length": 473,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "documentation",
          "tech",
          "faq",
          "fundamentals",
          "database",
          "optimization",
          "beginner",
          "tutorials",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases",
          "measure",
          "search",
          "quality"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.196078
          },
          {
            "term": "https",
            "tf": 6,
            "weight": 0.117647
          },
          {
            "term": "documentation",
            "tf": 6,
            "weight": 0.117647
          },
          {
            "term": "tech",
            "tf": 5,
            "weight": 0.098039
          },
          {
            "term": "faq",
            "tf": 4,
            "weight": 0.078431
          },
          {
            "term": "fundamentals",
            "tf": 3,
            "weight": 0.058824
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "beginner",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "tutorials",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "measure",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "search",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "quality",
            "tf": 1,
            "weight": 0.019608
          }
        ],
        "unique_terms": 19,
        "total_terms": 51
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "beginner",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "tech",
        "tutorials"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7081818181818181,
      "overall": 0.7693939393939394
    }
  },
  {
    "text": "# Measure and Improve Retrieval Quality in Semantic Search  | Time: 30 min | Level: Intermediate |   |   | | ------------ | ------------------- | - | - |  Semantic search pipelines are as good as the embeddings they use. If your model cannot properly represent input data, similar objects might be far away from each other in the vector space. No surprise, that the search results will be poor in this case. There is, however, another component of the process which can also degrade the quality of the search results. It is the ANN algorithm itself. In this tutorial, we will show how to measure the quality of the semantic retrieval and how to tune the parameters of the HNSW, the ANN algorithm used in Qdrant, to obtain the best results.",
    "metadata": {
      "chunk_id": "d6430f165fd1-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Measure and Improve Retrieval Quality in Semantic Search"
      ],
      "heading_text": "Measure and Improve Retrieval Quality in Semantic Search",
      "token_count": 157,
      "char_count": 739,
      "start_char": 11491,
      "end_char": 12230,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6777862595419847,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.186613",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 157,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Measure and Improve Retrieval Quality in Semantic Search",
      "chunk_hash": "94aaf8642b52d3c3",
      "content_digest": "94aaf8642b52d3c3",
      "chunk_length": 739,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "search",
          "quality",
          "semantic",
          "results",
          "measure",
          "and",
          "retrieval",
          "will",
          "this",
          "ann",
          "algorithm",
          "how",
          "improve",
          "time",
          "min",
          "level",
          "intermediate",
          "pipelines",
          "are"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 13,
            "weight": 0.139785
          },
          {
            "term": "search",
            "tf": 4,
            "weight": 0.043011
          },
          {
            "term": "quality",
            "tf": 3,
            "weight": 0.032258
          },
          {
            "term": "semantic",
            "tf": 3,
            "weight": 0.032258
          },
          {
            "term": "results",
            "tf": 3,
            "weight": 0.032258
          },
          {
            "term": "measure",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "retrieval",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "will",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "ann",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "algorithm",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "how",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "improve",
            "tf": 1,
            "weight": 0.010753
          },
          {
            "term": "time",
            "tf": 1,
            "weight": 0.010753
          },
          {
            "term": "min",
            "tf": 1,
            "weight": 0.010753
          },
          {
            "term": "level",
            "tf": 1,
            "weight": 0.010753
          },
          {
            "term": "intermediate",
            "tf": 1,
            "weight": 0.010753
          },
          {
            "term": "pipelines",
            "tf": 1,
            "weight": 0.010753
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.010753
          }
        ],
        "unique_terms": 64,
        "total_terms": 93
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Measure and Improve Retrieval Quality in Semantic Search",
        "and",
        "measure",
        "quality",
        "results",
        "retrieval",
        "search",
        "semantic",
        "the",
        "this",
        "will"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6777862595419847,
      "overall": 0.7925954198473281
    }
  },
  {
    "text": "## Embeddings quality\n\nThe quality of the embeddings is a topic for a separate tutorial. In a nutshell, it is usually measured and compared by benchmarks, such as [Massive Text Embedding Benchmark (MTEB)](https://huggingface.co/spaces/mteb/leaderboard). The evaluation process itself is pretty straightforward and is based on a ground truth dataset built by humans. We have a set of queries and a set of the documents we would expect to receive for each of them. In the [evaluation process](https://qdrant.tech/rag/rag-evaluation-guide/), we take a query, find the most similar documents in the vector space and compare them with the ground truth. In that setup, **finding the most similar documents is implemented as full kNN search, without any approximation**. As a result, we can measure the quality of the embeddings themselves, without the influence of the ANN algorithm.",
    "metadata": {
      "chunk_id": "d6430f165fd1-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Embeddings quality"
      ],
      "heading_text": "Embeddings quality",
      "token_count": 190,
      "char_count": 877,
      "start_char": 12233,
      "end_char": 13110,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6718181818181818,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.187558",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 190,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Embeddings quality",
      "chunk_hash": "288f6abe1be8ebd5",
      "content_digest": "288f6abe1be8ebd5",
      "chunk_length": 877,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "and",
          "embeddings",
          "quality",
          "evaluation",
          "documents",
          "for",
          "mteb",
          "https",
          "process",
          "ground",
          "truth",
          "set",
          "them",
          "rag",
          "most",
          "similar",
          "without",
          "topic",
          "separate"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 13,
            "weight": 0.12037
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.037037
          },
          {
            "term": "embeddings",
            "tf": 3,
            "weight": 0.027778
          },
          {
            "term": "quality",
            "tf": 3,
            "weight": 0.027778
          },
          {
            "term": "evaluation",
            "tf": 3,
            "weight": 0.027778
          },
          {
            "term": "documents",
            "tf": 3,
            "weight": 0.027778
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "mteb",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "ground",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "truth",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "set",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "them",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "rag",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "most",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "similar",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "without",
            "tf": 2,
            "weight": 0.018519
          },
          {
            "term": "topic",
            "tf": 1,
            "weight": 0.009259
          },
          {
            "term": "separate",
            "tf": 1,
            "weight": 0.009259
          }
        ],
        "unique_terms": 73,
        "total_terms": 108
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Embeddings quality",
        "and",
        "documents",
        "embeddings",
        "evaluation",
        "for",
        "https",
        "mteb",
        "process",
        "quality",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6718181818181818,
      "overall": 0.7572727272727272
    }
  },
  {
    "text": "## Retrieval quality\n\nEmbeddings quality is indeed the most important factor in the semantic search quality. However, vector search engines, such as Qdrant, do not perform pure kNN search. Instead, they use **Approximate Nearest Neighbors** (ANN) algorithms, which are much faster than the exact search, but can return suboptimal results. We can also **measure the retrieval quality of that approximation** which also contributes to the overall search quality.",
    "metadata": {
      "chunk_id": "d6430f165fd1-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Retrieval quality"
      ],
      "heading_text": "Retrieval quality",
      "token_count": 95,
      "char_count": 460,
      "start_char": 13112,
      "end_char": 13572,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5326470588235294,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.188015",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 95,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Retrieval quality",
      "chunk_hash": "1b5cb6a8934fc86d",
      "content_digest": "1b5cb6a8934fc86d",
      "chunk_length": 460,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "quality",
          "the",
          "search",
          "retrieval",
          "which",
          "can",
          "also",
          "embeddings",
          "indeed",
          "most",
          "important",
          "factor",
          "semantic",
          "however",
          "vector",
          "engines",
          "such",
          "qdrant",
          "not",
          "perform"
        ],
        "term_weights": [
          {
            "term": "quality",
            "tf": 5,
            "weight": 0.083333
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.083333
          },
          {
            "term": "search",
            "tf": 5,
            "weight": 0.083333
          },
          {
            "term": "retrieval",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "which",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "also",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "embeddings",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "indeed",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "most",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "important",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "factor",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "semantic",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "however",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "engines",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "such",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "not",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "perform",
            "tf": 1,
            "weight": 0.016667
          }
        ],
        "unique_terms": 44,
        "total_terms": 60
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Retrieval quality",
        "also",
        "can",
        "embeddings",
        "indeed",
        "most",
        "quality",
        "retrieval",
        "search",
        "the",
        "which"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5326470588235294,
      "overall": 0.7108823529411764
    }
  },
  {
    "text": "## Measure the quality of the search results  Let’s build a quality [evaluation](https://qdrant.tech/rag/rag-evaluation-guide/) of the ANN algorithm in Qdrant. We will, first, call the search endpoint in a standard way to obtain the approximate search results. Then, we will call the exact search endpoint to obtain the exact matches, and finally compare both results in terms of precision. Before we start, let’s create a collection, fill it with some data and then start our evaluation. We will use the same dataset as in the [Loading a dataset from Hugging Face hub](https://qdrant.tech/documentation/tutorials/huggingface-datasets/) tutorial, `Qdrant/arxiv-titles-instructorxl-embeddings` from the [Hugging Face hub](https://huggingface.co/datasets/Qdrant/arxiv-titles-instructorxl-embeddings). Let’s download it in a streaming mode, as we are only going to use part of it. ```python from datasets import load_dataset  dataset = load_dataset(     \"Qdrant/arxiv-titles-instructorxl-embeddings\", split=\"train\", streaming=True ) ``` We need some data to be indexed and another set for the testing purposes. Let’s get the first 50000 items for the training and the next 1000 for the testing. ```python dataset_iterator = iter(dataset) train_dataset = [next(dataset_iterator) for _ in range(60000)] test_dataset = [next(dataset_iterator) for _ in range(1000)] ``` Now, let’s create a collection and index the training data. This collection will be created with the default configuration. Please be aware that it might be different from your collection settings, and it’s always important to test exactly the same configuration you are going to use later in production. Distance function is another parameter that may impact the retrieval quality. If the embedding model was not trained to minimize cosine distance, you can get suboptimal search results by using it. Please test different distance functions to find the best one for your embeddings, if you don't know the specifics of the model training. ```python from qdrant_client import QdrantClient, models  client = QdrantClient(\"http://localhost:6333\") client.create_collection(     collection_name=\"arxiv-titles-instructorxl-embeddings\",     vectors_config=models.VectorParams(         size=768,  # Size of the embeddings generated by InstructorXL model         distance=models.Distance.COSINE,     ), ) ``` We are now ready to index the training data. Uploading the records is going to trigger the indexing process, which will build the HNSW graph. The indexing process may take some time, depending on the size of the dataset, but your data is going to be available for search immediately after receiving the response from the `upsert` endpoint. **As long as the indexing is not finished, and HNSW not built, Qdrant will perform the exact search**. We have to wait until the indexing is finished to be sure that the approximate search is performed. ```python client.upload_points(  # upload_points is available as of qdrant-client v1.7.1     collection_name=\"arxiv-titles-instructorxl-embeddings\",     points=[         models.PointStruct(             id=item[\"id\"],             vector=item[\"vector\"],             payload=item,         )         for item in train_dataset     ] )  while True:     collection_info = client.get_collection(collection_name=\"arxiv-titles-instructorxl-embeddings\")     if collection_info.status == models.CollectionStatus.GREEN:         # Collection status is green, which means the indexing is finished         break ```",
    "metadata": {
      "chunk_id": "d6430f165fd1-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Measure the quality of the search results"
      ],
      "heading_text": "Measure the quality of the search results",
      "token_count": 765,
      "char_count": 3506,
      "start_char": 15093,
      "end_char": 18599,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.857752808988764,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.207814",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 765,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Measure the quality of the search results",
      "chunk_hash": "4b752ec4f12189a0",
      "content_digest": "4b752ec4f12189a0",
      "chunk_length": 3506,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "dataset",
          "collection",
          "qdrant",
          "search",
          "embeddings",
          "for",
          "and",
          "instructorxl",
          "will",
          "from",
          "arxiv",
          "titles",
          "client",
          "let",
          "data",
          "distance",
          "models",
          "indexing",
          "results"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 38,
            "weight": 0.087558
          },
          {
            "term": "dataset",
            "tf": 13,
            "weight": 0.029954
          },
          {
            "term": "collection",
            "tf": 12,
            "weight": 0.02765
          },
          {
            "term": "qdrant",
            "tf": 9,
            "weight": 0.020737
          },
          {
            "term": "search",
            "tf": 8,
            "weight": 0.018433
          },
          {
            "term": "embeddings",
            "tf": 8,
            "weight": 0.018433
          },
          {
            "term": "for",
            "tf": 8,
            "weight": 0.018433
          },
          {
            "term": "and",
            "tf": 7,
            "weight": 0.016129
          },
          {
            "term": "instructorxl",
            "tf": 7,
            "weight": 0.016129
          },
          {
            "term": "will",
            "tf": 6,
            "weight": 0.013825
          },
          {
            "term": "from",
            "tf": 6,
            "weight": 0.013825
          },
          {
            "term": "arxiv",
            "tf": 6,
            "weight": 0.013825
          },
          {
            "term": "titles",
            "tf": 6,
            "weight": 0.013825
          },
          {
            "term": "client",
            "tf": 6,
            "weight": 0.013825
          },
          {
            "term": "let",
            "tf": 5,
            "weight": 0.011521
          },
          {
            "term": "data",
            "tf": 5,
            "weight": 0.011521
          },
          {
            "term": "distance",
            "tf": 5,
            "weight": 0.011521
          },
          {
            "term": "models",
            "tf": 5,
            "weight": 0.011521
          },
          {
            "term": "indexing",
            "tf": 5,
            "weight": 0.011521
          },
          {
            "term": "results",
            "tf": 4,
            "weight": 0.009217
          }
        ],
        "unique_terms": 185,
        "total_terms": 434
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Measure the quality of the search results",
        "and",
        "collection",
        "dataset",
        "embeddings",
        "for",
        "instructorxl",
        "qdrant",
        "search",
        "the",
        "will"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.857752808988764,
      "overall": 0.819250936329588
    }
  },
  {
    "text": "## Standard mode vs exact search  Qdrant has a built-in exact search mode, which can be used to measure the quality of the search results. In this mode, Qdrant performs a full kNN search for each query, without any approximation. It is not suitable for production use with high load, but it is perfect for the evaluation of the ANN algorithm and its parameters. It might be triggered by setting the `exact` parameter to `True` in the search request. We are simply going to use all the examples from the test dataset as queries and compare the results of the approximate search with the results of the exact search. Let’s create a helper function with `k` being a parameter, so we can calculate the `precision@k` for different values of `k`. ```python def avg_precision_at_k(k: int):     precisions = []     for item in test_dataset:         ann_result = client.query_points(             collection_name=\"arxiv-titles-instructorxl-embeddings\",             query=item[\"vector\"],             limit=k,         ).points              knn_result = client.query_points(             collection_name=\"arxiv-titles-instructorxl-embeddings\",             query=item[\"vector\"],             limit=k,             search_params=models.SearchParams(                 exact=True,  # Turns on the exact search mode             ),         ).points          # We can calculate the precision@k by comparing the ids of the search results         ann_ids = set(item.id for item in ann_result)         knn_ids = set(item.id for item in knn_result)         precision = len(ann_ids.intersection(knn_ids)) / k         precisions.append(precision)          return sum(precisions) / len(precisions) ``` Calculating the `precision@5` is as simple as calling the function with the corresponding parameter: ```python print(f\"avg(precision@5) = {avg_precision_at_k(k=5)}\") ``` Response: ```text avg(precision@5) = 0.9935999999999995 ``` As we can see, the precision of the approximate search vs exact search is pretty high. There are, however, some scenarios when we need higher precision and can accept higher latency. HNSW is pretty tunable, and we can increase the precision by changing its parameters.",
    "metadata": {
      "chunk_id": "d6430f165fd1-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Standard mode vs exact search"
      ],
      "heading_text": "Standard mode vs exact search",
      "token_count": 476,
      "char_count": 2169,
      "start_char": 18610,
      "end_char": 20779,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7103182481751826,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.215069",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 476,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Standard mode vs exact search",
      "chunk_hash": "e79869ba0a2bac17",
      "content_digest": "e79869ba0a2bac17",
      "chunk_length": 2169,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "search",
          "precision",
          "exact",
          "for",
          "item",
          "can",
          "knn",
          "query",
          "ann",
          "ids",
          "mode",
          "results",
          "with",
          "and",
          "avg",
          "precisions",
          "result",
          "points",
          "parameter"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 23,
            "weight": 0.09127
          },
          {
            "term": "search",
            "tf": 12,
            "weight": 0.047619
          },
          {
            "term": "precision",
            "tf": 12,
            "weight": 0.047619
          },
          {
            "term": "exact",
            "tf": 7,
            "weight": 0.027778
          },
          {
            "term": "for",
            "tf": 7,
            "weight": 0.027778
          },
          {
            "term": "item",
            "tf": 7,
            "weight": 0.027778
          },
          {
            "term": "can",
            "tf": 6,
            "weight": 0.02381
          },
          {
            "term": "knn",
            "tf": 5,
            "weight": 0.019841
          },
          {
            "term": "query",
            "tf": 5,
            "weight": 0.019841
          },
          {
            "term": "ann",
            "tf": 5,
            "weight": 0.019841
          },
          {
            "term": "ids",
            "tf": 5,
            "weight": 0.019841
          },
          {
            "term": "mode",
            "tf": 4,
            "weight": 0.015873
          },
          {
            "term": "results",
            "tf": 4,
            "weight": 0.015873
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.015873
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.015873
          },
          {
            "term": "avg",
            "tf": 4,
            "weight": 0.015873
          },
          {
            "term": "precisions",
            "tf": 4,
            "weight": 0.015873
          },
          {
            "term": "result",
            "tf": 4,
            "weight": 0.015873
          },
          {
            "term": "points",
            "tf": 4,
            "weight": 0.015873
          },
          {
            "term": "parameter",
            "tf": 3,
            "weight": 0.011905
          }
        ],
        "unique_terms": 117,
        "total_terms": 252
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Standard mode vs exact search",
        "ann",
        "can",
        "exact",
        "for",
        "item",
        "knn",
        "precision",
        "query",
        "search",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7103182481751826,
      "overall": 0.7701060827250608
    }
  },
  {
    "text": "## Tweaking the HNSW parameters  HNSW is a hierarchical graph, where each node has a set of links to other nodes. The number of edges per node is called the `m` parameter. The larger the value of it, the higher the precision of the search, but more space required. The `ef_construct` parameter is the number of neighbours to consider during the index building. Again, the larger the value, the higher the precision, but the longer the indexing time. The default values of these parameters are `m=16` and `ef_construct=100`. Let’s try to increase them to `m=32` and `ef_construct=200` and see how it affects the precision. Of course, we need to wait until the indexing is finished before we can perform the search. ```python client.update_collection(     collection_name=\"arxiv-titles-instructorxl-embeddings\",     hnsw_config=models.HnswConfigDiff(         m=32,  # Increase the number of edges per node from the default 16 to 32         ef_construct=200,  # Increase the number of neighbours from the default 100 to 200     ) )  while True:     collection_info = client.get_collection(collection_name=\"arxiv-titles-instructorxl-embeddings\")     if collection_info.status == models.CollectionStatus.GREEN:         # Collection status is green, which means the indexing is finished         break ``` The same function can be used to calculate the average `precision@5`: ```python print(f\"avg(precision@5) = {avg_precision_at_k(k=5)}\") ``` Response: ```text avg(precision@5) = 0.9969999999999998 ``` The precision has obviously increased, and we know how to control it. However, there is a trade-off between the precision and the search latency and memory requirements. In some specific cases, we may want to increase the precision as much as possible, so now we know how to do it.",
    "metadata": {
      "chunk_id": "d6430f165fd1-0016",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tweaking the HNSW parameters"
      ],
      "heading_text": "Tweaking the HNSW parameters",
      "token_count": 412,
      "char_count": 1779,
      "start_char": 20787,
      "end_char": 22566,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6958891566265061,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.221006",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 412,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Tweaking the HNSW parameters",
      "chunk_hash": "7125ecdfc9b1f63e",
      "content_digest": "7125ecdfc9b1f63e",
      "chunk_length": 1779,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "precision",
          "collection",
          "and",
          "number",
          "construct",
          "increase",
          "hnsw",
          "node",
          "search",
          "indexing",
          "default",
          "200",
          "how",
          "avg",
          "parameters",
          "has",
          "edges",
          "per",
          "parameter"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 32,
            "weight": 0.148837
          },
          {
            "term": "precision",
            "tf": 10,
            "weight": 0.046512
          },
          {
            "term": "collection",
            "tf": 7,
            "weight": 0.032558
          },
          {
            "term": "and",
            "tf": 6,
            "weight": 0.027907
          },
          {
            "term": "number",
            "tf": 4,
            "weight": 0.018605
          },
          {
            "term": "construct",
            "tf": 4,
            "weight": 0.018605
          },
          {
            "term": "increase",
            "tf": 4,
            "weight": 0.018605
          },
          {
            "term": "hnsw",
            "tf": 3,
            "weight": 0.013953
          },
          {
            "term": "node",
            "tf": 3,
            "weight": 0.013953
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.013953
          },
          {
            "term": "indexing",
            "tf": 3,
            "weight": 0.013953
          },
          {
            "term": "default",
            "tf": 3,
            "weight": 0.013953
          },
          {
            "term": "200",
            "tf": 3,
            "weight": 0.013953
          },
          {
            "term": "how",
            "tf": 3,
            "weight": 0.013953
          },
          {
            "term": "avg",
            "tf": 3,
            "weight": 0.013953
          },
          {
            "term": "parameters",
            "tf": 2,
            "weight": 0.009302
          },
          {
            "term": "has",
            "tf": 2,
            "weight": 0.009302
          },
          {
            "term": "edges",
            "tf": 2,
            "weight": 0.009302
          },
          {
            "term": "per",
            "tf": 2,
            "weight": 0.009302
          },
          {
            "term": "parameter",
            "tf": 2,
            "weight": 0.009302
          }
        ],
        "unique_terms": 113,
        "total_terms": 215
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tweaking the HNSW parameters",
        "and",
        "collection",
        "construct",
        "hnsw",
        "increase",
        "node",
        "number",
        "precision",
        "search",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6958891566265061,
      "overall": 0.7652963855421686
    }
  },
  {
    "text": "## Wrapping up\n\nAssessing the quality of retrieval is a critical aspect of [evaluating](https://qdrant.tech/rag/rag-evaluation-guide/) semantic search performance. It is imperative to measure retrieval quality when aiming for optimal quality of. your search results. Qdrant provides a built-in exact search mode, which can be used to measure the quality of the ANN algorithm itself, even in an automated way, as part of your CI/CD pipeline.\n\nAgain, **the quality of the embeddings is the most important factor**. HNSW does a pretty good job in terms of precision, and it is parameterizable and tunable, when required. There are some other ANN algorithms available out there, such as [IVF\\*](https://github.com/facebookresearch/faiss/wiki/Faiss-indexes#cell-probe-methods-indexivf-indexes), but they usually [perform worse than HNSW in terms of quality and performance](https://nirantk.com/writing/pgvector-vs-qdrant/#correctness).",
    "metadata": {
      "chunk_id": "d6430f165fd1-0017",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Wrapping up"
      ],
      "heading_text": "Wrapping up",
      "token_count": 217,
      "char_count": 930,
      "start_char": 22574,
      "end_char": 23504,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6984745762711865,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.222585",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 217,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Wrapping up",
      "chunk_hash": "8cc2bbe105423f35",
      "content_digest": "8cc2bbe105423f35",
      "chunk_length": 930,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "quality",
          "https",
          "qdrant",
          "search",
          "and",
          "retrieval",
          "rag",
          "performance",
          "measure",
          "when",
          "your",
          "ann",
          "hnsw",
          "terms",
          "there",
          "com",
          "faiss",
          "indexes",
          "wrapping"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 6,
            "weight": 0.051724
          },
          {
            "term": "quality",
            "tf": 6,
            "weight": 0.051724
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.025862
          },
          {
            "term": "retrieval",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "rag",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "performance",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "measure",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "when",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "ann",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "hnsw",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "terms",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "there",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "faiss",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "indexes",
            "tf": 2,
            "weight": 0.017241
          },
          {
            "term": "wrapping",
            "tf": 1,
            "weight": 0.008621
          }
        ],
        "unique_terms": 85,
        "total_terms": 116
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Wrapping up",
        "and",
        "https",
        "measure",
        "performance",
        "qdrant",
        "quality",
        "rag",
        "retrieval",
        "search",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6984745762711865,
      "overall": 0.7661581920903955
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/beginner-tutorials/retrieval-quality.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Measure and Improve Retrieval Quality in Semantic Search](#measure-and-improve-retrieval-quality-in-semantic-search.md)    - [Embeddings quality](#embeddings-quality.md)   - [Retrieval quality](#retrieval-quality.md)     - [Quality metrics](#quality-metrics.md)   - [Measure the quality of the search results](#measure-the-quality-of-the-search-results.md)   - [Standard mode vs exact search](#standard-mode-vs-exact-search.md)   - [Tweaking the HNSW parameters](#tweaking-the-hnsw-parameters.md)   - [Wrapping up](#wrapping-up.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/beginner-tutorials/retrieval-quality.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "d6430f165fd1-0018",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 297,
      "char_count": 1123,
      "start_char": 23506,
      "end_char": 24629,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5249397590361445,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:11.225662",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 297,
      "document_id": "d6430f165fd1",
      "document_name": "_documentation_beginner-tutorials_retrieval-quality_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_filename": "_documentation_beginner-tutorials_retrieval-quality_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_beginner-tutorials_retrieval-quality\\_documentation_beginner-tutorials_retrieval-quality_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "7fa240aedbeafa94",
      "content_digest": "7fa240aedbeafa94",
      "chunk_length": 1123,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "quality",
          "page",
          "github",
          "qdrant",
          "landing",
          "retrieval",
          "search",
          "the",
          "https",
          "com",
          "measure",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "beginner",
          "tutorials"
        ],
        "term_weights": [
          {
            "term": "quality",
            "tf": 12,
            "weight": 0.088889
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.051852
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.051852
          },
          {
            "term": "qdrant",
            "tf": 6,
            "weight": 0.044444
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.044444
          },
          {
            "term": "retrieval",
            "tf": 6,
            "weight": 0.044444
          },
          {
            "term": "search",
            "tf": 6,
            "weight": 0.044444
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.044444
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "measure",
            "tf": 4,
            "weight": 0.02963
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.022222
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "beginner",
            "tf": 2,
            "weight": 0.014815
          },
          {
            "term": "tutorials",
            "tf": 2,
            "weight": 0.014815
          }
        ],
        "unique_terms": 50,
        "total_terms": 135
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "com",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "quality",
        "retrieval",
        "search",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5249397590361445,
      "overall": 0.7083132530120482
    }
  }
]