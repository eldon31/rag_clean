[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "b051c49a15ca-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 658,
      "end_char": 1331,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.081758",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "b051c49a15ca-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1333,
      "end_char": 6994,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.106734",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "b051c49a15ca-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 6996,
      "end_char": 9343,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.117967",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "b051c49a15ca-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9345,
      "end_char": 10018,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.121911",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "b051c49a15ca-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10020,
      "end_char": 15681,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.162340",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Embeddings](https://qdrant.tech/documentation/embeddings/) - - Upstage",
    "metadata": {
      "chunk_id": "b051c49a15ca-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 609,
      "char_count": 2478,
      "start_char": 15683,
      "end_char": 18161,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.175133",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 609,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "20f1f049e03cb471",
      "content_digest": "20f1f049e03cb471",
      "chunk_length": 2478,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.109589
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.082192
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.047945
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034247
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.023973
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020548
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.006849
          }
        ],
        "unique_terms": 98,
        "total_terms": 292
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "overall": 0.8338666666666666
    }
  },
  {
    "text": "# Upstage\n\nQdrant supports working with the Solar Embeddings API from [Upstage](https://upstage.ai/).\n\n[Solar Embeddings](https://developers.upstage.ai/docs/apis/embeddings) API features dual models for user queries and document embedding, within a unified vector space, designed for performant text processing.\n\nYou can generate an API key to authenticate the requests from the [Upstage Console](https://console.upstage.ai/api-keys).",
    "metadata": {
      "chunk_id": "b051c49a15ca-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Upstage"
      ],
      "heading_text": "Upstage",
      "token_count": 93,
      "char_count": 434,
      "start_char": 18163,
      "end_char": 18597,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hierarchical_precise_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.176686",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 93,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Upstage",
      "chunk_hash": "2b5940d2bd66569f",
      "content_digest": "2b5940d2bd66569f",
      "chunk_length": 434,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "upstage",
          "api",
          "the",
          "embeddings",
          "https",
          "solar",
          "from",
          "for",
          "console",
          "qdrant",
          "supports",
          "working",
          "with",
          "developers",
          "docs",
          "apis",
          "features",
          "dual",
          "models",
          "user"
        ],
        "term_weights": [
          {
            "term": "upstage",
            "tf": 6,
            "weight": 0.105263
          },
          {
            "term": "api",
            "tf": 4,
            "weight": 0.070175
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "embeddings",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "solar",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "console",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "working",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "developers",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "docs",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "apis",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "features",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "dual",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "user",
            "tf": 1,
            "weight": 0.017544
          }
        ],
        "unique_terms": 39,
        "total_terms": 57
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Upstage",
        "api",
        "console",
        "embeddings",
        "for",
        "from",
        "https",
        "qdrant",
        "solar",
        "the",
        "upstage"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "overall": 0.7174999999999999
    }
  },
  {
    "text": "### Setting up the Qdrant client and Upstage session ```python import requests from qdrant_client import QdrantClient  UPSTAGE_BASE_URL = \"https://api.upstage.ai/v1/solar/embeddings\"  UPSTAGE_API_KEY = \"<YOUR_API_KEY>\"  upstage_session = requests.Session()  client = QdrantClient(url=\"http://localhost:6333\")  headers = {     \"Authorization\": f\"Bearer {UPSTAGE_API_KEY}\",     \"Accept\": \"application/json\", }  texts = [     \"Qdrant is the best vector search engine!\",     \"Loved by Enterprises and everyone building for low latency, high performance, and scale.\", ] ``` ```typescript import { QdrantClient } from '@qdrant/js-client-rest';  const UPSTAGE_BASE_URL = \"https://api.upstage.ai/v1/solar/embeddings\" const UPSTAGE_API_KEY = \"<YOUR_API_KEY>\"  const client = new QdrantClient({ url: 'http://localhost:6333' });  const headers = {     \"Authorization\": \"Bearer \" + UPSTAGE_API_KEY,     \"Accept\": \"application/json\",     \"Content-Type\": \"application/json\" }  const texts = [     \"Qdrant is the best vector search engine!\",     \"Loved by Enterprises and everyone building for low latency, high performance, and scale.\", ] ``` The following example shows how to embed documents with the recommended `solar-embedding-1-large-passage` and `solar-embedding-1-large-query` models that generates sentence embeddings of size 4096.",
    "metadata": {
      "chunk_id": "b051c49a15ca-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Setting up the Qdrant client and Upstage session"
      ],
      "heading_text": "Setting up the Qdrant client and Upstage session",
      "token_count": 339,
      "char_count": 1326,
      "start_char": 18599,
      "end_char": 19925,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.675169387755102,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.179738",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 339,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Setting up the Qdrant client and Upstage session",
      "chunk_hash": "26e9b865dde5df5b",
      "content_digest": "26e9b865dde5df5b",
      "chunk_length": 1326,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "upstage",
          "api",
          "and",
          "key",
          "the",
          "qdrant",
          "client",
          "const",
          "qdrantclient",
          "url",
          "solar",
          "session",
          "import",
          "embeddings",
          "application",
          "json",
          "requests",
          "from",
          "base",
          "https"
        ],
        "term_weights": [
          {
            "term": "upstage",
            "tf": 10,
            "weight": 0.063291
          },
          {
            "term": "api",
            "tf": 8,
            "weight": 0.050633
          },
          {
            "term": "and",
            "tf": 6,
            "weight": 0.037975
          },
          {
            "term": "key",
            "tf": 6,
            "weight": 0.037975
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.031646
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.031646
          },
          {
            "term": "client",
            "tf": 5,
            "weight": 0.031646
          },
          {
            "term": "const",
            "tf": 5,
            "weight": 0.031646
          },
          {
            "term": "qdrantclient",
            "tf": 4,
            "weight": 0.025316
          },
          {
            "term": "url",
            "tf": 4,
            "weight": 0.025316
          },
          {
            "term": "solar",
            "tf": 4,
            "weight": 0.025316
          },
          {
            "term": "session",
            "tf": 3,
            "weight": 0.018987
          },
          {
            "term": "import",
            "tf": 3,
            "weight": 0.018987
          },
          {
            "term": "embeddings",
            "tf": 3,
            "weight": 0.018987
          },
          {
            "term": "application",
            "tf": 3,
            "weight": 0.018987
          },
          {
            "term": "json",
            "tf": 3,
            "weight": 0.018987
          },
          {
            "term": "requests",
            "tf": 2,
            "weight": 0.012658
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.012658
          },
          {
            "term": "base",
            "tf": 2,
            "weight": 0.012658
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.012658
          }
        ],
        "unique_terms": 68,
        "total_terms": 158
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Setting up the Qdrant client and Upstage session",
        "and",
        "api",
        "client",
        "const",
        "key",
        "qdrant",
        "qdrantclient",
        "the",
        "upstage",
        "url"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.675169387755102,
      "overall": 0.7917231292517006
    }
  },
  {
    "text": "### Converting the model outputs to Qdrant points ```python from qdrant_client.models import PointStruct  points = [     PointStruct(         id=idx,         vector=data[\"embedding\"],         payload={\"text\": text},     )     for idx, (data, text) in enumerate(zip(response_body[\"data\"], texts)) ] ``` ```typescript let points = response_body.data.map((data, i) => {     return {         id: i,         vector: data.embedding,         payload: {             text: texts[i]         }     } }) ```",
    "metadata": {
      "chunk_id": "b051c49a15ca-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Converting the model outputs to Qdrant points"
      ],
      "heading_text": "Converting the model outputs to Qdrant points",
      "token_count": 117,
      "char_count": 495,
      "start_char": 20407,
      "end_char": 20902,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.550377358490566,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.183697",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 117,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Converting the model outputs to Qdrant points",
      "chunk_hash": "1dc935458425ae32",
      "content_digest": "1dc935458425ae32",
      "chunk_length": 495,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "data",
          "text",
          "points",
          "qdrant",
          "pointstruct",
          "idx",
          "vector",
          "embedding",
          "payload",
          "response",
          "body",
          "texts",
          "converting",
          "the",
          "model",
          "outputs",
          "python",
          "from",
          "client",
          "models"
        ],
        "term_weights": [
          {
            "term": "data",
            "tf": 6,
            "weight": 0.12766
          },
          {
            "term": "text",
            "tf": 4,
            "weight": 0.085106
          },
          {
            "term": "points",
            "tf": 3,
            "weight": 0.06383
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "pointstruct",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "idx",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "response",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "body",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "texts",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "converting",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "outputs",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "client",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.021277
          }
        ],
        "unique_terms": 28,
        "total_terms": 47
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Converting the model outputs to Qdrant points",
        "data",
        "embedding",
        "idx",
        "payload",
        "points",
        "pointstruct",
        "qdrant",
        "response",
        "text",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.550377358490566,
      "overall": 0.7501257861635219
    }
  },
  {
    "text": "### Creating a collection to insert the documents ```python from qdrant_client.models import VectorParams, Distance  collection_name = \"example_collection\"  client.create_collection(     collection_name,     vectors_config=VectorParams(         size=4096,         distance=Distance.COSINE,     ), ) client.upsert(collection_name, points) ``` ```typescript const COLLECTION_NAME = \"example_collection\"  await client.createCollection(COLLECTION_NAME, {     vectors: {         size: 4096,         distance: 'Cosine',     } });  await client.upsert(COLLECTION_NAME, {     wait: true,     points }) ```",
    "metadata": {
      "chunk_id": "b051c49a15ca-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Creating a collection to insert the documents"
      ],
      "heading_text": "Creating a collection to insert the documents",
      "token_count": 133,
      "char_count": 597,
      "start_char": 20906,
      "end_char": 21503,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7429411764705882,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.185781",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 133,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Creating a collection to insert the documents",
      "chunk_hash": "53e6f95f0ed89fc5",
      "content_digest": "53e6f95f0ed89fc5",
      "chunk_length": 597,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "collection",
          "name",
          "client",
          "distance",
          "vectorparams",
          "example",
          "vectors",
          "size",
          "4096",
          "cosine",
          "upsert",
          "points",
          "await",
          "creating",
          "insert",
          "the",
          "documents",
          "python",
          "from",
          "qdrant"
        ],
        "term_weights": [
          {
            "term": "collection",
            "tf": 10,
            "weight": 0.169492
          },
          {
            "term": "name",
            "tf": 6,
            "weight": 0.101695
          },
          {
            "term": "client",
            "tf": 5,
            "weight": 0.084746
          },
          {
            "term": "distance",
            "tf": 4,
            "weight": 0.067797
          },
          {
            "term": "vectorparams",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "example",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "size",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "4096",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "cosine",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "upsert",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "await",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "creating",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "insert",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "documents",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.016949
          }
        ],
        "unique_terms": 29,
        "total_terms": 59
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "4096",
        "Creating a collection to insert the documents",
        "client",
        "collection",
        "cosine",
        "distance",
        "example",
        "name",
        "size",
        "vectorparams",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7429411764705882,
      "overall": 0.7809803921568627
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/embeddings/upstage.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Upstage](#upstage.md)    - - [Setting up the Qdrant client and Upstage session](#setting-up-the-qdrant-client-and-upstage-session.md)     - [Embedding documents](#embedding-documents.md)     - [Converting the model outputs to Qdrant points](#converting-the-model-outputs-to-qdrant-points.md)     - [Creating a collection to insert the documents](#creating-a-collection-to-insert-the-documents.md)    - [Searching for documents with Qdrant](#searching-for-documents-with-qdrant.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/embeddings/upstage.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "b051c49a15ca-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "filename": "_documentation_embeddings_upstage_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 270,
      "char_count": 1036,
      "start_char": 22360,
      "end_char": 23396,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.515,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:22.189630",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 270,
      "document_id": "b051c49a15ca",
      "document_name": "_documentation_embeddings_upstage_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "source_filename": "_documentation_embeddings_upstage_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_upstage\\_documentation_embeddings_upstage_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "64cb8fb3a285cbeb",
      "content_digest": "64cb8fb3a285cbeb",
      "chunk_length": 1036,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "page",
          "github",
          "landing",
          "upstage",
          "the",
          "documents",
          "https",
          "com",
          "this",
          "for",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "embeddings",
          "create",
          "issues"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 12,
            "weight": 0.094488
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.055118
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.055118
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.047244
          },
          {
            "term": "upstage",
            "tf": 6,
            "weight": 0.047244
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.047244
          },
          {
            "term": "documents",
            "tf": 6,
            "weight": 0.047244
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "issues",
            "tf": 2,
            "weight": 0.015748
          }
        ],
        "unique_terms": 48,
        "total_terms": 127
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "com",
        "documents",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "the",
        "this",
        "upstage"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.515,
      "overall": 0.705
    }
  }
]