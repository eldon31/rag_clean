[
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "b70c86ed64db-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 1088,
      "end_char": 3056,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.068796",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "b70c86ed64db-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 3738,
      "end_char": 5726,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.074580",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)",
    "metadata": {
      "chunk_id": "b70c86ed64db-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 83,
      "char_count": 311,
      "start_char": 5728,
      "end_char": 6039,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.075607",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 83,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "f059a5deb61e367d",
      "content_digest": "f059a5deb61e367d",
      "chunk_length": 311,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "faq",
          "https",
          "tech",
          "documentation",
          "fundamentals",
          "database",
          "optimization",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.228571
          },
          {
            "term": "faq",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "tech",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "documentation",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "fundamentals",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 14,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "release",
        "support",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.7209090909090908
    }
  },
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "b70c86ed64db-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 6416,
      "end_char": 8384,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.081877",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "b70c86ed64db-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 9066,
      "end_char": 11054,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.088550",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)  - [Documentation](https://qdrant.tech/documentation/) - - [Advanced tutorials](https://qdrant.tech/documentation/advanced-tutorials/) - - How to Use Multivector Representations with Qdrant Effectively",
    "metadata": {
      "chunk_id": "b70c86ed64db-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 130,
      "char_count": 513,
      "start_char": 11056,
      "end_char": 11569,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7233333333333333,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.090886",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 130,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "660a7cf8f52c96f3",
      "content_digest": "660a7cf8f52c96f3",
      "chunk_length": 513,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "documentation",
          "tech",
          "faq",
          "fundamentals",
          "database",
          "optimization",
          "advanced",
          "tutorials",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases",
          "how",
          "use",
          "multivector",
          "representations"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 11,
            "weight": 0.2
          },
          {
            "term": "https",
            "tf": 6,
            "weight": 0.109091
          },
          {
            "term": "documentation",
            "tf": 6,
            "weight": 0.109091
          },
          {
            "term": "tech",
            "tf": 5,
            "weight": 0.090909
          },
          {
            "term": "faq",
            "tf": 4,
            "weight": 0.072727
          },
          {
            "term": "fundamentals",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "tutorials",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "multivector",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "representations",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 22,
        "total_terms": 55
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "advanced",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "tech",
        "tutorials"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7233333333333333,
      "overall": 0.7744444444444444
    }
  },
  {
    "text": "# How to Effectively Use Multivector Representations in Qdrant for Reranking\n\nMultivector Representations are one of the most powerful features of Qdrant. However, most people don’t use them effectively, resulting in massive RAM overhead, slow inserts, and wasted compute.\n\nIn this tutorial, you’ll discover how to effectively use multivector representations in Qdrant.",
    "metadata": {
      "chunk_id": "b70c86ed64db-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "How to Effectively Use Multivector Representations in Qdrant for Reranking"
      ],
      "heading_text": "How to Effectively Use Multivector Representations in Qdrant for Reranking",
      "token_count": 80,
      "char_count": 369,
      "start_char": 11571,
      "end_char": 11940,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5034615384615384,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.091281",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 80,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "How to Effectively Use Multivector Representations in Qdrant for Reranking",
      "chunk_hash": "42179b5e777890b4",
      "content_digest": "42179b5e777890b4",
      "chunk_length": 369,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "effectively",
          "use",
          "multivector",
          "representations",
          "qdrant",
          "how",
          "most",
          "for",
          "reranking",
          "are",
          "one",
          "the",
          "powerful",
          "features",
          "however",
          "people",
          "don",
          "them",
          "resulting",
          "massive"
        ],
        "term_weights": [
          {
            "term": "effectively",
            "tf": 3,
            "weight": 0.069767
          },
          {
            "term": "use",
            "tf": 3,
            "weight": 0.069767
          },
          {
            "term": "multivector",
            "tf": 3,
            "weight": 0.069767
          },
          {
            "term": "representations",
            "tf": 3,
            "weight": 0.069767
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.069767
          },
          {
            "term": "how",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "most",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "reranking",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "one",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "powerful",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "features",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "however",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "people",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "don",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "them",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "resulting",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "massive",
            "tf": 1,
            "weight": 0.023256
          }
        ],
        "unique_terms": 31,
        "total_terms": 43
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "How to Effectively Use Multivector Representations in Qdrant for Reranking",
        "are",
        "effectively",
        "for",
        "how",
        "most",
        "multivector",
        "qdrant",
        "representations",
        "reranking",
        "use"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5034615384615384,
      "overall": 0.7344871794871795
    }
  },
  {
    "text": "## What are Multivector Representations?\n\nIn most vector engines, each document is represented by a single vector - an approach that works well for short texts but often struggles with longer documents. Single vector representations perform pooling of the token-level embeddings, which obviously leads to losing some information.\n\nMultivector representations offer a more fine-grained alternative where a single document is represented using multiple vectors, often at the token or phrase level. This enables more precise matching between specific query terms and relevant parts of the document. Matching is especially effective in Late Interaction models like [ColBERT](https://qdrant.tech/documentation/fastembed/fastembed-colbert/), which retain token-level embeddings and perform interaction during query time leading to relevance scoring.\n\nAs you will see later in the tutorial, Qdrant supports multivectors and thus late interaction models natively.",
    "metadata": {
      "chunk_id": "b70c86ed64db-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "What are Multivector Representations?"
      ],
      "heading_text": "What are Multivector Representations?",
      "token_count": 170,
      "char_count": 955,
      "start_char": 11942,
      "end_char": 12897,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7144094488188976,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.091737",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 170,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "What are Multivector Representations?",
      "chunk_hash": "f9479f095639b929",
      "content_digest": "f9479f095639b929",
      "chunk_length": 955,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "representations",
          "vector",
          "document",
          "single",
          "token",
          "level",
          "and",
          "interaction",
          "multivector",
          "represented",
          "often",
          "perform",
          "embeddings",
          "which",
          "more",
          "matching",
          "query",
          "late",
          "models"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.034188
          },
          {
            "term": "representations",
            "tf": 3,
            "weight": 0.025641
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.025641
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.025641
          },
          {
            "term": "single",
            "tf": 3,
            "weight": 0.025641
          },
          {
            "term": "token",
            "tf": 3,
            "weight": 0.025641
          },
          {
            "term": "level",
            "tf": 3,
            "weight": 0.025641
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.025641
          },
          {
            "term": "interaction",
            "tf": 3,
            "weight": 0.025641
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "represented",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "often",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "perform",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "which",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "more",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "matching",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "query",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "late",
            "tf": 2,
            "weight": 0.017094
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.017094
          }
        ],
        "unique_terms": 84,
        "total_terms": 117
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "What are Multivector Representations?",
        "and",
        "document",
        "interaction",
        "level",
        "multivector",
        "representations",
        "single",
        "the",
        "token",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7144094488188976,
      "overall": 0.8048031496062991
    }
  },
  {
    "text": "## What is Rescoring, and Why is it Used? Rescoring is two-fold:  - Retrieve relevant documents using a fast model. - Rerank them using a more accurate but slower model such as ColBERT.",
    "metadata": {
      "chunk_id": "b70c86ed64db-0013",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "What is Rescoring, and Why is it Used?"
      ],
      "heading_text": "What is Rescoring, and Why is it Used?",
      "token_count": 47,
      "char_count": 185,
      "start_char": 13694,
      "end_char": 13879,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5445454545454546,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.094032",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 47,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "What is Rescoring, and Why is it Used?",
      "chunk_hash": "5019ce2fba8090b1",
      "content_digest": "5019ce2fba8090b1",
      "chunk_length": 185,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "rescoring",
          "using",
          "model",
          "what",
          "and",
          "why",
          "used",
          "two",
          "fold",
          "retrieve",
          "relevant",
          "documents",
          "fast",
          "rerank",
          "them",
          "more",
          "accurate",
          "but",
          "slower",
          "such"
        ],
        "term_weights": [
          {
            "term": "rescoring",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "what",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "why",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "two",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "fold",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "retrieve",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "relevant",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "documents",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "fast",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "rerank",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "them",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "more",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "accurate",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "but",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "slower",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "such",
            "tf": 1,
            "weight": 0.041667
          }
        ],
        "unique_terms": 21,
        "total_terms": 24
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "What is Rescoring, and Why is it Used?",
        "and",
        "fold",
        "model",
        "rescoring",
        "retrieve",
        "two",
        "used",
        "using",
        "what",
        "why"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5445454545454546,
      "overall": 0.7148484848484848
    }
  },
  {
    "text": "## Why Indexing Every Vector by Default is a Problem  In multivector representations (such as those used by Late Interaction models like ColBERT), a single logical document results in hundreds of token-level vectors. Indexing each of these vectors individually with HNSW in Qdrant can lead to:  - High RAM usage - Slow insert times due to the complexity of maintaining the HNSW graph  However, because multivectors are typically used in the reranking stage (after a first-pass retrieval using dense vectors), there’s often no need to index these token-level vectors with HNSW. Instead, they can be stored as multi-vector fields (without HNSW indexing) and used at query-time for reranking, which reduces resource overhead and improves performance. For more on this, check out Qdrant’s detailed breakdown in our [Scaling PDF Retrieval with Qdrant tutorial](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/#math-behind-the-scaling). With Qdrant, you have full control of how indexing works. You can disable indexing by setting the HNSW `m` parameter to `0`: ```python from qdrant_client import QdrantClient, models  client = QdrantClient(\"http://localhost:6333\") collection_name = \"dense_multivector_demo\" client.create_collection(     collection_name=collection_name,     vectors_config={         \"dense\": models.VectorParams(             size=384,             distance=models.Distance.COSINE             # Leave HNSW indexing ON for dense         ),         \"colbert\": models.VectorParams(             size=128,             distance=models.Distance.COSINE,             multivector_config=models.MultiVectorConfig(                 comparator=models.MultiVectorComparator.MAX_SIM             ),             hnsw_config=models.HnswConfigDiff(m=0)  # Disable HNSW for reranking         )     } ) ``` By disabling HNSW on multivectors, you:  - Save compute. - Reduce memory usage. - Speed up vector uploads.",
    "metadata": {
      "chunk_id": "b70c86ed64db-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Why Indexing Every Vector by Default is a Problem"
      ],
      "heading_text": "Why Indexing Every Vector by Default is a Problem",
      "token_count": 424,
      "char_count": 1930,
      "start_char": 13882,
      "end_char": 15812,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7424777777777778,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.098506",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 424,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Why Indexing Every Vector by Default is a Problem",
      "chunk_hash": "4f4a452d620c5f33",
      "content_digest": "4f4a452d620c5f33",
      "chunk_length": 1930,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "models",
          "hnsw",
          "indexing",
          "qdrant",
          "vectors",
          "the",
          "with",
          "dense",
          "for",
          "collection",
          "distance",
          "vector",
          "multivector",
          "used",
          "can",
          "reranking",
          "retrieval",
          "you",
          "client",
          "name"
        ],
        "term_weights": [
          {
            "term": "models",
            "tf": 9,
            "weight": 0.041096
          },
          {
            "term": "hnsw",
            "tf": 9,
            "weight": 0.041096
          },
          {
            "term": "indexing",
            "tf": 6,
            "weight": 0.027397
          },
          {
            "term": "qdrant",
            "tf": 6,
            "weight": 0.027397
          },
          {
            "term": "vectors",
            "tf": 5,
            "weight": 0.022831
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.022831
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.018265
          },
          {
            "term": "dense",
            "tf": 4,
            "weight": 0.018265
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.018265
          },
          {
            "term": "collection",
            "tf": 4,
            "weight": 0.018265
          },
          {
            "term": "distance",
            "tf": 4,
            "weight": 0.018265
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.013699
          },
          {
            "term": "multivector",
            "tf": 3,
            "weight": 0.013699
          },
          {
            "term": "used",
            "tf": 3,
            "weight": 0.013699
          },
          {
            "term": "can",
            "tf": 3,
            "weight": 0.013699
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.013699
          },
          {
            "term": "retrieval",
            "tf": 3,
            "weight": 0.013699
          },
          {
            "term": "you",
            "tf": 3,
            "weight": 0.013699
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.013699
          },
          {
            "term": "name",
            "tf": 3,
            "weight": 0.013699
          }
        ],
        "unique_terms": 136,
        "total_terms": 219
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Why Indexing Every Vector by Default is a Problem",
        "collection",
        "dense",
        "for",
        "hnsw",
        "indexing",
        "models",
        "qdrant",
        "the",
        "vectors",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7424777777777778,
      "overall": 0.7808259259259259
    }
  },
  {
    "text": "## How to Generate Multivectors Using FastEmbed  Let’s demonstrate how to effectively use multivectors using [FastEmbed](https://github.com/qdrant/fastembed), which wraps ColBERT into a simple API. Install FastEmbed and Qdrant: ```bash pip install qdrant-client[fastembed]>=1.14.2 ```",
    "metadata": {
      "chunk_id": "b70c86ed64db-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "How to Generate Multivectors Using FastEmbed"
      ],
      "heading_text": "How to Generate Multivectors Using FastEmbed",
      "token_count": 71,
      "char_count": 284,
      "start_char": 15819,
      "end_char": 16103,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53375,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.099715",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 71,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "How to Generate Multivectors Using FastEmbed",
      "chunk_hash": "7a12490fddab5651",
      "content_digest": "7a12490fddab5651",
      "chunk_length": 284,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "fastembed",
          "qdrant",
          "how",
          "multivectors",
          "using",
          "install",
          "generate",
          "let",
          "demonstrate",
          "effectively",
          "use",
          "https",
          "github",
          "com",
          "which",
          "wraps",
          "colbert",
          "into",
          "simple",
          "api"
        ],
        "term_weights": [
          {
            "term": "fastembed",
            "tf": 5,
            "weight": 0.147059
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.088235
          },
          {
            "term": "how",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "multivectors",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "install",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "generate",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "let",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "demonstrate",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "effectively",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "which",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "wraps",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "colbert",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "api",
            "tf": 1,
            "weight": 0.029412
          }
        ],
        "unique_terms": 24,
        "total_terms": 34
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "How to Generate Multivectors Using FastEmbed",
        "demonstrate",
        "effectively",
        "fastembed",
        "generate",
        "how",
        "install",
        "let",
        "multivectors",
        "qdrant",
        "using"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53375,
      "overall": 0.71125
    }
  },
  {
    "text": "## Step-by-Step: ColBERT + Qdrant Setup  Ensure that Qdrant is running and create a client: ```python from qdrant_client import QdrantClient, models",
    "metadata": {
      "chunk_id": "b70c86ed64db-0016",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Step-by-Step: ColBERT + Qdrant Setup"
      ],
      "heading_text": "Step-by-Step: ColBERT + Qdrant Setup",
      "token_count": 40,
      "char_count": 148,
      "start_char": 16107,
      "end_char": 16255,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5757142857142857,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.100083",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 40,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Step-by-Step: ColBERT + Qdrant Setup",
      "chunk_hash": "9502cb404d5ebbbb",
      "content_digest": "9502cb404d5ebbbb",
      "chunk_length": 148,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "step",
          "client",
          "colbert",
          "setup",
          "ensure",
          "that",
          "running",
          "and",
          "create",
          "python",
          "from",
          "import",
          "qdrantclient",
          "models"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.157895
          },
          {
            "term": "step",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "client",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "colbert",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "setup",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "ensure",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "running",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "import",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "qdrantclient",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.052632
          }
        ],
        "unique_terms": 15,
        "total_terms": 19
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Step-by-Step: ColBERT + Qdrant Setup",
        "and",
        "client",
        "colbert",
        "create",
        "ensure",
        "qdrant",
        "running",
        "setup",
        "step",
        "that"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5757142857142857,
      "overall": 0.7585714285714286
    }
  },
  {
    "text": "# Example documents and query documents = [     \"Artificial intelligence is used in hospitals for cancer diagnosis and treatment.\",     \"Self-driving cars use AI to detect obstacles and make driving decisions.\",     \"AI is transforming customer service through chatbots and automation.\",     # ... ] query_text = \"How does AI help in medicine?\"  dense_documents = [     models.Document(text=doc, model=\"BAAI/bge-small-en\")     for doc in documents ] dense_query = models.Document(text=query_text, model=\"BAAI/bge-small-en\")  colbert_documents = [     models.Document(text=doc, model=\"colbert-ir/colbertv2.0\")     for doc in documents ] colbert_query = models.Document(text=query_text, model=\"colbert-ir/colbertv2.0\") ```",
    "metadata": {
      "chunk_id": "b70c86ed64db-0019",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Example documents and query"
      ],
      "heading_text": "Example documents and query",
      "token_count": 171,
      "char_count": 720,
      "start_char": 16470,
      "end_char": 17190,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6836708860759494,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.101226",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 171,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Example documents and query",
      "chunk_hash": "ff48d4570adb8dae",
      "content_digest": "ff48d4570adb8dae",
      "chunk_length": 720,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "text",
          "documents",
          "query",
          "and",
          "models",
          "document",
          "doc",
          "model",
          "colbert",
          "for",
          "driving",
          "dense",
          "baai",
          "bge",
          "small",
          "colbertv2",
          "example",
          "artificial",
          "intelligence",
          "used"
        ],
        "term_weights": [
          {
            "term": "text",
            "tf": 7,
            "weight": 0.084337
          },
          {
            "term": "documents",
            "tf": 6,
            "weight": 0.072289
          },
          {
            "term": "query",
            "tf": 6,
            "weight": 0.072289
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "models",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "document",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "doc",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "model",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "colbert",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.036145
          },
          {
            "term": "driving",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "dense",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "baai",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "bge",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "small",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "colbertv2",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.012048
          },
          {
            "term": "artificial",
            "tf": 1,
            "weight": 0.012048
          },
          {
            "term": "intelligence",
            "tf": 1,
            "weight": 0.012048
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.012048
          }
        ],
        "unique_terms": 41,
        "total_terms": 83
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Example documents and query",
        "and",
        "colbert",
        "doc",
        "document",
        "documents",
        "for",
        "model",
        "models",
        "query",
        "text"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6836708860759494,
      "overall": 0.7612236286919831
    }
  },
  {
    "text": "### 2. Create a Qdrant collection  Then create a Qdrant collection with both vector types. Note that we leave indexing on for the `dense` vector but turn it off for the `colbert` vector that will be used for reranking. ```python collection_name = \"dense_multivector_demo\" client.create_collection(     collection_name=collection_name,     vectors_config={         \"dense\": models.VectorParams(             size=384,             distance=models.Distance.COSINE             # Leave HNSW indexing ON for dense         ),         \"colbert\": models.VectorParams(             size=128,             distance=models.Distance.COSINE,             multivector_config=models.MultiVectorConfig(                 comparator=models.MultiVectorComparator.MAX_SIM             ),             hnsw_config=models.HnswConfigDiff(m=0)  # Disable HNSW for reranking         )     } ) ```",
    "metadata": {
      "chunk_id": "b70c86ed64db-0020",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "2. Create a Qdrant collection"
      ],
      "heading_text": "2. Create a Qdrant collection",
      "token_count": 184,
      "char_count": 863,
      "start_char": 17192,
      "end_char": 18055,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.51,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.102473",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 184,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "2. Create a Qdrant collection",
      "chunk_hash": "aea7fb5b03ea94a7",
      "content_digest": "aea7fb5b03ea94a7",
      "chunk_length": 863,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "models",
          "collection",
          "for",
          "dense",
          "distance",
          "create",
          "vector",
          "name",
          "config",
          "hnsw",
          "qdrant",
          "that",
          "leave",
          "indexing",
          "the",
          "colbert",
          "reranking",
          "multivector",
          "vectorparams",
          "size"
        ],
        "term_weights": [
          {
            "term": "models",
            "tf": 7,
            "weight": 0.081395
          },
          {
            "term": "collection",
            "tf": 6,
            "weight": 0.069767
          },
          {
            "term": "for",
            "tf": 5,
            "weight": 0.05814
          },
          {
            "term": "dense",
            "tf": 4,
            "weight": 0.046512
          },
          {
            "term": "distance",
            "tf": 4,
            "weight": 0.046512
          },
          {
            "term": "create",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "name",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "config",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "hnsw",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "that",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "leave",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "colbert",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "reranking",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "vectorparams",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "size",
            "tf": 2,
            "weight": 0.023256
          }
        ],
        "unique_terms": 44,
        "total_terms": 86
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "2. Create a Qdrant collection",
        "collection",
        "config",
        "create",
        "dense",
        "distance",
        "for",
        "hnsw",
        "models",
        "name",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.51,
      "overall": 0.7033333333333333
    }
  },
  {
    "text": "### 3. Upload Documents (Dense + Multivector)  Now upload the vectors, with `batch_size=8`. We do not have many documents, but batching is always recommended. ```python points = [     models.PointStruct(         id=i,         vector={             \"dense\": dense_documents[i],             \"colbert\": colbert_documents[i]         },         payload={\"text\": documents[i]}     ) for i in range(len(documents)) ] client.upload_points(     collection_name=\"dense_multivector_demo\",      points=points,      batch_size=8 ) ```",
    "metadata": {
      "chunk_id": "b70c86ed64db-0021",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "3. Upload Documents (Dense + Multivector)"
      ],
      "heading_text": "3. Upload Documents (Dense + Multivector)",
      "token_count": 122,
      "char_count": 520,
      "start_char": 18058,
      "end_char": 18578,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.578,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.103494",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 122,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "3. Upload Documents (Dense + Multivector)",
      "chunk_hash": "d611419e85c7e5df",
      "content_digest": "d611419e85c7e5df",
      "chunk_length": 520,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "documents",
          "dense",
          "points",
          "upload",
          "multivector",
          "batch",
          "size",
          "colbert",
          "now",
          "the",
          "vectors",
          "with",
          "not",
          "have",
          "many",
          "but",
          "batching",
          "always",
          "recommended",
          "python"
        ],
        "term_weights": [
          {
            "term": "documents",
            "tf": 6,
            "weight": 0.122449
          },
          {
            "term": "dense",
            "tf": 4,
            "weight": 0.081633
          },
          {
            "term": "points",
            "tf": 4,
            "weight": 0.081633
          },
          {
            "term": "upload",
            "tf": 3,
            "weight": 0.061224
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "batch",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "size",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "colbert",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "now",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "not",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "have",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "many",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "but",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "batching",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "always",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "recommended",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.020408
          }
        ],
        "unique_terms": 32,
        "total_terms": 49
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "3. Upload Documents (Dense + Multivector)",
        "batch",
        "colbert",
        "dense",
        "documents",
        "multivector",
        "now",
        "points",
        "size",
        "the",
        "upload"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.578,
      "overall": 0.726
    }
  },
  {
    "text": "### Query with Retrieval + Reranking in One Call  Now let’s run a search: ```python results = client.query_points(     collection_name=\"dense_multivector_demo\",     prefetch=models.Prefetch(         query=dense_query,         using=\"dense\",     ),     query=colbert_query,     using=\"colbert\",     limit=3,     with_payload=True ) ``` - The dense vector retrieves the top candidates quickly. - The Colbert multivector reranks them using token-level `MaxSim` with fine-grained precision. - Returns the top 3 results.",
    "metadata": {
      "chunk_id": "b70c86ed64db-0022",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Query with Retrieval + Reranking in One Call"
      ],
      "heading_text": "Query with Retrieval + Reranking in One Call",
      "token_count": 122,
      "char_count": 515,
      "start_char": 18581,
      "end_char": 19096,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.104867",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 122,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Query with Retrieval + Reranking in One Call",
      "chunk_hash": "32bc5e846f8351de",
      "content_digest": "32bc5e846f8351de",
      "chunk_length": 515,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "query",
          "dense",
          "the",
          "with",
          "using",
          "colbert",
          "results",
          "multivector",
          "prefetch",
          "top",
          "retrieval",
          "reranking",
          "one",
          "call",
          "now",
          "let",
          "run",
          "search",
          "python",
          "client"
        ],
        "term_weights": [
          {
            "term": "query",
            "tf": 6,
            "weight": 0.096774
          },
          {
            "term": "dense",
            "tf": 4,
            "weight": 0.064516
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.064516
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.048387
          },
          {
            "term": "using",
            "tf": 3,
            "weight": 0.048387
          },
          {
            "term": "colbert",
            "tf": 3,
            "weight": 0.048387
          },
          {
            "term": "results",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "prefetch",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "top",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "retrieval",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "reranking",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "one",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "call",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "now",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "let",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "run",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "search",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "client",
            "tf": 1,
            "weight": 0.016129
          }
        ],
        "unique_terms": 41,
        "total_terms": 62
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Query with Retrieval + Reranking in One Call",
        "colbert",
        "dense",
        "multivector",
        "prefetch",
        "query",
        "results",
        "the",
        "top",
        "using",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "overall": 0.7174999999999999
    }
  },
  {
    "text": "## Conclusion  Multivector search is one of the most powerful features of a vector database when used correctly. With this functionality in Qdrant, you can:  - Store token-level embeddings natively. - Disable indexing to reduce overhead. - Run fast retrieval and accurate reranking in one API call. - Efficiently scale late interaction. Combining FastEmbed and Qdrant leads to a production-ready pipeline for ColBERT-style reranking without wasting resources. You can do this locally or use Qdrant Cloud. Qdrant offers an easy-to-use API to get started with your search engine, so if you’re ready to dive in, sign up for free at [Qdrant Cloud](https://qdrant.tech/cloud/) and start building.",
    "metadata": {
      "chunk_id": "b70c86ed64db-0023",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Conclusion"
      ],
      "heading_text": "Conclusion",
      "token_count": 154,
      "char_count": 691,
      "start_char": 19100,
      "end_char": 19791,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.105335",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 154,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Conclusion",
      "chunk_hash": "f237094305dd6537",
      "content_digest": "f237094305dd6537",
      "chunk_length": 691,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "you",
          "and",
          "cloud",
          "search",
          "one",
          "with",
          "this",
          "can",
          "reranking",
          "api",
          "ready",
          "for",
          "use",
          "conclusion",
          "multivector",
          "the",
          "most",
          "powerful",
          "features"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 6,
            "weight": 0.067416
          },
          {
            "term": "you",
            "tf": 3,
            "weight": 0.033708
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.033708
          },
          {
            "term": "cloud",
            "tf": 3,
            "weight": 0.033708
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "one",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "reranking",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "api",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "ready",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "conclusion",
            "tf": 1,
            "weight": 0.011236
          },
          {
            "term": "multivector",
            "tf": 1,
            "weight": 0.011236
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.011236
          },
          {
            "term": "most",
            "tf": 1,
            "weight": 0.011236
          },
          {
            "term": "powerful",
            "tf": 1,
            "weight": 0.011236
          },
          {
            "term": "features",
            "tf": 1,
            "weight": 0.011236
          }
        ],
        "unique_terms": 68,
        "total_terms": 89
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Conclusion",
        "and",
        "can",
        "cloud",
        "one",
        "qdrant",
        "reranking",
        "search",
        "this",
        "with",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "overall": 0.71
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/advanced-tutorials/using-multivector-representations.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [How to Effectively Use Multivector Representations in Qdrant for Reranking](#how-to-effectively-use-multivector-representations-in-qdrant-for-reranking.md)    - [What are Multivector Representations?](#what-are-multivector-representations.md)    - [Why Token-level Vectors are Useful](#why-token-level-vectors-are-useful.md)    - [What is Rescoring, and Why is it Used?](#what-is-rescoring-and-why-is-it-used.md)    - [Why Indexing Every Vector by Default is a Problem](#why-indexing-every-vector-by-default-is-a-problem.md)    - [How to Generate Multivectors Using FastEmbed](#how-to-generate-multivectors-using-fastembed.md)    - [Step-by-Step: ColBERT + Qdrant Setup](#step-by-step-colbert--qdrant-setup.md)    - [1. Encode Documents](#1-encode-documents.md)      - [2. Create a Qdrant collection](#2-create-a-qdrant-collection.md)     - [3. Upload Documents (Dense + Multivector)](#3-upload-documents-dense--multivector.md)     - [Query with Retrieval + Reranking in One Call](#query-with-retrieval--reranking-in-one-call.md)    - [Conclusion](#conclusion.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/advanced-tutorials/using-multivector-representations.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "b70c86ed64db-0024",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 469,
      "char_count": 1687,
      "start_char": 19794,
      "end_char": 21481,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5543,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:14.106295",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 469,
      "document_id": "b70c86ed64db",
      "document_name": "_documentation_advanced-tutorials_using-multivector-representations_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_filename": "_documentation_advanced-tutorials_using-multivector-representations_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_using-multivector-representations\\_documentation_advanced-tutorials_using-multivector-representations_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "e1d3c9fd51235962",
      "content_digest": "e1d3c9fd51235962",
      "chunk_length": 1687,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "multivector",
          "page",
          "github",
          "landing",
          "representations",
          "why",
          "are",
          "https",
          "com",
          "using",
          "create",
          "how",
          "reranking",
          "what",
          "step",
          "documents",
          "this",
          "useful",
          "for"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 12,
            "weight": 0.062827
          },
          {
            "term": "multivector",
            "tf": 8,
            "weight": 0.041885
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.036649
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.036649
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.031414
          },
          {
            "term": "representations",
            "tf": 6,
            "weight": 0.031414
          },
          {
            "term": "why",
            "tf": 6,
            "weight": 0.031414
          },
          {
            "term": "are",
            "tf": 5,
            "weight": 0.026178
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "using",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "create",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "how",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "reranking",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "what",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "step",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "documents",
            "tf": 4,
            "weight": 0.020942
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.015707
          },
          {
            "term": "useful",
            "tf": 3,
            "weight": 0.015707
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.015707
          }
        ],
        "unique_terms": 69,
        "total_terms": 191
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "are",
        "com",
        "github",
        "https",
        "landing",
        "multivector",
        "page",
        "qdrant",
        "representations",
        "why"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5543,
      "overall": 0.7181000000000001
    }
  }
]