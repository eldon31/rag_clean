[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 656,
      "end_char": 1329,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.927703",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1331,
      "end_char": 6992,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.950606",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 6994,
      "end_char": 9341,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.960110",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9343,
      "end_char": 10016,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.963181",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10018,
      "end_char": 15679,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.987625",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Embeddings](https://qdrant.tech/documentation/embeddings/) - - Nomic",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 609,
      "char_count": 2476,
      "start_char": 15681,
      "end_char": 18157,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.995153",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 609,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "511cdf61505ff901",
      "content_digest": "511cdf61505ff901",
      "chunk_length": 2476,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.109589
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.082192
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.047945
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034247
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.023973
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020548
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.006849
          }
        ],
        "unique_terms": 98,
        "total_terms": 292
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "overall": 0.8338666666666666
    }
  },
  {
    "text": "# Nomic\n\nThe `nomic-embed-text-v1` model is an open source [8192 context length](https://github.com/nomic-ai/contrastors) text encoder. While you can find it on the [Hugging Face Hub](https://huggingface.co/nomic-ai/nomic-embed-text-v1), you may find it easier to obtain them through the [Nomic Text Embeddings](https://docs.nomic.ai/reference/endpoints/nomic-embed-text). Once installed, you can configure it with the official Python client, FastEmbed or through direct HTTP requests.\n\nUsing Nomic Embeddings via the Nomic API/SDK requires configuring the [Nomic API token](https://atlas.nomic.ai/cli-login).\n\nYou can use Nomic embeddings directly in Qdrant client calls. There is a difference in the way the embeddings are obtained for documents and queries.",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Nomic"
      ],
      "heading_text": "Nomic",
      "token_count": 185,
      "char_count": 760,
      "start_char": 18159,
      "end_char": 18919,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5084782608695652,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.996169",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 185,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Nomic",
      "chunk_hash": "9817996e6c9ae6c0",
      "content_digest": "9817996e6c9ae6c0",
      "chunk_length": 760,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "nomic",
          "the",
          "text",
          "https",
          "you",
          "embeddings",
          "embed",
          "can",
          "find",
          "through",
          "client",
          "api",
          "model",
          "open",
          "source",
          "8192",
          "context",
          "length",
          "github",
          "com"
        ],
        "term_weights": [
          {
            "term": "nomic",
            "tf": 13,
            "weight": 0.122642
          },
          {
            "term": "the",
            "tf": 8,
            "weight": 0.075472
          },
          {
            "term": "text",
            "tf": 5,
            "weight": 0.04717
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "embeddings",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "embed",
            "tf": 3,
            "weight": 0.028302
          },
          {
            "term": "can",
            "tf": 3,
            "weight": 0.028302
          },
          {
            "term": "find",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "through",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "client",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "api",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.009434
          },
          {
            "term": "open",
            "tf": 1,
            "weight": 0.009434
          },
          {
            "term": "source",
            "tf": 1,
            "weight": 0.009434
          },
          {
            "term": "8192",
            "tf": 1,
            "weight": 0.009434
          },
          {
            "term": "context",
            "tf": 1,
            "weight": 0.009434
          },
          {
            "term": "length",
            "tf": 1,
            "weight": 0.009434
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.009434
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.009434
          }
        ],
        "unique_terms": 66,
        "total_terms": 106
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Nomic",
        "can",
        "embed",
        "embeddings",
        "find",
        "https",
        "nomic",
        "text",
        "the",
        "through",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5084782608695652,
      "overall": 0.7028260869565216
    }
  },
  {
    "text": "#### Upsert using [Nomic SDK](https://github.com/nomic-ai/nomic)  The `task_type` parameter defines the embeddings that you get. For documents, set the `task_type` to `search_document`: ```python from qdrant_client import QdrantClient, models from nomic import embed  output = embed.text(     texts=[\"Qdrant is the best vector database!\"],     model=\"nomic-embed-text-v1\",     task_type=\"search_document\", )  client = QdrantClient() client.upsert(     collection_name=\"my-collection\",     points=models.Batch(         ids=[1],         vectors=output[\"embeddings\"],     ), ) ```",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Upsert using [Nomic SDK](https://github.com/nomic-ai/nomic)"
      ],
      "heading_text": "Upsert using [Nomic SDK](https://github.com/nomic-ai/nomic)",
      "token_count": 145,
      "char_count": 577,
      "start_char": 18921,
      "end_char": 19498,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5455555555555556,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.997346",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 145,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Upsert using [Nomic SDK](https://github.com/nomic-ai/nomic)",
      "chunk_hash": "716738fdaf408d98",
      "content_digest": "716738fdaf408d98",
      "chunk_length": 577,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "nomic",
          "the",
          "task",
          "type",
          "client",
          "embed",
          "upsert",
          "embeddings",
          "search",
          "document",
          "from",
          "qdrant",
          "import",
          "qdrantclient",
          "models",
          "output",
          "text",
          "collection",
          "using",
          "sdk"
        ],
        "term_weights": [
          {
            "term": "nomic",
            "tf": 5,
            "weight": 0.072464
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.057971
          },
          {
            "term": "task",
            "tf": 3,
            "weight": 0.043478
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.043478
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.043478
          },
          {
            "term": "embed",
            "tf": 3,
            "weight": 0.043478
          },
          {
            "term": "upsert",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "import",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "qdrantclient",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "output",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "sdk",
            "tf": 1,
            "weight": 0.014493
          }
        ],
        "unique_terms": 42,
        "total_terms": 69
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Upsert using [Nomic SDK](https://github.com/nomic-ai/nomic)",
        "client",
        "document",
        "embed",
        "embeddings",
        "nomic",
        "search",
        "task",
        "the",
        "type",
        "upsert"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5455555555555556,
      "overall": 0.715185185185185
    }
  },
  {
    "text": "#### Upsert using [FastEmbed](https://github.com/qdrant/fastembed) ```python from fastembed import TextEmbedding from client import QdrantClient, models  model = TextEmbedding(\"nomic-ai/nomic-embed-text-v1\")  output = model.embed([\"Qdrant is the best vector database!\"])  client = QdrantClient() client.upsert(     collection_name=\"my-collection\",     points=models.Batch(         ids=[1],         vectors=[embeddings.tolist() for embeddings in output],     ), ) ```",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Upsert using [FastEmbed](https://github.com/qdrant/fastembed)"
      ],
      "heading_text": "Upsert using [FastEmbed](https://github.com/qdrant/fastembed)",
      "token_count": 116,
      "char_count": 466,
      "start_char": 19501,
      "end_char": 19967,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.998185",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 116,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Upsert using [FastEmbed](https://github.com/qdrant/fastembed)",
      "chunk_hash": "337ac0a59c38369e",
      "content_digest": "337ac0a59c38369e",
      "chunk_length": 466,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "fastembed",
          "client",
          "upsert",
          "qdrant",
          "from",
          "import",
          "textembedding",
          "qdrantclient",
          "models",
          "model",
          "nomic",
          "embed",
          "output",
          "collection",
          "embeddings",
          "using",
          "https",
          "github",
          "com",
          "python"
        ],
        "term_weights": [
          {
            "term": "fastembed",
            "tf": 3,
            "weight": 0.061224
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.061224
          },
          {
            "term": "upsert",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "import",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "textembedding",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "qdrantclient",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "nomic",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "embed",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "output",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.020408
          }
        ],
        "unique_terms": 32,
        "total_terms": 49
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Upsert using [FastEmbed](https://github.com/qdrant/fastembed)",
        "client",
        "fastembed",
        "from",
        "import",
        "model",
        "models",
        "qdrant",
        "qdrantclient",
        "textembedding",
        "upsert"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "overall": 0.7174999999999999
    }
  },
  {
    "text": "#### Search using [Nomic SDK](https://github.com/nomic-ai/nomic)  To query the collection, set the `task_type` to `search_query`: ```python output = embed.text(     texts=[\"What is the best vector database?\"],     model=\"nomic-embed-text-v1\",     task_type=\"search_query\", )  client.search(     collection_name=\"my-collection\",     query_vector=output[\"embeddings\"][0], ) ```",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Search using [Nomic SDK](https://github.com/nomic-ai/nomic)"
      ],
      "heading_text": "Search using [Nomic SDK](https://github.com/nomic-ai/nomic)",
      "token_count": 96,
      "char_count": 375,
      "start_char": 19970,
      "end_char": 20345,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.999132",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 96,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Search using [Nomic SDK](https://github.com/nomic-ai/nomic)",
      "chunk_hash": "439a49a35ba2f1e0",
      "content_digest": "439a49a35ba2f1e0",
      "chunk_length": 375,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "search",
          "nomic",
          "query",
          "the",
          "collection",
          "task",
          "type",
          "output",
          "embed",
          "text",
          "vector",
          "using",
          "sdk",
          "https",
          "github",
          "com",
          "set",
          "python",
          "texts",
          "what"
        ],
        "term_weights": [
          {
            "term": "search",
            "tf": 4,
            "weight": 0.088889
          },
          {
            "term": "nomic",
            "tf": 4,
            "weight": 0.088889
          },
          {
            "term": "query",
            "tf": 4,
            "weight": 0.088889
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.066667
          },
          {
            "term": "collection",
            "tf": 3,
            "weight": 0.066667
          },
          {
            "term": "task",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "output",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "embed",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "sdk",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "texts",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "what",
            "tf": 1,
            "weight": 0.022222
          }
        ],
        "unique_terms": 26,
        "total_terms": 45
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Search using [Nomic SDK](https://github.com/nomic-ai/nomic)",
        "collection",
        "embed",
        "nomic",
        "output",
        "query",
        "search",
        "task",
        "text",
        "the",
        "type"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "overall": 0.7174999999999999
    }
  },
  {
    "text": "#### Search using [FastEmbed](https://github.com/qdrant/fastembed) ```python output = next(model.embed(\"What is the best vector database?\"))  client.search(     collection_name=\"my-collection\",     query_vector=output.tolist(), ) ``` For more information, see the Nomic documentation on [Text embeddings](https://docs.nomic.ai/reference/endpoints/nomic-embed-text).",
    "metadata": {
      "chunk_id": "bc14c34e5ebc-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "filename": "_documentation_embeddings_nomic_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Search using [FastEmbed](https://github.com/qdrant/fastembed)"
      ],
      "heading_text": "Search using [FastEmbed](https://github.com/qdrant/fastembed)",
      "token_count": 81,
      "char_count": 365,
      "start_char": 20348,
      "end_char": 20713,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5792857142857143,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:20.999942",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 81,
      "document_id": "bc14c34e5ebc",
      "document_name": "_documentation_embeddings_nomic_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "source_filename": "_documentation_embeddings_nomic_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_nomic\\_documentation_embeddings_nomic_.md",
      "hierarchy_path": "Search using [FastEmbed](https://github.com/qdrant/fastembed)",
      "chunk_hash": "83c1812664a9a283",
      "content_digest": "83c1812664a9a283",
      "chunk_length": 365,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "nomic",
          "search",
          "fastembed",
          "https",
          "output",
          "embed",
          "the",
          "vector",
          "collection",
          "text",
          "using",
          "github",
          "com",
          "qdrant",
          "python",
          "next",
          "model",
          "what",
          "best",
          "database"
        ],
        "term_weights": [
          {
            "term": "nomic",
            "tf": 3,
            "weight": 0.068182
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "output",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "embed",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "next",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "what",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "best",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "database",
            "tf": 1,
            "weight": 0.022727
          }
        ],
        "unique_terms": 33,
        "total_terms": 44
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Search using [FastEmbed](https://github.com/qdrant/fastembed)",
        "collection",
        "embed",
        "fastembed",
        "https",
        "nomic",
        "output",
        "search",
        "text",
        "the",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5792857142857143,
      "overall": 0.6930952380952381
    }
  }
]