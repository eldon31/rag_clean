[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 662,
      "end_char": 1335,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:23.987599",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1337,
      "end_char": 6998,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.019890",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 7000,
      "end_char": 9347,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.026869",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9349,
      "end_char": 10022,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.029005",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10024,
      "end_char": 15685,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.055725",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Embeddings](https://qdrant.tech/documentation/embeddings/) - - Twelve Labs",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 609,
      "char_count": 2482,
      "start_char": 15687,
      "end_char": 18169,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9023809523809525,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.067002",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 609,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "606c1a57ad4582b5",
      "content_digest": "606c1a57ad4582b5",
      "chunk_length": 2482,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.109215
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.081911
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.078498
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.078498
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.047782
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.03413
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030717
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030717
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.023891
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020478
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017065
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017065
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013652
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013652
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013652
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010239
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010239
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010239
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010239
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.006826
          }
        ],
        "unique_terms": 99,
        "total_terms": 293
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9023809523809525,
      "overall": 0.8341269841269842
    }
  },
  {
    "text": "# Twelve Labs\n\n[Twelve Labs](https://twelvelabs.io) Embed API provides powerful embeddings that represent videos, texts, images, and audio in a unified vector space. This space enables any-to-any searches across different types of content.\n\nBy natively processing all modalities, it captures interactions like visual expressions, speech, and context, enabling advanced applications such as sentiment analysis, anomaly detection, and recommendation systems with precision and efficiency.\n\nWe’ll look at how to work with Twelve Labs embeddings in Qdrant via the Python and Node SDKs.",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Twelve Labs"
      ],
      "heading_text": "Twelve Labs",
      "token_count": 113,
      "char_count": 581,
      "start_char": 18171,
      "end_char": 18752,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.75625,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.068570",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 113,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Twelve Labs",
      "chunk_hash": "ac53c36c85237581",
      "content_digest": "ac53c36c85237581",
      "chunk_length": 581,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "and",
          "twelve",
          "labs",
          "embeddings",
          "space",
          "any",
          "with",
          "https",
          "twelvelabs",
          "embed",
          "api",
          "provides",
          "powerful",
          "that",
          "represent",
          "videos",
          "texts",
          "images",
          "audio",
          "unified"
        ],
        "term_weights": [
          {
            "term": "and",
            "tf": 5,
            "weight": 0.069444
          },
          {
            "term": "twelve",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "labs",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "space",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "any",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "twelvelabs",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "embed",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "api",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "powerful",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "represent",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "videos",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "texts",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "images",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "audio",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "unified",
            "tf": 1,
            "weight": 0.013889
          }
        ],
        "unique_terms": 60,
        "total_terms": 72
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Twelve Labs",
        "and",
        "any",
        "embed",
        "embeddings",
        "https",
        "labs",
        "space",
        "twelve",
        "twelvelabs",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.75625,
      "overall": 0.7854166666666665
    }
  },
  {
    "text": "# https://playground.twelvelabs.io/dashboard/api-key TL_API_KEY = \"<YOUR_TWELVE_LABS_API_KEY>\"  twelvelabs_client = TwelveLabs(api_key=TL_API_KEY) qdrant_client = QdrantClient(url=\"http://localhost:6333/\") ``` ```typescript import { QdrantClient } from '@qdrant/js-client-rest'; import { TwelveLabs, EmbeddingsTask, SegmentEmbedding } from 'twelvelabs-js';  // Get your API keys from: // https://playground.twelvelabs.io/dashboard/api-key const TL_API_KEY = \"<YOUR_TWELVE_LABS_API_KEY>\"  const twelveLabsClient = new TwelveLabs({ apiKey: TL_API_KEY }); const qdrantClient = new QdrantClient({ url: 'http://localhost:6333' }); ``` The following example uses the `\"Marengo-retrieval-2.7\"` model to embed a video. It generates vector embeddings of 1024 dimensionality and works with cosine similarity. You can use the same model to embed audio, text and images into a common vector space. Enabling cross-modality searches!",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "https://playground.twelvelabs.io/dashboard/api-key"
      ],
      "heading_text": "https://playground.twelvelabs.io/dashboard/api-key",
      "token_count": 246,
      "char_count": 919,
      "start_char": 19041,
      "end_char": 19960,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7051515151515152,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.072862",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 246,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "https://playground.twelvelabs.io/dashboard/api-key",
      "chunk_hash": "136a671514460dc9",
      "content_digest": "136a671514460dc9",
      "chunk_length": 919,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "api",
          "key",
          "twelvelabs",
          "qdrantclient",
          "your",
          "client",
          "from",
          "const",
          "the",
          "https",
          "playground",
          "dashboard",
          "twelve",
          "labs",
          "qdrant",
          "url",
          "http",
          "localhost",
          "6333",
          "import"
        ],
        "term_weights": [
          {
            "term": "api",
            "tf": 10,
            "weight": 0.088496
          },
          {
            "term": "key",
            "tf": 9,
            "weight": 0.079646
          },
          {
            "term": "twelvelabs",
            "tf": 7,
            "weight": 0.061947
          },
          {
            "term": "qdrantclient",
            "tf": 4,
            "weight": 0.035398
          },
          {
            "term": "your",
            "tf": 3,
            "weight": 0.026549
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.026549
          },
          {
            "term": "from",
            "tf": 3,
            "weight": 0.026549
          },
          {
            "term": "const",
            "tf": 3,
            "weight": 0.026549
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.026549
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "playground",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "dashboard",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "twelve",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "labs",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "url",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "http",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "localhost",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "6333",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "import",
            "tf": 2,
            "weight": 0.017699
          }
        ],
        "unique_terms": 61,
        "total_terms": 113
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "api",
        "client",
        "const",
        "from",
        "https",
        "https://playground.twelvelabs.io/dashboard/api-key",
        "key",
        "qdrantclient",
        "the",
        "twelvelabs",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7051515151515152,
      "overall": 0.8017171717171716
    }
  },
  {
    "text": "### Embedding videos ```python task = twelvelabs_client.embed.task.create(     model_name=\"Marengo-retrieval-2.7\",     video_url=\"https://sample-videos.com/video321/mp4/720/big_buck_bunny_720p_2mb.mp4\" )  task.wait_for_done(sleep_interval=3)  task_result = twelvelabs_client.embed.task.retrieve(task.id) ``` ```typescript const task = await twelveLabsClient.embed.task.create(\"Marengo-retrieval-2.7\", {     url: \"https://sample-videos.com/video321/mp4/720/big_buck_bunny_720p_2mb.mp4\" })  await task.waitForDone(3)  const taskResult = await twelveLabsClient.embed.task.retrieve(task.id) ```",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Embedding videos"
      ],
      "heading_text": "Embedding videos",
      "token_count": 172,
      "char_count": 590,
      "start_char": 19965,
      "end_char": 20555,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5172727272727272,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.074688",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 172,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Embedding videos",
      "chunk_hash": "440e259304524ef4",
      "content_digest": "440e259304524ef4",
      "chunk_length": 590,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "task",
          "embed",
          "mp4",
          "videos",
          "await",
          "twelvelabs",
          "client",
          "create",
          "marengo",
          "retrieval",
          "url",
          "https",
          "sample",
          "com",
          "video321",
          "720",
          "big",
          "buck",
          "bunny",
          "720p"
        ],
        "term_weights": [
          {
            "term": "task",
            "tf": 11,
            "weight": 0.142857
          },
          {
            "term": "embed",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "mp4",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "videos",
            "tf": 3,
            "weight": 0.038961
          },
          {
            "term": "await",
            "tf": 3,
            "weight": 0.038961
          },
          {
            "term": "twelvelabs",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "client",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "marengo",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "retrieval",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "url",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "sample",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "video321",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "720",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "big",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "buck",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "bunny",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "720p",
            "tf": 2,
            "weight": 0.025974
          }
        ],
        "unique_terms": 38,
        "total_terms": 77
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Embedding videos",
        "await",
        "client",
        "create",
        "embed",
        "marengo",
        "mp4",
        "retrieval",
        "task",
        "twelvelabs",
        "videos"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5172727272727272,
      "overall": 0.6724242424242424
    }
  },
  {
    "text": "### Converting the model outputs to Qdrant points ```python from qdrant_client.models import PointStruct  points = [     PointStruct(         id=idx,         vector=v.embeddings_float,         payload={             \"start_offset_sec\": v.start_offset_sec,             \"end_offset_sec\": v.end_offset_sec,             \"embedding_scope\": v.embedding_scope,         },     )     for idx, v in enumerate(task_result.video_embedding.segments) ] ``` ```typescript let points = taskResult.videoEmbedding.segments.map((data, i) => {     return {         id: i,         vector: data.embeddingsFloat,         payload: {             startOffsetSec: data.startOffsetSec,             endOffsetSec: data.endOffsetSec,             embeddingScope: data.embeddingScope         }     } }) ```",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Converting the model outputs to Qdrant points"
      ],
      "heading_text": "Converting the model outputs to Qdrant points",
      "token_count": 167,
      "char_count": 772,
      "start_char": 20559,
      "end_char": 21331,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5555737704918032,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.076807",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 167,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Converting the model outputs to Qdrant points",
      "chunk_hash": "0f3f917dbfcc5e3c",
      "content_digest": "0f3f917dbfcc5e3c",
      "chunk_length": 772,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "data",
          "offset",
          "sec",
          "points",
          "embedding",
          "qdrant",
          "pointstruct",
          "idx",
          "vector",
          "payload",
          "start",
          "end",
          "scope",
          "segments",
          "startoffsetsec",
          "endoffsetsec",
          "embeddingscope",
          "converting",
          "the",
          "model"
        ],
        "term_weights": [
          {
            "term": "data",
            "tf": 5,
            "weight": 0.075758
          },
          {
            "term": "offset",
            "tf": 4,
            "weight": 0.060606
          },
          {
            "term": "sec",
            "tf": 4,
            "weight": 0.060606
          },
          {
            "term": "points",
            "tf": 3,
            "weight": 0.045455
          },
          {
            "term": "embedding",
            "tf": 3,
            "weight": 0.045455
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "pointstruct",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "idx",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "start",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "end",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "scope",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "segments",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "startoffsetsec",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "endoffsetsec",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "embeddingscope",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "converting",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.015152
          }
        ],
        "unique_terms": 40,
        "total_terms": 66
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Converting the model outputs to Qdrant points",
        "data",
        "embedding",
        "idx",
        "offset",
        "payload",
        "points",
        "pointstruct",
        "qdrant",
        "sec",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5555737704918032,
      "overall": 0.685191256830601
    }
  },
  {
    "text": "### Creating a collection to insert the vectors ```python from qdrant_client.models import VectorParams, Distance  collection_name = \"twelve_labs_collection\"  qdrant_client.create_collection(     collection_name,     vectors_config=VectorParams(         size=1024,         distance=Distance.COSINE,     ), ) qdrant_client.upsert(collection_name, points) ``` ```typescript const COLLECTION_NAME = \"twelve_labs_collection\"  await qdrantClient.createCollection(COLLECTION_NAME, {     vectors: {         size: 1024,         distance: 'Cosine',     } });  await qdrantClient.upsert(COLLECTION_NAME, {     wait: true,     points }) ```",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0013",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Creating a collection to insert the vectors"
      ],
      "heading_text": "Creating a collection to insert the vectors",
      "token_count": 151,
      "char_count": 629,
      "start_char": 21335,
      "end_char": 21964,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5488235294117647,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.078634",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 151,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Creating a collection to insert the vectors",
      "chunk_hash": "3ad1764eacb640eb",
      "content_digest": "3ad1764eacb640eb",
      "chunk_length": 629,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "collection",
          "name",
          "distance",
          "vectors",
          "qdrant",
          "client",
          "vectorparams",
          "twelve",
          "labs",
          "size",
          "1024",
          "cosine",
          "upsert",
          "points",
          "await",
          "qdrantclient",
          "creating",
          "insert",
          "the",
          "python"
        ],
        "term_weights": [
          {
            "term": "collection",
            "tf": 10,
            "weight": 0.15873
          },
          {
            "term": "name",
            "tf": 6,
            "weight": 0.095238
          },
          {
            "term": "distance",
            "tf": 4,
            "weight": 0.063492
          },
          {
            "term": "vectors",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "vectorparams",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "twelve",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "labs",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "size",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "1024",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "cosine",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "upsert",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "await",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "qdrantclient",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "creating",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "insert",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.015873
          }
        ],
        "unique_terms": 30,
        "total_terms": 63
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Creating a collection to insert the vectors",
        "client",
        "collection",
        "distance",
        "labs",
        "name",
        "qdrant",
        "size",
        "twelve",
        "vectorparams",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5488235294117647,
      "overall": 0.7162745098039215
    }
  },
  {
    "text": "## Further Reading  - [Twelve Labs Documentation](https://docs.twelvelabs.io/) - [Twelve Labs Examples](https://docs.twelvelabs.io/docs/sample-applications)",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Further Reading"
      ],
      "heading_text": "Further Reading",
      "token_count": 40,
      "char_count": 156,
      "start_char": 24077,
      "end_char": 24233,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5081818181818182,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.085085",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 40,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Further Reading",
      "chunk_hash": "5eabb498d193d17d",
      "content_digest": "5eabb498d193d17d",
      "chunk_length": 156,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docs",
          "twelve",
          "labs",
          "https",
          "twelvelabs",
          "further",
          "reading",
          "documentation",
          "examples",
          "sample",
          "applications"
        ],
        "term_weights": [
          {
            "term": "docs",
            "tf": 3,
            "weight": 0.176471
          },
          {
            "term": "twelve",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "labs",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "twelvelabs",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "further",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "reading",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "documentation",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "sample",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "applications",
            "tf": 1,
            "weight": 0.058824
          }
        ],
        "unique_terms": 11,
        "total_terms": 17
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Further Reading",
        "docs",
        "documentation",
        "examples",
        "further",
        "https",
        "labs",
        "reading",
        "sample",
        "twelve",
        "twelvelabs"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5081818181818182,
      "overall": 0.6693939393939394
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/embeddings/twelvelabs.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Twelve Labs](#twelve-labs.md)    - - [Installing the SDKs](#installing-the-sdks.md)     - [Setting up the clients](#setting-up-the-clients.md)     - [Embedding videos](#embedding-videos.md)     - [Converting the model outputs to Qdrant points](#converting-the-model-outputs-to-qdrant-points.md)     - [Creating a collection to insert the vectors](#creating-a-collection-to-insert-the-vectors.md)    - [Perform a search](#perform-a-search.md)    - [Further Reading](#further-reading.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/embeddings/twelvelabs.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "3ad851e1ecd0-0016",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "filename": "_documentation_embeddings_twelvelabs_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 284,
      "char_count": 1047,
      "start_char": 24235,
      "end_char": 25282,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5095121951219512,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:24.088277",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 284,
      "document_id": "3ad851e1ecd0",
      "document_name": "_documentation_embeddings_twelvelabs_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "source_filename": "_documentation_embeddings_twelvelabs_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_embeddings_twelvelabs\\_documentation_embeddings_twelvelabs_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "f4f4939bd842648a",
      "content_digest": "f4f4939bd842648a",
      "chunk_length": 1047,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "the",
          "page",
          "github",
          "landing",
          "https",
          "com",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "embeddings",
          "twelvelabs",
          "create",
          "issues",
          "new",
          "choose"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.064
          },
          {
            "term": "the",
            "tf": 8,
            "weight": 0.064
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.056
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.056
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.048
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.032
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.032
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.024
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "twelvelabs",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "issues",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "new",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "choose",
            "tf": 2,
            "weight": 0.016
          }
        ],
        "unique_terms": 53,
        "total_terms": 125
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "com",
        "edit",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "the",
        "this",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5095121951219512,
      "overall": 0.703170731707317
    }
  }
]