[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "8739cf088b39-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 658,
      "end_char": 1331,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.143026",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "8739cf088b39-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1333,
      "end_char": 6994,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.164108",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "8739cf088b39-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 6996,
      "end_char": 9343,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.170643",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "8739cf088b39-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9345,
      "end_char": 10018,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.172740",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "8739cf088b39-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10020,
      "end_char": 15681,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.194720",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Data management](https://qdrant.tech/documentation/data-management/) - - Airbyte",
    "metadata": {
      "chunk_id": "8739cf088b39-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 609,
      "char_count": 2488,
      "start_char": 15683,
      "end_char": 18171,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9023809523809525,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.201650",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 609,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "313c9bf6c6f2d936",
      "content_digest": "313c9bf6c6f2d936",
      "chunk_length": 2488,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "data",
          "rag",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "management",
          "precision",
          "reranking",
          "dspy",
          "for"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.108844
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.081633
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.078231
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.078231
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.047619
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034014
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030612
          },
          {
            "term": "data",
            "tf": 9,
            "weight": 0.030612
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030612
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020408
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017007
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017007
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013605
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013605
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013605
          },
          {
            "term": "management",
            "tf": 4,
            "weight": 0.013605
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010204
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010204
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010204
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010204
          }
        ],
        "unique_terms": 96,
        "total_terms": 294
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9023809523809525,
      "overall": 0.8341269841269842
    }
  },
  {
    "text": "## Prerequisites  Before you start, make sure you have the following:  1. Airbyte instance, either [Open Source](https://airbyte.com/solutions/airbyte-open-source), [Self-Managed](https://airbyte.com/solutions/airbyte-enterprise), or [Cloud](https://airbyte.com/solutions/airbyte-cloud). 2. Running instance of Qdrant. It has to be accessible by URL from the machine where Airbyte is running. You can follow the [installation guide](https://qdrant.tech/documentation/guides/installation/) to set up Qdrant.",
    "metadata": {
      "chunk_id": "8739cf088b39-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Prerequisites"
      ],
      "heading_text": "Prerequisites",
      "token_count": 129,
      "char_count": 506,
      "start_char": 19006,
      "end_char": 19512,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.204095",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 129,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Prerequisites",
      "chunk_hash": "67a174a314c79b1f",
      "content_digest": "67a174a314c79b1f",
      "chunk_length": 506,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "airbyte",
          "https",
          "you",
          "the",
          "com",
          "solutions",
          "qdrant",
          "instance",
          "open",
          "source",
          "cloud",
          "running",
          "installation",
          "prerequisites",
          "before",
          "start",
          "make",
          "sure",
          "have",
          "following"
        ],
        "term_weights": [
          {
            "term": "airbyte",
            "tf": 8,
            "weight": 0.126984
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.063492
          },
          {
            "term": "you",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "solutions",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "instance",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "open",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "source",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "cloud",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "running",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "installation",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "prerequisites",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "before",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "start",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "make",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "sure",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "have",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "following",
            "tf": 1,
            "weight": 0.015873
          }
        ],
        "unique_terms": 37,
        "total_terms": 63
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Prerequisites",
        "airbyte",
        "com",
        "https",
        "instance",
        "open",
        "qdrant",
        "solutions",
        "source",
        "the",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.6823809523809524
    }
  },
  {
    "text": "### Text processing\n\nAirbyte has some built-in mechanisms to transform your texts into embeddings. You can choose how you want to chunk your fields into pieces before calculating the embeddings, but also which fields should be used to create the point payload.",
    "metadata": {
      "chunk_id": "8739cf088b39-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Text processing"
      ],
      "heading_text": "Text processing",
      "token_count": 48,
      "char_count": 260,
      "start_char": 19736,
      "end_char": 19996,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.204603",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 48,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Text processing",
      "chunk_hash": "ff6f65bf956dd67f",
      "content_digest": "ff6f65bf956dd67f",
      "chunk_length": 260,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "your",
          "into",
          "embeddings",
          "you",
          "fields",
          "the",
          "text",
          "processing",
          "airbyte",
          "has",
          "some",
          "built",
          "mechanisms",
          "transform",
          "texts",
          "can",
          "choose",
          "how",
          "want",
          "chunk"
        ],
        "term_weights": [
          {
            "term": "your",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "into",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "fields",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "text",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "airbyte",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "has",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "some",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "built",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "mechanisms",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "transform",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "texts",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "choose",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "want",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "chunk",
            "tf": 1,
            "weight": 0.027027
          }
        ],
        "unique_terms": 31,
        "total_terms": 37
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Text processing",
        "airbyte",
        "embeddings",
        "fields",
        "has",
        "into",
        "processing",
        "text",
        "the",
        "you",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "overall": 0.7466666666666666
    }
  },
  {
    "text": "### Embeddings\n\nYou can choose the model that will be used to calculate the embeddings. Currently, Airbyte supports multiple models, including OpenAI and Cohere.\n\nUsing some precomputed embeddings from your data source is also possible. In this case, you can pass the field name containing the embeddings and their dimensionality.",
    "metadata": {
      "chunk_id": "8739cf088b39-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Embeddings"
      ],
      "heading_text": "Embeddings",
      "token_count": 64,
      "char_count": 330,
      "start_char": 19998,
      "end_char": 20328,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.204791",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 64,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Embeddings",
      "chunk_hash": "31c7982f465480c5",
      "content_digest": "31c7982f465480c5",
      "chunk_length": 330,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "embeddings",
          "the",
          "you",
          "can",
          "and",
          "choose",
          "model",
          "that",
          "will",
          "used",
          "calculate",
          "currently",
          "airbyte",
          "supports",
          "multiple",
          "models",
          "including",
          "openai",
          "cohere",
          "using"
        ],
        "term_weights": [
          {
            "term": "embeddings",
            "tf": 4,
            "weight": 0.088889
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.088889
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "choose",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "will",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "calculate",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "currently",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "airbyte",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "including",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "openai",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "cohere",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.022222
          }
        ],
        "unique_terms": 36,
        "total_terms": 45
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Embeddings",
        "and",
        "can",
        "choose",
        "embeddings",
        "model",
        "that",
        "the",
        "used",
        "will",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "overall": 0.714
    }
  },
  {
    "text": "## Setting up connection\n\nAirbyte combines sources and destinations into a single entity called a connection. Once you have a destination configured and a source, you can create a connection between them. It doesn’t matter what source you use, as long as Airbyte supports it. The process is pretty straightforward, but depends on the source you use.",
    "metadata": {
      "chunk_id": "8739cf088b39-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Setting up connection"
      ],
      "heading_text": "Setting up connection",
      "token_count": 68,
      "char_count": 349,
      "start_char": 20666,
      "end_char": 21015,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.521578947368421,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.205152",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 68,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Setting up connection",
      "chunk_hash": "6023b52a35c099e7",
      "content_digest": "6023b52a35c099e7",
      "chunk_length": 349,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "you",
          "connection",
          "source",
          "airbyte",
          "and",
          "use",
          "the",
          "setting",
          "combines",
          "sources",
          "destinations",
          "into",
          "single",
          "entity",
          "called",
          "once",
          "have",
          "destination",
          "configured",
          "can"
        ],
        "term_weights": [
          {
            "term": "you",
            "tf": 4,
            "weight": 0.090909
          },
          {
            "term": "connection",
            "tf": 3,
            "weight": 0.068182
          },
          {
            "term": "source",
            "tf": 3,
            "weight": 0.068182
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "setting",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "combines",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "destinations",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "entity",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "called",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "once",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "have",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "destination",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "configured",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.022727
          }
        ],
        "unique_terms": 33,
        "total_terms": 44
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Setting up connection",
        "airbyte",
        "and",
        "combines",
        "connection",
        "setting",
        "source",
        "sources",
        "the",
        "use",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.521578947368421,
      "overall": 0.7071929824561404
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/data-management/airbyte.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Airbyte](#airbyte.md)    - [Prerequisites](#prerequisites.md)    - [Setting up Qdrant as a destination](#setting-up-qdrant-as-a-destination.md)      - [Text processing](#text-processing.md)     - [Embeddings](#embeddings.md)     - [Qdrant connection details](#qdrant-connection-details.md)    - [Setting up connection](#setting-up-connection.md)    - [Further Reading](#further-reading.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/data-management/airbyte.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "8739cf088b39-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "filename": "_documentation_data-management_airbyte_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 258,
      "char_count": 955,
      "start_char": 21243,
      "end_char": 22198,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5171428571428571,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:17.207309",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 258,
      "document_id": "8739cf088b39",
      "document_name": "_documentation_data-management_airbyte_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "source_filename": "_documentation_data-management_airbyte_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_data-management_airbyte\\_documentation_data-management_airbyte_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "ba06b5a1f6ca9780",
      "content_digest": "ba06b5a1f6ca9780",
      "chunk_length": 955,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "page",
          "github",
          "landing",
          "https",
          "com",
          "airbyte",
          "setting",
          "connection",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "data",
          "management",
          "create",
          "issues"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.093458
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.065421
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.065421
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.056075
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.037383
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.037383
          },
          {
            "term": "airbyte",
            "tf": 4,
            "weight": 0.037383
          },
          {
            "term": "setting",
            "tf": 4,
            "weight": 0.037383
          },
          {
            "term": "connection",
            "tf": 4,
            "weight": 0.037383
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.028037
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.018692
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.018692
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.018692
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.018692
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.018692
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.018692
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.018692
          },
          {
            "term": "management",
            "tf": 2,
            "weight": 0.018692
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.018692
          },
          {
            "term": "issues",
            "tf": 2,
            "weight": 0.018692
          }
        ],
        "unique_terms": 43,
        "total_terms": 107
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "airbyte",
        "com",
        "connection",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "setting",
        "this"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5171428571428571,
      "overall": 0.6723809523809523
    }
  }
]