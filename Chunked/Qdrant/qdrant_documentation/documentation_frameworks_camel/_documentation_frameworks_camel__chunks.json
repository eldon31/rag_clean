[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "996765515837-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 658,
      "end_char": 1331,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.354531",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "996765515837-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1333,
      "end_char": 6994,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.393259",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "996765515837-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 6996,
      "end_char": 9343,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.401655",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "996765515837-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9345,
      "end_char": 10018,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.404965",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "996765515837-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10020,
      "end_char": 15681,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.437011",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Frameworks](https://qdrant.tech/documentation/frameworks/) - - CamelAI",
    "metadata": {
      "chunk_id": "996765515837-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 608,
      "char_count": 2478,
      "start_char": 15683,
      "end_char": 18161,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.448011",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 608,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "2d2171846896a98b",
      "content_digest": "2d2171846896a98b",
      "chunk_length": 2478,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.109589
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.082192
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.047945
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034247
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.023973
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020548
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.006849
          }
        ],
        "unique_terms": 98,
        "total_terms": 292
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "overall": 0.8338666666666666
    }
  },
  {
    "text": "## Usage With Qdrant  - Install Camel with the `vector-databases` extra. ```bash pip install \"camel[vector-databases]\" ``` - Configure the `QdrantStorage` class. ```python from camel.storages import QdrantStorage, VectorDBQuery, VectorRecord from camel.types import VectorDistance  qdrant_storage = QdrantStorage(     url_and_api_key=(         \"https://xyz-example.eu-central.aws.cloud.qdrant.io:6333\",         \"<provide-your-own-key>\",     ),     collection_name=\"{collection_name}\",     distance=VectorDistance.COSINE,     vector_dim=384, ) ``` The `QdrantStorage` class implements methods to read and write to a Qdrant instance. An instance of this class can now be passed to retrievers for interfacing with your Qdrant collections. ```python qdrant_storage.add([VectorRecord(             vector=[-0.1, 0.1, ...],             payload={'key1': 'value1'},         ),         VectorRecord(             vector=[-0.1, 0.1, ...],             payload={'key2': 'value2'},         ),])  query_results = qdrant_storage.query(VectorDBQuery(query_vector=[0.1, 0.2, ...], top_k=10)) for result in query_results:     print(result.record.payload, result.similarity)  qdrant_storage.clear() ``` - Use the `QdrantStorage` in Camel’s Vector Retriever. ```python from camel.embeddings import OpenAIEmbedding from camel.retrievers import VectorRetriever",
    "metadata": {
      "chunk_id": "996765515837-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Usage With Qdrant"
      ],
      "heading_text": "Usage With Qdrant",
      "token_count": 342,
      "char_count": 1336,
      "start_char": 18401,
      "end_char": 19737,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7201,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.451203",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 342,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Usage With Qdrant",
      "chunk_hash": "d625fde98b503d26",
      "content_digest": "d625fde98b503d26",
      "chunk_length": 1336,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "camel",
          "vector",
          "qdrantstorage",
          "the",
          "from",
          "import",
          "storage",
          "query",
          "with",
          "class",
          "python",
          "vectorrecord",
          "payload",
          "result",
          "install",
          "databases",
          "vectordbquery",
          "vectordistance",
          "and"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.057971
          },
          {
            "term": "camel",
            "tf": 7,
            "weight": 0.050725
          },
          {
            "term": "vector",
            "tf": 7,
            "weight": 0.050725
          },
          {
            "term": "qdrantstorage",
            "tf": 5,
            "weight": 0.036232
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "from",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "import",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "storage",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "query",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.021739
          },
          {
            "term": "class",
            "tf": 3,
            "weight": 0.021739
          },
          {
            "term": "python",
            "tf": 3,
            "weight": 0.021739
          },
          {
            "term": "vectorrecord",
            "tf": 3,
            "weight": 0.021739
          },
          {
            "term": "payload",
            "tf": 3,
            "weight": 0.021739
          },
          {
            "term": "result",
            "tf": 3,
            "weight": 0.021739
          },
          {
            "term": "install",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "databases",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "vectordbquery",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "vectordistance",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.014493
          }
        ],
        "unique_terms": 75,
        "total_terms": 138
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Usage With Qdrant",
        "camel",
        "from",
        "import",
        "qdrant",
        "qdrantstorage",
        "query",
        "storage",
        "the",
        "vector",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7201,
      "overall": 0.7733666666666666
    }
  },
  {
    "text": "# Initialize the VectorRetriever with an embedding model vr = VectorRetriever(embedding_model=OpenAIEmbedding())  content_input_path = \"<URL-TO-SOME-RESOURCE>\"  vr.process(content_input_path, qdrant_storage)",
    "metadata": {
      "chunk_id": "996765515837-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Initialize the VectorRetriever with an embedding model"
      ],
      "heading_text": "Initialize the VectorRetriever with an embedding model",
      "token_count": 52,
      "char_count": 207,
      "start_char": 19746,
      "end_char": 19953,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.57125,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.451850",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 52,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Initialize the VectorRetriever with an embedding model",
      "chunk_hash": "06c67f508ece563e",
      "content_digest": "06c67f508ece563e",
      "chunk_length": 207,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "vectorretriever",
          "embedding",
          "model",
          "content",
          "input",
          "path",
          "initialize",
          "the",
          "with",
          "openaiembedding",
          "url",
          "some",
          "resource",
          "process",
          "qdrant",
          "storage"
        ],
        "term_weights": [
          {
            "term": "vectorretriever",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "input",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "path",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "initialize",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "openaiembedding",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "url",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "some",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "resource",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "storage",
            "tf": 1,
            "weight": 0.045455
          }
        ],
        "unique_terms": 16,
        "total_terms": 22
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Initialize the VectorRetriever with an embedding model",
        "content",
        "embedding",
        "initialize",
        "input",
        "model",
        "openaiembedding",
        "path",
        "the",
        "vectorretriever",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.57125,
      "overall": 0.7237499999999999
    }
  },
  {
    "text": "# Execute the query and retrieve results results = vr.query(\"<SOME_USER_QUERY>\", vector_storage) ``` - Camel also provides an Auto Retriever implementation that handles both embedding and storing data and executing queries. ```python from camel.retrievers import AutoRetriever from camel.types import StorageType  ar = AutoRetriever(     url_and_api_key=(         \"https://xyz-example.eu-central.aws.cloud.qdrant.io:6333\",         \"<provide-your-own-key>\",     ),     storage_type=StorageType.QDRANT, )  retrieved_info = ar.run_vector_retriever(     contents=[\"<URL-TO-SOME-RESOURCE>\"],     query=\"\"<SOME_USER_QUERY>\"\",     return_detailed_info=True,  )  print(retrieved_info) ``` You can refer to the Camel [documentation](https://docs.camel-ai.org/) for more information about the retrieval mechansims.",
    "metadata": {
      "chunk_id": "996765515837-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Execute the query and retrieve results"
      ],
      "heading_text": "Execute the query and retrieve results",
      "token_count": 191,
      "char_count": 804,
      "start_char": 19955,
      "end_char": 20759,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7392957746478873,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.453356",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 191,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Execute the query and retrieve results",
      "chunk_hash": "0fd95fcebff35cdb",
      "content_digest": "0fd95fcebff35cdb",
      "chunk_length": 804,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "query",
          "camel",
          "and",
          "the",
          "some",
          "info",
          "results",
          "user",
          "vector",
          "storage",
          "retriever",
          "from",
          "import",
          "autoretriever",
          "storagetype",
          "url",
          "key",
          "https",
          "qdrant",
          "retrieved"
        ],
        "term_weights": [
          {
            "term": "query",
            "tf": 5,
            "weight": 0.05102
          },
          {
            "term": "camel",
            "tf": 5,
            "weight": 0.05102
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "some",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "info",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "results",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "user",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "retriever",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "import",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "autoretriever",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "storagetype",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "url",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "retrieved",
            "tf": 2,
            "weight": 0.020408
          }
        ],
        "unique_terms": 67,
        "total_terms": 98
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Execute the query and retrieve results",
        "and",
        "camel",
        "info",
        "query",
        "results",
        "some",
        "storage",
        "the",
        "user",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7392957746478873,
      "overall": 0.7797652582159623
    }
  },
  {
    "text": "## End-To-End Examples  - [Camel RAG Cookbook](https://docs.camel-ai.org/cookbooks/agents_with_rag.html) - [Customer Service Discord Bot with Agentic RAG](https://docs.camel-ai.org/cookbooks/customer_service_Discord_bot_with_agentic_RAG.html)",
    "metadata": {
      "chunk_id": "996765515837-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "End-To-End Examples"
      ],
      "heading_text": "End-To-End Examples",
      "token_count": 67,
      "char_count": 242,
      "start_char": 20764,
      "end_char": 21006,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.57,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.453740",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 67,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "End-To-End Examples",
      "chunk_hash": "f83319c69778db5b",
      "content_digest": "f83319c69778db5b",
      "chunk_length": 242,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "rag",
          "camel",
          "with",
          "end",
          "https",
          "docs",
          "org",
          "cookbooks",
          "html",
          "customer",
          "service",
          "discord",
          "bot",
          "agentic",
          "examples",
          "cookbook",
          "agents"
        ],
        "term_weights": [
          {
            "term": "rag",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "camel",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "end",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "docs",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "org",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "cookbooks",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "html",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "customer",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "service",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "bot",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "agentic",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "cookbook",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "agents",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 17,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "End-To-End Examples",
        "camel",
        "cookbooks",
        "customer",
        "docs",
        "end",
        "html",
        "https",
        "org",
        "rag",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.57,
      "overall": 0.69
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/frameworks/camel.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Camel](#camel.md)    - [Usage With Qdrant](#usage-with-qdrant.md)   - [End-To-End Examples](#end-to-end-examples.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/frameworks/camel.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "996765515837-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "filename": "_documentation_frameworks_camel_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 187,
      "char_count": 668,
      "start_char": 21008,
      "end_char": 21676,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.538076923076923,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:27.455372",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 187,
      "document_id": "996765515837",
      "document_name": "_documentation_frameworks_camel_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "source_filename": "_documentation_frameworks_camel_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_camel\\_documentation_frameworks_camel_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "352b477671b58c17",
      "content_digest": "352b477671b58c17",
      "chunk_length": 668,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "page",
          "github",
          "landing",
          "https",
          "com",
          "camel",
          "end",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "frameworks",
          "create",
          "issues",
          "new",
          "choose"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.089888
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.078652
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.078652
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.067416
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "camel",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "end",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.033708
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "frameworks",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "issues",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "new",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "choose",
            "tf": 2,
            "weight": 0.022472
          }
        ],
        "unique_terms": 36,
        "total_terms": 89
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "camel",
        "com",
        "end",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "this",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.538076923076923,
      "overall": 0.6793589743589744
    }
  }
]