[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "28c87226be34-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 658,
      "end_char": 1331,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.129660",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "28c87226be34-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1333,
      "end_char": 6994,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.163312",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "28c87226be34-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 6996,
      "end_char": 9343,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.173870",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "28c87226be34-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9345,
      "end_char": 10018,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.177088",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "28c87226be34-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10020,
      "end_char": 15681,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.208963",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Frameworks](https://qdrant.tech/documentation/frameworks/) - - Autogen",
    "metadata": {
      "chunk_id": "28c87226be34-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 608,
      "char_count": 2478,
      "start_char": 15683,
      "end_char": 18161,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.219648",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 608,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "7cab8db342ed03be",
      "content_digest": "7cab8db342ed03be",
      "chunk_length": 2478,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.109589
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.082192
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.078767
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.047945
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034247
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030822
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.023973
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020548
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017123
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013699
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010274
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.006849
          }
        ],
        "unique_terms": 98,
        "total_terms": 292
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "overall": 0.8338666666666666
    }
  },
  {
    "text": "#### Configuration ```python import autogen  config_list = autogen.config_list_from_json(\"OAI_CONFIG_LIST\") ``` The `config_list_from_json` function first looks for the environment variable `OAI_CONFIG_LIST` which needs to be a valid JSON string. If not found, it then looks for a JSON file named `OAI_CONFIG_LIST`. A sample file can be found [here](https://github.com/microsoft/autogen/blob/0.2/OAI_CONFIG_LIST_sample).",
    "metadata": {
      "chunk_id": "28c87226be34-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Configuration"
      ],
      "heading_text": "Configuration",
      "token_count": 100,
      "char_count": 420,
      "start_char": 19210,
      "end_char": 19630,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5378260869565217,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.223509",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 100,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Configuration",
      "chunk_hash": "7f6ba3b0a021e1c3",
      "content_digest": "7f6ba3b0a021e1c3",
      "chunk_length": 420,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "config",
          "list",
          "json",
          "oai",
          "autogen",
          "from",
          "the",
          "looks",
          "for",
          "found",
          "file",
          "sample",
          "configuration",
          "python",
          "import",
          "function",
          "first",
          "environment",
          "variable",
          "which"
        ],
        "term_weights": [
          {
            "term": "config",
            "tf": 7,
            "weight": 0.116667
          },
          {
            "term": "list",
            "tf": 7,
            "weight": 0.116667
          },
          {
            "term": "json",
            "tf": 4,
            "weight": 0.066667
          },
          {
            "term": "oai",
            "tf": 4,
            "weight": 0.066667
          },
          {
            "term": "autogen",
            "tf": 3,
            "weight": 0.05
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "looks",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "found",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "file",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "sample",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "import",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "first",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "environment",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "variable",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "which",
            "tf": 1,
            "weight": 0.016667
          }
        ],
        "unique_terms": 33,
        "total_terms": 60
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Configuration",
        "autogen",
        "config",
        "for",
        "found",
        "from",
        "json",
        "list",
        "looks",
        "oai",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5378260869565217,
      "overall": 0.7126086956521739
    }
  },
  {
    "text": "#### Construct agents for RetrieveChat  We start by initializing the RetrieveAssistantAgent and QdrantRetrieveUserProxyAgent. The system message needs to be set to “You are a helpful assistant.” for RetrieveAssistantAgent. The detailed instructions are given in the user message. ```python from qdrant_client import QdrantClient from sentence_transformers import SentenceTransformer  from autogen import AssistantAgent from autogen.agentchat.contrib.retrieve_user_proxy_agent import RetrieveUserProxyAgent",
    "metadata": {
      "chunk_id": "28c87226be34-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Construct agents for RetrieveChat"
      ],
      "heading_text": "Construct agents for RetrieveChat",
      "token_count": 95,
      "char_count": 505,
      "start_char": 19634,
      "end_char": 20139,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5233333333333333,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.224694",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 95,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Construct agents for RetrieveChat",
      "chunk_hash": "bac059e64baf885d",
      "content_digest": "bac059e64baf885d",
      "chunk_length": 505,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "from",
          "import",
          "for",
          "retrieveassistantagent",
          "message",
          "are",
          "user",
          "autogen",
          "construct",
          "agents",
          "retrievechat",
          "start",
          "initializing",
          "and",
          "qdrantretrieveuserproxyagent",
          "system",
          "needs",
          "set",
          "you"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.074074
          },
          {
            "term": "from",
            "tf": 4,
            "weight": 0.074074
          },
          {
            "term": "import",
            "tf": 4,
            "weight": 0.074074
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "retrieveassistantagent",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "message",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "user",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "autogen",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "construct",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "agents",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "retrievechat",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "start",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "initializing",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "qdrantretrieveuserproxyagent",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "needs",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.018519
          }
        ],
        "unique_terms": 39,
        "total_terms": 54
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Construct agents for RetrieveChat",
        "are",
        "autogen",
        "construct",
        "for",
        "from",
        "import",
        "message",
        "retrieveassistantagent",
        "the",
        "user"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5233333333333333,
      "overall": 0.7077777777777777
    }
  },
  {
    "text": "# 1. Create an AssistantAgent instance named \"assistant\" assistant = AssistantAgent(     name=\"assistant\",     system_message=\"You are a helpful assistant.\",     llm_config={         \"timeout\": 600,         \"cache_seed\": 42,         \"config_list\": config_list,     }, )  sentence_transformer_ef = SentenceTransformer(\"all-distilroberta-v1\").encode client = QdrantClient(url=\"http://localhost:6333/\")",
    "metadata": {
      "chunk_id": "28c87226be34-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "1. Create an AssistantAgent instance named \"assistant\""
      ],
      "heading_text": "1. Create an AssistantAgent instance named \"assistant\"",
      "token_count": 98,
      "char_count": 399,
      "start_char": 20142,
      "end_char": 20541,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.57125,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.225674",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 98,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "1. Create an AssistantAgent instance named \"assistant\"",
      "chunk_hash": "060432e8ff53cd0e",
      "content_digest": "060432e8ff53cd0e",
      "chunk_length": 399,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "assistant",
          "config",
          "assistantagent",
          "list",
          "create",
          "instance",
          "named",
          "name",
          "system",
          "message",
          "you",
          "are",
          "helpful",
          "llm",
          "timeout",
          "600",
          "cache",
          "seed",
          "sentence",
          "transformer"
        ],
        "term_weights": [
          {
            "term": "assistant",
            "tf": 4,
            "weight": 0.108108
          },
          {
            "term": "config",
            "tf": 3,
            "weight": 0.081081
          },
          {
            "term": "assistantagent",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "list",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "instance",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "named",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "name",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "message",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "helpful",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "llm",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "timeout",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "600",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "cache",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "seed",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "sentence",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "transformer",
            "tf": 1,
            "weight": 0.027027
          }
        ],
        "unique_terms": 30,
        "total_terms": 37
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "1. Create an AssistantAgent instance named \"assistant\"",
        "assistant",
        "assistantagent",
        "config",
        "create",
        "instance",
        "list",
        "message",
        "name",
        "named",
        "system"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.57125,
      "overall": 0.7570833333333332
    }
  },
  {
    "text": "# for more information on the RetrieveUserProxyAgent ragproxyagent = RetrieveUserProxyAgent(     name=\"ragproxyagent\",     human_input_mode=\"NEVER\",     max_consecutive_auto_reply=10,     retrieve_config={         \"task\": \"code\",         \"docs_path\": [             \"path/to/some/doc.md\",             \"path/to/some/other/doc.md\",         ],         \"chunk_token_size\": 2000,         \"model\": config_list[0][\"model\"],         \"vector_db\": \"qdrant\",         \"db_config\": {\"client\": client},         \"get_or_create\": True,         \"overwrite\": True,         \"embedding_function\": sentence_transformer_ef,  # Defaults to \"BAAI/bge-small-en-v1.5\" via FastEmbed     },     code_execution_config=False, ) ```",
    "metadata": {
      "chunk_id": "28c87226be34-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "for more information on the RetrieveUserProxyAgent"
      ],
      "heading_text": "for more information on the RetrieveUserProxyAgent",
      "token_count": 177,
      "char_count": 700,
      "start_char": 20719,
      "end_char": 21419,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5769565217391305,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.227443",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 177,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "for more information on the RetrieveUserProxyAgent",
      "chunk_hash": "503f6bcd55496582",
      "content_digest": "503f6bcd55496582",
      "chunk_length": 700,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "config",
          "path",
          "retrieveuserproxyagent",
          "ragproxyagent",
          "code",
          "some",
          "doc",
          "model",
          "client",
          "true",
          "for",
          "more",
          "information",
          "the",
          "name",
          "human",
          "input",
          "mode",
          "never",
          "max"
        ],
        "term_weights": [
          {
            "term": "config",
            "tf": 4,
            "weight": 0.064516
          },
          {
            "term": "path",
            "tf": 3,
            "weight": 0.048387
          },
          {
            "term": "retrieveuserproxyagent",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "ragproxyagent",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "code",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "some",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "doc",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "client",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "true",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "more",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "information",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "name",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "human",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "mode",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "never",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "max",
            "tf": 1,
            "weight": 0.016129
          }
        ],
        "unique_terms": 49,
        "total_terms": 62
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "client",
        "code",
        "config",
        "doc",
        "for more information on the RetrieveUserProxyAgent",
        "model",
        "path",
        "ragproxyagent",
        "retrieveuserproxyagent",
        "some",
        "true"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5769565217391305,
      "overall": 0.7589855072463768
    }
  },
  {
    "text": "# The assistant receives it and generates a response. The response will be sent back to the ragproxyagent for processing.",
    "metadata": {
      "chunk_id": "28c87226be34-0018",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "The assistant receives it and generates a response. The response will be sent back to the ragproxyagent for processing."
      ],
      "heading_text": "The assistant receives it and generates a response. The response will be sent back to the ragproxyagent for processing.",
      "token_count": 24,
      "char_count": 121,
      "start_char": 21635,
      "end_char": 21756,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.228624",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 24,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "The assistant receives it and generates a response. The response will be sent back to the ragproxyagent for processing.",
      "chunk_hash": "d60819cb404e3adf",
      "content_digest": "d60819cb404e3adf",
      "chunk_length": 121,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "response",
          "assistant",
          "receives",
          "and",
          "generates",
          "will",
          "sent",
          "back",
          "ragproxyagent",
          "for",
          "processing"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 3,
            "weight": 0.2
          },
          {
            "term": "response",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "assistant",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "receives",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "generates",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "will",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "sent",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "back",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "ragproxyagent",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 12,
        "total_terms": 15
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "The assistant receives it and generates a response. The response will be sent back to the ragproxyagent for processing.",
        "and",
        "assistant",
        "back",
        "generates",
        "ragproxyagent",
        "receives",
        "response",
        "sent",
        "the",
        "will"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "overall": 0.6866666666666666
    }
  },
  {
    "text": "## Next steps  - AutoGen [documentation](https://microsoft.github.io/autogen/0.2) - Autogen [examples](https://microsoft.github.io/autogen/0.2/docs/Examples) - [Source Code](https://github.com/microsoft/autogen/blob/0.2/autogen/agentchat/contrib/vectordb/qdrant.py)",
    "metadata": {
      "chunk_id": "28c87226be34-0020",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Next steps"
      ],
      "heading_text": "Next steps",
      "token_count": 83,
      "char_count": 265,
      "start_char": 21981,
      "end_char": 22246,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.515,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.229959",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 83,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Next steps",
      "chunk_hash": "15dbcbbec7ac82db",
      "content_digest": "15dbcbbec7ac82db",
      "chunk_length": 265,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "autogen",
          "https",
          "microsoft",
          "github",
          "examples",
          "next",
          "steps",
          "documentation",
          "docs",
          "source",
          "code",
          "com",
          "blob",
          "agentchat",
          "contrib",
          "vectordb",
          "qdrant"
        ],
        "term_weights": [
          {
            "term": "autogen",
            "tf": 6,
            "weight": 0.206897
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.103448
          },
          {
            "term": "microsoft",
            "tf": 3,
            "weight": 0.103448
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.103448
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "next",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "steps",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "documentation",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "docs",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "source",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "agentchat",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "contrib",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "vectordb",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.034483
          }
        ],
        "unique_terms": 17,
        "total_terms": 29
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Next steps",
        "autogen",
        "docs",
        "documentation",
        "examples",
        "github",
        "https",
        "microsoft",
        "next",
        "source",
        "steps"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.515,
      "overall": 0.6716666666666667
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/frameworks/autogen.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Microsoft Autogen](#microsoft-autogen.md)    - [Installation](#installation.md)   - [Usage](#usage.md)     -   - [Next steps](#next-steps.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/frameworks/autogen.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "28c87226be34-0021",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "filename": "_documentation_frameworks_autogen_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 191,
      "char_count": 697,
      "start_char": 22248,
      "end_char": 22945,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5288888888888889,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:26.232221",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 191,
      "document_id": "28c87226be34",
      "document_name": "_documentation_frameworks_autogen_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "source_filename": "_documentation_frameworks_autogen_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_frameworks_autogen\\_documentation_frameworks_autogen_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "7731278d1224ec8f",
      "content_digest": "7731278d1224ec8f",
      "chunk_length": 697,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "page",
          "github",
          "qdrant",
          "landing",
          "https",
          "com",
          "autogen",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "frameworks",
          "create",
          "issues",
          "new",
          "choose",
          "issue"
        ],
        "term_weights": [
          {
            "term": "page",
            "tf": 7,
            "weight": 0.08046
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.08046
          },
          {
            "term": "qdrant",
            "tf": 6,
            "weight": 0.068966
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.068966
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "autogen",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.034483
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "frameworks",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "issues",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "new",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "choose",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "issue",
            "tf": 2,
            "weight": 0.022989
          }
        ],
        "unique_terms": 37,
        "total_terms": 87
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "autogen",
        "com",
        "edit",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "this",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5288888888888889,
      "overall": 0.6762962962962963
    }
  }
]