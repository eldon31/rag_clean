[
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 1054,
      "end_char": 3022,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.745365",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 3704,
      "end_char": 5692,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.756899",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 83,
      "char_count": 311,
      "start_char": 5694,
      "end_char": 6005,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.758324",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 83,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "f059a5deb61e367d",
      "content_digest": "f059a5deb61e367d",
      "chunk_length": 311,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "faq",
          "https",
          "tech",
          "documentation",
          "fundamentals",
          "database",
          "optimization",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.228571
          },
          {
            "term": "faq",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "tech",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "documentation",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "fundamentals",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 14,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "release",
        "support",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.7209090909090908
    }
  },
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 6382,
      "end_char": 8350,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.765901",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 9032,
      "end_char": 11020,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.773035",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)  - [Documentation](https://qdrant.tech/documentation/) - - [Advanced tutorials](https://qdrant.tech/documentation/advanced-tutorials/) - - Search Through Your Codebase",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0009",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 121,
      "char_count": 479,
      "start_char": 11022,
      "end_char": 11501,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7117391304347825,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.774623",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 121,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "b47f48819f9e4184",
      "content_digest": "b47f48819f9e4184",
      "chunk_length": 479,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "documentation",
          "tech",
          "faq",
          "fundamentals",
          "database",
          "optimization",
          "advanced",
          "tutorials",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases",
          "search",
          "through",
          "your",
          "codebase"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.192308
          },
          {
            "term": "https",
            "tf": 6,
            "weight": 0.115385
          },
          {
            "term": "documentation",
            "tf": 6,
            "weight": 0.115385
          },
          {
            "term": "tech",
            "tf": 5,
            "weight": 0.096154
          },
          {
            "term": "faq",
            "tf": 4,
            "weight": 0.076923
          },
          {
            "term": "fundamentals",
            "tf": 3,
            "weight": 0.057692
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "tutorials",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "search",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "your",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "codebase",
            "tf": 1,
            "weight": 0.019231
          }
        ],
        "unique_terms": 20,
        "total_terms": 52
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "advanced",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "tech",
        "tutorials"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7117391304347825,
      "overall": 0.7705797101449274
    }
  },
  {
    "text": "# Navigate Your Codebase with Semantic Search and Qdrant  | Time: 45 min | Level: Intermediate | [](https://colab.research.google.com/github/qdrant/examples/blob/master/code-search/code-search.ipynb) |   | | ------------ | ------------------- | ------------------------------------------------------------------------------------------------------ | - |  You too can enrich your applications with Qdrant semantic search. In this tutorial, we describe how you can use Qdrant to navigate a codebase, to help you find relevant code snippets. As an example, we will use the [Qdrant](https://github.com/qdrant/qdrant) source code itself, which is mostly written in Rust. This tutorial might not work on code bases that are not disciplined or structured. For good code search, you may need to refactor the project first.",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Navigate Your Codebase with Semantic Search and Qdrant"
      ],
      "heading_text": "Navigate Your Codebase with Semantic Search and Qdrant",
      "token_count": 167,
      "char_count": 814,
      "start_char": 11503,
      "end_char": 12317,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.502621359223301,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.775160",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 167,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Navigate Your Codebase with Semantic Search and Qdrant",
      "chunk_hash": "25642488a5d32c74",
      "content_digest": "25642488a5d32c74",
      "chunk_length": 814,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "code",
          "search",
          "you",
          "navigate",
          "your",
          "codebase",
          "with",
          "semantic",
          "https",
          "com",
          "github",
          "can",
          "this",
          "tutorial",
          "use",
          "the",
          "not",
          "and",
          "time"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 7,
            "weight": 0.075269
          },
          {
            "term": "code",
            "tf": 6,
            "weight": 0.064516
          },
          {
            "term": "search",
            "tf": 5,
            "weight": 0.053763
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.043011
          },
          {
            "term": "navigate",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "codebase",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "semantic",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "tutorial",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "not",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.010753
          },
          {
            "term": "time",
            "tf": 1,
            "weight": 0.010753
          }
        ],
        "unique_terms": 61,
        "total_terms": 93
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Navigate Your Codebase with Semantic Search and Qdrant",
        "code",
        "codebase",
        "https",
        "navigate",
        "qdrant",
        "search",
        "semantic",
        "with",
        "you",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.502621359223301,
      "overall": 0.700873786407767
    }
  },
  {
    "text": "## Data preparation  Chunking the application sources into smaller parts is a non-trivial task. In general, functions, class methods, structs, enums, and all the other language-specific constructs are good candidates for chunks. They are big enough to contain some meaningful information, but small enough to be processed by embedding models with a limited context window. You can also use docstrings, comments, and other metadata can be used to enrich the chunks with additional information.",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Data preparation"
      ],
      "heading_text": "Data preparation",
      "token_count": 92,
      "char_count": 492,
      "start_char": 13281,
      "end_char": 13773,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5413513513513514,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.779193",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 92,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Data preparation",
      "chunk_hash": "0b9f5e2d6e273cf6",
      "content_digest": "0b9f5e2d6e273cf6",
      "chunk_length": 492,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "and",
          "other",
          "are",
          "chunks",
          "enough",
          "information",
          "with",
          "can",
          "data",
          "preparation",
          "chunking",
          "application",
          "sources",
          "into",
          "smaller",
          "parts",
          "non",
          "trivial",
          "task"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "other",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "chunks",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "enough",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "information",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "preparation",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "chunking",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "application",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "smaller",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "parts",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "non",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "trivial",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "task",
            "tf": 1,
            "weight": 0.015385
          }
        ],
        "unique_terms": 55,
        "total_terms": 65
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Data preparation",
        "and",
        "are",
        "can",
        "chunks",
        "data",
        "enough",
        "information",
        "other",
        "the",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5413513513513514,
      "overall": 0.747117117117117
    }
  },
  {
    "text": "### Parsing the codebase  While our example uses Rust, you can use our approach with any other language. You can parse code with a [Language Server Protocol](https://microsoft.github.io/language-server-protocol/) (**LSP**) compatible tool. You can use an LSP to build a graph of the codebase, and then extract chunks. We did our work with the [rust-analyzer](https://rust-analyzer.github.io/). We exported the parsed codebase into the [LSIF](https://microsoft.github.io/language-server-protocol/specifications/lsif/0.4.0/specification/) format, a standard for code intelligence data. Next, we used the LSIF data to navigate the codebase and extract the chunks. For details, see our [code search demo](https://github.com/qdrant/demo-code-search). For other languages, you can use the same approach. There are [plenty of implementations available ](https://microsoft.github.io/language-server-protocol/implementors/servers/). We then exported the chunks into JSON documents with not only the code itself, but also context with the location of the code in the project. For example, see the description of the `await_ready_for_timeout` function from the `IsReady` struct in the `common` module: ```json {    \"name\":\"await_ready_for_timeout\",    \"signature\":\"fn await_ready_for_timeout (& self , timeout : Duration) -> bool\",    \"code_type\":\"Function\",    \"docstring\":\"= \\\" Return `true` if ready, `false` if timed out.\\\"\",    \"line\":44,    \"line_from\":43,    \"line_to\":51,    \"context\":{       \"module\":\"common\",       \"file_path\":\"lib/collection/src/common/is_ready.rs\",       \"file_name\":\"is_ready.rs\",       \"struct_name\":\"IsReady\",       \"snippet\":\"    /// Return `true` if ready, `false` if timed out.\\n    pub fn await_ready_for_timeout(&self, timeout: Duration) -> bool {\\n        let mut is_ready = self.value.lock();\\n        if !*is_ready {\\n            !self.condvar.wait_for(&mut is_ready, timeout).timed_out()\\n        } else {\\n            true\\n        }\\n    }\\n\"    } } ``` You can examine the Qdrant structures, parsed in JSON, in the [`structures.jsonl` file](https://storage.googleapis.com/tutorial-attachments/code-search/structures.jsonl) in our Google Cloud Storage bucket. Download it and use it as a source of data for our code search. ```shell wget https://storage.googleapis.com/tutorial-attachments/code-search/structures.jsonl ``` Next, load the file and parse the lines into a list of dictionaries: ```python import json  structures = [] with open(\"structures.jsonl\", \"r\") as fp:     for i, row in enumerate(fp):         entry = json.loads(row)         structures.append(entry) ```",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0013",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Parsing the codebase"
      ],
      "heading_text": "Parsing the codebase",
      "token_count": 624,
      "char_count": 2607,
      "start_char": 13775,
      "end_char": 16382,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.8878892733564014,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.785480",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 624,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Parsing the codebase",
      "chunk_hash": "f28a258b38585bb8",
      "content_digest": "f28a258b38585bb8",
      "chunk_length": 2607,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "for",
          "ready",
          "code",
          "https",
          "timeout",
          "structures",
          "our",
          "with",
          "you",
          "can",
          "language",
          "github",
          "search",
          "json",
          "codebase",
          "use",
          "server",
          "protocol",
          "and"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 22,
            "weight": 0.067901
          },
          {
            "term": "for",
            "tf": 11,
            "weight": 0.033951
          },
          {
            "term": "ready",
            "tf": 11,
            "weight": 0.033951
          },
          {
            "term": "code",
            "tf": 10,
            "weight": 0.030864
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.021605
          },
          {
            "term": "timeout",
            "tf": 7,
            "weight": 0.021605
          },
          {
            "term": "structures",
            "tf": 7,
            "weight": 0.021605
          },
          {
            "term": "our",
            "tf": 6,
            "weight": 0.018519
          },
          {
            "term": "with",
            "tf": 6,
            "weight": 0.018519
          },
          {
            "term": "you",
            "tf": 5,
            "weight": 0.015432
          },
          {
            "term": "can",
            "tf": 5,
            "weight": 0.015432
          },
          {
            "term": "language",
            "tf": 5,
            "weight": 0.015432
          },
          {
            "term": "github",
            "tf": 5,
            "weight": 0.015432
          },
          {
            "term": "search",
            "tf": 5,
            "weight": 0.015432
          },
          {
            "term": "json",
            "tf": 5,
            "weight": 0.015432
          },
          {
            "term": "codebase",
            "tf": 4,
            "weight": 0.012346
          },
          {
            "term": "use",
            "tf": 4,
            "weight": 0.012346
          },
          {
            "term": "server",
            "tf": 4,
            "weight": 0.012346
          },
          {
            "term": "protocol",
            "tf": 4,
            "weight": 0.012346
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.012346
          }
        ],
        "unique_terms": 137,
        "total_terms": 324
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Parsing the codebase",
        "code",
        "for",
        "https",
        "our",
        "ready",
        "structures",
        "the",
        "timeout",
        "with",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.8878892733564014,
      "overall": 0.8292964244521338
    }
  },
  {
    "text": "## Ingestion pipeline\n\nNext, we’ll build a pipeline for vectorizing the data and set up a semantic search mechanism for both embedding models.",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Ingestion pipeline"
      ],
      "heading_text": "Ingestion pipeline",
      "token_count": 30,
      "char_count": 142,
      "start_char": 19215,
      "end_char": 19357,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5508695652173913,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.792135",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 30,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Ingestion pipeline",
      "chunk_hash": "8df0f845608f1876",
      "content_digest": "8df0f845608f1876",
      "chunk_length": 142,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pipeline",
          "for",
          "ingestion",
          "next",
          "build",
          "vectorizing",
          "the",
          "data",
          "and",
          "set",
          "semantic",
          "search",
          "mechanism",
          "both",
          "embedding",
          "models"
        ],
        "term_weights": [
          {
            "term": "pipeline",
            "tf": 2,
            "weight": 0.111111
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.111111
          },
          {
            "term": "ingestion",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "next",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "build",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "vectorizing",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "semantic",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "search",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "mechanism",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "both",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "embedding",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.055556
          }
        ],
        "unique_terms": 16,
        "total_terms": 18
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Ingestion pipeline",
        "and",
        "build",
        "data",
        "for",
        "ingestion",
        "next",
        "pipeline",
        "set",
        "the",
        "vectorizing"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5508695652173913,
      "overall": 0.7502898550724638
    }
  },
  {
    "text": "### Building Qdrant collection  We use the `qdrant-client` library with the `fastembed` extra to interact with the Qdrant server and generate vector embeddings locally. Let’s install it: ```shell pip install \"qdrant-client[fastembed]\" ``` Of course, we need a running Qdrant server for vector search. If you need one, you can [use a local Docker container](https://qdrant.tech/documentation/quick-start/) or deploy it using the [Qdrant Cloud](https://cloud.qdrant.io/). You can use either to follow this tutorial. Configure the connection parameters: ```python QDRANT_URL = \"https://my-cluster.cloud.qdrant.io:6333\" # http://localhost:6333 for local instance QDRANT_API_KEY = \"THIS_IS_YOUR_API_KEY\" # None for local instance ``` Then use the library to create a collection: ```python from qdrant_client import QdrantClient, models  client = QdrantClient(QDRANT_URL, api_key=QDRANT_API_KEY) client.create_collection(     \"qdrant-sources\",     vectors_config={         \"text\": models.VectorParams(             size=client.get_embedding_size(                 model_name=\"sentence-transformers/all-MiniLM-L6-v2\"             ),             distance=models.Distance.COSINE,         ),         \"code\": models.VectorParams(             size=client.get_embedding_size(                 model_name=\"jinaai/jina-embeddings-v2-base-code\"             ),             distance=models.Distance.COSINE,         ),     }, ) ``` Our newly created collection is ready to accept the data. Let’s upload the embeddings: ```python import uuid",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0016",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Building Qdrant collection"
      ],
      "heading_text": "Building Qdrant collection",
      "token_count": 356,
      "char_count": 1517,
      "start_char": 19359,
      "end_char": 20876,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7102246575342466,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.795147",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 356,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Building Qdrant collection",
      "chunk_hash": "ce8eb99108c07d73",
      "content_digest": "ce8eb99108c07d73",
      "chunk_length": 1517,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "the",
          "client",
          "models",
          "collection",
          "use",
          "api",
          "key",
          "size",
          "distance",
          "embeddings",
          "for",
          "you",
          "local",
          "https",
          "cloud",
          "python",
          "library",
          "with",
          "fastembed"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 15,
            "weight": 0.08427
          },
          {
            "term": "the",
            "tf": 8,
            "weight": 0.044944
          },
          {
            "term": "client",
            "tf": 7,
            "weight": 0.039326
          },
          {
            "term": "models",
            "tf": 5,
            "weight": 0.02809
          },
          {
            "term": "collection",
            "tf": 4,
            "weight": 0.022472
          },
          {
            "term": "use",
            "tf": 4,
            "weight": 0.022472
          },
          {
            "term": "api",
            "tf": 4,
            "weight": 0.022472
          },
          {
            "term": "key",
            "tf": 4,
            "weight": 0.022472
          },
          {
            "term": "size",
            "tf": 4,
            "weight": 0.022472
          },
          {
            "term": "distance",
            "tf": 4,
            "weight": 0.022472
          },
          {
            "term": "embeddings",
            "tf": 3,
            "weight": 0.016854
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.016854
          },
          {
            "term": "you",
            "tf": 3,
            "weight": 0.016854
          },
          {
            "term": "local",
            "tf": 3,
            "weight": 0.016854
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.016854
          },
          {
            "term": "cloud",
            "tf": 3,
            "weight": 0.016854
          },
          {
            "term": "python",
            "tf": 3,
            "weight": 0.016854
          },
          {
            "term": "library",
            "tf": 2,
            "weight": 0.011236
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.011236
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.011236
          }
        ],
        "unique_terms": 92,
        "total_terms": 178
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Building Qdrant collection",
        "api",
        "client",
        "collection",
        "distance",
        "key",
        "models",
        "qdrant",
        "size",
        "the",
        "use"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7102246575342466,
      "overall": 0.7700748858447488
    }
  },
  {
    "text": "# Extract the code snippets from the structures to a separate list code_snippets = [     structure[\"context\"][\"snippet\"] for structure in structures ]  points = [     models.PointStruct(         id=uuid.uuid4().hex,         vector={             \"text\": models.Document(                 text=text, model=\"sentence-transformers/all-MiniLM-L6-v2\"             ),             \"code\": models.Document(                 text=code, model=\"jinaai/jina-embeddings-v2-base-code\"             ),         },         payload=structure,     )     for text, code, structure in zip(text_representations, code_snippets, structures) ]",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0017",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Extract the code snippets from the structures to a separate list"
      ],
      "heading_text": "Extract the code snippets from the structures to a separate list",
      "token_count": 136,
      "char_count": 613,
      "start_char": 20885,
      "end_char": 21498,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5287755102040816,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.796274",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 136,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Extract the code snippets from the structures to a separate list",
      "chunk_hash": "d2e01de7ccbfb245",
      "content_digest": "d2e01de7ccbfb245",
      "chunk_length": 613,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "text",
          "structure",
          "snippets",
          "structures",
          "models",
          "the",
          "for",
          "document",
          "model",
          "extract",
          "from",
          "separate",
          "list",
          "context",
          "snippet",
          "points",
          "pointstruct",
          "uuid",
          "uuid4"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 7,
            "weight": 0.122807
          },
          {
            "term": "text",
            "tf": 6,
            "weight": 0.105263
          },
          {
            "term": "structure",
            "tf": 4,
            "weight": 0.070175
          },
          {
            "term": "snippets",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "structures",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "models",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "extract",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "separate",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "list",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "context",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "snippet",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "points",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "pointstruct",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "uuid",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "uuid4",
            "tf": 1,
            "weight": 0.017544
          }
        ],
        "unique_terms": 33,
        "total_terms": 57
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Extract the code snippets from the structures to a separate list",
        "code",
        "document",
        "for",
        "model",
        "models",
        "snippets",
        "structure",
        "structures",
        "text",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5287755102040816,
      "overall": 0.7429251700680272
    }
  },
  {
    "text": "# Parallel processing can help.",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0019",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Parallel processing can help."
      ],
      "heading_text": "Parallel processing can help.",
      "token_count": 6,
      "char_count": 31,
      "start_char": 21568,
      "end_char": 21599,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.796699",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 6,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Parallel processing can help.",
      "chunk_hash": "b02f886bd833ff25",
      "content_digest": "b02f886bd833ff25",
      "chunk_length": 31,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "parallel",
          "processing",
          "can",
          "help"
        ],
        "term_weights": [
          {
            "term": "parallel",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "help",
            "tf": 1,
            "weight": 0.25
          }
        ],
        "unique_terms": 4,
        "total_terms": 4
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Parallel processing can help.",
        "can",
        "help",
        "parallel",
        "processing"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "# But too many processes may trigger swap memory and hurt performance. client.upload_points(\"qdrant-sources\", points=points, batch_size=64) ``` Internally, `qdrant-client` uses [FastEmbed](https://github.com/qdrant/fastembed) to implicitly convert our documents into their vector representations. The uploaded points are immediately available for search. Next, query the collection to find relevant code snippets.",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0020",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "But too many processes may trigger swap memory and hurt performance."
      ],
      "heading_text": "But too many processes may trigger swap memory and hurt performance.",
      "token_count": 87,
      "char_count": 413,
      "start_char": 21600,
      "end_char": 22013,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5769565217391305,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.797605",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 87,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "But too many processes may trigger swap memory and hurt performance.",
      "chunk_hash": "79637a6cc157f9af",
      "content_digest": "79637a6cc157f9af",
      "chunk_length": 413,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "points",
          "qdrant",
          "client",
          "fastembed",
          "the",
          "but",
          "too",
          "many",
          "processes",
          "may",
          "trigger",
          "swap",
          "memory",
          "and",
          "hurt",
          "performance",
          "upload",
          "sources",
          "batch",
          "size"
        ],
        "term_weights": [
          {
            "term": "points",
            "tf": 4,
            "weight": 0.074074
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.055556
          },
          {
            "term": "client",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "but",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "too",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "many",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "processes",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "may",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "trigger",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "swap",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "memory",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "hurt",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "performance",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "upload",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "batch",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "size",
            "tf": 1,
            "weight": 0.018519
          }
        ],
        "unique_terms": 46,
        "total_terms": 54
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "But too many processes may trigger swap memory and hurt performance.",
        "but",
        "client",
        "fastembed",
        "many",
        "may",
        "points",
        "processes",
        "qdrant",
        "the",
        "too"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5769565217391305,
      "overall": 0.7256521739130434
    }
  },
  {
    "text": "## Querying the codebase  We use one of the models to search the collection. Start with text embeddings. Run the following query “*How do I count points in a collection?*”. Review the results. In these tables, we link to longer code excerpts from a \\`file\\_name\\` in the \\`Qdrant\\` repository. The results are subject to change. Fortunately, this model should continue to provide the results you need. ```python query = \"How do I count points in a collection?\"  hits = client.query_points(     \"qdrant-sources\",     query=models.Document(text=query, model=\"sentence-transformers/all-MiniLM-L6-v2\"),     using=\"text\",     limit=5, ).points ``` Now, review the results. The following table lists the module, the file name and score. Each line includes a link to the signature, as a code block from the file. | module              | file\\_name           | score      | signature                                                                                                                                                                             | | ------------------- | -------------------- | ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | toc                 | point\\_ops.rs        | 0.59448624 | [`pub async fn count`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/storage/src/content_manager/toc/point_ops.rs#L120)                          | | operations          | types.rs             | 0.5493385  | [`pub struct CountRequestInternal`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/collection/src/operations/types.rs#L831)                       | | collection\\_manager | segments\\_updater.rs | 0.5121002  | [`pub(crate) fn upsert_points<'a, T>`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/collection/src/collection_manager/segments_updater.rs#L339) | | collection          | point\\_ops.rs        | 0.5063539  | [`pub async fn count`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/collection/src/collection/point_ops.rs#L213)                                | | map\\_index          | mod.rs               | 0.49973983 | [`fn get_points_with_value_count<Q>`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/segment/src/index/field_index/map_index/mod.rs#L88)          |  It seems we were able to find some relevant code structures. Let’s try the same with the code embeddings: ```python hits = client.query_points(     \"qdrant-sources\",     query=models.Document(text=query, model=\"jinaai/jina-embeddings-v2-base-code\"),     using=\"code\",     limit=5, ).points ``` Output:  | module         | file\\_name                   | score      | signature                                                                                                                                                               | | -------------- | ---------------------------- | ---------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | field\\_index   | geo\\_index.rs                | 0.73278356 | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/segment/src/index/field_index/geo_index.rs#L612)         | | numeric\\_index | mod.rs                       | 0.7254976  | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/index/field_index/numeric_index/mod.rs#L322) | | map\\_index     | mod.rs                       | 0.7124739  | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/index/field_index/map_index/mod.rs#L315)     | | map\\_index     | mod.rs                       | 0.7124739  | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/index/field_index/map_index/mod.rs#L429)     | | fixtures       | payload\\_context\\_fixture.rs | 0.706204   | [`fn total_point_count`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/fixtures/payload_context_fixture.rs#L122)       |  While the scores retrieved by different models are not comparable, but we can see that the results are different. Code and text embeddings can capture different aspects of the codebase. We can use both models to query the collection and then combine the results to get the most relevant code snippets, from a single batch request. ```python responses = client.query_batch_points(     collection_name=\"qdrant-sources\",     requests=[         models.QueryRequest(             query=models.Document(                 text=query, model=\"sentence-transformers/all-MiniLM-L6-v2\"             ),             using=\"text\",             with_payload=True,             limit=5,         ),         models.QueryRequest(             query=models.Document(                 text=query, model=\"jinaai/jina-embeddings-v2-base-code\"             ),             using=\"code\",             with_payload=True,             limit=5,         ),     ], )  results = [response.points for response in responses] ``` Output:  | module              | file\\_name                   | score      | signature                                                                                                                                                                             | | ------------------- | ---------------------------- | ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | toc                 | point\\_ops.rs                | 0.59448624 | [`pub async fn count`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/storage/src/content_manager/toc/point_ops.rs#L120)                          | | operations          | types.rs                     | 0.5493385  | [`pub struct CountRequestInternal`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/collection/src/operations/types.rs#L831)                       | | collection\\_manager | segments\\_updater.rs         | 0.5121002  | [`pub(crate) fn upsert_points<'a, T>`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/collection/src/collection_manager/segments_updater.rs#L339) | | collection          | point\\_ops.rs                | 0.5063539  | [`pub async fn count`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/collection/src/collection/point_ops.rs#L213)                                | | map\\_index          | mod.rs                       | 0.49973983 | [`fn get_points_with_value_count<Q>`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/segment/src/index/field_index/map_index/mod.rs#L88)          | | field\\_index        | geo\\_index.rs                | 0.73278356 | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/segment/src/index/field_index/geo_index.rs#L612)                       | | numeric\\_index      | mod.rs                       | 0.7254976  | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/index/field_index/numeric_index/mod.rs#L322)               | | map\\_index          | mod.rs                       | 0.7124739  | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/index/field_index/map_index/mod.rs#L315)                   | | map\\_index          | mod.rs                       | 0.7124739  | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/index/field_index/map_index/mod.rs#L429)                   | | fixtures            | payload\\_context\\_fixture.rs | 0.706204   | [`fn total_point_count`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/fixtures/payload_context_fixture.rs#L122)                     |  This is one example of how you can use different models and combine the results. In a real-world scenario, you might run some reranking and deduplication, as well as additional processing of the results.",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0021",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Querying the codebase"
      ],
      "heading_text": "Querying the codebase",
      "token_count": 2200,
      "char_count": 8671,
      "start_char": 22016,
      "end_char": 30687,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.600351201478743,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.821140",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 2200,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Querying the codebase",
      "chunk_hash": "e429a568b7a69e08",
      "content_digest": "e429a568b7a69e08",
      "chunk_length": 8671,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "index",
          "the",
          "points",
          "https",
          "github",
          "com",
          "blob",
          "lib",
          "src",
          "collection",
          "count",
          "mod",
          "query",
          "7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a",
          "map",
          "segment",
          "field",
          "models",
          "code"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 44,
            "weight": 0.058355
          },
          {
            "term": "index",
            "tf": 42,
            "weight": 0.055703
          },
          {
            "term": "the",
            "tf": 24,
            "weight": 0.03183
          },
          {
            "term": "points",
            "tf": 20,
            "weight": 0.026525
          },
          {
            "term": "https",
            "tf": 20,
            "weight": 0.026525
          },
          {
            "term": "github",
            "tf": 20,
            "weight": 0.026525
          },
          {
            "term": "com",
            "tf": 20,
            "weight": 0.026525
          },
          {
            "term": "blob",
            "tf": 20,
            "weight": 0.026525
          },
          {
            "term": "lib",
            "tf": 20,
            "weight": 0.026525
          },
          {
            "term": "src",
            "tf": 20,
            "weight": 0.026525
          },
          {
            "term": "collection",
            "tf": 19,
            "weight": 0.025199
          },
          {
            "term": "count",
            "tf": 18,
            "weight": 0.023873
          },
          {
            "term": "mod",
            "tf": 16,
            "weight": 0.02122
          },
          {
            "term": "query",
            "tf": 14,
            "weight": 0.018568
          },
          {
            "term": "7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a",
            "tf": 12,
            "weight": 0.015915
          },
          {
            "term": "map",
            "tf": 12,
            "weight": 0.015915
          },
          {
            "term": "segment",
            "tf": 12,
            "weight": 0.015915
          },
          {
            "term": "field",
            "tf": 12,
            "weight": 0.015915
          },
          {
            "term": "models",
            "tf": 10,
            "weight": 0.013263
          },
          {
            "term": "code",
            "tf": 10,
            "weight": 0.013263
          }
        ],
        "unique_terms": 172,
        "total_terms": 754
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Querying the codebase",
        "blob",
        "com",
        "github",
        "https",
        "index",
        "lib",
        "points",
        "qdrant",
        "src",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.600351201478743,
      "overall": 0.700117067159581
    }
  },
  {
    "text": "### Code search demo\n\nOur [Code search demo](https://code-search.qdrant.tech/) uses the following process:\n\n1. The user sends a query.\n\n2. Both models vectorize that query simultaneously. We get two different vectors.\n\n3. Both vectors are used in parallel to find relevant snippets. We expect 5 examples from the NLP search and 20 examples from the code search.\n\n4. Once we retrieve results for both vectors, we merge them in one of the following scenarios:\n\n   1. If both methods return different results, we prefer the results from the general usage model (NLP).\n   2. If there is an overlap between the search results, we merge overlapping snippets.\n\nIn the screenshot, we search for `flush of wal`. The result shows relevant code, merged from both models. Note the highlighted code in lines 621-629. It’s where both models agree.\n\nNow you see semantic code intelligence, in action.",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0022",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Code search demo"
      ],
      "heading_text": "Code search demo",
      "token_count": 195,
      "char_count": 885,
      "start_char": 30697,
      "end_char": 31582,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6864788732394366,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.826108",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 195,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Code search demo",
      "chunk_hash": "0497e0ec56bd7640",
      "content_digest": "0497e0ec56bd7640",
      "chunk_length": 885,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "code",
          "search",
          "both",
          "from",
          "results",
          "models",
          "vectors",
          "demo",
          "following",
          "query",
          "different",
          "relevant",
          "snippets",
          "examples",
          "nlp",
          "for",
          "merge",
          "our",
          "https"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 11,
            "weight": 0.09322
          },
          {
            "term": "code",
            "tf": 7,
            "weight": 0.059322
          },
          {
            "term": "search",
            "tf": 7,
            "weight": 0.059322
          },
          {
            "term": "both",
            "tf": 6,
            "weight": 0.050847
          },
          {
            "term": "from",
            "tf": 4,
            "weight": 0.033898
          },
          {
            "term": "results",
            "tf": 4,
            "weight": 0.033898
          },
          {
            "term": "models",
            "tf": 3,
            "weight": 0.025424
          },
          {
            "term": "vectors",
            "tf": 3,
            "weight": 0.025424
          },
          {
            "term": "demo",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "following",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "query",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "different",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "relevant",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "snippets",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "nlp",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "merge",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "our",
            "tf": 1,
            "weight": 0.008475
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.008475
          }
        ],
        "unique_terms": 71,
        "total_terms": 118
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Code search demo",
        "both",
        "code",
        "demo",
        "following",
        "from",
        "models",
        "results",
        "search",
        "the",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6864788732394366,
      "overall": 0.7288262910798121
    }
  },
  {
    "text": "### Grouping the results  You can improve the search results, by grouping them by payload properties. In our case, we can group the results by the module. If we use code embeddings, we can see multiple results from the `map_index` module. Let’s group the results and assume a single result per module: ```python results = client.query_points_groups(     collection_name=\"qdrant-sources\",     using=\"code\",     query=models.Document(text=query, model=\"jinaai/jina-embeddings-v2-base-code\"),     group_by=\"context.module\",     limit=5,     group_size=1, ) ``` Output:  | module         | file\\_name                   | score      | signature                                                                                                                                                               | | -------------- | ---------------------------- | ---------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------- | | field\\_index   | geo\\_index.rs                | 0.73278356 | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/7aa164bd2dda1c0fc9bf3a0da42e656c95c2e52a/lib/segment/src/index/field_index/geo_index.rs#L612)         | | numeric\\_index | mod.rs                       | 0.7254976  | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/index/field_index/numeric_index/mod.rs#L322) | | map\\_index     | mod.rs                       | 0.7124739  | [`fn count_indexed_points`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/index/field_index/map_index/mod.rs#L315)     | | fixtures       | payload\\_context\\_fixture.rs | 0.706204   | [`fn total_point_count`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/fixtures/payload_context_fixture.rs#L122)       | | hnsw\\_index    | graph\\_links.rs              | 0.6998417  | [`fn num_points`](https://github.com/qdrant/qdrant/blob/3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59/lib/segment/src/index/hnsw_index/graph_links.rs#L477)                  |  With the grouping feature, we get more diverse results.",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0023",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Grouping the results"
      ],
      "heading_text": "Grouping the results",
      "token_count": 574,
      "char_count": 2254,
      "start_char": 31584,
      "end_char": 33838,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6741258741258742,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.835510",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 574,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Grouping the results",
      "chunk_hash": "05a199b4ec9dca44",
      "content_digest": "05a199b4ec9dca44",
      "chunk_length": 2254,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "index",
          "qdrant",
          "the",
          "results",
          "module",
          "points",
          "https",
          "github",
          "com",
          "blob",
          "lib",
          "segment",
          "src",
          "group",
          "field",
          "count",
          "mod",
          "3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59",
          "grouping",
          "can"
        ],
        "term_weights": [
          {
            "term": "index",
            "tf": 17,
            "weight": 0.083333
          },
          {
            "term": "qdrant",
            "tf": 11,
            "weight": 0.053922
          },
          {
            "term": "the",
            "tf": 7,
            "weight": 0.034314
          },
          {
            "term": "results",
            "tf": 7,
            "weight": 0.034314
          },
          {
            "term": "module",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "points",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "github",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "com",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "blob",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "lib",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "segment",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "src",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "group",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "field",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "count",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "mod",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "3fbe1cae6cb7f51a0c5bb4b45cfe6749ac76ed59",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "grouping",
            "tf": 3,
            "weight": 0.014706
          },
          {
            "term": "can",
            "tf": 3,
            "weight": 0.014706
          }
        ],
        "unique_terms": 90,
        "total_terms": 204
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Grouping the results",
        "blob",
        "com",
        "github",
        "https",
        "index",
        "module",
        "points",
        "qdrant",
        "results",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6741258741258742,
      "overall": 0.7580419580419581
    }
  },
  {
    "text": "## Summary\n\nThis tutorial demonstrates how to use Qdrant to navigate a codebase. For an end-to-end implementation, review the [code search notebook](https://colab.research.google.com/github/qdrant/examples/blob/master/code-search/code-search.ipynb) and the [code-search-demo](https://github.com/qdrant/demo-code-search). You can also check out [a running version of the code search demo](https://code-search.qdrant.tech/) which exposes Qdrant codebase for search with a web interface.",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0024",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Summary"
      ],
      "heading_text": "Summary",
      "token_count": 111,
      "char_count": 484,
      "start_char": 33842,
      "end_char": 34326,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.74,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.837191",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 111,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Summary",
      "chunk_hash": "a7d5b1f2e4e53d94",
      "content_digest": "a7d5b1f2e4e53d94",
      "chunk_length": 484,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "search",
          "code",
          "qdrant",
          "the",
          "https",
          "demo",
          "codebase",
          "for",
          "end",
          "com",
          "github",
          "summary",
          "this",
          "tutorial",
          "demonstrates",
          "how",
          "use",
          "navigate",
          "implementation",
          "review"
        ],
        "term_weights": [
          {
            "term": "search",
            "tf": 8,
            "weight": 0.114286
          },
          {
            "term": "code",
            "tf": 7,
            "weight": 0.1
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.071429
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "demo",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "codebase",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "end",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "summary",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "tutorial",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "demonstrates",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "navigate",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "review",
            "tf": 1,
            "weight": 0.014286
          }
        ],
        "unique_terms": 42,
        "total_terms": 70
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Summary",
        "code",
        "codebase",
        "com",
        "demo",
        "end",
        "for",
        "https",
        "qdrant",
        "search",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.74,
      "overall": 0.7799999999999999
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/advanced-tutorials/code-search.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Navigate Your Codebase with Semantic Search and Qdrant](#navigate-your-codebase-with-semantic-search-and-qdrant.md)    - [The approach](#the-approach.md)    - [Data preparation](#data-preparation.md)      - [Parsing the codebase](#parsing-the-codebase.md)     - [Code to *natural language* conversion](#code-to-natural-language-conversion.md)    - [Ingestion pipeline](#ingestion-pipeline.md)     - [Building Qdrant collection](#building-qdrant-collection.md)    - [Querying the codebase](#querying-the-codebase.md)      - [Code search demo](#code-search-demo.md)     - [Grouping the results](#grouping-the-results.md)    - [Summary](#summary.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/advanced-tutorials/code-search.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "2e9ebaf2fb1c-0025",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "filename": "_documentation_advanced-tutorials_code-search_.md",
      "file_extension": ".md",
      "chunk_index": 25,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 325,
      "char_count": 1226,
      "start_char": 34328,
      "end_char": 35554,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5199719101123595,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:08.841387",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 325,
      "document_id": "2e9ebaf2fb1c",
      "document_name": "_documentation_advanced-tutorials_code-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "source_filename": "_documentation_advanced-tutorials_code-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_advanced-tutorials_code-search\\_documentation_advanced-tutorials_code-search_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "eeb32cf7f605cca7",
      "content_digest": "eeb32cf7f605cca7",
      "chunk_length": 1226,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "the",
          "page",
          "github",
          "landing",
          "code",
          "search",
          "codebase",
          "https",
          "com",
          "this",
          "your",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "advanced",
          "tutorials"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.068027
          },
          {
            "term": "the",
            "tf": 8,
            "weight": 0.054422
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.047619
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.047619
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.040816
          },
          {
            "term": "code",
            "tf": 6,
            "weight": 0.040816
          },
          {
            "term": "search",
            "tf": 6,
            "weight": 0.040816
          },
          {
            "term": "codebase",
            "tf": 6,
            "weight": 0.040816
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.027211
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.027211
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "your",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "tutorials",
            "tf": 2,
            "weight": 0.013605
          }
        ],
        "unique_terms": 56,
        "total_terms": 147
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "code",
        "codebase",
        "com",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "search",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5199719101123595,
      "overall": 0.7066573033707865
    }
  }
]