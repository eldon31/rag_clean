[
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "09d7daf726fa-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 1033,
      "end_char": 3001,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.431303",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "09d7daf726fa-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 3683,
      "end_char": 5671,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.437858",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)",
    "metadata": {
      "chunk_id": "09d7daf726fa-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 83,
      "char_count": 311,
      "start_char": 5673,
      "end_char": 5984,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.439161",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 83,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "f059a5deb61e367d",
      "content_digest": "f059a5deb61e367d",
      "chunk_length": 311,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "faq",
          "https",
          "tech",
          "documentation",
          "fundamentals",
          "database",
          "optimization",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.228571
          },
          {
            "term": "faq",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "tech",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "documentation",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "fundamentals",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 14,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "release",
        "support",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.7209090909090908
    }
  },
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "09d7daf726fa-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 6361,
      "end_char": 8329,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.448491",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 485,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "09d7daf726fa-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 9011,
      "end_char": 10999,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.458902",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 459,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "# Payload  One of the significant features of Qdrant is the ability to store additional information along with vectors. This information is called `payload` in Qdrant terminology. Qdrant allows you to store any information that can be represented using JSON. Here is an example of a typical payload: ```json {     \"name\": \"jacket\",     \"colors\": [\"red\", \"blue\"],     \"count\": 10,     \"price\": 11.99,     \"locations\": [         {             \"lon\": 52.5200,              \"lat\": 13.4050         }     ],     \"reviews\": [         {             \"user\": \"alice\",             \"score\": 4         },         {             \"user\": \"bob\",             \"score\": 5         }     ] } ```",
    "metadata": {
      "chunk_id": "09d7daf726fa-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Payload"
      ],
      "heading_text": "Payload",
      "token_count": 171,
      "char_count": 673,
      "start_char": 11441,
      "end_char": 12114,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5229411764705882,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.463561",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 171,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Payload",
      "chunk_hash": "f87f206ba8ef110b",
      "content_digest": "f87f206ba8ef110b",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "payload",
          "qdrant",
          "information",
          "the",
          "store",
          "json",
          "user",
          "score",
          "one",
          "significant",
          "features",
          "ability",
          "additional",
          "along",
          "with",
          "vectors",
          "this",
          "called",
          "terminology",
          "allows"
        ],
        "term_weights": [
          {
            "term": "payload",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "information",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "store",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "user",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "score",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "one",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "significant",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "features",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "ability",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "additional",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "along",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "called",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "terminology",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "allows",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 44,
        "total_terms": 55
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Payload",
        "information",
        "json",
        "one",
        "payload",
        "qdrant",
        "score",
        "significant",
        "store",
        "the",
        "user"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5229411764705882,
      "overall": 0.7076470588235294
    }
  },
  {
    "text": "## Payload types\n\nIn addition to storing payloads, Qdrant also allows you search based on certain kinds of values. This feature is implemented as additional filters during the search and will enable you to incorporate custom logic on top of semantic similarity.\n\nDuring the filtering, Qdrant will check the conditions over those values that match the type of the filtering condition. If the stored value type does not fit the filtering condition - it will be considered not satisfied.\n\nFor example, you will get an empty output if you apply the [range condition](https://qdrant.tech/documentation/concepts/filtering/#range) on the string data.\n\nHowever, arrays (multiple values of the same type) are treated a little bit different. When we apply a filter to an array, it will succeed if at least one of the values inside the array meets the condition.\n\nThe filtering process is discussed in detail in the section [Filtering](https://qdrant.tech/documentation/concepts/filtering/).\n\nLet’s look at the data types that Qdrant supports for searching:",
    "metadata": {
      "chunk_id": "09d7daf726fa-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Payload types"
      ],
      "heading_text": "Payload types",
      "token_count": 212,
      "char_count": 1046,
      "start_char": 12119,
      "end_char": 13165,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.6868152866242038,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.464395",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 212,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Payload types",
      "chunk_hash": "f19bc56c984f5675",
      "content_digest": "f19bc56c984f5675",
      "chunk_length": 1046,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "filtering",
          "qdrant",
          "will",
          "you",
          "values",
          "condition",
          "type",
          "types",
          "search",
          "during",
          "that",
          "not",
          "for",
          "apply",
          "range",
          "https",
          "tech",
          "documentation",
          "concepts"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 16,
            "weight": 0.115942
          },
          {
            "term": "filtering",
            "tf": 7,
            "weight": 0.050725
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.036232
          },
          {
            "term": "will",
            "tf": 5,
            "weight": 0.036232
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "values",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "condition",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.021739
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "during",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "that",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "not",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "apply",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "range",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "tech",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "concepts",
            "tf": 2,
            "weight": 0.014493
          }
        ],
        "unique_terms": 84,
        "total_terms": 138
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Payload types",
        "condition",
        "filtering",
        "qdrant",
        "search",
        "the",
        "type",
        "types",
        "values",
        "will",
        "you"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.6868152866242038,
      "overall": 0.6956050955414012
    }
  },
  {
    "text": "### Integer  `integer` - 64-bit integer in the range from `-9223372036854775808` to `9223372036854775807`. Example of single and multiple `integer` values: ```json {     \"count\": 10,     \"sizes\": [35, 36, 38] } ```",
    "metadata": {
      "chunk_id": "09d7daf726fa-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integer"
      ],
      "heading_text": "Integer",
      "token_count": 69,
      "char_count": 214,
      "start_char": 13167,
      "end_char": 13381,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.57,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.465144",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 69,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Integer",
      "chunk_hash": "ce519727ae965d05",
      "content_digest": "ce519727ae965d05",
      "chunk_length": 214,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "integer",
          "bit",
          "the",
          "range",
          "from",
          "9223372036854775808",
          "9223372036854775807",
          "example",
          "single",
          "and",
          "multiple",
          "values",
          "json",
          "count",
          "sizes"
        ],
        "term_weights": [
          {
            "term": "integer",
            "tf": 4,
            "weight": 0.222222
          },
          {
            "term": "bit",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "range",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "9223372036854775808",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "9223372036854775807",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "count",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "sizes",
            "tf": 1,
            "weight": 0.055556
          }
        ],
        "unique_terms": 15,
        "total_terms": 18
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "9223372036854775807",
        "9223372036854775808",
        "Integer",
        "and",
        "bit",
        "example",
        "from",
        "integer",
        "range",
        "single",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.57,
      "overall": 0.7233333333333333
    }
  },
  {
    "text": "### Float  `float` - 64-bit floating point number. Example of single and multiple `float` values: ```json {     \"price\": 11.99,     \"ratings\": [9.1, 9.2, 9.4] } ```",
    "metadata": {
      "chunk_id": "09d7daf726fa-0013",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Float"
      ],
      "heading_text": "Float",
      "token_count": 57,
      "char_count": 164,
      "start_char": 13385,
      "end_char": 13549,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.578,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.465945",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 57,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Float",
      "chunk_hash": "42fbe032828da764",
      "content_digest": "42fbe032828da764",
      "chunk_length": 164,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "float",
          "bit",
          "floating",
          "point",
          "number",
          "example",
          "single",
          "and",
          "multiple",
          "values",
          "json",
          "price",
          "ratings"
        ],
        "term_weights": [
          {
            "term": "float",
            "tf": 3,
            "weight": 0.2
          },
          {
            "term": "bit",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "floating",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "point",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "number",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "price",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "ratings",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 13,
        "total_terms": 15
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Float",
        "and",
        "bit",
        "example",
        "float",
        "floating",
        "multiple",
        "number",
        "point",
        "single",
        "values"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.578,
      "overall": 0.6926666666666667
    }
  },
  {
    "text": "### Bool  Bool - binary value. Equals to `true` or `false`. Example of single and multiple `bool` values: ```json {     \"is_delivered\": true,     \"responses\": [false, false, true, false] } ```",
    "metadata": {
      "chunk_id": "09d7daf726fa-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Bool"
      ],
      "heading_text": "Bool",
      "token_count": 53,
      "char_count": 192,
      "start_char": 13553,
      "end_char": 13745,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5693103448275862,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.466831",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 53,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Bool",
      "chunk_hash": "6477d880d20faa8f",
      "content_digest": "6477d880d20faa8f",
      "chunk_length": 192,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "false",
          "bool",
          "true",
          "binary",
          "value",
          "equals",
          "example",
          "single",
          "and",
          "multiple",
          "values",
          "json",
          "delivered",
          "responses"
        ],
        "term_weights": [
          {
            "term": "false",
            "tf": 4,
            "weight": 0.190476
          },
          {
            "term": "bool",
            "tf": 3,
            "weight": 0.142857
          },
          {
            "term": "true",
            "tf": 3,
            "weight": 0.142857
          },
          {
            "term": "binary",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "value",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "equals",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "delivered",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "responses",
            "tf": 1,
            "weight": 0.047619
          }
        ],
        "unique_terms": 14,
        "total_terms": 21
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Bool",
        "and",
        "binary",
        "bool",
        "equals",
        "example",
        "false",
        "multiple",
        "single",
        "true",
        "value"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5693103448275862,
      "overall": 0.7231034482758621
    }
  },
  {
    "text": "### Keyword  `keyword` - string value. Example of single and multiple `keyword` values: ```json {     \"name\": \"Alice\",     \"friends\": [         \"bob\",         \"eva\",         \"jack\"     ] } ```",
    "metadata": {
      "chunk_id": "09d7daf726fa-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Keyword"
      ],
      "heading_text": "Keyword",
      "token_count": 51,
      "char_count": 192,
      "start_char": 13749,
      "end_char": 13941,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.578,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.467443",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 51,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Keyword",
      "chunk_hash": "7b34a342d5d90cb0",
      "content_digest": "7b34a342d5d90cb0",
      "chunk_length": 192,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "keyword",
          "string",
          "value",
          "example",
          "single",
          "and",
          "multiple",
          "values",
          "json",
          "name",
          "alice",
          "friends",
          "bob",
          "eva",
          "jack"
        ],
        "term_weights": [
          {
            "term": "keyword",
            "tf": 3,
            "weight": 0.176471
          },
          {
            "term": "string",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "value",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "name",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "alice",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "friends",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "bob",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "eva",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "jack",
            "tf": 1,
            "weight": 0.058824
          }
        ],
        "unique_terms": 15,
        "total_terms": 17
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Keyword",
        "and",
        "example",
        "json",
        "keyword",
        "multiple",
        "name",
        "single",
        "string",
        "value",
        "values"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.578,
      "overall": 0.726
    }
  },
  {
    "text": "### Geo  `geo` is used to represent geographical coordinates. Example of single and multiple `geo` values: ```json {     \"location\": {         \"lon\": 52.5200,         \"lat\": 13.4050     },     \"cities\": [         {             \"lon\": 51.5072,             \"lat\": 0.1276         },         {             \"lon\": 40.7128,             \"lat\": 74.0060         }     ] } ``` Coordinate should be described as an object containing two fields: `lon` - for longitude, and `lat` - for latitude.",
    "metadata": {
      "chunk_id": "09d7daf726fa-0016",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Geo"
      ],
      "heading_text": "Geo",
      "token_count": 133,
      "char_count": 482,
      "start_char": 13945,
      "end_char": 14427,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5260655737704918,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.468629",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 133,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Geo",
      "chunk_hash": "0a5d654f93071954",
      "content_digest": "0a5d654f93071954",
      "chunk_length": 482,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "lon",
          "lat",
          "geo",
          "and",
          "for",
          "used",
          "represent",
          "geographical",
          "coordinates",
          "example",
          "single",
          "multiple",
          "values",
          "json",
          "location",
          "5200",
          "4050",
          "cities",
          "5072",
          "1276"
        ],
        "term_weights": [
          {
            "term": "lon",
            "tf": 4,
            "weight": 0.097561
          },
          {
            "term": "lat",
            "tf": 4,
            "weight": 0.097561
          },
          {
            "term": "geo",
            "tf": 3,
            "weight": 0.073171
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "represent",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "geographical",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "coordinates",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "location",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "5200",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "4050",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "cities",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "5072",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "1276",
            "tf": 1,
            "weight": 0.02439
          }
        ],
        "unique_terms": 31,
        "total_terms": 41
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Geo",
        "and",
        "coordinates",
        "example",
        "for",
        "geo",
        "geographical",
        "lat",
        "lon",
        "represent",
        "used"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5260655737704918,
      "overall": 0.6753551912568305
    }
  },
  {
    "text": "### Datetime  *Available as of v1.8.0*  `datetime` - date and time in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format. See the following examples of single and multiple `datetime` values: ```json {     \"created_at\": \"2023-02-08T10:49:00Z\",     \"updated_at\": [         \"2023-02-08T13:52:00Z\",         \"2023-02-21T21:23:00Z\"     ] } ``` The following formats are supported:  - `\"2023-02-08T10:49:00Z\"` ([RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), UTC) - `\"2023-02-08T11:49:00+01:00\"` ([RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), with timezone) - `\"2023-02-08T10:49:00\"` (without timezone, UTC is assumed) - `\"2023-02-08T10:49\"` (without timezone and seconds) - `\"2023-02-08\"` (only date, midnight is assumed)  Notes about the format:  - `T` can be replaced with a space. - The `T` and `Z` symbols are case-insensitive. - UTC is always assumed when the timezone is not specified. - Timezone can have the following formats: `±HH:MM`, `±HHMM`, `±HH`, or `Z`. - Seconds can have up to 6 decimals, so the finest granularity for `datetime` is microseconds.",
    "metadata": {
      "chunk_id": "09d7daf726fa-0017",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Datetime"
      ],
      "heading_text": "Datetime",
      "token_count": 382,
      "char_count": 1131,
      "start_char": 14432,
      "end_char": 15563,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5207068702290076,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.471325",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 382,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Datetime",
      "chunk_hash": "6db7deb928c8d29c",
      "content_digest": "6db7deb928c8d29c",
      "chunk_length": 1131,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "2023",
          "the",
          "timezone",
          "datetime",
          "and",
          "08t10",
          "00z",
          "rfc",
          "3339",
          "https",
          "datatracker",
          "ietf",
          "org",
          "doc",
          "html",
          "rfc3339",
          "section",
          "following",
          "utc",
          "assumed"
        ],
        "term_weights": [
          {
            "term": "2023",
            "tf": 8,
            "weight": 0.062992
          },
          {
            "term": "the",
            "tf": 7,
            "weight": 0.055118
          },
          {
            "term": "timezone",
            "tf": 5,
            "weight": 0.03937
          },
          {
            "term": "datetime",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "08t10",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "00z",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "rfc",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "3339",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "datatracker",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "ietf",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "org",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "doc",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "html",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "rfc3339",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "section",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "following",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "utc",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "assumed",
            "tf": 3,
            "weight": 0.023622
          }
        ],
        "unique_terms": 62,
        "total_terms": 127
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "00z",
        "08t10",
        "2023",
        "3339",
        "Datetime",
        "and",
        "datetime",
        "https",
        "rfc",
        "the",
        "timezone"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5207068702290076,
      "overall": 0.7069022900763358
    }
  },
  {
    "text": "### UUID  *Available as of v1.11.0*  In addition to the basic `keyword` type, Qdrant supports `uuid` type for storing UUID values. Functionally, it works the same as `keyword`, internally stores parsed UUID values. ```json {     \"uuid\": \"550e8400-e29b-41d4-a716-446655440000\",     \"uuids\": [         \"550e8400-e29b-41d4-a716-446655440000\",         \"550e8400-e29b-41d4-a716-446655440001\"     ] } ``` String representation of UUID (e.g. `550e8400-e29b-41d4-a716-446655440000`) occupies 36 bytes. But when numeric representation is used, it is only 128 bits (16 bytes). Usage of `uuid` index type is recommended in payload-heavy collections to save RAM and improve search performance.",
    "metadata": {
      "chunk_id": "09d7daf726fa-0018",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "UUID"
      ],
      "heading_text": "UUID",
      "token_count": 205,
      "char_count": 681,
      "start_char": 15568,
      "end_char": 16249,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5285542168674698,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.473309",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 205,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "UUID",
      "chunk_hash": "1419fa3d0e9eb3af",
      "content_digest": "1419fa3d0e9eb3af",
      "chunk_length": 681,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "uuid",
          "550e8400",
          "e29b",
          "41d4",
          "a716",
          "type",
          "446655440000",
          "the",
          "keyword",
          "values",
          "representation",
          "bytes",
          "available",
          "addition",
          "basic",
          "qdrant",
          "supports",
          "for",
          "storing",
          "functionally"
        ],
        "term_weights": [
          {
            "term": "uuid",
            "tf": 7,
            "weight": 0.092105
          },
          {
            "term": "550e8400",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "e29b",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "41d4",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "a716",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "446655440000",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "keyword",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "values",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "representation",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "bytes",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "available",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "addition",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "basic",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "storing",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "functionally",
            "tf": 1,
            "weight": 0.013158
          }
        ],
        "unique_terms": 49,
        "total_terms": 76
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "41d4",
        "446655440000",
        "550e8400",
        "UUID",
        "a716",
        "e29b",
        "keyword",
        "the",
        "type",
        "uuid",
        "values"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5285542168674698,
      "overall": 0.7095180722891565
    }
  },
  {
    "text": "## Update payload\n\nUpdating payloads in Qdrant offers flexible methods to manage vector metadata. The **set payload** method updates specific fields while keeping others unchanged, while the **overwrite** method replaces the entire payload. Developers can also use **clear payload** to remove all metadata or delete fields to remove specific keys without affecting the rest. These options provide precise control for adapting to dynamic datasets.",
    "metadata": {
      "chunk_id": "09d7daf726fa-0020",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Update payload"
      ],
      "heading_text": "Update payload",
      "token_count": 78,
      "char_count": 446,
      "start_char": 22788,
      "end_char": 23234,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53375,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.494822",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 78,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Update payload",
      "chunk_hash": "23c3bb533441c577",
      "content_digest": "23c3bb533441c577",
      "chunk_length": 446,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "payload",
          "the",
          "metadata",
          "method",
          "specific",
          "fields",
          "while",
          "remove",
          "update",
          "updating",
          "payloads",
          "qdrant",
          "offers",
          "flexible",
          "methods",
          "manage",
          "vector",
          "set",
          "updates",
          "keeping"
        ],
        "term_weights": [
          {
            "term": "payload",
            "tf": 4,
            "weight": 0.070175
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.070175
          },
          {
            "term": "metadata",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "method",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "specific",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "fields",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "while",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "remove",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "update",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "updating",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "payloads",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "offers",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "flexible",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "manage",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "updates",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "keeping",
            "tf": 1,
            "weight": 0.017544
          }
        ],
        "unique_terms": 45,
        "total_terms": 57
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Update payload",
        "fields",
        "metadata",
        "method",
        "payload",
        "remove",
        "specific",
        "the",
        "update",
        "updating",
        "while"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53375,
      "overall": 0.71125
    }
  },
  {
    "text": "### Clear payload  This method removes all payload keys from specified points  REST API ([Schema](https://api.qdrant.tech/api-reference/points/clear-payload)): ```http POST /collections/{collection_name}/points/payload/clear {     \"points\": [0, 3, 100] } ``` ```python client.clear_payload(     collection_name=\"{collection_name}\",     points_selector=[0, 3, 100], ) ``` ```typescript client.clearPayload(\"{collection_name}\", {   points: [0, 3, 100], }); ``` ```rust use qdrant_client::qdrant::{ClearPayloadPointsBuilder, PointsIdsList};  client     .clear_payload(         ClearPayloadPointsBuilder::new(\"{collection_name}\")             .points(PointsIdsList {                 ids: vec![0.into(), 3.into(), 10.into()],             })             .wait(true),     )     .await?; ``` ```java import java.util.List;  import static io.qdrant.client.PointIdFactory.id;  client     .clearPayloadAsync(\"{collection_name}\", List.of(id(0), id(3), id(100)), true, null, null)     .get(); ``` ```csharp using Qdrant.Client;  var client = new QdrantClient(\"localhost\", 6334);  await client.ClearPayloadAsync(collectionName: \"{collection_name}\", ids: new ulong[] { 0, 3, 100 }); ``` ```go import (     \"context\"      \"github.com/qdrant/go-client/qdrant\" )  client.ClearPayload(context.Background(), &qdrant.ClearPayloadPoints{     CollectionName: \"{collection_name}\",     Points: qdrant.NewPointsSelector(         qdrant.NewIDNum(0),         qdrant.NewIDNum(3)), }) ``` You can also use `models.FilterSelector` to remove the points matching given filter criteria, instead of providing the ids.",
    "metadata": {
      "chunk_id": "09d7daf726fa-0023",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Clear payload"
      ],
      "heading_text": "Clear payload",
      "token_count": 405,
      "char_count": 1581,
      "start_char": 31939,
      "end_char": 33520,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5527977099236641,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.524722",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 405,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Clear payload",
      "chunk_hash": "0064999980714fc5",
      "content_digest": "0064999980714fc5",
      "chunk_length": 1581,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "points",
          "collection",
          "name",
          "payload",
          "clear",
          "100",
          "api",
          "new",
          "ids",
          "into",
          "import",
          "clearpayload",
          "use",
          "clearpayloadpointsbuilder",
          "pointsidslist",
          "true",
          "await",
          "java"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 11,
            "weight": 0.070968
          },
          {
            "term": "client",
            "tf": 11,
            "weight": 0.070968
          },
          {
            "term": "points",
            "tf": 9,
            "weight": 0.058065
          },
          {
            "term": "collection",
            "tf": 8,
            "weight": 0.051613
          },
          {
            "term": "name",
            "tf": 8,
            "weight": 0.051613
          },
          {
            "term": "payload",
            "tf": 6,
            "weight": 0.03871
          },
          {
            "term": "clear",
            "tf": 5,
            "weight": 0.032258
          },
          {
            "term": "100",
            "tf": 5,
            "weight": 0.032258
          },
          {
            "term": "api",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "new",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "ids",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "into",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "import",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "clearpayload",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "clearpayloadpointsbuilder",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "pointsidslist",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "true",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "await",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "java",
            "tf": 2,
            "weight": 0.012903
          }
        ],
        "unique_terms": 76,
        "total_terms": 155
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "100",
        "Clear payload",
        "api",
        "clear",
        "client",
        "collection",
        "name",
        "new",
        "payload",
        "points",
        "qdrant"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5527977099236641,
      "overall": 0.684265903307888
    }
  },
  {
    "text": "### Delete payload keys  Delete specific payload keys from points. REST API ([Schema](https://api.qdrant.tech/api-reference/points/delete-payload)): ```http POST /collections/{collection_name}/points/payload/delete {     \"keys\": [\"color\", \"price\"],     \"points\": [0, 3, 100] } ``` ```python client.delete_payload(     collection_name=\"{collection_name}\",     keys=[\"color\", \"price\"],     points=[0, 3, 100], ) ``` ```typescript client.deletePayload(\"{collection_name}\", {   keys: [\"color\", \"price\"],   points: [0, 3, 100], }); ``` ```rust use qdrant_client::qdrant::{DeletePayloadPointsBuilder, PointsIdsList};  client     .delete_payload(         DeletePayloadPointsBuilder::new(             \"{collection_name}\",             vec![\"color\".to_string(), \"price\".to_string()],         )         .points_selector(PointsIdsList {             ids: vec![0.into(), 3.into(), 10.into()],         })         .wait(true),     )     .await?; ``` ```java import java.util.List;  import static io.qdrant.client.PointIdFactory.id;  client     .deletePayloadAsync(         \"{collection_name}\",         List.of(\"color\", \"price\"),         List.of(id(0), id(3), id(100)),         true,         null,         null)     .get(); ``` ```csharp using Qdrant.Client;  var client = new QdrantClient(\"localhost\", 6334);  await client.DeletePayloadAsync(     collectionName: \"{collection_name}\",     keys: [\"color\", \"price\"],     ids: new ulong[] { 0, 3, 100 } ); ``` ```go import (     \"context\"      \"github.com/qdrant/go-client/qdrant\" )  client, err := qdrant.NewClient(&qdrant.Config{     Host: \"localhost\",     Port: 6334, })  client.DeletePayload(context.Background(), &qdrant.DeletePayloadPoints{     CollectionName: \"{collection_name}\",     Keys:           []string{\"color\", \"price\"},     PointsSelector: qdrant.NewPointsSelector(         qdrant.NewIDNum(0),         qdrant.NewIDNum(3)), }) ``` Alternatively, you can use filters to delete payload keys from the points. ```http POST /collections/{collection_name}/points/payload/delete {     \"keys\": [\"color\", \"price\"],     \"filter\": {         \"must\": [             {                 \"key\": \"color\",                 \"match\": {                     \"value\": \"red\"                 }             }         ]     } } ``` ```python client.delete_payload(     collection_name=\"{collection_name}\",     keys=[\"color\", \"price\"],     points=models.Filter(         must=[             models.FieldCondition(                 key=\"color\",                 match=models.MatchValue(value=\"red\"),             ),         ],     ), ) ``` ```typescript client.deletePayload(\"{collection_name}\", {   keys: [\"color\", \"price\"],   filter: {     must: [       {         key: \"color\",         match: {           value: \"red\",         },       },     ],   }, }); ``` ```rust use qdrant_client::qdrant::{Condition, DeletePayloadPointsBuilder, Filter};  client     .delete_payload(         DeletePayloadPointsBuilder::new(             \"{collection_name}\",             vec![\"color\".to_string(), \"price\".to_string()],         )         .points_selector(Filter::must([Condition::matches(             \"color\",             \"red\".to_string(),         )]))         .wait(true),     )     .await?; ``` ```java import java.util.List;  import static io.qdrant.client.ConditionFactory.matchKeyword;  client     .deletePayloadAsync(         \"{collection_name}\",         List.of(\"color\", \"price\"),         Filter.newBuilder().addMust(matchKeyword(\"color\", \"red\")).build(),         true,         null,         null)     .get(); ``` ```csharp using Qdrant.Client; using static Qdrant.Client.Grpc.Conditions;  var client = new QdrantClient(\"localhost\", 6334);  await client.DeletePayloadAsync(     collectionName: \"{collection_name}\",     keys: [\"color\", \"price\"],     filter: MatchKeyword(\"color\", \"red\") ); ``` ```go import (     \"context\"      \"github.com/qdrant/go-client/qdrant\" )  client, err := qdrant.NewClient(&qdrant.Config{     Host: \"localhost\",     Port: 6334, })  client.DeletePayload(context.Background(), &qdrant.DeletePayloadPoints{     CollectionName: \"{collection_name}\",     Keys:           []string{\"color\", \"price\"},     PointsSelector: qdrant.NewPointsSelectorFilter(         &qdrant.Filter{             Must: []*qdrant.Condition{qdrant.NewMatch(\"color\", \"red\")},         },     ), }) ```",
    "metadata": {
      "chunk_id": "09d7daf726fa-0024",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Delete payload keys"
      ],
      "heading_text": "Delete payload keys",
      "token_count": 1059,
      "char_count": 4295,
      "start_char": 33530,
      "end_char": 37825,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6427652733118971,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.540899",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1059,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Delete payload keys",
      "chunk_hash": "35e5aabe5fba55a0",
      "content_digest": "35e5aabe5fba55a0",
      "chunk_length": 4295,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "color",
          "collection",
          "name",
          "price",
          "keys",
          "points",
          "delete",
          "payload",
          "filter",
          "string",
          "red",
          "import",
          "100",
          "new",
          "list",
          "must",
          "deletepayload",
          "deletepayloadpointsbuilder"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.072973
          },
          {
            "term": "client",
            "tf": 25,
            "weight": 0.067568
          },
          {
            "term": "color",
            "tf": 21,
            "weight": 0.056757
          },
          {
            "term": "collection",
            "tf": 16,
            "weight": 0.043243
          },
          {
            "term": "name",
            "tf": 16,
            "weight": 0.043243
          },
          {
            "term": "price",
            "tf": 14,
            "weight": 0.037838
          },
          {
            "term": "keys",
            "tf": 13,
            "weight": 0.035135
          },
          {
            "term": "points",
            "tf": 11,
            "weight": 0.02973
          },
          {
            "term": "delete",
            "tf": 10,
            "weight": 0.027027
          },
          {
            "term": "payload",
            "tf": 10,
            "weight": 0.027027
          },
          {
            "term": "filter",
            "tf": 8,
            "weight": 0.021622
          },
          {
            "term": "string",
            "tf": 7,
            "weight": 0.018919
          },
          {
            "term": "red",
            "tf": 7,
            "weight": 0.018919
          },
          {
            "term": "import",
            "tf": 6,
            "weight": 0.016216
          },
          {
            "term": "100",
            "tf": 5,
            "weight": 0.013514
          },
          {
            "term": "new",
            "tf": 5,
            "weight": 0.013514
          },
          {
            "term": "list",
            "tf": 5,
            "weight": 0.013514
          },
          {
            "term": "must",
            "tf": 5,
            "weight": 0.013514
          },
          {
            "term": "deletepayload",
            "tf": 4,
            "weight": 0.010811
          },
          {
            "term": "deletepayloadpointsbuilder",
            "tf": 4,
            "weight": 0.010811
          }
        ],
        "unique_terms": 93,
        "total_terms": 370
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Delete payload keys",
        "client",
        "collection",
        "color",
        "delete",
        "keys",
        "name",
        "payload",
        "points",
        "price",
        "qdrant"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6427652733118971,
      "overall": 0.747588424437299
    }
  },
  {
    "text": "## Payload indexing  To search more efficiently with filters, Qdrant allows you to create indexes for payload fields by specifying the name and type of field it is intended to be. The indexed fields also affect the vector index. See [Indexing](https://qdrant.tech/documentation/concepts/indexing/) for details. In practice, we recommend creating an index on those fields that could potentially constrain the results the most. For example, using an index for the object ID will be much more efficient, being unique for each record, than an index by its color, which has only a few possible values. In compound queries involving multiple fields, Qdrant will attempt to use the most restrictive index first. To create index for the field, you can use the following:  REST API ([Schema](https://api.qdrant.tech/api-reference/indexes/create-field-index)) ```http PUT /collections/{collection_name}/index {     \"field_name\": \"name_of_the_field_to_index\",     \"field_schema\": \"keyword\" } ``` ```python client.create_payload_index(     collection_name=\"{collection_name}\",     field_name=\"name_of_the_field_to_index\",     field_schema=\"keyword\", ) ``` ```typescript client.createPayloadIndex(\"{collection_name}\", {   field_name: \"name_of_the_field_to_index\",   field_schema: \"keyword\", }); ``` ```rust use qdrant_client::qdrant::{CreateFieldIndexCollectionBuilder, FieldType};  client     .create_field_index(         CreateFieldIndexCollectionBuilder::new(             \"{collection_name}\",             \"name_of_the_field_to_index\",             FieldType::Keyword,         )         .wait(true),     )     .await?; ``` ```java import io.qdrant.client.grpc.Collections.PayloadSchemaType;  client.createPayloadIndexAsync(     \"{collection_name}\",     \"name_of_the_field_to_index\",     PayloadSchemaType.Keyword,     null,     true,     null,     null); ``` ```csharp using Qdrant.Client;  var client = new QdrantClient(\"localhost\", 6334);  await client.CreatePayloadIndexAsync(     collectionName: \"{collection_name}\",     fieldName: \"name_of_the_field_to_index\" ); ``` ```go import (     \"context\"      \"github.com/qdrant/go-client/qdrant\" )  client, err := qdrant.NewClient(&qdrant.Config{     Host: \"localhost\",     Port: 6334, })  client.CreateFieldIndex(context.Background(), &qdrant.CreateFieldIndexCollection{     CollectionName: \"{collection_name}\",     FieldName:      \"name_of_the_field_to_index\",     FieldType:      qdrant.FieldType_FieldTypeKeyword.Enum(), }) ``` The index usage flag is displayed in the payload schema with the [collection info API](https://api.qdrant.tech/api-reference/collections/get-collection). Payload schema example: ```json {     \"payload_schema\": {         \"property1\": {             \"data_type\": \"keyword\"         },         \"property2\": {             \"data_type\": \"integer\"         }     } } ```",
    "metadata": {
      "chunk_id": "09d7daf726fa-0025",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 25,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Payload indexing"
      ],
      "heading_text": "Payload indexing",
      "token_count": 640,
      "char_count": 2827,
      "start_char": 37843,
      "end_char": 40670,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7051383399209485,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.551043",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 640,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Payload indexing",
      "chunk_hash": "5c3cad0c1ec8cdfe",
      "content_digest": "5c3cad0c1ec8cdfe",
      "chunk_length": 2827,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "name",
          "index",
          "field",
          "qdrant",
          "client",
          "collection",
          "schema",
          "payload",
          "for",
          "api",
          "keyword",
          "create",
          "fields",
          "fieldtype",
          "indexing",
          "type",
          "https",
          "tech",
          "use"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 19,
            "weight": 0.062914
          },
          {
            "term": "name",
            "tf": 19,
            "weight": 0.062914
          },
          {
            "term": "index",
            "tf": 18,
            "weight": 0.059603
          },
          {
            "term": "field",
            "tf": 17,
            "weight": 0.056291
          },
          {
            "term": "qdrant",
            "tf": 15,
            "weight": 0.049669
          },
          {
            "term": "client",
            "tf": 12,
            "weight": 0.039735
          },
          {
            "term": "collection",
            "tf": 10,
            "weight": 0.033113
          },
          {
            "term": "schema",
            "tf": 7,
            "weight": 0.023179
          },
          {
            "term": "payload",
            "tf": 6,
            "weight": 0.019868
          },
          {
            "term": "for",
            "tf": 6,
            "weight": 0.019868
          },
          {
            "term": "api",
            "tf": 6,
            "weight": 0.019868
          },
          {
            "term": "keyword",
            "tf": 6,
            "weight": 0.019868
          },
          {
            "term": "create",
            "tf": 5,
            "weight": 0.016556
          },
          {
            "term": "fields",
            "tf": 4,
            "weight": 0.013245
          },
          {
            "term": "fieldtype",
            "tf": 4,
            "weight": 0.013245
          },
          {
            "term": "indexing",
            "tf": 3,
            "weight": 0.009934
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.009934
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.009934
          },
          {
            "term": "tech",
            "tf": 3,
            "weight": 0.009934
          },
          {
            "term": "use",
            "tf": 3,
            "weight": 0.009934
          }
        ],
        "unique_terms": 127,
        "total_terms": 302
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Payload indexing",
        "client",
        "collection",
        "field",
        "for",
        "index",
        "name",
        "payload",
        "qdrant",
        "schema",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7051383399209485,
      "overall": 0.7683794466403162
    }
  },
  {
    "text": "## Facet counts  *Available as of v1.12.0*  Faceting is a special counting technique that can be used for various purposes:  - Know which unique values exist for a payload key. - Know the number of points that contain each unique value. - Know how restrictive a filter would become by matching a specific value. Specifically, it is a counting aggregation for the values in a field, akin to a `GROUP BY` with `COUNT(*)` commands in SQL. These results for a specific field is called a “facet”. For example, when you look at an e-commerce search results page, you might see a list of brands on the sidebar, showing the number of products for each brand. This would be a facet for a `\"brand\"` field. In Qdrant you can facet on a field **only** if you have created a field index that supports `MatchValue` conditions for it, like a `keyword` index. To get the facet counts for a field, you can use the following:  By default, the number of `hits` returned is limited to 10. To change this, use the `limit` parameter. Keep this in mind when checking the number of unique values a payload field contains. REST API ([Facet](https://api.qdrant.tech/v-1-13-x/api-reference/points/facet)) ```http POST /collections/{collection_name}/facet {     \"key\": \"size\",     \"filter\": {       \"must\": {         \"key\": \"color\",         \"match\": { \"value\": \"red\" }       }     } } ``` ```python from qdrant_client import QdrantClient, models  client = QdrantClient(url=\"http://localhost:6333\")  client.facet(     collection_name=\"{collection_name}\",     key=\"size\",     facet_filter=models.Filter(must=[models.Match(\"color\", \"red\")]), ) ``` ```typescript import { QdrantClient } from \"@qdrant/js-client-rest\";  const client = new QdrantClient({ host: \"localhost\", port: 6333 });  client.facet(\"{collection_name}\", {     filter: {         must: [             {                 key: \"color\",                 match: {                     value: \"red\",                 },             },         ],     },     key: \"size\", }); ``` ```rust use qdrant_client::qdrant::{Condition, FacetCountsBuilder, Filter}; use qdrant_client::Qdrant;  let client = Qdrant::from_url(\"http://localhost:6334\").build()?;  client     .facet(          FacetCountsBuilder::new(\"{collection_name}\", \"size\")              .limit(10)              .filter(Filter::must(vec![Condition::matches(                  \"color\",                  \"red\".to_string(),              )])),      )      .await?; ``` ```java import io.qdrant.client.QdrantClient; import io.qdrant.client.QdrantGrpcClient;  import static io.qdrant.client.ConditionFactory.matchKeyword; import io.qdrant.client.grpc.Points; import io.qdrant.client.grpc.Filter;  QdrantClient client = new QdrantClient(                 QdrantGrpcClient.newBuilder(\"localhost\", 6334, false).build());  client     .facetAsync(         Points.FacetCounts.newBuilder()             .setCollectionName(collection_name)             .setKey(\"size\")             .setFilter(Filter.newBuilder().addMust(matchKeyword(\"color\", \"red\")).build())             .build())         .get(); ``` ```csharp using Qdrant.Client; using static Qdrant.Client.Grpc.Conditions;  var client = new QdrantClient(\"localhost\", 6334);  await client.FacetAsync(     \"{collection_name}\",     key: \"size\",     filter: MatchKeyword(\"color\", \"red\") ); ``` ```go import (     \"context\"      \"github.com/qdrant/go-client/qdrant\" )  client, err := qdrant.NewClient(&qdrant.Config{     Host: \"localhost\",     Port: 6334, })  res, err := client.Facet(ctx, &qdrant.FacetCounts{     CollectionName: \"{collection_name}\",     Key:            \"size\",         Filter: &qdrant.Filter{         Must: []*qdrant.Condition{             qdrant.NewMatch(\"color\", \"red\"),         },     }, }) ``` The response will contain the counts for each unique value in the field: ```json {   \"response\": {     \"hits\": [       {\"value\": \"L\", \"count\": 19},       {\"value\": \"S\", \"count\": 10},       {\"value\": \"M\", \"count\": 5},       {\"value\": \"XL\", \"count\": 1},       {\"value\": \"XXL\", \"count\": 1}     ]   },   \"time\": 0.0001 } ``` The results are sorted by the count in descending order, then by the value in ascending order. Only values with non-zero counts will be returned. By default, the way Qdrant the counts for each value is approximate to achieve fast results. This should accurate enough for most cases, but if you need to debug your storage, you can use the `exact` parameter to get exact counts. ```http POST /collections/{collection_name}/facet {     \"key\": \"size\",     \"exact\": true } ``` ```python client.facet(     collection_name=\"{collection_name}\",     key=\"size\",     exact=True, ) ``` ```typescript client.facet(\"{collection_name}\", {     key: \"size\",     exact: true, }); ``` ```rust use qdrant_client::qdrant::FacetCountsBuilder;  client     .facet(          FacetCountsBuilder::new(\"{collection_name}\", \"size\")              .limit(10)              .exact(true),      )      .await?; ``` ```java client       .facetAsync(           Points.FacetCounts.newBuilder()               .setCollectionName(collection_name)               .setKey(\"foo\")               .setExact(true)               .build())       .get(); ``` ```csharp using Qdrant.Client;  await client.FacetAsync(     \"{collection_name}\",     key: \"size\",     exact: true, ); ``` ```go res, err := client.Facet(ctx, &qdrant.FacetCounts{     CollectionName: \"{collection_name}\",     Key:            \"key\",     Exact:          true, }) ```",
    "metadata": {
      "chunk_id": "09d7daf726fa-0026",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 26,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Facet counts"
      ],
      "heading_text": "Facet counts",
      "token_count": 1371,
      "char_count": 5433,
      "start_char": 40686,
      "end_char": 46119,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.8526408450704226,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:15.565420",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1371,
      "document_id": "09d7daf726fa",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Facet counts",
      "chunk_hash": "bc35c2f889cf4d06",
      "content_digest": "bc35c2f889cf4d06",
      "chunk_length": 5433,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "client",
          "qdrant",
          "facet",
          "the",
          "collection",
          "name",
          "key",
          "filter",
          "for",
          "value",
          "size",
          "field",
          "import",
          "qdrantclient",
          "exact",
          "count",
          "you",
          "color",
          "red",
          "true"
        ],
        "term_weights": [
          {
            "term": "client",
            "tf": 32,
            "weight": 0.057245
          },
          {
            "term": "qdrant",
            "tf": 29,
            "weight": 0.051878
          },
          {
            "term": "facet",
            "tf": 18,
            "weight": 0.0322
          },
          {
            "term": "the",
            "tf": 18,
            "weight": 0.0322
          },
          {
            "term": "collection",
            "tf": 16,
            "weight": 0.028623
          },
          {
            "term": "name",
            "tf": 16,
            "weight": 0.028623
          },
          {
            "term": "key",
            "tf": 14,
            "weight": 0.025045
          },
          {
            "term": "filter",
            "tf": 13,
            "weight": 0.023256
          },
          {
            "term": "for",
            "tf": 12,
            "weight": 0.021467
          },
          {
            "term": "value",
            "tf": 12,
            "weight": 0.021467
          },
          {
            "term": "size",
            "tf": 12,
            "weight": 0.021467
          },
          {
            "term": "field",
            "tf": 8,
            "weight": 0.014311
          },
          {
            "term": "import",
            "tf": 8,
            "weight": 0.014311
          },
          {
            "term": "qdrantclient",
            "tf": 8,
            "weight": 0.014311
          },
          {
            "term": "exact",
            "tf": 8,
            "weight": 0.014311
          },
          {
            "term": "count",
            "tf": 7,
            "weight": 0.012522
          },
          {
            "term": "you",
            "tf": 7,
            "weight": 0.012522
          },
          {
            "term": "color",
            "tf": 7,
            "weight": 0.012522
          },
          {
            "term": "red",
            "tf": 7,
            "weight": 0.012522
          },
          {
            "term": "true",
            "tf": 7,
            "weight": 0.012522
          }
        ],
        "unique_terms": 183,
        "total_terms": 559
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Facet counts",
        "client",
        "collection",
        "facet",
        "filter",
        "for",
        "key",
        "name",
        "qdrant",
        "the",
        "value"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.8526408450704226,
      "overall": 0.8175469483568074
    }
  }
]