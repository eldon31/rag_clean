[
  {
    "text": "### Managed Services  [Getting Started](https://qdrant.tech/documentation/cloud-getting-started/)  [Account Setup](https://qdrant.tech/documentation/cloud-account-setup/)  [Cloud RBAC](https://qdrant.tech/documentation/cloud-rbac/)  - [Role Management](https://qdrant.tech/documentation/cloud-rbac/role-management/) - [User Management](https://qdrant.tech/documentation/cloud-rbac/user-management/) - [Permission Reference](https://qdrant.tech/documentation/cloud-rbac/permission-reference/)  [Managed Cloud](https://qdrant.tech/documentation/cloud/)  - [Create a Cluster](https://qdrant.tech/documentation/cloud/create-cluster/) - [Authentication](https://qdrant.tech/documentation/cloud/authentication/) - [Cluster Access](https://qdrant.tech/documentation/cloud/cluster-access/) - [Scale Clusters](https://qdrant.tech/documentation/cloud/cluster-scaling/) - [Configure Clusters](https://qdrant.tech/documentation/cloud/configure-cluster/) - [Monitor Clusters](https://qdrant.tech/documentation/cloud/cluster-monitoring/) - [Update Clusters](https://qdrant.tech/documentation/cloud/cluster-upgrades/) - [Backup Clusters](https://qdrant.tech/documentation/cloud/backups/) - [Inference](https://qdrant.tech/documentation/cloud/inference/)  [Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/)  - [Setup Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-setup/) - [Create a Cluster](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-cluster-creation/) - [Configure, Scale & Update Clusters](https://qdrant.tech/documentation/hybrid-cloud/configure-scale-upgrade/) - [Configure the Qdrant Operator](https://qdrant.tech/documentation/hybrid-cloud/operator-configuration/) - [Networking, Logging & Monitoring](https://qdrant.tech/documentation/hybrid-cloud/networking-logging-monitoring/) - [Deployment Platforms](https://qdrant.tech/documentation/hybrid-cloud/platform-deployment-options/)  [Private Cloud](https://qdrant.tech/documentation/private-cloud/)  - [Setup Private Cloud](https://qdrant.tech/documentation/private-cloud/private-cloud-setup/) - [Configuration](https://qdrant.tech/documentation/private-cloud/configuration/) - [Managing a Cluster](https://qdrant.tech/documentation/private-cloud/qdrant-cluster-management/) - [Backups](https://qdrant.tech/documentation/private-cloud/backups/) - [Logging & Monitoring](https://qdrant.tech/documentation/private-cloud/logging-monitoring/) - [API Reference](https://qdrant.tech/documentation/private-cloud/api-reference/) - [Changelog](https://qdrant.tech/documentation/private-cloud/changelog/)  [Billing & Payments](https://qdrant.tech/documentation/cloud-pricing-payments/)  [Premium Tier](https://qdrant.tech/documentation/cloud-premium/)",
    "metadata": {
      "chunk_id": "b5beb9b67d57-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Managed Services"
      ],
      "heading_text": "Managed Services",
      "token_count": 614,
      "char_count": 2741,
      "start_char": 789,
      "end_char": 3530,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7067961165048544,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:38.656724",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 614,
      "document_id": "b5beb9b67d57",
      "document_name": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "hierarchy_path": "Managed Services",
      "chunk_hash": "81e21f320195534d",
      "content_digest": "81e21f320195534d",
      "chunk_length": 2741,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "cloud",
          "qdrant",
          "https",
          "tech",
          "documentation",
          "cluster",
          "hybrid",
          "private",
          "setup",
          "clusters",
          "rbac",
          "management",
          "configure",
          "monitoring",
          "reference",
          "logging",
          "create",
          "scale",
          "backups",
          "configuration"
        ],
        "term_weights": [
          {
            "term": "cloud",
            "tf": 42,
            "weight": 0.134185
          },
          {
            "term": "qdrant",
            "tf": 35,
            "weight": 0.111821
          },
          {
            "term": "https",
            "tf": 33,
            "weight": 0.105431
          },
          {
            "term": "tech",
            "tf": 33,
            "weight": 0.105431
          },
          {
            "term": "documentation",
            "tf": 33,
            "weight": 0.105431
          },
          {
            "term": "cluster",
            "tf": 12,
            "weight": 0.038339
          },
          {
            "term": "hybrid",
            "tf": 11,
            "weight": 0.035144
          },
          {
            "term": "private",
            "tf": 11,
            "weight": 0.035144
          },
          {
            "term": "setup",
            "tf": 6,
            "weight": 0.019169
          },
          {
            "term": "clusters",
            "tf": 6,
            "weight": 0.019169
          },
          {
            "term": "rbac",
            "tf": 5,
            "weight": 0.015974
          },
          {
            "term": "management",
            "tf": 5,
            "weight": 0.015974
          },
          {
            "term": "configure",
            "tf": 5,
            "weight": 0.015974
          },
          {
            "term": "monitoring",
            "tf": 5,
            "weight": 0.015974
          },
          {
            "term": "reference",
            "tf": 4,
            "weight": 0.01278
          },
          {
            "term": "logging",
            "tf": 4,
            "weight": 0.01278
          },
          {
            "term": "create",
            "tf": 3,
            "weight": 0.009585
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.009585
          },
          {
            "term": "backups",
            "tf": 3,
            "weight": 0.009585
          },
          {
            "term": "configuration",
            "tf": 3,
            "weight": 0.009585
          }
        ],
        "unique_terms": 53,
        "total_terms": 313
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Managed Services",
        "cloud",
        "cluster",
        "clusters",
        "documentation",
        "https",
        "hybrid",
        "private",
        "qdrant",
        "setup",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7067961165048544,
      "overall": 0.7689320388349513
    }
  },
  {
    "text": "### Support  [Support](https://qdrant.tech/documentation/support/)  [Security](https://qdrant.tech/documentation/cloud-security/)  [Tutorials & Examples](https://qdrant.tech/documentation/tutorials-and-examples/)  - [Using Cloud Inference to Build Hybrid Search](https://qdrant.tech/documentation/tutorials-and-examples/cloud-inference-hybrid-search/) - [Monitoring Hybrid/Private Cloud with Prometheus and Grafana](https://qdrant.tech/documentation/tutorials-and-examples/hybrid-cloud-prometheus/)",
    "metadata": {
      "chunk_id": "b5beb9b67d57-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 110,
      "char_count": 498,
      "start_char": 3833,
      "end_char": 4331,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5639130434782609,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:38.661853",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 110,
      "document_id": "b5beb9b67d57",
      "document_name": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "bd66045741770c14",
      "content_digest": "bd66045741770c14",
      "chunk_length": 498,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "cloud",
          "tutorials",
          "examples",
          "and",
          "hybrid",
          "support",
          "security",
          "inference",
          "search",
          "prometheus",
          "using",
          "build",
          "monitoring",
          "private",
          "with",
          "grafana"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 5,
            "weight": 0.086207
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.086207
          },
          {
            "term": "tech",
            "tf": 5,
            "weight": 0.086207
          },
          {
            "term": "documentation",
            "tf": 5,
            "weight": 0.086207
          },
          {
            "term": "cloud",
            "tf": 5,
            "weight": 0.086207
          },
          {
            "term": "tutorials",
            "tf": 4,
            "weight": 0.068966
          },
          {
            "term": "examples",
            "tf": 4,
            "weight": 0.068966
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.068966
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.068966
          },
          {
            "term": "support",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "security",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "inference",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "prometheus",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "build",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "monitoring",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "private",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "grafana",
            "tf": 1,
            "weight": 0.017241
          }
        ],
        "unique_terms": 20,
        "total_terms": 58
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "and",
        "cloud",
        "documentation",
        "examples",
        "https",
        "hybrid",
        "qdrant",
        "support",
        "tech",
        "tutorials"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5639130434782609,
      "overall": 0.6879710144927537
    }
  },
  {
    "text": "### Managed Services  [Getting Started](https://qdrant.tech/documentation/cloud-getting-started/)  [Account Setup](https://qdrant.tech/documentation/cloud-account-setup/)  [Cloud RBAC](https://qdrant.tech/documentation/cloud-rbac/)  - [Role Management](https://qdrant.tech/documentation/cloud-rbac/role-management/) - [User Management](https://qdrant.tech/documentation/cloud-rbac/user-management/) - [Permission Reference](https://qdrant.tech/documentation/cloud-rbac/permission-reference/)  [Managed Cloud](https://qdrant.tech/documentation/cloud/)  - [Create a Cluster](https://qdrant.tech/documentation/cloud/create-cluster/) - [Authentication](https://qdrant.tech/documentation/cloud/authentication/) - [Cluster Access](https://qdrant.tech/documentation/cloud/cluster-access/) - [Scale Clusters](https://qdrant.tech/documentation/cloud/cluster-scaling/) - [Configure Clusters](https://qdrant.tech/documentation/cloud/configure-cluster/) - [Monitor Clusters](https://qdrant.tech/documentation/cloud/cluster-monitoring/) - [Update Clusters](https://qdrant.tech/documentation/cloud/cluster-upgrades/) - [Backup Clusters](https://qdrant.tech/documentation/cloud/backups/) - [Inference](https://qdrant.tech/documentation/cloud/inference/)  [Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/)  - [Setup Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-setup/) - [Create a Cluster](https://qdrant.tech/documentation/hybrid-cloud/hybrid-cloud-cluster-creation/) - [Configure, Scale & Update Clusters](https://qdrant.tech/documentation/hybrid-cloud/configure-scale-upgrade/) - [Configure the Qdrant Operator](https://qdrant.tech/documentation/hybrid-cloud/operator-configuration/) - [Networking, Logging & Monitoring](https://qdrant.tech/documentation/hybrid-cloud/networking-logging-monitoring/) - [Deployment Platforms](https://qdrant.tech/documentation/hybrid-cloud/platform-deployment-options/)  [Private Cloud](https://qdrant.tech/documentation/private-cloud/)  - [Setup Private Cloud](https://qdrant.tech/documentation/private-cloud/private-cloud-setup/) - [Configuration](https://qdrant.tech/documentation/private-cloud/configuration/) - [Managing a Cluster](https://qdrant.tech/documentation/private-cloud/qdrant-cluster-management/) - [Backups](https://qdrant.tech/documentation/private-cloud/backups/) - [Logging & Monitoring](https://qdrant.tech/documentation/private-cloud/logging-monitoring/) - [API Reference](https://qdrant.tech/documentation/private-cloud/api-reference/) - [Changelog](https://qdrant.tech/documentation/private-cloud/changelog/)  [Billing & Payments](https://qdrant.tech/documentation/cloud-pricing-payments/)  [Premium Tier](https://qdrant.tech/documentation/cloud-premium/)",
    "metadata": {
      "chunk_id": "b5beb9b67d57-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Managed Services"
      ],
      "heading_text": "Managed Services",
      "token_count": 614,
      "char_count": 2741,
      "start_char": 4427,
      "end_char": 7168,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7067961165048544,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:38.670650",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 614,
      "document_id": "b5beb9b67d57",
      "document_name": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "hierarchy_path": "Managed Services",
      "chunk_hash": "81e21f320195534d",
      "content_digest": "81e21f320195534d",
      "chunk_length": 2741,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "cloud",
          "qdrant",
          "https",
          "tech",
          "documentation",
          "cluster",
          "hybrid",
          "private",
          "setup",
          "clusters",
          "rbac",
          "management",
          "configure",
          "monitoring",
          "reference",
          "logging",
          "create",
          "scale",
          "backups",
          "configuration"
        ],
        "term_weights": [
          {
            "term": "cloud",
            "tf": 42,
            "weight": 0.134185
          },
          {
            "term": "qdrant",
            "tf": 35,
            "weight": 0.111821
          },
          {
            "term": "https",
            "tf": 33,
            "weight": 0.105431
          },
          {
            "term": "tech",
            "tf": 33,
            "weight": 0.105431
          },
          {
            "term": "documentation",
            "tf": 33,
            "weight": 0.105431
          },
          {
            "term": "cluster",
            "tf": 12,
            "weight": 0.038339
          },
          {
            "term": "hybrid",
            "tf": 11,
            "weight": 0.035144
          },
          {
            "term": "private",
            "tf": 11,
            "weight": 0.035144
          },
          {
            "term": "setup",
            "tf": 6,
            "weight": 0.019169
          },
          {
            "term": "clusters",
            "tf": 6,
            "weight": 0.019169
          },
          {
            "term": "rbac",
            "tf": 5,
            "weight": 0.015974
          },
          {
            "term": "management",
            "tf": 5,
            "weight": 0.015974
          },
          {
            "term": "configure",
            "tf": 5,
            "weight": 0.015974
          },
          {
            "term": "monitoring",
            "tf": 5,
            "weight": 0.015974
          },
          {
            "term": "reference",
            "tf": 4,
            "weight": 0.01278
          },
          {
            "term": "logging",
            "tf": 4,
            "weight": 0.01278
          },
          {
            "term": "create",
            "tf": 3,
            "weight": 0.009585
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.009585
          },
          {
            "term": "backups",
            "tf": 3,
            "weight": 0.009585
          },
          {
            "term": "configuration",
            "tf": 3,
            "weight": 0.009585
          }
        ],
        "unique_terms": 53,
        "total_terms": 313
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Managed Services",
        "cloud",
        "cluster",
        "clusters",
        "documentation",
        "https",
        "hybrid",
        "private",
        "qdrant",
        "setup",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7067961165048544,
      "overall": 0.7689320388349513
    }
  },
  {
    "text": "# Using Cloud Inference with Qdrant for Vector Search  In this tutorial, we’ll walkthrough building a **hybrid semantic search engine** using Qdrant Cloud’s built-in [inference](https://qdrant.tech/documentation/cloud/inference/) capabilities. You’ll learn how to:  - Automatically embed your data using [cloud Inference](https://qdrant.tech/documentation/cloud/inference/) without needing to run local models, - Combine dense semantic embeddings with [sparse BM25 keywords](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/), and - Perform hybrid search using [Reciprocal Rank Fusion (RRF)](https://qdrant.tech/documentation/concepts/hybrid-queries/) to retrieve the most relevant results.",
    "metadata": {
      "chunk_id": "b5beb9b67d57-0008",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Using Cloud Inference with Qdrant for Vector Search"
      ],
      "heading_text": "Using Cloud Inference with Qdrant for Vector Search",
      "token_count": 159,
      "char_count": 718,
      "start_char": 8163,
      "end_char": 8881,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7421739130434782,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:38.675044",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 159,
      "document_id": "b5beb9b67d57",
      "document_name": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "hierarchy_path": "Using Cloud Inference with Qdrant for Vector Search",
      "chunk_hash": "65d3210cc9e24a92",
      "content_digest": "65d3210cc9e24a92",
      "chunk_length": 718,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "cloud",
          "inference",
          "using",
          "search",
          "hybrid",
          "https",
          "tech",
          "documentation",
          "with",
          "semantic",
          "for",
          "vector",
          "this",
          "tutorial",
          "walkthrough",
          "building",
          "engine",
          "built",
          "capabilities"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 6,
            "weight": 0.068966
          },
          {
            "term": "cloud",
            "tf": 5,
            "weight": 0.057471
          },
          {
            "term": "inference",
            "tf": 5,
            "weight": 0.057471
          },
          {
            "term": "using",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "search",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "tech",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "documentation",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "semantic",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "tutorial",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "walkthrough",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "building",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "engine",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "built",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "capabilities",
            "tf": 1,
            "weight": 0.011494
          }
        ],
        "unique_terms": 54,
        "total_terms": 87
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Using Cloud Inference with Qdrant for Vector Search",
        "cloud",
        "documentation",
        "https",
        "hybrid",
        "inference",
        "qdrant",
        "search",
        "tech",
        "using",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7421739130434782,
      "overall": 0.7807246376811593
    }
  },
  {
    "text": "## Create a Collection  Qdrant stores vectors and associated metadata in collections. A collection requires vector parameters to be set during creation. In this case, let’s set up a collection using `BM25` for sparse vectors and `all-minilm-l6-v2` for dense vectors. BM25 uses the Inverse Document Frequency to reduce the weight of common terms that appear in many documents while boosting the importance of rare terms that are more discriminative for retrieval. Qdrant will handle the calculations of the IDF term if we enable that in the configuration of the `bm25_sparse_vector` named sparse vector. ```python from qdrant_client import models  collection_name = \"my_collection_name\"  if not client.collection_exists(collection_name=collection_name):     client.create_collection(         collection_name=collection_name,         vectors_config={             \"dense_vector\": models.VectorParams(                 size=384,                 distance=models.Distance.COSINE             )         },         sparse_vectors_config={             \"bm25_sparse_vector\": models.SparseVectorParams(                 modifier=models.Modifier.IDF # Enable Inverse Document Frequency             )         }     ) ```",
    "metadata": {
      "chunk_id": "b5beb9b67d57-0011",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Create a Collection"
      ],
      "heading_text": "Create a Collection",
      "token_count": 233,
      "char_count": 1204,
      "start_char": 9474,
      "end_char": 10678,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.509047619047619,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:38.679190",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 233,
      "document_id": "b5beb9b67d57",
      "document_name": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "hierarchy_path": "Create a Collection",
      "chunk_hash": "8f0908e59bc33d20",
      "content_digest": "8f0908e59bc33d20",
      "chunk_length": 1204,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "collection",
          "the",
          "name",
          "vectors",
          "vector",
          "sparse",
          "models",
          "bm25",
          "qdrant",
          "for",
          "that",
          "client",
          "create",
          "and",
          "set",
          "dense",
          "inverse",
          "document",
          "frequency",
          "terms"
        ],
        "term_weights": [
          {
            "term": "collection",
            "tf": 11,
            "weight": 0.083969
          },
          {
            "term": "the",
            "tf": 7,
            "weight": 0.053435
          },
          {
            "term": "name",
            "tf": 6,
            "weight": 0.045802
          },
          {
            "term": "vectors",
            "tf": 5,
            "weight": 0.038168
          },
          {
            "term": "vector",
            "tf": 5,
            "weight": 0.038168
          },
          {
            "term": "sparse",
            "tf": 5,
            "weight": 0.038168
          },
          {
            "term": "models",
            "tf": 5,
            "weight": 0.038168
          },
          {
            "term": "bm25",
            "tf": 4,
            "weight": 0.030534
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "that",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "set",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "dense",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "inverse",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "frequency",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "terms",
            "tf": 2,
            "weight": 0.015267
          }
        ],
        "unique_terms": 70,
        "total_terms": 131
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Create a Collection",
        "bm25",
        "collection",
        "for",
        "models",
        "name",
        "qdrant",
        "sparse",
        "the",
        "vector",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.509047619047619,
      "overall": 0.703015873015873
    }
  },
  {
    "text": "## Add Data  Now you can add sample documents, their associated metadata, and a point id for each. Here’s a sample of the [miriad/miriad-4.4M](https://huggingface.co/datasets/miriad/miriad-4.4M) dataset:  | qa\\_id             | paper\\_id | question                                                    | year | venue                                   | specialty    | passage\\_text                                      | | ------------------ | --------- | ----------------------------------------------------------- | ---- | --------------------------------------- | ------------ | -------------------------------------------------- | | 38\\_77498699\\_0\\_1 | 77498699  | What are the clinical features of relapsing polychondritis? | 2006 | Internet Journal of Otorhinolaryngology | Rheumatology | A 45-year-old man presented with painful swelling… | | 38\\_77498699\\_0\\_2 | 77498699  | What treatments are available for relapsing polychondritis? | 2006 | Internet Journal of Otorhinolaryngology | Rheumatology | Patient showed improvement after treatment with…   | | 38\\_88124321\\_0\\_3 | 88124321  | How is Takayasu arteritis diagnosed?                        | 2015 | Journal of Autoimmune Diseases          | Rheumatology | A 32-year-old woman with fatigue and limb pain…    |  We won’t ingest all the entries from the dataset, but for demo purposes, just take the first hundred ones: ```python from qdrant_client.http.models import PointStruct, Document from datasets import load_dataset import uuid  dense_model = \"sentence-transformers/all-minilm-l6-v2\"  bm25_model = \"qdrant/bm25\"  ds = load_dataset(\"miriad/miriad-4.4M\", split=\"train[0:100]\")  points = []  for idx, item in enumerate(ds):     passage = item[\"passage_text\"]          point = PointStruct(         id=uuid.uuid4().hex,  # use unique string ID         payload=item,         vector={             \"dense_vector\": Document(                 text=passage,                 model=dense_model             ),             \"bm25_sparse_vector\": Document(                 text=passage,                 model=bm25_model             )         }     )     points.append(point)  client.upload_points(     collection_name=collection_name,      points=points,      batch_size=8 ) ```",
    "metadata": {
      "chunk_id": "b5beb9b67d57-0012",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Add Data"
      ],
      "heading_text": "Add Data",
      "token_count": 515,
      "char_count": 2231,
      "start_char": 10681,
      "end_char": 12912,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6884955752212389,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:38.686697",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 515,
      "document_id": "b5beb9b67d57",
      "document_name": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "hierarchy_path": "Add Data",
      "chunk_hash": "994f3d10ef760520",
      "content_digest": "994f3d10ef760520",
      "chunk_length": 2231,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "miriad",
          "model",
          "the",
          "passage",
          "points",
          "for",
          "dataset",
          "text",
          "77498699",
          "bm25",
          "point",
          "year",
          "journal",
          "rheumatology",
          "with",
          "from",
          "import",
          "document",
          "dense",
          "item"
        ],
        "term_weights": [
          {
            "term": "miriad",
            "tf": 6,
            "weight": 0.030769
          },
          {
            "term": "model",
            "tf": 6,
            "weight": 0.030769
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.025641
          },
          {
            "term": "passage",
            "tf": 5,
            "weight": 0.025641
          },
          {
            "term": "points",
            "tf": 5,
            "weight": 0.025641
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.020513
          },
          {
            "term": "dataset",
            "tf": 4,
            "weight": 0.020513
          },
          {
            "term": "text",
            "tf": 4,
            "weight": 0.020513
          },
          {
            "term": "77498699",
            "tf": 4,
            "weight": 0.020513
          },
          {
            "term": "bm25",
            "tf": 4,
            "weight": 0.020513
          },
          {
            "term": "point",
            "tf": 3,
            "weight": 0.015385
          },
          {
            "term": "year",
            "tf": 3,
            "weight": 0.015385
          },
          {
            "term": "journal",
            "tf": 3,
            "weight": 0.015385
          },
          {
            "term": "rheumatology",
            "tf": 3,
            "weight": 0.015385
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.015385
          },
          {
            "term": "from",
            "tf": 3,
            "weight": 0.015385
          },
          {
            "term": "import",
            "tf": 3,
            "weight": 0.015385
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.015385
          },
          {
            "term": "dense",
            "tf": 3,
            "weight": 0.015385
          },
          {
            "term": "item",
            "tf": 3,
            "weight": 0.015385
          }
        ],
        "unique_terms": 115,
        "total_terms": 195
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "77498699",
        "Add Data",
        "bm25",
        "dataset",
        "for",
        "miriad",
        "model",
        "passage",
        "points",
        "text",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6884955752212389,
      "overall": 0.7961651917404128
    }
  },
  {
    "text": "## Run Vector Search  Here, you will ask a question that will allow you to retrieve semantically relevant results. The final results are obtained by reranking using [Reciprocal Rank Fusion](https://qdrant.tech/documentation/concepts/hybrid-queries/#hybrid-search). ```python results = client.query_points(     collection_name=collection_name,     prefetch=[         models.Prefetch(             query=Document(                 text=query_text,                 model=dense_model             ),             using=\"dense_vector\",             limit=5         ),         models.Prefetch(             query=Document(                 text=query_text,                 model=bm25_model             ),             using=\"bm25_sparse_vector\",             limit=5         )     ],     query=models.FusionQuery(fusion=models.Fusion.RRF),     limit=5,     with_payload=True )  print(results.points) ``` The semantic search engine will retrieve the most similar result in order of relevance. ```markdown [ScoredPoint(id='9968a760-fbb5-4d91-8549-ffbaeb3ebdba',  version=0, score=14.545895,  payload={'text': \"Relapsing Polychondritis is a rare...\"},  vector=None, shard_key=None, order_value=None)] ```",
    "metadata": {
      "chunk_id": "b5beb9b67d57-0014",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Run Vector Search"
      ],
      "heading_text": "Run Vector Search",
      "token_count": 268,
      "char_count": 1186,
      "start_char": 13026,
      "end_char": 14212,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5313793103448275,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:38.691386",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 268,
      "document_id": "b5beb9b67d57",
      "document_name": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "hierarchy_path": "Run Vector Search",
      "chunk_hash": "243d07d48e66c2bc",
      "content_digest": "243d07d48e66c2bc",
      "chunk_length": 1186,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "query",
          "text",
          "vector",
          "results",
          "models",
          "model",
          "search",
          "will",
          "the",
          "using",
          "fusion",
          "prefetch",
          "limit",
          "none",
          "you",
          "retrieve",
          "hybrid",
          "points",
          "collection",
          "name"
        ],
        "term_weights": [
          {
            "term": "query",
            "tf": 6,
            "weight": 0.04878
          },
          {
            "term": "text",
            "tf": 5,
            "weight": 0.04065
          },
          {
            "term": "vector",
            "tf": 4,
            "weight": 0.03252
          },
          {
            "term": "results",
            "tf": 4,
            "weight": 0.03252
          },
          {
            "term": "models",
            "tf": 4,
            "weight": 0.03252
          },
          {
            "term": "model",
            "tf": 4,
            "weight": 0.03252
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.02439
          },
          {
            "term": "will",
            "tf": 3,
            "weight": 0.02439
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.02439
          },
          {
            "term": "using",
            "tf": 3,
            "weight": 0.02439
          },
          {
            "term": "fusion",
            "tf": 3,
            "weight": 0.02439
          },
          {
            "term": "prefetch",
            "tf": 3,
            "weight": 0.02439
          },
          {
            "term": "limit",
            "tf": 3,
            "weight": 0.02439
          },
          {
            "term": "none",
            "tf": 3,
            "weight": 0.02439
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "retrieve",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "name",
            "tf": 2,
            "weight": 0.01626
          }
        ],
        "unique_terms": 75,
        "total_terms": 123
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Run Vector Search",
        "model",
        "models",
        "query",
        "results",
        "search",
        "text",
        "the",
        "using",
        "vector",
        "will"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5313793103448275,
      "overall": 0.7104597701149425
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/tutorials-and-examples/cloud-inference-hybrid-search.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Using Cloud Inference with Qdrant for Vector Search](#using-cloud-inference-with-qdrant-for-vector-search.md)    - [Install Qdrant Client](#install-qdrant-client.md)   - [Initialize the Client](#initialize-the-client.md)   - [Create a Collection](#create-a-collection.md)   - [Add Data](#add-data.md)   - [Set Up Input Query](#set-up-input-query.md)   - [Run Vector Search](#run-vector-search.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/tutorials-and-examples/cloud-inference-hybrid-search.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "b5beb9b67d57-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 268,
      "char_count": 1020,
      "start_char": 14217,
      "end_char": 15237,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5189473684210526,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:38.694940",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 268,
      "document_id": "b5beb9b67d57",
      "document_name": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_filename": "_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_tutorials-and-examples_cloud-inference-hybrid-search\\_documentation_tutorials-and-examples_cloud-inference-hybrid-search_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "53ac3b61d804932d",
      "content_digest": "53ac3b61d804932d",
      "chunk_length": 1020,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "page",
          "github",
          "landing",
          "search",
          "https",
          "com",
          "cloud",
          "inference",
          "create",
          "vector",
          "client",
          "this",
          "for",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.075188
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.052632
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.052632
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.045113
          },
          {
            "term": "search",
            "tf": 6,
            "weight": 0.045113
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "cloud",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "inference",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "create",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "vector",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "client",
            "tf": 4,
            "weight": 0.030075
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.022556
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.022556
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.015038
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.015038
          }
        ],
        "unique_terms": 51,
        "total_terms": 133
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "cloud",
        "com",
        "create",
        "github",
        "https",
        "inference",
        "landing",
        "page",
        "qdrant",
        "search"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5189473684210526,
      "overall": 0.7063157894736841
    }
  }
]