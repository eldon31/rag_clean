[
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "333659243a3c-0000",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 678,
      "end_char": 1351,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.092017",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "333659243a3c-0001",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1353,
      "end_char": 7014,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.124059",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "333659243a3c-0002",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 7016,
      "end_char": 9363,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.134522",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 576,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials  [Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)  [Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)  [Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)  [Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)  [Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)  [5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)  [Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "333659243a3c-0003",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9365,
      "end_char": 10038,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.137831",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 189,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "a64044a3995d82e4",
      "content_digest": "a64044a3995d82e4",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.7017948717948718
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "333659243a3c-0004",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10040,
      "end_char": 15701,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.167440",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 1498,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Examples](https://qdrant.tech/documentation/examples/) - - Movie Recommendation System",
    "metadata": {
      "chunk_id": "333659243a3c-0005",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 608,
      "char_count": 2494,
      "start_char": 15703,
      "end_char": 18197,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.8984251968503938,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.175547",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 608,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "3f1b10a79a2f2159",
      "content_digest": "3f1b10a79a2f2159",
      "chunk_length": 2494,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "system",
          "send",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "recommendation"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.108844
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.081633
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.078231
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.078231
          },
          {
            "term": "examples",
            "tf": 16,
            "weight": 0.054422
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034014
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030612
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030612
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.02381
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020408
          },
          {
            "term": "system",
            "tf": 6,
            "weight": 0.020408
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017007
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013605
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013605
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013605
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010204
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010204
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010204
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010204
          },
          {
            "term": "recommendation",
            "tf": 3,
            "weight": 0.010204
          }
        ],
        "unique_terms": 96,
        "total_terms": 294
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.8984251968503938,
      "overall": 0.8328083989501313
    }
  },
  {
    "text": "# Movie Recommendation System  | Time: 120 min | Level: Advanced | Output: [GitHub](https://github.com/infoslack/qdrant-example/blob/main/HC-demo/HC-OVH.ipynb) |   | | ------------- | --------------- | -------------------------------------------------------------------------------------------- | - |  In this tutorial, you will build a mechanism that recommends movies based on defined preferences. Vector databases like Qdrant are good for storing high-dimensional data, such as user and item embeddings. They can enable personalized recommendations by quickly retrieving similar entries based on advanced indexing techniques. In this specific case, we will use [sparse vectors](https://qdrant.tech/articles/sparse-vectors/) to create an efficient and accurate recommendation system. **Privacy and Sovereignty:** Since preference data is proprietary, it should be stored in a secure and controlled environment. Our vector database can easily be hosted on [OVHcloud](https://ovhcloud.com/), our trusted [Qdrant Hybrid Cloud](https://qdrant.tech/documentation/hybrid-cloud/) partner. This means that Qdrant can be run from your OVHcloud region, but the database itself can still be managed from within Qdrant Cloud’s interface. Both products have been tested for compatibility and scalability, and we recommend their [managed Kubernetes](https://www.ovhcloud.com/en/public-cloud/kubernetes/) service. > To see the entire output, use our [notebook with complete instructions](https://github.com/infoslack/qdrant-example/blob/main/HC-demo/HC-OVH.ipynb).",
    "metadata": {
      "chunk_id": "333659243a3c-0006",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Movie Recommendation System"
      ],
      "heading_text": "Movie Recommendation System",
      "token_count": 322,
      "char_count": 1551,
      "start_char": 18199,
      "end_char": 19750,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.720299421965318,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.176808",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 322,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Movie Recommendation System",
      "chunk_hash": "7d252843c1d37511",
      "content_digest": "7d252843c1d37511",
      "chunk_length": 1551,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "and",
          "com",
          "can",
          "ovhcloud",
          "cloud",
          "github",
          "this",
          "our",
          "recommendation",
          "system",
          "advanced",
          "output",
          "infoslack",
          "example",
          "blob",
          "main",
          "demo",
          "ovh"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.044199
          },
          {
            "term": "https",
            "tf": 6,
            "weight": 0.033149
          },
          {
            "term": "and",
            "tf": 6,
            "weight": 0.033149
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.022099
          },
          {
            "term": "can",
            "tf": 4,
            "weight": 0.022099
          },
          {
            "term": "ovhcloud",
            "tf": 4,
            "weight": 0.022099
          },
          {
            "term": "cloud",
            "tf": 4,
            "weight": 0.022099
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "our",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "recommendation",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "output",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "infoslack",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "example",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "demo",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "ovh",
            "tf": 2,
            "weight": 0.01105
          }
        ],
        "unique_terms": 119,
        "total_terms": 181
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Movie Recommendation System",
        "and",
        "can",
        "cloud",
        "com",
        "github",
        "https",
        "our",
        "ovhcloud",
        "qdrant",
        "this"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.720299421965318,
      "overall": 0.773433140655106
    }
  },
  {
    "text": "## Components  - **Dataset:** The [MovieLens dataset](https://grouplens.org/datasets/movielens/) contains a list of movies and ratings given by users. - **Cloud:** [OVHcloud](https://ovhcloud.com/), with managed Kubernetes. - **Vector DB:** [Qdrant Hybrid Cloud](https://hybrid-cloud.qdrant.tech) running on [OVHcloud](https://ovhcloud.com/). **Methodology:** We’re adopting a collaborative filtering approach to construct a recommendation system from the dataset provided. Collaborative filtering works on the premise that if two users share similar tastes, they’re likely to enjoy similar movies. Leveraging this concept, we’ll identify users whose ratings align closely with ours, and explore the movies they liked but we haven’t seen yet. To do this, we’ll represent each user’s ratings as a vector in a high-dimensional, sparse space. Using Qdrant, we’ll index these vectors and search for users whose ratings vectors closely match ours. Ultimately, we will see which movies were enjoyed by users similar to us.",
    "metadata": {
      "chunk_id": "333659243a3c-0007",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Components"
      ],
      "heading_text": "Components",
      "token_count": 227,
      "char_count": 1016,
      "start_char": 19754,
      "end_char": 20770,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5122222222222222,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.177623",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 227,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Components",
      "chunk_hash": "cac9225a602111f2",
      "content_digest": "cac9225a602111f2",
      "chunk_length": 1016,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "users",
          "the",
          "https",
          "movies",
          "ratings",
          "ovhcloud",
          "dataset",
          "and",
          "cloud",
          "qdrant",
          "similar",
          "movielens",
          "com",
          "with",
          "vector",
          "hybrid",
          "collaborative",
          "filtering",
          "they",
          "this"
        ],
        "term_weights": [
          {
            "term": "users",
            "tf": 5,
            "weight": 0.040984
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.032787
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.032787
          },
          {
            "term": "movies",
            "tf": 4,
            "weight": 0.032787
          },
          {
            "term": "ratings",
            "tf": 4,
            "weight": 0.032787
          },
          {
            "term": "ovhcloud",
            "tf": 4,
            "weight": 0.032787
          },
          {
            "term": "dataset",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "cloud",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "similar",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "movielens",
            "tf": 2,
            "weight": 0.016393
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.016393
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.016393
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.016393
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.016393
          },
          {
            "term": "collaborative",
            "tf": 2,
            "weight": 0.016393
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.016393
          },
          {
            "term": "they",
            "tf": 2,
            "weight": 0.016393
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.016393
          }
        ],
        "unique_terms": 80,
        "total_terms": 122
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Components",
        "and",
        "cloud",
        "dataset",
        "https",
        "movies",
        "ovhcloud",
        "qdrant",
        "ratings",
        "the",
        "users"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5122222222222222,
      "overall": 0.704074074074074
    }
  },
  {
    "text": "## Implementation  Load the data from the MovieLens dataset into pandas DataFrames to facilitate data manipulation and analysis. ```python from qdrant_client import QdrantClient, models import pandas as pd ``` Load user data: ```python users = pd.read_csv(     'data/ml-1m/users.dat',      sep='::',      names=['user_id', 'gender', 'age', 'occupation', 'zip'],     engine='*' ) users.head() ``` Add movies: ```python movies = pd.read_csv(     'data/ml-1m/movies.dat',     sep='::',      names=['movie_id', 'title', 'genres'],      engine='*',      encoding='latin-1' ) movies.head() ``` Finally, add the ratings: ```python ratings = pd.read_csv(      'data/ml-1m/ratings.dat',      sep='::',      names=['user_id', 'movie_id', 'rating', 'timestamp'],      engine='*' ) ratings.head() ```",
    "metadata": {
      "chunk_id": "333659243a3c-0010",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Implementation"
      ],
      "heading_text": "Implementation",
      "token_count": 205,
      "char_count": 788,
      "start_char": 22245,
      "end_char": 23033,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5011111111111111,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.183192",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 205,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Implementation",
      "chunk_hash": "62f4735a63c7f25c",
      "content_digest": "62f4735a63c7f25c",
      "chunk_length": 788,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "data",
          "python",
          "movies",
          "ratings",
          "the",
          "user",
          "users",
          "read",
          "csv",
          "dat",
          "sep",
          "names",
          "engine",
          "head",
          "load",
          "from",
          "pandas",
          "import",
          "add",
          "movie"
        ],
        "term_weights": [
          {
            "term": "data",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "python",
            "tf": 4,
            "weight": 0.047619
          },
          {
            "term": "movies",
            "tf": 4,
            "weight": 0.047619
          },
          {
            "term": "ratings",
            "tf": 4,
            "weight": 0.047619
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "user",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "users",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "read",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "csv",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "dat",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "sep",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "names",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "engine",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "head",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "load",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "pandas",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "import",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "add",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "movie",
            "tf": 2,
            "weight": 0.02381
          }
        ],
        "unique_terms": 44,
        "total_terms": 84
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Implementation",
        "csv",
        "dat",
        "data",
        "movies",
        "python",
        "ratings",
        "read",
        "the",
        "user",
        "users"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5011111111111111,
      "overall": 0.7003703703703703
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/examples/recommendation-system-ovhcloud.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Movie Recommendation System](#movie-recommendation-system.md)    - [Components](#components.md)    - [Deploying Qdrant Hybrid Cloud on OVHcloud](#deploying-qdrant-hybrid-cloud-on-ovhcloud.md)    - [Prerequisites](#prerequisites.md)    - [Implementation](#implementation.md)      - [Normalize the ratings](#normalize-the-ratings.md)     - [Data preparation](#data-preparation.md)    - [Recommendations](#recommendations.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/examples/recommendation-system-ovhcloud.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "333659243a3c-0015",
      "source_file": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 265,
      "char_count": 1020,
      "start_char": 28031,
      "end_char": 29051,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7247826086956523,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:26.195268",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 265,
      "document_id": "333659243a3c",
      "document_name": "_documentation_examples_recommendation-system-ovhcloud_",
      "source_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_filename": "_documentation_examples_recommendation-system-ovhcloud_.md",
      "source_directory": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud",
      "relative_path": "Docs\\Qdrant\\qdrant_documentation\\documentation_examples_recommendation-system-ovhcloud\\_documentation_examples_recommendation-system-ovhcloud_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "4e77c8ca1c4d0563",
      "content_digest": "4e77c8ca1c4d0563",
      "chunk_length": 1020,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "page",
          "github",
          "landing",
          "https",
          "com",
          "recommendation",
          "system",
          "ovhcloud",
          "this",
          "you",
          "edit",
          "tree",
          "master",
          "content",
          "documentation",
          "examples",
          "create",
          "issues",
          "new"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.070796
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.061947
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.061947
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.053097
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.035398
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.035398
          },
          {
            "term": "recommendation",
            "tf": 4,
            "weight": 0.035398
          },
          {
            "term": "system",
            "tf": 4,
            "weight": 0.035398
          },
          {
            "term": "ovhcloud",
            "tf": 4,
            "weight": 0.035398
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.026549
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "issues",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "new",
            "tf": 2,
            "weight": 0.017699
          }
        ],
        "unique_terms": 47,
        "total_terms": 113
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "com",
        "github",
        "https",
        "landing",
        "ovhcloud",
        "page",
        "qdrant",
        "recommendation",
        "system",
        "this"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7247826086956523,
      "overall": 0.7415942028985508
    }
  }
]