[
  {
    "text": "## Purpose and Scope\n\nThis document describes the different vector storage formats available in Qdrant for storing dense, sparse, and multi-dense vectors. It covers the `VectorStorageEnum` variants, their underlying storage backends, supported data types, and the mechanisms for creating and selecting appropriate storage formats.\n\nFor information about vector indexing structures built on top of these storage formats, see [HNSW Index Implementation](qdrant/qdrant/3.2-hnsw-index-implementation.md) and [Sparse Vector Indexing](qdrant/qdrant/3.4-sparse-vector-indexing.md). For details on how vectors are quantized to reduce memory usage, see [Vector Quantization](qdrant/qdrant/3.3-vector-quantization.md).",
    "metadata": {
      "chunk_id": "e849f5033588-0001",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Purpose and Scope"
      ],
      "heading_text": "Purpose and Scope",
      "token_count": 160,
      "char_count": 708,
      "start_char": 3873,
      "end_char": 4581,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5292405063291139,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.698091",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 160,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Purpose and Scope",
      "chunk_hash": "1657b056b85e4885",
      "content_digest": "1657b056b85e4885",
      "chunk_length": 708,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "vector",
          "and",
          "storage",
          "for",
          "the",
          "formats",
          "sparse",
          "indexing",
          "dense",
          "vectors",
          "see",
          "hnsw",
          "index",
          "implementation",
          "quantization",
          "purpose",
          "scope",
          "this",
          "document"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 7,
            "weight": 0.08046
          },
          {
            "term": "vector",
            "tf": 6,
            "weight": 0.068966
          },
          {
            "term": "and",
            "tf": 5,
            "weight": 0.057471
          },
          {
            "term": "storage",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.045977
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.034483
          },
          {
            "term": "formats",
            "tf": 3,
            "weight": 0.034483
          },
          {
            "term": "sparse",
            "tf": 3,
            "weight": 0.034483
          },
          {
            "term": "indexing",
            "tf": 3,
            "weight": 0.034483
          },
          {
            "term": "dense",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "see",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "hnsw",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "index",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "implementation",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "quantization",
            "tf": 2,
            "weight": 0.022989
          },
          {
            "term": "purpose",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "scope",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.011494
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.011494
          }
        ],
        "unique_terms": 51,
        "total_terms": 87
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Purpose and Scope",
        "and",
        "dense",
        "for",
        "formats",
        "indexing",
        "qdrant",
        "sparse",
        "storage",
        "the",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5292405063291139,
      "overall": 0.709746835443038
    }
  },
  {
    "text": "### DenseSimple (RocksDB-based)  RocksDB-based storage that persists vectors in a key-value database. This format is being actively migrated to memory-mapped formats for better performance. ``` ``` **Key Implementation:**  - Created via `open_simple_dense_vector_storage()` when `VectorStorageType::Memory` is configured - Uses a dedicated RocksDB column family named with `DB_VECTOR_CF` prefix - Supports migration to mmap format via `migrate_rocksdb_dense_vector_storage_to_mmap()`  Sources: [lib/segment/src/segment\\_constructor/segment\\_constructor\\_base.rs116-142](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/segment_constructor/segment_constructor_base.rs#L116-L142) [lib/segment/src/segment\\_constructor/segment\\_constructor\\_base.rs1047-1126](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/segment_constructor/segment_constructor_base.rs#L1047-L1126)",
    "metadata": {
      "chunk_id": "e849f5033588-0005",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "DenseSimple (RocksDB-based)"
      ],
      "heading_text": "DenseSimple (RocksDB-based)",
      "token_count": 216,
      "char_count": 893,
      "start_char": 6109,
      "end_char": 7002,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5486206896551724,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.704756",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 216,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "DenseSimple (RocksDB-based)",
      "chunk_hash": "f4d7644dec3c8c97",
      "content_digest": "f4d7644dec3c8c97",
      "chunk_length": 893,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "segment",
          "constructor",
          "rocksdb",
          "lib",
          "src",
          "base",
          "qdrant",
          "storage",
          "vector",
          "based",
          "key",
          "format",
          "memory",
          "via",
          "dense",
          "mmap",
          "https",
          "github",
          "com",
          "blob"
        ],
        "term_weights": [
          {
            "term": "segment",
            "tf": 12,
            "weight": 0.108108
          },
          {
            "term": "constructor",
            "tf": 8,
            "weight": 0.072072
          },
          {
            "term": "rocksdb",
            "tf": 4,
            "weight": 0.036036
          },
          {
            "term": "lib",
            "tf": 4,
            "weight": 0.036036
          },
          {
            "term": "src",
            "tf": 4,
            "weight": 0.036036
          },
          {
            "term": "base",
            "tf": 4,
            "weight": 0.036036
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.036036
          },
          {
            "term": "storage",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "based",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "format",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "memory",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "via",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "dense",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "mmap",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.018018
          }
        ],
        "unique_terms": 62,
        "total_terms": 111
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "DenseSimple (RocksDB-based)",
        "base",
        "based",
        "constructor",
        "lib",
        "qdrant",
        "rocksdb",
        "segment",
        "src",
        "storage",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5486206896551724,
      "overall": 0.7162068965517241
    }
  },
  {
    "text": "### SparseMmap Storage  Memory-mapped sparse vector storage using the `MmapSparseVectorStorage` implementation. **Data Layout:**  - Indices stored separately from values for compression - Variable-length encoding for sparse vectors - Optimized for space efficiency  **Creation:** ``` ``` Sources: [lib/segment/src/segment\\_constructor/segment\\_constructor\\_base.rs410-434](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/segment_constructor/segment_constructor_base.rs#L410-L434)",
    "metadata": {
      "chunk_id": "e849f5033588-0011",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "SparseMmap Storage"
      ],
      "heading_text": "SparseMmap Storage",
      "token_count": 111,
      "char_count": 494,
      "start_char": 9405,
      "end_char": 9899,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5332432432432432,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.713463",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 111,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "SparseMmap Storage",
      "chunk_hash": "1635b0805a850ae5",
      "content_digest": "1635b0805a850ae5",
      "chunk_length": 494,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "segment",
          "constructor",
          "for",
          "storage",
          "sparse",
          "lib",
          "src",
          "base",
          "qdrant",
          "sparsemmap",
          "memory",
          "mapped",
          "vector",
          "using",
          "the",
          "mmapsparsevectorstorage",
          "implementation",
          "data",
          "layout",
          "indices"
        ],
        "term_weights": [
          {
            "term": "segment",
            "tf": 6,
            "weight": 0.101695
          },
          {
            "term": "constructor",
            "tf": 4,
            "weight": 0.067797
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "sparse",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "lib",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "src",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "base",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "sparsemmap",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "memory",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "mapped",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "mmapsparsevectorstorage",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "layout",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "indices",
            "tf": 1,
            "weight": 0.016949
          }
        ],
        "unique_terms": 43,
        "total_terms": 59
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "SparseMmap Storage",
        "base",
        "constructor",
        "for",
        "lib",
        "qdrant",
        "segment",
        "sparse",
        "sparsemmap",
        "src",
        "storage"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5332432432432432,
      "overall": 0.711081081081081
    }
  },
  {
    "text": "### Storage Architecture  Multi-dense storage maintains two parallel structures:  1. **Vector data** - All sub-vectors stored contiguously or chunked 2. **Offset data** - Mapping from point to vector ranges ``` ``` **Key Components:**  - `MultiVectorConfig` defines configuration (comparator type) - Each point can have variable number of sub-vectors - Sub-vectors stored sequentially, indexed by offset structure  Sources: [lib/segment/src/segment\\_constructor/segment\\_constructor\\_base.rs145-153](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/segment_constructor/segment_constructor_base.rs#L145-L153) [lib/segment/src/segment\\_constructor/segment\\_constructor\\_base.rs176-182](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/segment_constructor/segment_constructor_base.rs#L176-L182)",
    "metadata": {
      "chunk_id": "e849f5033588-0013",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Storage Architecture"
      ],
      "heading_text": "Storage Architecture",
      "token_count": 200,
      "char_count": 819,
      "start_char": 10066,
      "end_char": 10885,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5340677966101695,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.716460",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 200,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Storage Architecture",
      "chunk_hash": "4e5188dfcf069afd",
      "content_digest": "4e5188dfcf069afd",
      "chunk_length": 819,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "segment",
          "constructor",
          "lib",
          "src",
          "base",
          "qdrant",
          "sub",
          "vectors",
          "storage",
          "vector",
          "data",
          "stored",
          "offset",
          "point",
          "https",
          "github",
          "com",
          "blob",
          "48203e41",
          "architecture"
        ],
        "term_weights": [
          {
            "term": "segment",
            "tf": 12,
            "weight": 0.118812
          },
          {
            "term": "constructor",
            "tf": 8,
            "weight": 0.079208
          },
          {
            "term": "lib",
            "tf": 4,
            "weight": 0.039604
          },
          {
            "term": "src",
            "tf": 4,
            "weight": 0.039604
          },
          {
            "term": "base",
            "tf": 4,
            "weight": 0.039604
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.039604
          },
          {
            "term": "sub",
            "tf": 3,
            "weight": 0.029703
          },
          {
            "term": "vectors",
            "tf": 3,
            "weight": 0.029703
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "stored",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "offset",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "point",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "48203e41",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.009901
          }
        ],
        "unique_terms": 56,
        "total_terms": 101
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Storage Architecture",
        "base",
        "constructor",
        "lib",
        "qdrant",
        "segment",
        "src",
        "storage",
        "sub",
        "vector",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5340677966101695,
      "overall": 0.7113559322033898
    }
  },
  {
    "text": "## Storage Backend Selection  The `open_vector_storage()` function selects the appropriate storage implementation based on configuration.",
    "metadata": {
      "chunk_id": "e849f5033588-0016",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Storage Backend Selection"
      ],
      "heading_text": "Storage Backend Selection",
      "token_count": 21,
      "char_count": 137,
      "start_char": 12059,
      "end_char": 12196,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.55,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.720200",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 21,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Storage Backend Selection",
      "chunk_hash": "4013dedccee7b6ae",
      "content_digest": "4013dedccee7b6ae",
      "chunk_length": 137,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "storage",
          "the",
          "backend",
          "selection",
          "open",
          "vector",
          "function",
          "selects",
          "appropriate",
          "implementation",
          "based",
          "configuration"
        ],
        "term_weights": [
          {
            "term": "storage",
            "tf": 3,
            "weight": 0.2
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "backend",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "selection",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "open",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "selects",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "appropriate",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 12,
        "total_terms": 15
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Storage Backend Selection",
        "appropriate",
        "backend",
        "function",
        "implementation",
        "open",
        "selection",
        "selects",
        "storage",
        "the",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.55,
      "overall": 0.75
    }
  },
  {
    "text": "### Selection Logic ``` ``` **Configuration Mapping:**  - `VectorStorageType::Memory` → RocksDB-based storage (being deprecated) - `VectorStorageType::Mmap` → Immutable memory-mapped storage - `VectorStorageType::ChunkedMmap` → Appendable chunked memory-mapped (default for mutable) - `VectorStorageType::InRamChunkedMmap` → In-RAM with disk persistence  Sources: [lib/segment/src/segment\\_constructor/segment\\_constructor\\_base.rs99-223](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/segment_constructor/segment_constructor_base.rs#L99-L223)",
    "metadata": {
      "chunk_id": "e849f5033588-0017",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Selection Logic"
      ],
      "heading_text": "Selection Logic",
      "token_count": 143,
      "char_count": 559,
      "start_char": 12198,
      "end_char": 12757,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5189473684210526,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.721701",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 143,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Selection Logic",
      "chunk_hash": "ad91c3a6b840e01d",
      "content_digest": "ad91c3a6b840e01d",
      "chunk_length": 559,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "segment",
          "vectorstoragetype",
          "constructor",
          "memory",
          "storage",
          "mapped",
          "lib",
          "src",
          "base",
          "qdrant",
          "selection",
          "logic",
          "configuration",
          "mapping",
          "rocksdb",
          "based",
          "being",
          "deprecated",
          "mmap",
          "immutable"
        ],
        "term_weights": [
          {
            "term": "segment",
            "tf": 6,
            "weight": 0.1
          },
          {
            "term": "vectorstoragetype",
            "tf": 4,
            "weight": 0.066667
          },
          {
            "term": "constructor",
            "tf": 4,
            "weight": 0.066667
          },
          {
            "term": "memory",
            "tf": 3,
            "weight": 0.05
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "mapped",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "lib",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "src",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "base",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "selection",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "mapping",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "rocksdb",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "being",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "deprecated",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "mmap",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "immutable",
            "tf": 1,
            "weight": 0.016667
          }
        ],
        "unique_terms": 41,
        "total_terms": 60
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Selection Logic",
        "base",
        "constructor",
        "lib",
        "mapped",
        "memory",
        "qdrant",
        "segment",
        "src",
        "storage",
        "vectorstoragetype"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5189473684210526,
      "overall": 0.7396491228070174
    }
  },
  {
    "text": "### Vector Insertion  All storage types implement the `insert_vector()` method from the `VectorStorage` trait: ``` ``` **Process:**  1. Convert input vector to storage data type (Float32/Float16/Uint8) 2. Write vector data to appropriate backend (RocksDB/Mmap/Memory) 3. Update internal tracking (deleted flags, count, etc.)  Sources: [lib/segment/src/vector\\_storage/vector\\_storage\\_base.rs94-99](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/vector_storage_base.rs#L94-L99)",
    "metadata": {
      "chunk_id": "e849f5033588-0019",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Vector Insertion"
      ],
      "heading_text": "Vector Insertion",
      "token_count": 134,
      "char_count": 508,
      "start_char": 12784,
      "end_char": 13292,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5422727272727272,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.724449",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 134,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Vector Insertion",
      "chunk_hash": "d6a7503cb509f3f4",
      "content_digest": "d6a7503cb509f3f4",
      "chunk_length": 508,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "vector",
          "storage",
          "the",
          "data",
          "lib",
          "segment",
          "src",
          "base",
          "qdrant",
          "insertion",
          "all",
          "types",
          "implement",
          "insert",
          "method",
          "from",
          "vectorstorage",
          "trait",
          "process",
          "convert"
        ],
        "term_weights": [
          {
            "term": "vector",
            "tf": 8,
            "weight": 0.121212
          },
          {
            "term": "storage",
            "tf": 6,
            "weight": 0.090909
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "lib",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "segment",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "src",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "base",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "insertion",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "implement",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "insert",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "vectorstorage",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "trait",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "convert",
            "tf": 1,
            "weight": 0.015152
          }
        ],
        "unique_terms": 47,
        "total_terms": 66
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Vector Insertion",
        "base",
        "data",
        "insertion",
        "lib",
        "qdrant",
        "segment",
        "src",
        "storage",
        "the",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5422727272727272,
      "overall": 0.714090909090909
    }
  },
  {
    "text": "### Batch Updates\n\nThe `update_from()` method handles bulk insertion from iterators, used during segment optimization:\n\n**Update Flow:**\n\n1. Iterate over source vectors\n2. Insert each vector at next available offset\n3. Mark deleted vectors appropriately\n4. Return range of inserted offsets\n\nSources: [lib/segment/src/vector\\_storage/vector\\_storage\\_base.rs107-111](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/vector_storage_base.rs#L107-L111)",
    "metadata": {
      "chunk_id": "e849f5033588-0020",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Batch Updates"
      ],
      "heading_text": "Batch Updates",
      "token_count": 110,
      "char_count": 477,
      "start_char": 13296,
      "end_char": 13773,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5830232558139534,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.724979",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 110,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Batch Updates",
      "chunk_hash": "f3845129189b8f5d",
      "content_digest": "f3845129189b8f5d",
      "chunk_length": 477,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "vector",
          "storage",
          "segment",
          "update",
          "from",
          "vectors",
          "lib",
          "src",
          "base",
          "qdrant",
          "batch",
          "updates",
          "the",
          "method",
          "handles",
          "bulk",
          "insertion",
          "iterators",
          "used",
          "during"
        ],
        "term_weights": [
          {
            "term": "vector",
            "tf": 5,
            "weight": 0.079365
          },
          {
            "term": "storage",
            "tf": 4,
            "weight": 0.063492
          },
          {
            "term": "segment",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "update",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "lib",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "src",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "base",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "batch",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "updates",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "handles",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "bulk",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "insertion",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "iterators",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "during",
            "tf": 1,
            "weight": 0.015873
          }
        ],
        "unique_terms": 47,
        "total_terms": 63
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Batch Updates",
        "base",
        "from",
        "lib",
        "qdrant",
        "segment",
        "src",
        "storage",
        "update",
        "vector",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5830232558139534,
      "overall": 0.6610077519379844
    }
  },
  {
    "text": "### Vector Retrieval  Vectors are retrieved using access pattern hints for optimization: ``` ``` **Access Patterns:**  - `Sequential` - Enables prefetching for sequential reads - `Random` - No prefetching, single vector access  Sources: [lib/segment/src/vector\\_storage/vector\\_storage\\_base.rs42-58](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/vector_storage_base.rs#L42-L58) [lib/segment/src/vector\\_storage/vector\\_storage\\_base.rs89-92](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/vector_storage_base.rs#L89-L92)",
    "metadata": {
      "chunk_id": "e849f5033588-0021",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Vector Retrieval"
      ],
      "heading_text": "Vector Retrieval",
      "token_count": 149,
      "char_count": 584,
      "start_char": 13775,
      "end_char": 14359,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.726218",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 149,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Vector Retrieval",
      "chunk_hash": "bf370a80b023d4d0",
      "content_digest": "bf370a80b023d4d0",
      "chunk_length": 584,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "vector",
          "storage",
          "lib",
          "segment",
          "src",
          "base",
          "qdrant",
          "access",
          "for",
          "sequential",
          "prefetching",
          "https",
          "github",
          "com",
          "blob",
          "48203e41",
          "retrieval",
          "vectors",
          "are",
          "retrieved"
        ],
        "term_weights": [
          {
            "term": "vector",
            "tf": 10,
            "weight": 0.12987
          },
          {
            "term": "storage",
            "tf": 8,
            "weight": 0.103896
          },
          {
            "term": "lib",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "segment",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "src",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "base",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "access",
            "tf": 3,
            "weight": 0.038961
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "sequential",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "prefetching",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "48203e41",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "retrieval",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "retrieved",
            "tf": 1,
            "weight": 0.012987
          }
        ],
        "unique_terms": 36,
        "total_terms": 77
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Vector Retrieval",
        "access",
        "base",
        "for",
        "lib",
        "qdrant",
        "segment",
        "sequential",
        "src",
        "storage",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "overall": 0.71
    }
  },
  {
    "text": "## Storage Migration\n\nQdrant actively migrates from RocksDB-based storage to memory-mapped formats for better performance.",
    "metadata": {
      "chunk_id": "e849f5033588-0022",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Storage Migration"
      ],
      "heading_text": "Storage Migration",
      "token_count": 24,
      "char_count": 122,
      "start_char": 14363,
      "end_char": 14485,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.57,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.726506",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 24,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Storage Migration",
      "chunk_hash": "6dee78ad3fc40bc7",
      "content_digest": "6dee78ad3fc40bc7",
      "chunk_length": 122,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "storage",
          "migration",
          "qdrant",
          "actively",
          "migrates",
          "from",
          "rocksdb",
          "based",
          "memory",
          "mapped",
          "formats",
          "for",
          "better",
          "performance"
        ],
        "term_weights": [
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "migration",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "actively",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "migrates",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "rocksdb",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "memory",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "mapped",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "formats",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "better",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "performance",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 14,
        "total_terms": 15
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Storage Migration",
        "actively",
        "based",
        "from",
        "mapped",
        "memory",
        "migrates",
        "migration",
        "qdrant",
        "rocksdb",
        "storage"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.57,
      "overall": 0.7566666666666667
    }
  },
  {
    "text": "### Dense Vector Migration ``` ``` **Migration Process:**  1. Create new mmap-based storage in segment path 2. Copy all vectors from RocksDB to new storage 3. Preserve deletion flags during migration 4. Flush new storage to ensure persistence 5. Update segment configuration to reflect new storage type 6. Destroy old RocksDB column family  Sources: [lib/segment/src/segment\\_constructor/segment\\_constructor\\_base.rs1047-1126](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/segment_constructor/segment_constructor_base.rs#L1047-L1126)",
    "metadata": {
      "chunk_id": "e849f5033588-0023",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Dense Vector Migration"
      ],
      "heading_text": "Dense Vector Migration",
      "token_count": 132,
      "char_count": 551,
      "start_char": 14487,
      "end_char": 15038,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5245454545454545,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.727997",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 132,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Dense Vector Migration",
      "chunk_hash": "9d51d193363c3235",
      "content_digest": "9d51d193363c3235",
      "chunk_length": 551,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "segment",
          "new",
          "storage",
          "constructor",
          "migration",
          "rocksdb",
          "lib",
          "src",
          "base",
          "qdrant",
          "dense",
          "vector",
          "process",
          "create",
          "mmap",
          "based",
          "path",
          "copy",
          "all",
          "vectors"
        ],
        "term_weights": [
          {
            "term": "segment",
            "tf": 8,
            "weight": 0.115942
          },
          {
            "term": "new",
            "tf": 4,
            "weight": 0.057971
          },
          {
            "term": "storage",
            "tf": 4,
            "weight": 0.057971
          },
          {
            "term": "constructor",
            "tf": 4,
            "weight": 0.057971
          },
          {
            "term": "migration",
            "tf": 3,
            "weight": 0.043478
          },
          {
            "term": "rocksdb",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "lib",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "src",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "base",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "dense",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "mmap",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "path",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "copy",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.014493
          }
        ],
        "unique_terms": 46,
        "total_terms": 69
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Dense Vector Migration",
        "base",
        "constructor",
        "lib",
        "migration",
        "new",
        "qdrant",
        "rocksdb",
        "segment",
        "src",
        "storage"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5245454545454545,
      "overall": 0.6748484848484848
    }
  },
  {
    "text": "### Multi-Dense Vector Migration  Similar process for multi-dense vectors:  **Key Differences:**  - Preserves `MultiVectorConfig` during migration - Migrates both vector data and offset structures - Uses `migrate_rocksdb_multi_dense_vector_storage_to_mmap()`  Sources: [lib/segment/src/segment\\_constructor/segment\\_constructor\\_base.rs1135-1195](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/segment_constructor/segment_constructor_base.rs#L1135-L1195)",
    "metadata": {
      "chunk_id": "e849f5033588-0024",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Multi-Dense Vector Migration"
      ],
      "heading_text": "Multi-Dense Vector Migration",
      "token_count": 118,
      "char_count": 470,
      "start_char": 15042,
      "end_char": 15512,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5382758620689655,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.728399",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 118,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Multi-Dense Vector Migration",
      "chunk_hash": "4bf63de7df400fa9",
      "content_digest": "4bf63de7df400fa9",
      "chunk_length": 470,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "segment",
          "constructor",
          "multi",
          "dense",
          "vector",
          "migration",
          "lib",
          "src",
          "base",
          "qdrant",
          "similar",
          "process",
          "for",
          "vectors",
          "key",
          "differences",
          "preserves",
          "multivectorconfig",
          "during",
          "migrates"
        ],
        "term_weights": [
          {
            "term": "segment",
            "tf": 6,
            "weight": 0.101695
          },
          {
            "term": "constructor",
            "tf": 4,
            "weight": 0.067797
          },
          {
            "term": "multi",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "dense",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "migration",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "lib",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "src",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "base",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "similar",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "key",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "differences",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "preserves",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "multivectorconfig",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "during",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "migrates",
            "tf": 1,
            "weight": 0.016949
          }
        ],
        "unique_terms": 40,
        "total_terms": 59
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Multi-Dense Vector Migration",
        "base",
        "constructor",
        "dense",
        "lib",
        "migration",
        "multi",
        "qdrant",
        "segment",
        "src",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5382758620689655,
      "overall": 0.7127586206896551
    }
  },
  {
    "text": "## Performance Characteristics",
    "metadata": {
      "chunk_id": "e849f5033588-0026",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 26,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Performance Characteristics"
      ],
      "heading_text": "Performance Characteristics",
      "token_count": 3,
      "char_count": 30,
      "start_char": 15996,
      "end_char": 16026,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.728919",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 3,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Performance Characteristics",
      "chunk_hash": "f2053113b0f9431f",
      "content_digest": "f2053113b0f9431f",
      "chunk_length": 30,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "performance",
          "characteristics"
        ],
        "term_weights": [
          {
            "term": "performance",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "characteristics",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Performance Characteristics",
        "characteristics",
        "performance"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "## VectorStorageEnum Implementation\n\nThe `VectorStorageEnum` serves as a unified interface to all storage implementations:",
    "metadata": {
      "chunk_id": "e849f5033588-0029",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 29,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "VectorStorageEnum Implementation"
      ],
      "heading_text": "VectorStorageEnum Implementation",
      "token_count": 22,
      "char_count": 122,
      "start_char": 17074,
      "end_char": 17196,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.730718",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 22,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "VectorStorageEnum Implementation",
      "chunk_hash": "d162f2a5433d207d",
      "content_digest": "d162f2a5433d207d",
      "chunk_length": 122,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "vectorstorageenum",
          "implementation",
          "the",
          "serves",
          "unified",
          "interface",
          "all",
          "storage",
          "implementations"
        ],
        "term_weights": [
          {
            "term": "vectorstorageenum",
            "tf": 2,
            "weight": 0.2
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "serves",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "unified",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "interface",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "storage",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "implementations",
            "tf": 1,
            "weight": 0.1
          }
        ],
        "unique_terms": 9,
        "total_terms": 10
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "VectorStorageEnum Implementation",
        "all",
        "implementation",
        "implementations",
        "interface",
        "serves",
        "storage",
        "the",
        "unified",
        "vectorstorageenum"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.59,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "### Segment Creation Flow ``` ``` **Key Steps:**  1. Create payload storage based on config  2. For each vector name in configuration:     - Determine vector storage path    - Open/create appropriate vector storage    - Create vector index on top of storage  3. Assemble all components into `Segment`  Sources: [lib/segment/src/segment\\_constructor/segment\\_constructor\\_base.rs436-627](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/segment_constructor/segment_constructor_base.rs#L436-L627)",
    "metadata": {
      "chunk_id": "e849f5033588-0033",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 33,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Segment Creation Flow"
      ],
      "heading_text": "Segment Creation Flow",
      "token_count": 122,
      "char_count": 508,
      "start_char": 19041,
      "end_char": 19549,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7212500000000001,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.734797",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 122,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "Segment Creation Flow",
      "chunk_hash": "d70c0b6ff97876cb",
      "content_digest": "d70c0b6ff97876cb",
      "chunk_length": 508,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "segment",
          "storage",
          "vector",
          "constructor",
          "create",
          "lib",
          "src",
          "base",
          "qdrant",
          "creation",
          "flow",
          "key",
          "steps",
          "payload",
          "based",
          "config",
          "for",
          "each",
          "name",
          "configuration"
        ],
        "term_weights": [
          {
            "term": "segment",
            "tf": 8,
            "weight": 0.129032
          },
          {
            "term": "storage",
            "tf": 4,
            "weight": 0.064516
          },
          {
            "term": "vector",
            "tf": 4,
            "weight": 0.064516
          },
          {
            "term": "constructor",
            "tf": 4,
            "weight": 0.064516
          },
          {
            "term": "create",
            "tf": 3,
            "weight": 0.048387
          },
          {
            "term": "lib",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "src",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "base",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "creation",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "flow",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "key",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "steps",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "payload",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "config",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "each",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "name",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.016129
          }
        ],
        "unique_terms": 40,
        "total_terms": 62
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Segment Creation Flow",
        "base",
        "constructor",
        "create",
        "creation",
        "lib",
        "qdrant",
        "segment",
        "src",
        "storage",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7212500000000001,
      "overall": 0.77375
    }
  },
  {
    "text": "### On this page  - [Vector Storage Formats](#vector-storage-formats.md) - [Purpose and Scope](#purpose-and-scope.md) - [Vector Storage Architecture](#vector-storage-architecture.md) - [Dense Vector Storage Formats](#dense-vector-storage-formats.md) - [Storage Type Comparison](#storage-type-comparison.md) - [DenseSimple (RocksDB-based)](#densesimple-rocksdb-based.md) - [DenseMemmap (Immutable Memory-Mapped)](#densememmap-immutable-memory-mapped.md) - [DenseAppendableMemmap (Chunked Memory-Mapped)](#denseappendablememmap-chunked-memory-mapped.md) - [DenseAppendableInRam (In-Memory Persisted)](#denseappendableinram-in-memory-persisted.md) - [Sparse Vector Storage Formats](#sparse-vector-storage-formats.md) - [Sparse Storage Types](#sparse-storage-types.md) - [SparseMmap Storage](#sparsemmap-storage.md) - [Multi-Dense Vector Storage Formats](#multi-dense-vector-storage-formats.md) - [Storage Architecture](#storage-architecture.md) - [Vector Data Types](#vector-data-types.md) - [Supported Data Types](#supported-data-types.md) - [Storage Backend Selection](#storage-backend-selection.md) - [Selection Logic](#selection-logic.md) - [Storage Operations](#storage-operations.md) - [Vector Insertion](#vector-insertion.md) - [Batch Updates](#batch-updates.md) - [Vector Retrieval](#vector-retrieval.md) - [Storage Migration](#storage-migration.md) - [Dense Vector Migration](#dense-vector-migration.md) - [Multi-Dense Vector Migration](#multi-dense-vector-migration.md) - [Feature Flag Control](#feature-flag-control.md) - [Performance Characteristics](#performance-characteristics.md) - [Memory Usage](#memory-usage.md) - [Cache Control](#cache-control.md) - [VectorStorageEnum Implementation](#vectorstorageenum-implementation.md) - [Enum Variants by Category](#enum-variants-by-category.md) - [Trait Implementations](#trait-implementations.md) - [Integration with Segments](#integration-with-segments.md) - [Segment Creation Flow](#segment-creation-flow.md) - [Storage Paths](#storage-paths.md)",
    "metadata": {
      "chunk_id": "e849f5033588-0035",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "file_extension": ".md",
      "chunk_index": 35,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 507,
      "char_count": 2004,
      "start_char": 20029,
      "end_char": 22033,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6736842105263159,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:42.738780",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 507,
      "document_id": "e849f5033588",
      "document_name": "_qdrant_qdrant_3.1-vector-storage-formats",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_filename": "_qdrant_qdrant_3.1-vector-storage-formats.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.1-vector-storage-formats.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "40b063f4097f03a9",
      "content_digest": "40b063f4097f03a9",
      "chunk_length": 2004,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "storage",
          "vector",
          "formats",
          "dense",
          "memory",
          "types",
          "migration",
          "architecture",
          "mapped",
          "sparse",
          "multi",
          "data",
          "selection",
          "control",
          "purpose",
          "and",
          "scope",
          "type",
          "comparison",
          "densesimple"
        ],
        "term_weights": [
          {
            "term": "storage",
            "tf": 26,
            "weight": 0.131313
          },
          {
            "term": "vector",
            "tf": 20,
            "weight": 0.10101
          },
          {
            "term": "formats",
            "tf": 8,
            "weight": 0.040404
          },
          {
            "term": "dense",
            "tf": 8,
            "weight": 0.040404
          },
          {
            "term": "memory",
            "tf": 8,
            "weight": 0.040404
          },
          {
            "term": "types",
            "tf": 6,
            "weight": 0.030303
          },
          {
            "term": "migration",
            "tf": 6,
            "weight": 0.030303
          },
          {
            "term": "architecture",
            "tf": 4,
            "weight": 0.020202
          },
          {
            "term": "mapped",
            "tf": 4,
            "weight": 0.020202
          },
          {
            "term": "sparse",
            "tf": 4,
            "weight": 0.020202
          },
          {
            "term": "multi",
            "tf": 4,
            "weight": 0.020202
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.020202
          },
          {
            "term": "selection",
            "tf": 4,
            "weight": 0.020202
          },
          {
            "term": "control",
            "tf": 4,
            "weight": 0.020202
          },
          {
            "term": "purpose",
            "tf": 2,
            "weight": 0.010101
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.010101
          },
          {
            "term": "scope",
            "tf": 2,
            "weight": 0.010101
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.010101
          },
          {
            "term": "comparison",
            "tf": 2,
            "weight": 0.010101
          },
          {
            "term": "densesimple",
            "tf": 2,
            "weight": 0.010101
          }
        ],
        "unique_terms": 59,
        "total_terms": 198
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "architecture",
        "dense",
        "formats",
        "mapped",
        "memory",
        "migration",
        "sparse",
        "storage",
        "types",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6736842105263159,
      "overall": 0.7245614035087721
    }
  }
]