[
  {
    "text": "## Vector Storage Integration  The quantization system integrates with Qdrant's vector storage layer through the `VectorStorage` trait and `VectorStorageEnum`. The `QuantizedVectors` struct wraps `QuantizedVectorStorage` and implements the `RawScorer` interface. The system supports three vector element types with corresponding storage variants:  | Element Type            | Rust Type | Storage Variants                                          | Use Case                   | | ----------------------- | --------- | --------------------------------------------------------- | -------------------------- | | `VectorElementType`     | `f32`     | `DenseSimple`, `DenseMemmap`, `DenseVolatile`             | Standard precision vectors | | `VectorElementTypeHalf` | `f16`     | `DenseSimpleHalf`, `DenseMemmapHalf`, `DenseVolatileHalf` | Memory-optimized vectors   | | `VectorElementTypeByte` | `u8`      | `DenseSimpleByte`, `DenseMemmapByte`, `DenseVolatileByte` | Compact integer vectors    | ``` ``` **QuantizedVectors Integration Architecture**  Sources: [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs124-130](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L124-L130) [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs45-49](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L45-L49) [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs161-175](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L161-L175) [lib/segment/src/data\\_types/vectors.rs212-216](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/data_types/vectors.rs#L212-L216) [lib/segment/src/vector\\_storage/vector\\_storage\\_base.rs189-321](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/vector_storage_base.rs#L189-L321)",
    "metadata": {
      "chunk_id": "94b89a00b89f-0002",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Vector Storage Integration"
      ],
      "heading_text": "Vector Storage Integration",
      "token_count": 494,
      "char_count": 1953,
      "start_char": 9238,
      "end_char": 11191,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5346864864864864,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:45.698525",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 494,
      "document_id": "94b89a00b89f",
      "document_name": "_qdrant_qdrant_3.3-vector-quantization",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "source_filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "hierarchy_path": "Vector Storage Integration",
      "chunk_hash": "4dfa37e4111e84a7",
      "content_digest": "4dfa37e4111e84a7",
      "chunk_length": 1953,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "storage",
          "vector",
          "quantized",
          "qdrant",
          "vectors",
          "lib",
          "segment",
          "src",
          "the",
          "https",
          "github",
          "com",
          "blob",
          "48203e41",
          "types",
          "integration",
          "system",
          "with",
          "and",
          "quantizedvectors"
        ],
        "term_weights": [
          {
            "term": "storage",
            "tf": 14,
            "weight": 0.068627
          },
          {
            "term": "vector",
            "tf": 13,
            "weight": 0.063725
          },
          {
            "term": "quantized",
            "tf": 12,
            "weight": 0.058824
          },
          {
            "term": "qdrant",
            "tf": 11,
            "weight": 0.053922
          },
          {
            "term": "vectors",
            "tf": 11,
            "weight": 0.053922
          },
          {
            "term": "lib",
            "tf": 10,
            "weight": 0.04902
          },
          {
            "term": "segment",
            "tf": 10,
            "weight": 0.04902
          },
          {
            "term": "src",
            "tf": 10,
            "weight": 0.04902
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "github",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "com",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "blob",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "48203e41",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "types",
            "tf": 3,
            "weight": 0.014706
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "quantizedvectors",
            "tf": 2,
            "weight": 0.009804
          }
        ],
        "unique_terms": 85,
        "total_terms": 204
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Vector Storage Integration",
        "https",
        "lib",
        "qdrant",
        "quantized",
        "segment",
        "src",
        "storage",
        "the",
        "vector",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5346864864864864,
      "overall": 0.7115621621621621
    }
  },
  {
    "text": "## Creation and Loading Process  Quantized vectors are created from existing `VectorStorageEnum` instances through a dispatch-based process that handles both single vectors and multi-vectors:  | Component                       | Purpose                                             | File Location                                                                                                 | | ------------------------------- | --------------------------------------------------- | ------------------------------------------------------------------------------------------------------------- | | `QuantizedVectors::create()`    | Main entry point dispatching on VectorStorageEnum   | [quantized\\_vectors.rs286-390](https://github.com/qdrant/qdrant/blob/48203e41/quantized_vectors.rs#L286-L390) | | `create_impl()`                 | Implementation for DenseVectorStorage types         | [quantized\\_vectors.rs392-467](https://github.com/qdrant/qdrant/blob/48203e41/quantized_vectors.rs#L392-L467) | | `create_multi_impl()`           | Implementation for MultiVectorStorage types         | [quantized\\_vectors.rs469-559](https://github.com/qdrant/qdrant/blob/48203e41/quantized_vectors.rs#L469-L559) | | `construct_vector_parameters()` | Builds vector\\_parameters from distance, dim, count | [quantized\\_vectors.rs721-730](https://github.com/qdrant/qdrant/blob/48203e41/quantized_vectors.rs#L721-L730) | ``` ``` **QuantizedVectors::create() Flow with Preprocessing Details**  The `quantization_preprocess()` method performs vector preprocessing based on the quantization type and distance metric, handling different vector element types (`f32`, `f16`, `u8`) and applying distance-specific transformations before encoding. Sources: [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs286-390](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L286-L390) [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs40-43](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L40-L43) [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs392-467](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L392-L467) [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs406-412](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L406-L412) [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs721-730](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L721-L730)",
    "metadata": {
      "chunk_id": "94b89a00b89f-0003",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Creation and Loading Process"
      ],
      "heading_text": "Creation and Loading Process",
      "token_count": 637,
      "char_count": 2692,
      "start_char": 11195,
      "end_char": 13887,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7080645161290322,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:45.707594",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 637,
      "document_id": "94b89a00b89f",
      "document_name": "_qdrant_qdrant_3.3-vector-quantization",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "source_filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "hierarchy_path": "Creation and Loading Process",
      "chunk_hash": "e343be81b0fcc04e",
      "content_digest": "e343be81b0fcc04e",
      "chunk_length": 2692,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "quantized",
          "vectors",
          "qdrant",
          "vector",
          "lib",
          "segment",
          "src",
          "storage",
          "https",
          "github",
          "com",
          "blob",
          "48203e41",
          "and",
          "create",
          "types",
          "distance",
          "process",
          "from",
          "vectorstorageenum"
        ],
        "term_weights": [
          {
            "term": "quantized",
            "tf": 29,
            "weight": 0.101045
          },
          {
            "term": "vectors",
            "tf": 21,
            "weight": 0.073171
          },
          {
            "term": "qdrant",
            "tf": 18,
            "weight": 0.062718
          },
          {
            "term": "vector",
            "tf": 14,
            "weight": 0.04878
          },
          {
            "term": "lib",
            "tf": 10,
            "weight": 0.034843
          },
          {
            "term": "segment",
            "tf": 10,
            "weight": 0.034843
          },
          {
            "term": "src",
            "tf": 10,
            "weight": 0.034843
          },
          {
            "term": "storage",
            "tf": 10,
            "weight": 0.034843
          },
          {
            "term": "https",
            "tf": 9,
            "weight": 0.031359
          },
          {
            "term": "github",
            "tf": 9,
            "weight": 0.031359
          },
          {
            "term": "com",
            "tf": 9,
            "weight": 0.031359
          },
          {
            "term": "blob",
            "tf": 9,
            "weight": 0.031359
          },
          {
            "term": "48203e41",
            "tf": 9,
            "weight": 0.031359
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013937
          },
          {
            "term": "create",
            "tf": 4,
            "weight": 0.013937
          },
          {
            "term": "types",
            "tf": 3,
            "weight": 0.010453
          },
          {
            "term": "distance",
            "tf": 3,
            "weight": 0.010453
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.006969
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.006969
          },
          {
            "term": "vectorstorageenum",
            "tf": 2,
            "weight": 0.006969
          }
        ],
        "unique_terms": 98,
        "total_terms": 287
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Creation and Loading Process",
        "github",
        "https",
        "lib",
        "qdrant",
        "quantized",
        "segment",
        "src",
        "storage",
        "vector",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7080645161290322,
      "overall": 0.736021505376344
    }
  },
  {
    "text": "## Query Processing and Scoring  The quantization system provides optimized query processing through the `raw_scorer()` and `raw_internal_scorer()` methods that create specialized scorers operating on quantized data: ``` ``` **QuantizedVectors RawScorer Interface**  Sources: [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs161-175](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L161-L175) [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs177-228](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L177-L228) [lib/segment/src/vector\\_storage/raw\\_scorer.rs31-43](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/raw_scorer.rs#L31-L43)",
    "metadata": {
      "chunk_id": "94b89a00b89f-0005",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Query Processing and Scoring"
      ],
      "heading_text": "Query Processing and Scoring",
      "token_count": 223,
      "char_count": 816,
      "start_char": 15471,
      "end_char": 16287,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:45.716747",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 223,
      "document_id": "94b89a00b89f",
      "document_name": "_qdrant_qdrant_3.3-vector-quantization",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "source_filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "hierarchy_path": "Query Processing and Scoring",
      "chunk_hash": "da2c290999b633ce",
      "content_digest": "da2c290999b633ce",
      "chunk_length": 816,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "quantized",
          "lib",
          "segment",
          "src",
          "vector",
          "storage",
          "qdrant",
          "raw",
          "scorer",
          "vectors",
          "https",
          "github",
          "com",
          "blob",
          "48203e41",
          "query",
          "processing",
          "and",
          "the",
          "scoring"
        ],
        "term_weights": [
          {
            "term": "quantized",
            "tf": 9,
            "weight": 0.082569
          },
          {
            "term": "lib",
            "tf": 6,
            "weight": 0.055046
          },
          {
            "term": "segment",
            "tf": 6,
            "weight": 0.055046
          },
          {
            "term": "src",
            "tf": 6,
            "weight": 0.055046
          },
          {
            "term": "vector",
            "tf": 6,
            "weight": 0.055046
          },
          {
            "term": "storage",
            "tf": 6,
            "weight": 0.055046
          },
          {
            "term": "qdrant",
            "tf": 6,
            "weight": 0.055046
          },
          {
            "term": "raw",
            "tf": 4,
            "weight": 0.036697
          },
          {
            "term": "scorer",
            "tf": 4,
            "weight": 0.036697
          },
          {
            "term": "vectors",
            "tf": 4,
            "weight": 0.036697
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.027523
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.027523
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.027523
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.027523
          },
          {
            "term": "48203e41",
            "tf": 3,
            "weight": 0.027523
          },
          {
            "term": "query",
            "tf": 2,
            "weight": 0.018349
          },
          {
            "term": "processing",
            "tf": 2,
            "weight": 0.018349
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.018349
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.018349
          },
          {
            "term": "scoring",
            "tf": 1,
            "weight": 0.009174
          }
        ],
        "unique_terms": 48,
        "total_terms": 109
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Query Processing and Scoring",
        "lib",
        "qdrant",
        "quantized",
        "raw",
        "scorer",
        "segment",
        "src",
        "storage",
        "vector",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.7157142857142856
    }
  },
  {
    "text": "## Memory Management Strategies  Quantization supports both in-memory and memory-mapped storage determined by the `is_ram()` function and `VectorStorage::is_on_disk()` method:  | Storage Variant                | Condition                     | Backend Implementation               | | ------------------------------ | ----------------------------- | ------------------------------------ | | ScalarRam, PQRam, BinaryRam    | `is_ram() == true`            | `ChunkedVectors<T>`                  | | ScalarMmap, PQMmap, BinaryMmap | `is_ram() == false`           | `QuantizedMmapStorage`               | | Multi variants                 | Same logic as single variants | Includes `MultivectorOffsetsStorage` |  The `is_ram()` function determines storage type based on quantization configuration and source vector storage: ``` ``` Each quantization configuration includes an `always_ram` field that explicitly controls storage type, overriding the default behavior based on the source vector storage's `is_on_disk()` property. ``` ``` **Quantization Storage Selection Logic**  Sources: [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs732-734](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L732-L734) [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs580-622](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L580-L622) [lib/segment/src/vector\\_storage/vector\\_storage\\_base.rs48](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/vector_storage_base.rs#L48-L48)",
    "metadata": {
      "chunk_id": "94b89a00b89f-0006",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Memory Management Strategies"
      ],
      "heading_text": "Memory Management Strategies",
      "token_count": 371,
      "char_count": 1638,
      "start_char": 16291,
      "end_char": 17929,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5013,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:45.722718",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 371,
      "document_id": "94b89a00b89f",
      "document_name": "_qdrant_qdrant_3.3-vector-quantization",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "source_filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "hierarchy_path": "Memory Management Strategies",
      "chunk_hash": "51c682900de35e2f",
      "content_digest": "51c682900de35e2f",
      "chunk_length": 1638,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "storage",
          "vector",
          "quantized",
          "lib",
          "segment",
          "src",
          "qdrant",
          "ram",
          "quantization",
          "the",
          "vectors",
          "memory",
          "and",
          "https",
          "github",
          "com",
          "blob",
          "48203e41",
          "function",
          "disk"
        ],
        "term_weights": [
          {
            "term": "storage",
            "tf": 15,
            "weight": 0.090909
          },
          {
            "term": "vector",
            "tf": 10,
            "weight": 0.060606
          },
          {
            "term": "quantized",
            "tf": 8,
            "weight": 0.048485
          },
          {
            "term": "lib",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "segment",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "src",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "qdrant",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "ram",
            "tf": 5,
            "weight": 0.030303
          },
          {
            "term": "quantization",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "vectors",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "memory",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "48203e41",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "function",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "disk",
            "tf": 2,
            "weight": 0.012121
          }
        ],
        "unique_terms": 77,
        "total_terms": 165
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Memory Management Strategies",
        "lib",
        "qdrant",
        "quantization",
        "quantized",
        "ram",
        "segment",
        "src",
        "storage",
        "the",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5013,
      "overall": 0.7337666666666666
    }
  },
  {
    "text": "## Multi-Vector Quantization  For multi-vector configurations, quantization includes additional offset tracking to maintain vector boundaries: ``` ``` **Multi-Vector Quantization Structure**  Sources: [lib/segment/src/vector\\_storage/quantized/quantized\\_vectors.rs434-452](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_vectors.rs#L434-L452) [lib/segment/src/vector\\_storage/quantized/quantized\\_multivector\\_storage.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/vector_storage/quantized/quantized_multivector_storage.rs)  Dismiss  Refresh this wiki  Enter email to refresh",
    "metadata": {
      "chunk_id": "94b89a00b89f-0007",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Multi-Vector Quantization"
      ],
      "heading_text": "Multi-Vector Quantization",
      "token_count": 162,
      "char_count": 646,
      "start_char": 17935,
      "end_char": 18581,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5319354838709677,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:45.725001",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 162,
      "document_id": "94b89a00b89f",
      "document_name": "_qdrant_qdrant_3.3-vector-quantization",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "source_filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "hierarchy_path": "Multi-Vector Quantization",
      "chunk_hash": "09b3d87907643017",
      "content_digest": "09b3d87907643017",
      "chunk_length": 646,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "vector",
          "quantized",
          "storage",
          "lib",
          "segment",
          "src",
          "qdrant",
          "multi",
          "quantization",
          "vectors",
          "https",
          "github",
          "com",
          "blob",
          "48203e41",
          "multivector",
          "refresh",
          "for",
          "configurations",
          "includes"
        ],
        "term_weights": [
          {
            "term": "vector",
            "tf": 8,
            "weight": 0.101266
          },
          {
            "term": "quantized",
            "tf": 8,
            "weight": 0.101266
          },
          {
            "term": "storage",
            "tf": 6,
            "weight": 0.075949
          },
          {
            "term": "lib",
            "tf": 4,
            "weight": 0.050633
          },
          {
            "term": "segment",
            "tf": 4,
            "weight": 0.050633
          },
          {
            "term": "src",
            "tf": 4,
            "weight": 0.050633
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.050633
          },
          {
            "term": "multi",
            "tf": 3,
            "weight": 0.037975
          },
          {
            "term": "quantization",
            "tf": 3,
            "weight": 0.037975
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "48203e41",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.012658
          },
          {
            "term": "configurations",
            "tf": 1,
            "weight": 0.012658
          },
          {
            "term": "includes",
            "tf": 1,
            "weight": 0.012658
          }
        ],
        "unique_terms": 36,
        "total_terms": 79
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Multi-Vector Quantization",
        "lib",
        "multi",
        "qdrant",
        "quantization",
        "quantized",
        "segment",
        "src",
        "storage",
        "vector",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5319354838709677,
      "overall": 0.7106451612903225
    }
  },
  {
    "text": "### On this page  - [Vector Quantization](#vector-quantization.md) - [Quantization Types and Storage Architecture](#quantization-types-and-storage-architecture.md) - [Vector Storage Integration](#vector-storage-integration.md) - [Creation and Loading Process](#creation-and-loading-process.md) - [Storage File Structure](#storage-file-structure.md) - [Query Processing and Scoring](#query-processing-and-scoring.md) - [Memory Management Strategies](#memory-management-strategies.md) - [Multi-Vector Quantization](#multi-vector-quantization.md)",
    "metadata": {
      "chunk_id": "94b89a00b89f-0008",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 122,
      "char_count": 543,
      "start_char": 18585,
      "end_char": 19128,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5031578947368421,
      "chunking_strategy": "hierarchical_precise_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:45.726424",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 122,
      "document_id": "94b89a00b89f",
      "document_name": "_qdrant_qdrant_3.3-vector-quantization",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "source_filename": "_qdrant_qdrant_3.3-vector-quantization.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.3-vector-quantization.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "0394083e5b8ab80a",
      "content_digest": "0394083e5b8ab80a",
      "chunk_length": 543,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "vector",
          "quantization",
          "and",
          "storage",
          "types",
          "architecture",
          "integration",
          "creation",
          "loading",
          "process",
          "file",
          "structure",
          "query",
          "processing",
          "scoring",
          "memory",
          "management",
          "strategies",
          "multi",
          "this"
        ],
        "term_weights": [
          {
            "term": "vector",
            "tf": 6,
            "weight": 0.107143
          },
          {
            "term": "quantization",
            "tf": 6,
            "weight": 0.107143
          },
          {
            "term": "and",
            "tf": 6,
            "weight": 0.107143
          },
          {
            "term": "storage",
            "tf": 6,
            "weight": 0.107143
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "architecture",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "creation",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "loading",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "file",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "structure",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "query",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "processing",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "scoring",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "memory",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "management",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "strategies",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "multi",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.017857
          }
        ],
        "unique_terms": 21,
        "total_terms": 56
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "and",
        "architecture",
        "creation",
        "integration",
        "loading",
        "process",
        "quantization",
        "storage",
        "types",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5031578947368421,
      "overall": 0.7010526315789473
    }
  }
]