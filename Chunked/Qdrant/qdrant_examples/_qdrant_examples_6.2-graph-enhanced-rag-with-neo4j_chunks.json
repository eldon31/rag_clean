[
  {
    "text": "# Graph-Enhanced RAG with Neo4j  Relevant source files  - [graphrag\\_neo4j/readme.md](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0000",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Graph-Enhanced RAG with Neo4j"
      ],
      "heading_text": "Graph-Enhanced RAG with Neo4j",
      "token_count": 54,
      "char_count": 160,
      "start_char": 2080,
      "end_char": 2240,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.829544",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 54,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Graph-Enhanced RAG with Neo4j",
      "chunk_hash": "21400ef03354eaef",
      "content_digest": "21400ef03354eaef",
      "chunk_length": 160,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "neo4j",
          "graphrag",
          "readme",
          "graph",
          "enhanced",
          "rag",
          "with",
          "relevant",
          "source",
          "files",
          "https",
          "github",
          "com",
          "qdrant",
          "examples",
          "blob",
          "b3c4b28f"
        ],
        "term_weights": [
          {
            "term": "neo4j",
            "tf": 3,
            "weight": 0.142857
          },
          {
            "term": "graphrag",
            "tf": 2,
            "weight": 0.095238
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.095238
          },
          {
            "term": "graph",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "enhanced",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "relevant",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "source",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "files",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "b3c4b28f",
            "tf": 1,
            "weight": 0.047619
          }
        ],
        "unique_terms": 17,
        "total_terms": 21
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Graph-Enhanced RAG with Neo4j",
        "enhanced",
        "files",
        "graph",
        "graphrag",
        "neo4j",
        "rag",
        "readme",
        "relevant",
        "source",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "## Purpose and Scope\n\nThis page documents the Graph-Enhanced Retrieval-Augmented Generation (RAG) system that integrates Neo4j, Qdrant, and OpenAI's GPT models. The system extracts structured graph relationships from unstructured text, stores them in a Neo4j graph database, and combines these graph relationships with vector search from Qdrant to enhance the context provided to language models. This approach allows for more precise and relationship-aware responses compared to traditional RAG systems that rely solely on vector similarity.\n\nFor information about other RAG implementations, see [Recency-Aware RAG with LlamaIndex](qdrant/examples/6.1-multivector-rag-with-dspy.md).\n\nSources: [graphrag\\_neo4j/readme.md1-12](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L1-L12)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0001",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Purpose and Scope"
      ],
      "heading_text": "Purpose and Scope",
      "token_count": 192,
      "char_count": 807,
      "start_char": 2242,
      "end_char": 3049,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.7218181818181818,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.830729",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 192,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Purpose and Scope",
      "chunk_hash": "6992f7eec326af19",
      "content_digest": "6992f7eec326af19",
      "chunk_length": 807,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "rag",
          "and",
          "graph",
          "neo4j",
          "qdrant",
          "the",
          "with",
          "this",
          "system",
          "that",
          "models",
          "relationships",
          "from",
          "vector",
          "for",
          "aware",
          "examples",
          "graphrag",
          "readme",
          "purpose"
        ],
        "term_weights": [
          {
            "term": "rag",
            "tf": 5,
            "weight": 0.047619
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.038095
          },
          {
            "term": "graph",
            "tf": 4,
            "weight": 0.038095
          },
          {
            "term": "neo4j",
            "tf": 4,
            "weight": 0.038095
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.038095
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.028571
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.028571
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "that",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "relationships",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "aware",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "graphrag",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "purpose",
            "tf": 1,
            "weight": 0.009524
          }
        ],
        "unique_terms": 73,
        "total_terms": 105
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Purpose and Scope",
        "and",
        "graph",
        "neo4j",
        "qdrant",
        "rag",
        "system",
        "that",
        "the",
        "this",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.7218181818181818,
      "overall": 0.7072727272727272
    }
  },
  {
    "text": "## System Architecture  The Graph-Enhanced RAG system implements a pipeline in `graphrag.py` that coordinates three main technologies: `neo4j-graphrag[qdrant]` for graph operations, Qdrant for vector search, and OpenAI for both extraction and generation. ``` ``` **Diagram: Graph-Enhanced RAG System Architecture with Code Components**  Sources: [graphrag\\_neo4j/readme.md5-11](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L5-L11) [graphrag\\_neo4j/readme.md72-90](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L72-L90) [graphrag\\_neo4j/readme.md144-146](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L144-L146)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0002",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "System Architecture"
      ],
      "heading_text": "System Architecture",
      "token_count": 213,
      "char_count": 695,
      "start_char": 3051,
      "end_char": 3746,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7313043478260869,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.833382",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 213,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "System Architecture",
      "chunk_hash": "85b60a6ba9e7a25b",
      "content_digest": "85b60a6ba9e7a25b",
      "chunk_length": 695,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "graphrag",
          "neo4j",
          "readme",
          "qdrant",
          "system",
          "graph",
          "for",
          "https",
          "github",
          "com",
          "examples",
          "blob",
          "b3c4b28f",
          "architecture",
          "enhanced",
          "rag",
          "and",
          "the",
          "implements",
          "pipeline"
        ],
        "term_weights": [
          {
            "term": "graphrag",
            "tf": 8,
            "weight": 0.088889
          },
          {
            "term": "neo4j",
            "tf": 7,
            "weight": 0.077778
          },
          {
            "term": "readme",
            "tf": 6,
            "weight": 0.066667
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.055556
          },
          {
            "term": "system",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "graph",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "examples",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "b3c4b28f",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "architecture",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "enhanced",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "rag",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.011111
          },
          {
            "term": "implements",
            "tf": 1,
            "weight": 0.011111
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.011111
          }
        ],
        "unique_terms": 46,
        "total_terms": 90
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "System Architecture",
        "com",
        "for",
        "github",
        "graph",
        "graphrag",
        "https",
        "neo4j",
        "qdrant",
        "readme",
        "system"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7313043478260869,
      "overall": 0.743768115942029
    }
  },
  {
    "text": "### 1. Graph Extraction  The Graph Extraction component uses OpenAI's GPT models to parse unstructured text and identify entities and relationships between them. This process transforms raw text into a structured graph representation. ``` ``` **Diagram: Graph Extraction Process**  The extraction process creates a JSON structure containing source entities, target entities, and the relationships between them. This structured data forms the basis for the graph database. Sources: [graphrag\\_neo4j/readme.md96-107](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L96-L107)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0004",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "1. Graph Extraction"
      ],
      "heading_text": "1. Graph Extraction",
      "token_count": 130,
      "char_count": 598,
      "start_char": 3769,
      "end_char": 4367,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.688529411764706,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.836890",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 130,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "1. Graph Extraction",
      "chunk_hash": "f0359b3dae2a4558",
      "content_digest": "f0359b3dae2a4558",
      "chunk_length": 598,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "graph",
          "the",
          "extraction",
          "and",
          "entities",
          "process",
          "text",
          "relationships",
          "between",
          "them",
          "this",
          "structured",
          "graphrag",
          "neo4j",
          "readme",
          "component",
          "uses",
          "openai",
          "gpt",
          "models"
        ],
        "term_weights": [
          {
            "term": "graph",
            "tf": 5,
            "weight": 0.064935
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.064935
          },
          {
            "term": "extraction",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.038961
          },
          {
            "term": "entities",
            "tf": 3,
            "weight": 0.038961
          },
          {
            "term": "process",
            "tf": 3,
            "weight": 0.038961
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "relationships",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "between",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "them",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "structured",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "graphrag",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "neo4j",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "component",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "openai",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "gpt",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.012987
          }
        ],
        "unique_terms": 51,
        "total_terms": 77
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "1. Graph Extraction",
        "and",
        "between",
        "entities",
        "extraction",
        "graph",
        "process",
        "relationships",
        "text",
        "the",
        "them"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.688529411764706,
      "overall": 0.7628431372549019
    }
  },
  {
    "text": "### 2. Neo4j Integration  The Neo4j integration component ingests the extracted graph components into a Neo4j graph database, enabling advanced graph queries. ``` ``` **Diagram: Neo4j Data Ingestion**  Neo4j stores nodes labeled as `Entity` and creates relationships between them based on the extracted data. This graph structure allows for traversing relationships and finding connections between entities that might not be apparent in raw text. Sources: [graphrag\\_neo4j/readme.md108-115](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L108-L115)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0005",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "2. Neo4j Integration"
      ],
      "heading_text": "2. Neo4j Integration",
      "token_count": 138,
      "char_count": 575,
      "start_char": 4372,
      "end_char": 4947,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5218181818181818,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.839739",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 138,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "2. Neo4j Integration",
      "chunk_hash": "1ef000bfc850e0ba",
      "content_digest": "1ef000bfc850e0ba",
      "chunk_length": 575,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "neo4j",
          "graph",
          "the",
          "integration",
          "extracted",
          "data",
          "and",
          "relationships",
          "between",
          "graphrag",
          "readme",
          "component",
          "ingests",
          "components",
          "into",
          "database",
          "enabling",
          "advanced",
          "queries",
          "diagram"
        ],
        "term_weights": [
          {
            "term": "neo4j",
            "tf": 7,
            "weight": 0.09589
          },
          {
            "term": "graph",
            "tf": 4,
            "weight": 0.054795
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "extracted",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "relationships",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "between",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "graphrag",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "component",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "ingests",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "components",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "database",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "enabling",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "advanced",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "queries",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "diagram",
            "tf": 1,
            "weight": 0.013699
          }
        ],
        "unique_terms": 54,
        "total_terms": 73
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "2. Neo4j Integration",
        "and",
        "between",
        "data",
        "extracted",
        "graph",
        "graphrag",
        "integration",
        "neo4j",
        "relationships",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5218181818181818,
      "overall": 0.7072727272727272
    }
  },
  {
    "text": "### 3. Qdrant Vector Search  The Qdrant component handles the vector search functionality, enabling semantic search based on text embeddings. ``` ``` **Diagram: Qdrant Vector Search Process**  The system computes embeddings for text segments using OpenAI's embedding models and stores these vectors in a Qdrant collection. When a query is received, it's similarly embedded and matched against the stored vectors to find semantically similar content. Sources: [graphrag\\_neo4j/readme.md116-123](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L116-L123)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0006",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "3. Qdrant Vector Search"
      ],
      "heading_text": "3. Qdrant Vector Search",
      "token_count": 136,
      "char_count": 578,
      "start_char": 4952,
      "end_char": 5530,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7183582089552238,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.842478",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 136,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "3. Qdrant Vector Search",
      "chunk_hash": "b95c713374d8a197",
      "content_digest": "b95c713374d8a197",
      "chunk_length": 578,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "search",
          "the",
          "vector",
          "text",
          "embeddings",
          "and",
          "vectors",
          "graphrag",
          "neo4j",
          "readme",
          "component",
          "handles",
          "functionality",
          "enabling",
          "semantic",
          "based",
          "diagram",
          "process",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.069444
          },
          {
            "term": "search",
            "tf": 4,
            "weight": 0.055556
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.055556
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "graphrag",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "neo4j",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "component",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "handles",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "functionality",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "enabling",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "semantic",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "diagram",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.013889
          }
        ],
        "unique_terms": 53,
        "total_terms": 72
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "3. Qdrant Vector Search",
        "and",
        "embeddings",
        "graphrag",
        "neo4j",
        "qdrant",
        "search",
        "text",
        "the",
        "vector",
        "vectors"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7183582089552238,
      "overall": 0.7727860696517412
    }
  },
  {
    "text": "### 4. Retrieval-Augmented Generation  The RAG component combines the results from both the vector search and graph database to provide comprehensive context for the language model. ``` ``` **Diagram: Retrieval-Augmented Generation Process**  This integrated approach provides several advantages:  - Vector search finds relevant text passages based on semantic similarity - Graph context provides structured relationship information - Combined context enables the language model to generate more accurate and insightful responses  Sources: [graphrag\\_neo4j/readme.md124-131](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L124-L131)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0007",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "4. Retrieval-Augmented Generation"
      ],
      "heading_text": "4. Retrieval-Augmented Generation",
      "token_count": 135,
      "char_count": 659,
      "start_char": 5535,
      "end_char": 6194,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.715,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.846185",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 135,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "4. Retrieval-Augmented Generation",
      "chunk_hash": "0b8637e695ec37f4",
      "content_digest": "0b8637e695ec37f4",
      "chunk_length": 659,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "context",
          "retrieval",
          "augmented",
          "generation",
          "vector",
          "search",
          "and",
          "graph",
          "language",
          "model",
          "provides",
          "graphrag",
          "neo4j",
          "readme",
          "rag",
          "component",
          "combines",
          "results",
          "from"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 5,
            "weight": 0.0625
          },
          {
            "term": "context",
            "tf": 3,
            "weight": 0.0375
          },
          {
            "term": "retrieval",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "augmented",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "graph",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "language",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "provides",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "graphrag",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "neo4j",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.0125
          },
          {
            "term": "component",
            "tf": 1,
            "weight": 0.0125
          },
          {
            "term": "combines",
            "tf": 1,
            "weight": 0.0125
          },
          {
            "term": "results",
            "tf": 1,
            "weight": 0.0125
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.0125
          }
        ],
        "unique_terms": 61,
        "total_terms": 80
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "4. Retrieval-Augmented Generation",
        "and",
        "augmented",
        "context",
        "generation",
        "graph",
        "language",
        "retrieval",
        "search",
        "the",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.715,
      "overall": 0.8049999999999998
    }
  },
  {
    "text": "## Implementation Details\n\nThe system is implemented in `graphrag.py` which integrates multiple Python packages and external APIs through a structured pipeline.",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0008",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Implementation Details"
      ],
      "heading_text": "Implementation Details",
      "token_count": 27,
      "char_count": 160,
      "start_char": 6198,
      "end_char": 6358,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.847951",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 27,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Implementation Details",
      "chunk_hash": "2e350ef68ebe693e",
      "content_digest": "2e350ef68ebe693e",
      "chunk_length": 160,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "implementation",
          "details",
          "the",
          "system",
          "implemented",
          "graphrag",
          "which",
          "integrates",
          "multiple",
          "python",
          "packages",
          "and",
          "external",
          "apis",
          "through",
          "structured",
          "pipeline"
        ],
        "term_weights": [
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "details",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "implemented",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "graphrag",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "which",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "integrates",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "packages",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "external",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "apis",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "structured",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.058824
          }
        ],
        "unique_terms": 17,
        "total_terms": 17
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Implementation Details",
        "details",
        "graphrag",
        "implementation",
        "implemented",
        "integrates",
        "multiple",
        "python",
        "system",
        "the",
        "which"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.73
    }
  },
  {
    "text": "### Pipeline Execution Steps\n\nThe `graphrag.py` script executes the following sequence:\n\n1. **Environment Initialization** - Uses `python-dotenv` to load API credentials from `.env`\n2. **Graph Extraction** - Leverages `openai` package and `pydantic` for structured JSON parsing\n3. **Data Ingestion** - Uses `neo4j-graphrag[qdrant]` to insert into both databases simultaneously\n4. **Retrieval & Graph Querying** - Combines Qdrant vector search with Neo4j graph traversal\n5. **RAG Generation** - Merges contexts and generates responses via OpenAI GPT\n\nSources: [graphrag\\_neo4j/readme.md72-90](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L72-L90) [graphrag\\_neo4j/readme.md134-149](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L134-L149)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0010",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Pipeline Execution Steps"
      ],
      "heading_text": "Pipeline Execution Steps",
      "token_count": 230,
      "char_count": 794,
      "start_char": 6469,
      "end_char": 7263,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.554935064935065,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.849752",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 230,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Pipeline Execution Steps",
      "chunk_hash": "2fc84dad01ec72d3",
      "content_digest": "2fc84dad01ec72d3",
      "chunk_length": 794,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "graphrag",
          "neo4j",
          "qdrant",
          "readme",
          "graph",
          "the",
          "uses",
          "openai",
          "and",
          "https",
          "github",
          "com",
          "examples",
          "blob",
          "b3c4b28f",
          "pipeline",
          "execution",
          "steps",
          "script",
          "executes"
        ],
        "term_weights": [
          {
            "term": "graphrag",
            "tf": 6,
            "weight": 0.061856
          },
          {
            "term": "neo4j",
            "tf": 6,
            "weight": 0.061856
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "readme",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "graph",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "uses",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "openai",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "b3c4b28f",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.010309
          },
          {
            "term": "execution",
            "tf": 1,
            "weight": 0.010309
          },
          {
            "term": "steps",
            "tf": 1,
            "weight": 0.010309
          },
          {
            "term": "script",
            "tf": 1,
            "weight": 0.010309
          },
          {
            "term": "executes",
            "tf": 1,
            "weight": 0.010309
          }
        ],
        "unique_terms": 69,
        "total_terms": 97
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Pipeline Execution Steps",
        "and",
        "graph",
        "graphrag",
        "https",
        "neo4j",
        "openai",
        "qdrant",
        "readme",
        "the",
        "uses"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.554935064935065,
      "overall": 0.6183116883116883
    }
  },
  {
    "text": "# Qdrant configuration\nQDRANT_KEY=your_qdrant_api_key\nQDRANT_URL=your_qdrant_instance_url",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0013",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Qdrant configuration"
      ],
      "heading_text": "Qdrant configuration",
      "token_count": 29,
      "char_count": 89,
      "start_char": 7828,
      "end_char": 7917,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.851463",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 29,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Qdrant configuration",
      "chunk_hash": "57fff949f4585ae1",
      "content_digest": "57fff949f4585ae1",
      "chunk_length": 89,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "key",
          "your",
          "url",
          "configuration",
          "api",
          "instance"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.357143
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "url",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "api",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "instance",
            "tf": 1,
            "weight": 0.071429
          }
        ],
        "unique_terms": 7,
        "total_terms": 14
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Qdrant configuration",
        "api",
        "configuration",
        "instance",
        "key",
        "qdrant",
        "url",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.59,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "# Neo4j configuration NEO4J_URI=bolt://localhost:7687 NEO4J_USERNAME=your_neo4j_username NEO4J_PASSWORD=your_neo4j_password",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0014",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Neo4j configuration"
      ],
      "heading_text": "Neo4j configuration",
      "token_count": 38,
      "char_count": 123,
      "start_char": 7919,
      "end_char": 8042,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.851929",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 38,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Neo4j configuration",
      "chunk_hash": "638ab70b8249236e",
      "content_digest": "638ab70b8249236e",
      "chunk_length": 123,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "neo4j",
          "username",
          "your",
          "password",
          "configuration",
          "uri",
          "bolt",
          "localhost",
          "7687"
        ],
        "term_weights": [
          {
            "term": "neo4j",
            "tf": 6,
            "weight": 0.352941
          },
          {
            "term": "username",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "password",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "uri",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "bolt",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "localhost",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "7687",
            "tf": 1,
            "weight": 0.058824
          }
        ],
        "unique_terms": 9,
        "total_terms": 17
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "7687",
        "Neo4j configuration",
        "bolt",
        "configuration",
        "localhost",
        "neo4j",
        "password",
        "uri",
        "username",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "# OpenAI configuration OPENAI_API_KEY=your_openai_api_key ```",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0015",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "OpenAI configuration"
      ],
      "heading_text": "OpenAI configuration",
      "token_count": 15,
      "char_count": 61,
      "start_char": 8044,
      "end_char": 8105,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.852295",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 15,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "OpenAI configuration",
      "chunk_hash": "f8616770df28d6ab",
      "content_digest": "f8616770df28d6ab",
      "chunk_length": 61,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "openai",
          "api",
          "key",
          "configuration",
          "your"
        ],
        "term_weights": [
          {
            "term": "openai",
            "tf": 3,
            "weight": 0.333333
          },
          {
            "term": "api",
            "tf": 2,
            "weight": 0.222222
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.222222
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.111111
          },
          {
            "term": "your",
            "tf": 1,
            "weight": 0.111111
          }
        ],
        "unique_terms": 5,
        "total_terms": 9
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "OpenAI configuration",
        "api",
        "configuration",
        "key",
        "openai",
        "your"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### Dependencies and Project Structure  | File               | Purpose                                                                                | | ------------------ | -------------------------------------------------------------------------------------- | | `graphrag.py`      | Main pipeline implementation containing all graph extraction, ingestion, and RAG logic | | `requirements.txt` | Python package dependencies                                                            | | `.env.sample`      | Template for environment variables configuration                                       | | `.env`             | Actual environment variables (created from sample)                                     |  **Required Python Packages:**  - `neo4j-graphrag[qdrant]` - Integrated graph and vector database operations - `python-dotenv` - Environment variable loading - `pydantic` - Data validation for JSON extraction - `openai` - GPT models and embeddings API  Sources: [graphrag\\_neo4j/readme.md14-60](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L14-L60) [graphrag\\_neo4j/readme.md134-149](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L134-L149)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0016",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Dependencies and Project Structure"
      ],
      "heading_text": "Dependencies and Project Structure",
      "token_count": 237,
      "char_count": 1209,
      "start_char": 8107,
      "end_char": 9316,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6803225806451613,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.853475",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 237,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Dependencies and Project Structure",
      "chunk_hash": "c64f9d4c42b6585d",
      "content_digest": "c64f9d4c42b6585d",
      "chunk_length": 1209,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "graphrag",
          "neo4j",
          "and",
          "readme",
          "python",
          "environment",
          "qdrant",
          "dependencies",
          "graph",
          "extraction",
          "env",
          "sample",
          "for",
          "variables",
          "https",
          "github",
          "com",
          "examples",
          "blob",
          "b3c4b28f"
        ],
        "term_weights": [
          {
            "term": "graphrag",
            "tf": 6,
            "weight": 0.06
          },
          {
            "term": "neo4j",
            "tf": 5,
            "weight": 0.05
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.04
          },
          {
            "term": "readme",
            "tf": 4,
            "weight": 0.04
          },
          {
            "term": "python",
            "tf": 3,
            "weight": 0.03
          },
          {
            "term": "environment",
            "tf": 3,
            "weight": 0.03
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.03
          },
          {
            "term": "dependencies",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "graph",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "extraction",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "env",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "sample",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "variables",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "b3c4b28f",
            "tf": 2,
            "weight": 0.02
          }
        ],
        "unique_terms": 66,
        "total_terms": 100
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Dependencies and Project Structure",
        "and",
        "dependencies",
        "environment",
        "extraction",
        "graph",
        "graphrag",
        "neo4j",
        "python",
        "qdrant",
        "readme"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6803225806451613,
      "overall": 0.7601075268817205
    }
  },
  {
    "text": "### Running the System  Execute the complete pipeline with: ``` ```",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0018",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Running the System"
      ],
      "heading_text": "Running the System",
      "token_count": 13,
      "char_count": 67,
      "start_char": 9328,
      "end_char": 9395,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5354545454545454,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.854611",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 13,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Running the System",
      "chunk_hash": "632b5be0c58ea530",
      "content_digest": "632b5be0c58ea530",
      "chunk_length": 67,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "running",
          "system",
          "execute",
          "complete",
          "pipeline",
          "with"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 2,
            "weight": 0.25
          },
          {
            "term": "running",
            "tf": 1,
            "weight": 0.125
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.125
          },
          {
            "term": "execute",
            "tf": 1,
            "weight": 0.125
          },
          {
            "term": "complete",
            "tf": 1,
            "weight": 0.125
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.125
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.125
          }
        ],
        "unique_terms": 7,
        "total_terms": 8
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Running the System",
        "complete",
        "execute",
        "pipeline",
        "running",
        "system",
        "the",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5354545454545454,
      "overall": 0.7451515151515151
    }
  },
  {
    "text": "### Console Output  The script provides detailed logging for:  - Graph extraction progress and JSON validation - Database ingestion status for both Neo4j and Qdrant - Vector search results and similarity scores - Graph query results and relationship traversals - Final generated responses with context sources  Sources: [graphrag\\_neo4j/readme.md64-90](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L64-L90)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0020",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Console Output"
      ],
      "heading_text": "Console Output",
      "token_count": 102,
      "char_count": 435,
      "start_char": 10551,
      "end_char": 10986,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53375,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.856752",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 102,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Console Output",
      "chunk_hash": "4a587792249031d4",
      "content_digest": "4a587792249031d4",
      "chunk_length": 435,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "and",
          "neo4j",
          "for",
          "graph",
          "qdrant",
          "results",
          "sources",
          "graphrag",
          "readme",
          "console",
          "output",
          "the",
          "script",
          "provides",
          "detailed",
          "logging",
          "extraction",
          "progress",
          "json",
          "validation"
        ],
        "term_weights": [
          {
            "term": "and",
            "tf": 4,
            "weight": 0.070175
          },
          {
            "term": "neo4j",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "graph",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "results",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "sources",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "graphrag",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "console",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "output",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "script",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "detailed",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "logging",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "extraction",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "progress",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.017544
          }
        ],
        "unique_terms": 45,
        "total_terms": 57
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Console Output",
        "and",
        "console",
        "for",
        "graph",
        "graphrag",
        "neo4j",
        "qdrant",
        "readme",
        "results",
        "sources"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53375,
      "overall": 0.71125
    }
  },
  {
    "text": "## Advantages of Graph-Enhanced RAG  The integration of graph databases with vector search offers several benefits over traditional RAG systems:  | Feature                | Benefit                                                                                      | | ---------------------- | -------------------------------------------------------------------------------------------- | | Relationship awareness | Captures explicit relationships between entities that may not be apparent in raw text        | | Structured context     | Provides language models with structured information about how entities relate to each other | | Improved reasoning     | Enables more accurate responses for queries that require understanding relationships         | | Fact verification      | Graph data can serve as a structured knowledge base to verify generated content              | | Complex query support  | Supports multi-hop relationship queries that would be difficult with vector search alone     |  This approach represents an evolution of RAG systems by combining the strengths of vector search (finding semantically similar content) with graph databases (understanding relationships between entities). Sources: [graphrag\\_neo4j/readme.md3-11](https://github.com/qdrant/examples/blob/b3c4b28f/graphrag_neo4j/readme.md#L3-L11)  Dismiss  Refresh this wiki  Enter email to refresh",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0021",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Advantages of Graph-Enhanced RAG"
      ],
      "heading_text": "Advantages of Graph-Enhanced RAG",
      "token_count": 235,
      "char_count": 1380,
      "start_char": 10988,
      "end_char": 12368,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6900000000000001,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.858189",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 235,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "Advantages of Graph-Enhanced RAG",
      "chunk_hash": "e226b046034fd6be",
      "content_digest": "e226b046034fd6be",
      "chunk_length": 1380,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "graph",
          "with",
          "rag",
          "vector",
          "search",
          "relationships",
          "entities",
          "that",
          "structured",
          "the",
          "databases",
          "systems",
          "relationship",
          "between",
          "queries",
          "understanding",
          "content",
          "this",
          "graphrag",
          "neo4j"
        ],
        "term_weights": [
          {
            "term": "graph",
            "tf": 4,
            "weight": 0.030534
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.030534
          },
          {
            "term": "rag",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "relationships",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "entities",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "that",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "structured",
            "tf": 3,
            "weight": 0.022901
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "databases",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "systems",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "relationship",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "between",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "understanding",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "graphrag",
            "tf": 2,
            "weight": 0.015267
          },
          {
            "term": "neo4j",
            "tf": 2,
            "weight": 0.015267
          }
        ],
        "unique_terms": 98,
        "total_terms": 131
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Advantages of Graph-Enhanced RAG",
        "entities",
        "graph",
        "rag",
        "relationships",
        "search",
        "structured",
        "that",
        "the",
        "vector",
        "with"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6900000000000001,
      "overall": 0.7966666666666665
    }
  },
  {
    "text": "### On this page  - [Graph-Enhanced RAG with Neo4j](#graph-enhanced-rag-with-neo4j.md) - [Purpose and Scope](#purpose-and-scope.md) - [System Architecture](#system-architecture.md) - [Key Components](#key-components.md) - [1. Graph Extraction](#1-graph-extraction.md) - [2. Neo4j Integration](#2-neo4j-integration.md) - [3. Qdrant Vector Search](#3-qdrant-vector-search.md) - [4. Retrieval-Augmented Generation](#4-retrieval-augmented-generation.md) - [Implementation Details](#implementation-details.md) - [Python Dependencies and Integration](#python-dependencies-and-integration.md) - [Pipeline Execution Steps](#pipeline-execution-steps.md) - [Configuration and Setup](#configuration-and-setup.md) - [Environment Setup](#environment-setup.md) - [Dependencies and Project Structure](#dependencies-and-project-structure.md) - [Usage](#usage.md) - [Running the System](#running-the-system.md) - [Pipeline Operations](#pipeline-operations.md) - [Console Output](#console-output.md) - [Advantages of Graph-Enhanced RAG](#advantages-of-graph-enhanced-rag.md)",
    "metadata": {
      "chunk_id": "9021fcc7b9b3-0022",
      "source_file": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 279,
      "char_count": 1056,
      "start_char": 12371,
      "end_char": 13427,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7042857142857143,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:40.868111",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 279,
      "document_id": "9021fcc7b9b3",
      "document_name": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j",
      "source_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_filename": "_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "source_directory": "Docs\\Qdrant\\qdrant_examples",
      "relative_path": "Docs\\Qdrant\\qdrant_examples\\_qdrant_examples_6.2-graph-enhanced-rag-with-neo4j.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "d03035ffca4799a0",
      "content_digest": "d03035ffca4799a0",
      "chunk_length": 1056,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "and",
          "graph",
          "enhanced",
          "rag",
          "neo4j",
          "system",
          "integration",
          "dependencies",
          "pipeline",
          "setup",
          "with",
          "purpose",
          "scope",
          "architecture",
          "key",
          "components",
          "extraction",
          "qdrant",
          "vector",
          "search"
        ],
        "term_weights": [
          {
            "term": "and",
            "tf": 8,
            "weight": 0.075472
          },
          {
            "term": "graph",
            "tf": 6,
            "weight": 0.056604
          },
          {
            "term": "enhanced",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "rag",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "neo4j",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "system",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "integration",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "dependencies",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "pipeline",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "setup",
            "tf": 4,
            "weight": 0.037736
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "purpose",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "scope",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "architecture",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "components",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "extraction",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.018868
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.018868
          }
        ],
        "unique_terms": 41,
        "total_terms": 106
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "and",
        "dependencies",
        "enhanced",
        "graph",
        "integration",
        "neo4j",
        "pipeline",
        "rag",
        "setup",
        "system"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7042857142857143,
      "overall": 0.7347619047619047
    }
  }
]