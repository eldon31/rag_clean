[
  {
    "text": "## Payload Filtering Architecture\n\nThe payload filtering system provides comprehensive condition evaluation for both local and remote operations. The system supports boolean logic, range queries, text matching, geographic constraints, and nested object filtering.",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0001",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Payload Filtering Architecture"
      ],
      "heading_text": "Payload Filtering Architecture",
      "token_count": 40,
      "char_count": 263,
      "start_char": 3308,
      "end_char": 3571,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5445454545454546,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.746023",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 40,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Payload Filtering Architecture",
      "chunk_hash": "2e333f5bbb73c797",
      "content_digest": "2e333f5bbb73c797",
      "chunk_length": 263,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "filtering",
          "payload",
          "the",
          "system",
          "and",
          "architecture",
          "provides",
          "comprehensive",
          "condition",
          "evaluation",
          "for",
          "both",
          "local",
          "remote",
          "operations",
          "supports",
          "boolean",
          "logic",
          "range",
          "queries"
        ],
        "term_weights": [
          {
            "term": "filtering",
            "tf": 3,
            "weight": 0.09375
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "comprehensive",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "condition",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "evaluation",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "both",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "local",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "remote",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "operations",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "boolean",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "range",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "queries",
            "tf": 1,
            "weight": 0.03125
          }
        ],
        "unique_terms": 26,
        "total_terms": 32
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Payload Filtering Architecture",
        "and",
        "architecture",
        "comprehensive",
        "condition",
        "evaluation",
        "filtering",
        "payload",
        "provides",
        "system",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5445454545454546,
      "overall": 0.7481818181818181
    }
  },
  {
    "text": "### Core Filter Components ``` ``` The filtering system processes `models.Filter` objects through a hierarchical evaluation structure. The main entry point `check_filter()` coordinates boolean logic operators (`must`, `must_not`, `should`, `min_should`) which delegate to specific condition evaluators. **Sources:** [qdrant\\_client/local/payload\\_filters.py275-312](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L275-L312)",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0002",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Core Filter Components"
      ],
      "heading_text": "Core Filter Components",
      "token_count": 107,
      "char_count": 469,
      "start_char": 3573,
      "end_char": 4042,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5742105263157895,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.747849",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 107,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Core Filter Components",
      "chunk_hash": "48aa8beb420737de",
      "content_digest": "48aa8beb420737de",
      "chunk_length": 469,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "filter",
          "client",
          "the",
          "must",
          "should",
          "local",
          "payload",
          "filters",
          "core",
          "components",
          "filtering",
          "system",
          "processes",
          "models",
          "objects",
          "through",
          "hierarchical",
          "evaluation",
          "structure"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.068966
          },
          {
            "term": "filter",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "must",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "should",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "filters",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "components",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "filtering",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "processes",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "objects",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "hierarchical",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "evaluation",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "structure",
            "tf": 1,
            "weight": 0.017241
          }
        ],
        "unique_terms": 45,
        "total_terms": 58
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Core Filter Components",
        "client",
        "core",
        "filter",
        "filters",
        "local",
        "must",
        "payload",
        "qdrant",
        "should",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5742105263157895,
      "overall": 0.7247368421052632
    }
  },
  {
    "text": "### Condition Evaluation Flow ``` ``` The `check_condition()` function dispatches to specialized handlers based on condition type. Each handler implements the specific logic for its condition category. **Sources:** [qdrant\\_client/local/payload\\_filters.py166-226](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L166-L226)",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0003",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Condition Evaluation Flow"
      ],
      "heading_text": "Condition Evaluation Flow",
      "token_count": 85,
      "char_count": 368,
      "start_char": 4047,
      "end_char": 4415,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5486206896551724,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.749041",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 85,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Condition Evaluation Flow",
      "chunk_hash": "92cbd6d70594d1f7",
      "content_digest": "92cbd6d70594d1f7",
      "chunk_length": 368,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "condition",
          "qdrant",
          "client",
          "the",
          "local",
          "payload",
          "filters",
          "evaluation",
          "flow",
          "check",
          "function",
          "dispatches",
          "specialized",
          "handlers",
          "based",
          "type",
          "each",
          "handler",
          "implements",
          "specific"
        ],
        "term_weights": [
          {
            "term": "condition",
            "tf": 4,
            "weight": 0.086957
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.086957
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "filters",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "evaluation",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "flow",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "check",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "dispatches",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "specialized",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "handlers",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "each",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "handler",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "implements",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "specific",
            "tf": 1,
            "weight": 0.021739
          }
        ],
        "unique_terms": 34,
        "total_terms": 46
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Condition Evaluation Flow",
        "check",
        "client",
        "condition",
        "evaluation",
        "filters",
        "flow",
        "local",
        "payload",
        "qdrant",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5486206896551724,
      "overall": 0.7162068965517241
    }
  },
  {
    "text": "## Value Extraction System\n\nThe value extraction system provides flexible access to nested payload data using JSON path expressions. It supports array indexing, wildcard operations, and deep object traversal.",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0004",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Value Extraction System"
      ],
      "heading_text": "Value Extraction System",
      "token_count": 34,
      "char_count": 208,
      "start_char": 4420,
      "end_char": 4628,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5589655172413793,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.749328",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 34,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Value Extraction System",
      "chunk_hash": "7c6019f5f272949b",
      "content_digest": "7c6019f5f272949b",
      "chunk_length": 208,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "value",
          "extraction",
          "system",
          "the",
          "provides",
          "flexible",
          "access",
          "nested",
          "payload",
          "data",
          "using",
          "json",
          "path",
          "expressions",
          "supports",
          "array",
          "indexing",
          "wildcard",
          "operations",
          "and"
        ],
        "term_weights": [
          {
            "term": "value",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "extraction",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "flexible",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "access",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "nested",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "payload",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "path",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "expressions",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "array",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "indexing",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "wildcard",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "operations",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.038462
          }
        ],
        "unique_terms": 23,
        "total_terms": 26
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Value Extraction System",
        "access",
        "data",
        "extraction",
        "flexible",
        "nested",
        "payload",
        "provides",
        "system",
        "the",
        "value"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5589655172413793,
      "overall": 0.7196551724137931
    }
  },
  {
    "text": "### JSON Path Processing ``` ``` The `value_by_key()` function supports complex path expressions for accessing nested data structures. The `flat` parameter controls whether list values are flattened or preserved as arrays. **Sources:** [qdrant\\_client/local/payload\\_value\\_extractor.py11-81](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py#L11-L81)",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0005",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "JSON Path Processing"
      ],
      "heading_text": "JSON Path Processing",
      "token_count": 95,
      "char_count": 402,
      "start_char": 4630,
      "end_char": 5032,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.750325",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 95,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "JSON Path Processing",
      "chunk_hash": "d43234ca8d7156fb",
      "content_digest": "d43234ca8d7156fb",
      "chunk_length": 402,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "value",
          "client",
          "path",
          "the",
          "local",
          "payload",
          "extractor",
          "json",
          "processing",
          "key",
          "function",
          "supports",
          "complex",
          "expressions",
          "for",
          "accessing",
          "nested",
          "data",
          "structures"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.078431
          },
          {
            "term": "value",
            "tf": 3,
            "weight": 0.058824
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.058824
          },
          {
            "term": "path",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "extractor",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "key",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "complex",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "expressions",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "accessing",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "nested",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "structures",
            "tf": 1,
            "weight": 0.019608
          }
        ],
        "unique_terms": 39,
        "total_terms": 51
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "JSON Path Processing",
        "client",
        "extractor",
        "json",
        "local",
        "path",
        "payload",
        "processing",
        "qdrant",
        "the",
        "value"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.7209090909090908
    }
  },
  {
    "text": "### Value Extraction Process ``` ``` The extraction process recursively traverses the payload structure, handling different data types and accumulating results based on the flattening mode. **Sources:** [qdrant\\_client/local/payload\\_value\\_extractor.py32-80](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_value_extractor.py#L32-L80)",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0006",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Value Extraction Process"
      ],
      "heading_text": "Value Extraction Process",
      "token_count": 86,
      "char_count": 369,
      "start_char": 5037,
      "end_char": 5406,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5364285714285714,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.751395",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 86,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Value Extraction Process",
      "chunk_hash": "673c0b22d2bebe80",
      "content_digest": "673c0b22d2bebe80",
      "chunk_length": 369,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "value",
          "the",
          "payload",
          "client",
          "extraction",
          "process",
          "local",
          "extractor",
          "recursively",
          "traverses",
          "structure",
          "handling",
          "different",
          "data",
          "types",
          "and",
          "accumulating",
          "results",
          "based"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.086957
          },
          {
            "term": "value",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "payload",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "extraction",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "extractor",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "recursively",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "traverses",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "structure",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "handling",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "different",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "accumulating",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "results",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.021739
          }
        ],
        "unique_terms": 31,
        "total_terms": 46
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Value Extraction Process",
        "client",
        "extraction",
        "extractor",
        "local",
        "payload",
        "process",
        "qdrant",
        "recursively",
        "the",
        "value"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5364285714285714,
      "overall": 0.7121428571428571
    }
  },
  {
    "text": "## Geographic Operations\n\nThe geographic operations system provides distance calculations and spatial containment checks for location-based filtering.",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0007",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Geographic Operations"
      ],
      "heading_text": "Geographic Operations",
      "token_count": 20,
      "char_count": 150,
      "start_char": 5411,
      "end_char": 5561,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.751653",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 20,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Geographic Operations",
      "chunk_hash": "8f058aa0b339fc34",
      "content_digest": "8f058aa0b339fc34",
      "chunk_length": 150,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "geographic",
          "operations",
          "the",
          "system",
          "provides",
          "distance",
          "calculations",
          "and",
          "spatial",
          "containment",
          "checks",
          "for",
          "location",
          "based",
          "filtering"
        ],
        "term_weights": [
          {
            "term": "geographic",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "operations",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "distance",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "calculations",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "spatial",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "containment",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "checks",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "location",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "filtering",
            "tf": 1,
            "weight": 0.058824
          }
        ],
        "unique_terms": 15,
        "total_terms": 17
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Geographic Operations",
        "and",
        "calculations",
        "containment",
        "distance",
        "geographic",
        "operations",
        "provides",
        "spatial",
        "system",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "overall": 0.7515686274509804
    }
  },
  {
    "text": "### Distance Calculation ``` ``` The `geo_distance()` function implements the Haversine formula for calculating great-circle distances between two points on Earth's surface. **Sources:** [qdrant\\_client/local/geo.py7-29](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py#L7-L29)",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0008",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Distance Calculation"
      ],
      "heading_text": "Distance Calculation",
      "token_count": 79,
      "char_count": 309,
      "start_char": 5563,
      "end_char": 5872,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.565,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.752675",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 79,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Distance Calculation",
      "chunk_hash": "553a8f36983fa179",
      "content_digest": "553a8f36983fa179",
      "chunk_length": 309,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "geo",
          "client",
          "distance",
          "the",
          "local",
          "calculation",
          "function",
          "implements",
          "haversine",
          "formula",
          "for",
          "calculating",
          "great",
          "circle",
          "distances",
          "between",
          "two",
          "points",
          "earth"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.102564
          },
          {
            "term": "geo",
            "tf": 3,
            "weight": 0.076923
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.076923
          },
          {
            "term": "distance",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "calculation",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "implements",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "haversine",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "formula",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "calculating",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "great",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "circle",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "distances",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "between",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "two",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "points",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "earth",
            "tf": 1,
            "weight": 0.025641
          }
        ],
        "unique_terms": 29,
        "total_terms": 39
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Distance Calculation",
        "calculation",
        "client",
        "distance",
        "function",
        "geo",
        "haversine",
        "implements",
        "local",
        "qdrant",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.565,
      "overall": 0.7216666666666667
    }
  },
  {
    "text": "### Polygon Containment ``` ``` The polygon containment system uses ray casting to determine if a point lies within a polygon, supporting both exterior boundaries and interior holes. **Sources:** [qdrant\\_client/local/geo.py45-91](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py#L45-L91)",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0009",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Polygon Containment"
      ],
      "heading_text": "Polygon Containment",
      "token_count": 80,
      "char_count": 320,
      "start_char": 5877,
      "end_char": 6197,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.55,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.753685",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 80,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Polygon Containment",
      "chunk_hash": "2321aa7757f1c2eb",
      "content_digest": "2321aa7757f1c2eb",
      "chunk_length": 320,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "polygon",
          "client",
          "containment",
          "local",
          "geo",
          "the",
          "system",
          "uses",
          "ray",
          "casting",
          "determine",
          "point",
          "lies",
          "within",
          "supporting",
          "both",
          "exterior",
          "boundaries",
          "and"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.097561
          },
          {
            "term": "polygon",
            "tf": 3,
            "weight": 0.073171
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.073171
          },
          {
            "term": "containment",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "geo",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "ray",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "casting",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "determine",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "point",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "lies",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "within",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "supporting",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "both",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "exterior",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "boundaries",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.02439
          }
        ],
        "unique_terms": 31,
        "total_terms": 41
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Polygon Containment",
        "client",
        "containment",
        "geo",
        "local",
        "polygon",
        "qdrant",
        "ray",
        "system",
        "the",
        "uses"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.55,
      "overall": 0.7166666666666667
    }
  },
  {
    "text": "## Integration Architecture\n\nThe implementation systems work together to provide comprehensive filtering and data access capabilities for the local vector database.",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0010",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration Architecture"
      ],
      "heading_text": "Integration Architecture",
      "token_count": 23,
      "char_count": 164,
      "start_char": 6202,
      "end_char": 6366,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5757142857142857,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.753942",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 23,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Integration Architecture",
      "chunk_hash": "100300df8727a1e1",
      "content_digest": "100300df8727a1e1",
      "chunk_length": 164,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "integration",
          "architecture",
          "implementation",
          "systems",
          "work",
          "together",
          "provide",
          "comprehensive",
          "filtering",
          "and",
          "data",
          "access",
          "capabilities",
          "for",
          "local",
          "vector",
          "database"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "systems",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "work",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "together",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "comprehensive",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "filtering",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "access",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "capabilities",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "local",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "database",
            "tf": 1,
            "weight": 0.052632
          }
        ],
        "unique_terms": 18,
        "total_terms": 19
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration Architecture",
        "architecture",
        "comprehensive",
        "filtering",
        "implementation",
        "integration",
        "provide",
        "systems",
        "the",
        "together",
        "work"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5757142857142857,
      "overall": 0.7585714285714286
    }
  },
  {
    "text": "### System Integration ``` ``` The integration architecture shows how filtering, value extraction, and geographic operations combine to process queries efficiently. The `calculate_payload_mask()` function coordinates all systems to produce boolean masks for result filtering. **Sources:** [qdrant\\_client/local/payload\\_filters.py315-333](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/payload_filters.py#L315-L333)",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0011",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "System Integration"
      ],
      "heading_text": "System Integration",
      "token_count": 94,
      "char_count": 442,
      "start_char": 6368,
      "end_char": 6810,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5566666666666666,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.755198",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 94,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "System Integration",
      "chunk_hash": "2e4483ba55afc202",
      "content_digest": "2e4483ba55afc202",
      "chunk_length": 442,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "payload",
          "client",
          "integration",
          "the",
          "filtering",
          "local",
          "filters",
          "system",
          "architecture",
          "shows",
          "how",
          "value",
          "extraction",
          "and",
          "geographic",
          "operations",
          "combine",
          "process",
          "queries"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.074074
          },
          {
            "term": "payload",
            "tf": 3,
            "weight": 0.055556
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.055556
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "filters",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "shows",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "value",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "extraction",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "geographic",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "operations",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "combine",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "queries",
            "tf": 1,
            "weight": 0.018519
          }
        ],
        "unique_terms": 42,
        "total_terms": 54
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "System Integration",
        "architecture",
        "client",
        "filtering",
        "filters",
        "integration",
        "local",
        "payload",
        "qdrant",
        "system",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5566666666666666,
      "overall": 0.7188888888888888
    }
  },
  {
    "text": "### On this page  - [Implementation Details](#implementation-details.md) - [Payload Filtering Architecture](#payload-filtering-architecture.md) - [Core Filter Components](#core-filter-components.md) - [Condition Evaluation Flow](#condition-evaluation-flow.md) - [Value Extraction System](#value-extraction-system.md) - [JSON Path Processing](#json-path-processing.md) - [Value Extraction Process](#value-extraction-process.md) - [Geographic Operations](#geographic-operations.md) - [Distance Calculation](#distance-calculation.md) - [Polygon Containment](#polygon-containment.md) - [Integration Architecture](#integration-architecture.md) - [System Integration](#system-integration.md) - [Performance Considerations](#performance-considerations.md)",
    "metadata": {
      "chunk_id": "e44f38c5f2c8-0013",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 164,
      "char_count": 748,
      "start_char": 8149,
      "end_char": 8897,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5042857142857142,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.757822",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 164,
      "document_id": "e44f38c5f2c8",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "35f8324c682de237",
      "content_digest": "35f8324c682de237",
      "chunk_length": 748,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "architecture",
          "value",
          "extraction",
          "system",
          "integration",
          "implementation",
          "details",
          "payload",
          "filtering",
          "core",
          "filter",
          "components",
          "condition",
          "evaluation",
          "flow",
          "json",
          "path",
          "processing",
          "process",
          "geographic"
        ],
        "term_weights": [
          {
            "term": "architecture",
            "tf": 4,
            "weight": 0.060606
          },
          {
            "term": "value",
            "tf": 4,
            "weight": 0.060606
          },
          {
            "term": "extraction",
            "tf": 4,
            "weight": 0.060606
          },
          {
            "term": "system",
            "tf": 4,
            "weight": 0.060606
          },
          {
            "term": "integration",
            "tf": 4,
            "weight": 0.060606
          },
          {
            "term": "implementation",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "details",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "core",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "filter",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "components",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "condition",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "evaluation",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "flow",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "path",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "processing",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "geographic",
            "tf": 2,
            "weight": 0.030303
          }
        ],
        "unique_terms": 29,
        "total_terms": 66
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "architecture",
        "core",
        "details",
        "extraction",
        "filtering",
        "implementation",
        "integration",
        "payload",
        "system",
        "value"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5042857142857142,
      "overall": 0.6680952380952382
    }
  }
]