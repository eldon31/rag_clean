[
  {
    "text": "# Client Architecture  Relevant source files  - [qdrant\\_client/async\\_qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py) - [qdrant\\_client/qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py)  This document explains the overall architecture of the qdrant-client Python library, covering the unified client interface and dual backend implementation strategy. The architecture provides a consistent API surface while supporting both local in-process vector storage and remote network-based communication with Qdrant services. For information about specific search operations and query processing, see [Search Operations](qdrant/qdrant-client/3.1-search-operations.md). For details about FastEmbed integration and embedding workflows, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md).",
    "metadata": {
      "chunk_id": "8a245a7e4b7e-0000",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Client Architecture"
      ],
      "heading_text": "Client Architecture",
      "token_count": 214,
      "char_count": 924,
      "start_char": 1976,
      "end_char": 2900,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.538,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.155448",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 214,
      "document_id": "8a245a7e4b7e",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "Client Architecture",
      "chunk_hash": "9c316023c2ba2f90",
      "content_digest": "9c316023c2ba2f90",
      "chunk_length": 924,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "the",
          "and",
          "architecture",
          "search",
          "operations",
          "fastembed",
          "integration",
          "async",
          "https",
          "github",
          "com",
          "blob",
          "ac6f6cd2",
          "for",
          "about",
          "see",
          "relevant",
          "source"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 18,
            "weight": 0.157895
          },
          {
            "term": "client",
            "tf": 15,
            "weight": 0.131579
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "architecture",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "operations",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "fastembed",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "integration",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "async",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "ac6f6cd2",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "about",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "see",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "relevant",
            "tf": 1,
            "weight": 0.008772
          },
          {
            "term": "source",
            "tf": 1,
            "weight": 0.008772
          }
        ],
        "unique_terms": 58,
        "total_terms": 114
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Client Architecture",
        "and",
        "architecture",
        "async",
        "client",
        "fastembed",
        "integration",
        "operations",
        "qdrant",
        "search",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.538,
      "overall": 0.7126666666666667
    }
  },
  {
    "text": "## Local Backend Implementation  The local backend provides in-process vector storage and search capabilities through the `QdrantLocal` class: ``` ``` The local implementation enables:  - **In-memory mode**: Volatile storage for development and testing - **Persistent mode**: File-based storage for production deployments - **Full vector operations**: Search, CRUD operations, and filtering without network overhead - **Thread safety controls**: Configurable via `force_disable_check_same_thread`  **Sources:** [qdrant\\_client/qdrant\\_client.py126-135](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L126-L135) [qdrant\\_client/local/qdrant\\_local.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py)",
    "metadata": {
      "chunk_id": "8a245a7e4b7e-0003",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Local Backend Implementation"
      ],
      "heading_text": "Local Backend Implementation",
      "token_count": 186,
      "char_count": 779,
      "start_char": 4576,
      "end_char": 5355,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.509047619047619,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.162206",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 186,
      "document_id": "8a245a7e4b7e",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "Local Backend Implementation",
      "chunk_hash": "c40d1398ea40168e",
      "content_digest": "c40d1398ea40168e",
      "chunk_length": 779,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "local",
          "the",
          "storage",
          "and",
          "backend",
          "implementation",
          "vector",
          "search",
          "mode",
          "for",
          "operations",
          "thread",
          "https",
          "github",
          "com",
          "blob",
          "ac6f6cd2",
          "provides"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 12,
            "weight": 0.123711
          },
          {
            "term": "client",
            "tf": 8,
            "weight": 0.082474
          },
          {
            "term": "local",
            "tf": 7,
            "weight": 0.072165
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "storage",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "backend",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "implementation",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "mode",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "operations",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "thread",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "ac6f6cd2",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.010309
          }
        ],
        "unique_terms": 54,
        "total_terms": 97
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Local Backend Implementation",
        "and",
        "backend",
        "client",
        "implementation",
        "local",
        "qdrant",
        "search",
        "storage",
        "the",
        "vector"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.509047619047619,
      "overall": 0.7363492063492062
    }
  },
  {
    "text": "## Remote Backend Implementation  The remote backend handles network communication with external Qdrant services through the `QdrantRemote` class: ``` ``` The remote implementation provides:  - **Dual protocol support**: HTTP/REST (port 6333) and gRPC (port 6334) - **Protocol preference**: Configurable via `prefer_grpc` parameter - **Authentication**: API key support and token provider callbacks - **Connection management**: Timeout configuration and connection pooling - **Cloud integration**: Direct support for Qdrant Cloud services  **Sources:** [qdrant\\_client/qdrant\\_client.py139-153](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L139-L153) [qdrant\\_client/qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py)",
    "metadata": {
      "chunk_id": "8a245a7e4b7e-0004",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Remote Backend Implementation"
      ],
      "heading_text": "Remote Backend Implementation",
      "token_count": 201,
      "char_count": 811,
      "start_char": 5359,
      "end_char": 6170,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.518169014084507,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.164517",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 201,
      "document_id": "8a245a7e4b7e",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "Remote Backend Implementation",
      "chunk_hash": "14fe83590adaa463",
      "content_digest": "14fe83590adaa463",
      "chunk_length": 811,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "remote",
          "the",
          "support",
          "and",
          "backend",
          "implementation",
          "services",
          "protocol",
          "port",
          "grpc",
          "connection",
          "cloud",
          "https",
          "github",
          "com",
          "blob",
          "ac6f6cd2",
          "handles"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 14,
            "weight": 0.141414
          },
          {
            "term": "client",
            "tf": 8,
            "weight": 0.080808
          },
          {
            "term": "remote",
            "tf": 5,
            "weight": 0.050505
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.030303
          },
          {
            "term": "support",
            "tf": 3,
            "weight": 0.030303
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.030303
          },
          {
            "term": "backend",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "implementation",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "services",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "protocol",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "port",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "grpc",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "connection",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "cloud",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "ac6f6cd2",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "handles",
            "tf": 1,
            "weight": 0.010101
          }
        ],
        "unique_terms": 56,
        "total_terms": 99
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Remote Backend Implementation",
        "and",
        "backend",
        "client",
        "implementation",
        "protocol",
        "qdrant",
        "remote",
        "services",
        "support",
        "the"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.518169014084507,
      "overall": 0.7393896713615021
    }
  },
  {
    "text": "## Embedding Integration Architecture  The client architecture integrates embedding capabilities through the `QdrantFastembedMixin` class: ``` ``` The embedding integration enables:  - **Automatic detection**: Type inspection for inference objects - **Batch processing**: Configurable batch sizes for embedding generation - **Dual inference modes**: Local FastEmbed models or cloud-based inference - **Seamless integration**: Transparent embedding in query and upsert operations  **Sources:** [qdrant\\_client/qdrant\\_client.py112-116](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L112-L116) [qdrant\\_client/qdrant\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py) [qdrant\\_client/embed/type\\_inspector.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/embed/type_inspector.py)",
    "metadata": {
      "chunk_id": "8a245a7e4b7e-0006",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Embedding Integration Architecture"
      ],
      "heading_text": "Embedding Integration Architecture",
      "token_count": 220,
      "char_count": 892,
      "start_char": 7195,
      "end_char": 8087,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5162295081967213,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.169165",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 220,
      "document_id": "8a245a7e4b7e",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "Embedding Integration Architecture",
      "chunk_hash": "4af60e8ec5e59c8b",
      "content_digest": "4af60e8ec5e59c8b",
      "chunk_length": 892,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "embedding",
          "integration",
          "the",
          "type",
          "inference",
          "fastembed",
          "https",
          "github",
          "com",
          "blob",
          "ac6f6cd2",
          "architecture",
          "for",
          "batch",
          "embed",
          "inspector",
          "integrates",
          "capabilities"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 16,
            "weight": 0.153846
          },
          {
            "term": "client",
            "tf": 12,
            "weight": 0.115385
          },
          {
            "term": "embedding",
            "tf": 5,
            "weight": 0.048077
          },
          {
            "term": "integration",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "inference",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "fastembed",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "ac6f6cd2",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "architecture",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "batch",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "embed",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "inspector",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "integrates",
            "tf": 1,
            "weight": 0.009615
          },
          {
            "term": "capabilities",
            "tf": 1,
            "weight": 0.009615
          }
        ],
        "unique_terms": 49,
        "total_terms": 104
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Embedding Integration Architecture",
        "client",
        "embedding",
        "fastembed",
        "github",
        "https",
        "inference",
        "integration",
        "qdrant",
        "the",
        "type"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5162295081967213,
      "overall": 0.6720765027322404
    }
  },
  {
    "text": "### On this page  - [Client Architecture](#client-architecture.md) - [Unified Client Interface](#unified-client-interface.md) - [Backend Selection Logic](#backend-selection-logic.md) - [Local Backend Implementation](#local-backend-implementation.md) - [Remote Backend Implementation](#remote-backend-implementation.md) - [Protocol Abstraction Layer](#protocol-abstraction-layer.md) - [Embedding Integration Architecture](#embedding-integration-architecture.md) - [Configuration and Initialization](#configuration-and-initialization.md)",
    "metadata": {
      "chunk_id": "8a245a7e4b7e-0008",
      "source_file": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 110,
      "char_count": 535,
      "start_char": 9652,
      "end_char": 10187,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5214285714285715,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:44.170983",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 110,
      "document_id": "8a245a7e4b7e",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "Docs\\Qdrant\\qdrant_qdrant-client",
      "relative_path": "Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "62756063578097b6",
      "content_digest": "62756063578097b6",
      "chunk_length": 535,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "backend",
          "client",
          "architecture",
          "implementation",
          "unified",
          "interface",
          "selection",
          "logic",
          "local",
          "remote",
          "protocol",
          "abstraction",
          "layer",
          "embedding",
          "integration",
          "configuration",
          "and",
          "initialization",
          "this",
          "page"
        ],
        "term_weights": [
          {
            "term": "backend",
            "tf": 6,
            "weight": 0.125
          },
          {
            "term": "client",
            "tf": 4,
            "weight": 0.083333
          },
          {
            "term": "architecture",
            "tf": 4,
            "weight": 0.083333
          },
          {
            "term": "implementation",
            "tf": 4,
            "weight": 0.083333
          },
          {
            "term": "unified",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "interface",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "selection",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "logic",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "remote",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "protocol",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "abstraction",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "layer",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "configuration",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "initialization",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "page",
            "tf": 1,
            "weight": 0.020833
          }
        ],
        "unique_terms": 20,
        "total_terms": 48
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "architecture",
        "backend",
        "client",
        "implementation",
        "interface",
        "local",
        "logic",
        "remote",
        "selection",
        "unified"
      ],
      "collection_name": "Qdrant"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5214285714285715,
      "overall": 0.7071428571428572
    }
  }
]