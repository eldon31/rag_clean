[
  {
    "text": "#### Sparse Module Pipeline\n\n```mermaid\ngraph LR\n    Text[\"Input Text\"] --> MLMTrans[\"MLMTransformer<br/>auto_model + MLM head\"]\n    MLMTrans --> TokenLogits[\"Token Logits<br/>[batch, seq_len, vocab_size]\"]\n    TokenLogits --> SpladePool[\"SpladePooling<br/>pooling_strategy + activation\"]\n    SpladePool --> SparseEmb[\"Sparse Embedding<br/>[batch, vocab_size]\"]\n    \n    subgraph SparseModules[\"Sparse Module Types\"]\n        MLMTrans\n        SpladePool\n    end\n```",
    "metadata": {
      "chunk_id": "9eeaa096c300-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "filename": "Training_arguments_must_specify_router_mapping.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Sparse Module Pipeline"
      ],
      "heading_text": "Sparse Module Pipeline",
      "token_count": 120,
      "char_count": 464,
      "start_char": 543,
      "end_char": 1007,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.5268421052631579,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:18.813014",
      "document_id": "9eeaa096c300",
      "document_name": "Training_arguments_must_specify_router_mapping",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "source_filename": "Training_arguments_must_specify_router_mapping.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers",
      "relative_path": "Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "hierarchy_path": "Sparse Module Pipeline",
      "chunk_hash": "4874f638201a60a2",
      "content_digest": "4874f638201a60a2",
      "chunk_length": 464,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "sparse",
          "mlmtrans",
          "spladepool",
          "module",
          "text",
          "tokenlogits",
          "batch",
          "vocab",
          "size",
          "pipeline",
          "mermaid",
          "graph",
          "input",
          "mlmtransformer",
          "auto",
          "model",
          "mlm",
          "head",
          "token",
          "logits"
        ],
        "term_weights": [
          {
            "term": "sparse",
            "tf": 3,
            "weight": 0.068182
          },
          {
            "term": "mlmtrans",
            "tf": 3,
            "weight": 0.068182
          },
          {
            "term": "spladepool",
            "tf": 3,
            "weight": 0.068182
          },
          {
            "term": "module",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "tokenlogits",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "batch",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "vocab",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "size",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "mermaid",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "graph",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "mlmtransformer",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "auto",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "mlm",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "head",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "token",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "logits",
            "tf": 1,
            "weight": 0.022727
          }
        ],
        "unique_terms": 32,
        "total_terms": 44
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Sparse Module Pipeline",
        "batch",
        "mlmtrans",
        "module",
        "pipeline",
        "size",
        "sparse",
        "spladepool",
        "text",
        "tokenlogits",
        "vocab"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.5268421052631579,
      "overall": 0.6756140350877193
    }
  },
  {
    "text": "### Module Interface Requirements\n\nEach module must implement:\n\n```python\ndef forward(self, features: dict[str, torch.Tensor]) -> dict[str, torch.Tensor]:\n    # Transform features and return updated dictionary\n    pass\n\ndef save(self, output_path: str, **kwargs) -> None:\n    # Save module configuration and weights\n    pass\n```\n\nInputModules additionally require:\n\n```python\ndef tokenize(self, texts: list[str], **kwargs) -> dict[str, torch.Tensor]:\n    # Convert text to model features\n    pass\n```\n\nSources: [sentence_transformers/models/Module.py:33-89](), [sentence_transformers/models/InputModule.py:60-73]()",
    "metadata": {
      "chunk_id": "9eeaa096c300-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "filename": "Training_arguments_must_specify_router_mapping.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Module Interface Requirements"
      ],
      "heading_text": "Module Interface Requirements",
      "token_count": 141,
      "char_count": 614,
      "start_char": 3321,
      "end_char": 3935,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5042857142857142,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:18.814735",
      "document_id": "9eeaa096c300",
      "document_name": "Training_arguments_must_specify_router_mapping",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "source_filename": "Training_arguments_must_specify_router_mapping.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers",
      "relative_path": "Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "hierarchy_path": "Module Interface Requirements",
      "chunk_hash": "8999b5b43a4467c6",
      "content_digest": "8999b5b43a4467c6",
      "chunk_length": 614,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "str",
          "module",
          "def",
          "self",
          "features",
          "dict",
          "torch",
          "tensor",
          "pass",
          "python",
          "and",
          "save",
          "kwargs",
          "sentence",
          "transformers",
          "models",
          "interface",
          "requirements",
          "each",
          "must"
        ],
        "term_weights": [
          {
            "term": "str",
            "tf": 5,
            "weight": 0.071429
          },
          {
            "term": "module",
            "tf": 4,
            "weight": 0.057143
          },
          {
            "term": "def",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "self",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "features",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "dict",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "torch",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "tensor",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "pass",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "save",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "kwargs",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "sentence",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "transformers",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "interface",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "requirements",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "each",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "must",
            "tf": 1,
            "weight": 0.014286
          }
        ],
        "unique_terms": 42,
        "total_terms": 70
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Module Interface Requirements",
        "def",
        "dict",
        "features",
        "module",
        "pass",
        "python",
        "self",
        "str",
        "tensor",
        "torch"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5042857142857142,
      "overall": 0.6347619047619047
    }
  },
  {
    "text": "## Use Cases and Applications\n\nThe CrossEncoder is commonly used in several scenarios:\n\n1. **Reranking**: As the second stage in a retrieve-and-rerank pipeline\n   ```\n   Query → SentenceTransformer (retrieval) → Top-k documents → CrossEncoder (reranking) → Reranked results\n   ```\n\n2. **Text Pair Classification**: Directly scoring or classifying pairs of texts\n   - Natural language inference (entailment/contradiction)\n   - Semantic textual similarity\n   - Question-answer relevance\n\n3. **High-Precision Scoring**: When maximum accuracy is needed for a limited number of text pairs\n\nCrossEncoder models typically achieve higher accuracy than SentenceTransformer models for direct text pair comparison tasks, but they are computationally more expensive for large-scale comparisons.\n\nSources: [README.md:93-131]()",
    "metadata": {
      "chunk_id": "9eeaa096c300-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "filename": "Training_arguments_must_specify_router_mapping.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Use Cases and Applications"
      ],
      "heading_text": "Use Cases and Applications",
      "token_count": 173,
      "char_count": 813,
      "start_char": 3937,
      "end_char": 4750,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.528235294117647,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:18.815115",
      "document_id": "9eeaa096c300",
      "document_name": "Training_arguments_must_specify_router_mapping",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "source_filename": "Training_arguments_must_specify_router_mapping.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers",
      "relative_path": "Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "hierarchy_path": "Use Cases and Applications",
      "chunk_hash": "9eeb08a2d9e6e51d",
      "content_digest": "9eeb08a2d9e6e51d",
      "chunk_length": 813,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "crossencoder",
          "text",
          "for",
          "and",
          "the",
          "reranking",
          "sentencetransformer",
          "pair",
          "scoring",
          "pairs",
          "accuracy",
          "models",
          "use",
          "cases",
          "applications",
          "commonly",
          "used",
          "several",
          "scenarios",
          "second"
        ],
        "term_weights": [
          {
            "term": "crossencoder",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "text",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "reranking",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "sentencetransformer",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "pair",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "scoring",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "pairs",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "accuracy",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "cases",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "applications",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "commonly",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "several",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "scenarios",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "second",
            "tf": 1,
            "weight": 0.011628
          }
        ],
        "unique_terms": 71,
        "total_terms": 86
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Use Cases and Applications",
        "and",
        "crossencoder",
        "for",
        "pair",
        "pairs",
        "reranking",
        "scoring",
        "sentencetransformer",
        "text",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.528235294117647,
      "overall": 0.7094117647058823
    }
  },
  {
    "text": "# Installation & Setup\n\n\n\n\nThis document covers installation procedures and dependency requirements for the sentence-transformers library. It explains the different installation options available for various use cases including basic inference, training, backend optimization, and development. For basic usage examples after installation, see [Quickstart Guide](#2.1). For training-specific setup details, see [Training](#3).",
    "metadata": {
      "chunk_id": "9eeaa096c300-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "filename": "Training_arguments_must_specify_router_mapping.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Installation & Setup"
      ],
      "heading_text": "Installation & Setup",
      "token_count": 74,
      "char_count": 425,
      "start_char": 5632,
      "end_char": 6057,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.73,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:18.815778",
      "document_id": "9eeaa096c300",
      "document_name": "Training_arguments_must_specify_router_mapping",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "source_filename": "Training_arguments_must_specify_router_mapping.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers",
      "relative_path": "Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "hierarchy_path": "Installation & Setup",
      "chunk_hash": "ab15192e1bab0ab1",
      "content_digest": "ab15192e1bab0ab1",
      "chunk_length": 425,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "installation",
          "for",
          "training",
          "setup",
          "and",
          "the",
          "basic",
          "see",
          "this",
          "document",
          "covers",
          "procedures",
          "dependency",
          "requirements",
          "sentence",
          "transformers",
          "library",
          "explains",
          "different",
          "options"
        ],
        "term_weights": [
          {
            "term": "installation",
            "tf": 4,
            "weight": 0.081633
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.081633
          },
          {
            "term": "training",
            "tf": 3,
            "weight": 0.061224
          },
          {
            "term": "setup",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "basic",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "see",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "covers",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "procedures",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "dependency",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "requirements",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "sentence",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "transformers",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "library",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "explains",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "different",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "options",
            "tf": 1,
            "weight": 0.020408
          }
        ],
        "unique_terms": 36,
        "total_terms": 49
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Installation & Setup",
        "and",
        "basic",
        "document",
        "for",
        "installation",
        "see",
        "setup",
        "the",
        "this",
        "training"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.73,
      "overall": 0.7766666666666667
    }
  },
  {
    "text": "## System Requirements\n\nThe sentence-transformers library requires **Python 3.9+**, **PyTorch 1.11.0+**, and **transformers v4.41.0+**. The library supports multiple backends and deployment scenarios through optional dependencies.",
    "metadata": {
      "chunk_id": "9eeaa096c300-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "filename": "Training_arguments_must_specify_router_mapping.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "System Requirements"
      ],
      "heading_text": "System Requirements",
      "token_count": 56,
      "char_count": 230,
      "start_char": 6059,
      "end_char": 6289,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.554,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:18.815923",
      "document_id": "9eeaa096c300",
      "document_name": "Training_arguments_must_specify_router_mapping",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "source_filename": "Training_arguments_must_specify_router_mapping.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers",
      "relative_path": "Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "hierarchy_path": "System Requirements",
      "chunk_hash": "d18a65b5c9aa4e87",
      "content_digest": "d18a65b5c9aa4e87",
      "chunk_length": 230,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "transformers",
          "library",
          "and",
          "system",
          "requirements",
          "sentence",
          "requires",
          "python",
          "pytorch",
          "supports",
          "multiple",
          "backends",
          "deployment",
          "scenarios",
          "through",
          "optional",
          "dependencies"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "transformers",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "library",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "requirements",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "sentence",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "requires",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "pytorch",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "backends",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "deployment",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "scenarios",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "optional",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "dependencies",
            "tf": 1,
            "weight": 0.045455
          }
        ],
        "unique_terms": 18,
        "total_terms": 22
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "System Requirements",
        "and",
        "library",
        "python",
        "pytorch",
        "requirements",
        "requires",
        "sentence",
        "system",
        "the",
        "transformers"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.554,
      "overall": 0.6846666666666668
    }
  },
  {
    "text": "### Installation Options Overview\n\nThe library provides five main installation configurations that correspond to different usage patterns:\n\n```mermaid\ngraph TB\n    subgraph \"Installation Options\"\n        Default[\"Default<br/>Basic inference\"]\n        ONNX[\"ONNX<br/>Optimized inference\"]\n        OpenVINO[\"OpenVINO<br/>Intel optimization\"]\n        Training[\"Default + Training<br/>Model training\"]\n        Development[\"Development<br/>Contributing\"]\n    end\n    \n    subgraph \"Core Capabilities\"\n        Default --> LoadSave[\"Model loading/saving\"]\n        Default --> Inference[\"Embedding generation\"]\n        \n        ONNX --> ONNXOpt[\"ONNX optimization\"]\n        ONNX --> Quantization[\"Model quantization\"]\n        \n        OpenVINO --> IntelOpt[\"Intel hardware optimization\"]\n        \n        Training --> TrainLoop[\"Training loops\"]\n        Training --> Evaluation[\"Model evaluation\"]\n        \n        Development --> Testing[\"Unit testing\"]\n        Development --> Linting[\"Code formatting\"]\n    end\n    \n    subgraph \"Backend Support\"\n        LoadSave --> PyTorchBackend[\"PyTorch backend\"]\n        ONNXOpt --> ONNXBackend[\"ONNX Runtime backend\"]\n        IntelOpt --> OpenVINOBackend[\"OpenVINO backend\"]\n    end\n    \n    subgraph \"Model Types\"\n        PyTorchBackend --> SentenceTransformer[\"SentenceTransformer\"]\n        PyTorchBackend --> SparseEncoder[\"SparseEncoder\"]\n        PyTorchBackend --> CrossEncoder[\"CrossEncoder\"]\n        \n        ONNXBackend --> OptimizedModels[\"Optimized models\"]\n        OpenVINOBackend --> IntelModels[\"Intel-optimized models\"]\n    end\n```\n\n**Sources:** [docs/installation.md:3-8]()",
    "metadata": {
      "chunk_id": "9eeaa096c300-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "filename": "Training_arguments_must_specify_router_mapping.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Installation Options Overview"
      ],
      "heading_text": "Installation Options Overview",
      "token_count": 337,
      "char_count": 1623,
      "start_char": 6291,
      "end_char": 7914,
      "semantic_score": 0.8,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5113564102564102,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:18.816767",
      "document_id": "9eeaa096c300",
      "document_name": "Training_arguments_must_specify_router_mapping",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "source_filename": "Training_arguments_must_specify_router_mapping.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers",
      "relative_path": "Docs\\sentence_transformers_docs\\UKPLab\\sentence-transformers\\Training_arguments_must_specify_router_mapping.md",
      "hierarchy_path": "Installation Options Overview",
      "chunk_hash": "e009cc72b787cd61",
      "content_digest": "e009cc72b787cd61",
      "chunk_length": 1623,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "onnx",
          "training",
          "default",
          "model",
          "installation",
          "subgraph",
          "openvino",
          "development",
          "end",
          "backend",
          "pytorchbackend",
          "inference",
          "optimized",
          "intel",
          "optimization",
          "options",
          "loadsave",
          "onnxopt",
          "quantization",
          "intelopt"
        ],
        "term_weights": [
          {
            "term": "onnx",
            "tf": 6,
            "weight": 0.048
          },
          {
            "term": "training",
            "tf": 6,
            "weight": 0.048
          },
          {
            "term": "default",
            "tf": 5,
            "weight": 0.04
          },
          {
            "term": "model",
            "tf": 5,
            "weight": 0.04
          },
          {
            "term": "installation",
            "tf": 4,
            "weight": 0.032
          },
          {
            "term": "subgraph",
            "tf": 4,
            "weight": 0.032
          },
          {
            "term": "openvino",
            "tf": 4,
            "weight": 0.032
          },
          {
            "term": "development",
            "tf": 4,
            "weight": 0.032
          },
          {
            "term": "end",
            "tf": 4,
            "weight": 0.032
          },
          {
            "term": "backend",
            "tf": 4,
            "weight": 0.032
          },
          {
            "term": "pytorchbackend",
            "tf": 4,
            "weight": 0.032
          },
          {
            "term": "inference",
            "tf": 3,
            "weight": 0.024
          },
          {
            "term": "optimized",
            "tf": 3,
            "weight": 0.024
          },
          {
            "term": "intel",
            "tf": 3,
            "weight": 0.024
          },
          {
            "term": "optimization",
            "tf": 3,
            "weight": 0.024
          },
          {
            "term": "options",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "loadsave",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "onnxopt",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "quantization",
            "tf": 2,
            "weight": 0.016
          },
          {
            "term": "intelopt",
            "tf": 2,
            "weight": 0.016
          }
        ],
        "unique_terms": 65,
        "total_terms": 125
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Installation Options Overview",
        "backend",
        "default",
        "development",
        "end",
        "installation",
        "model",
        "onnx",
        "openvino",
        "subgraph",
        "training"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5113564102564102,
      "overall": 0.70378547008547
    }
  }
]