[
  {
    "text": "## Field Serializers  Field serializers allow you to customize the serialization of individual model fields. They can be applied using the `@field_serializer` decorator. ``` ```",
    "metadata": {
      "chunk_id": "12aa608e50c3-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Field Serializers"
      ],
      "heading_text": "Field Serializers",
      "token_count": 33,
      "char_count": 177,
      "start_char": 0,
      "end_char": 177,
      "semantic_score": 0.749540388584137,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:14.946468",
      "document_id": "12aa608e50c3",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Field Serializers",
      "chunk_hash": "724c726c666224da",
      "content_digest": "724c726c666224da",
      "chunk_length": 177,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "field",
          "serializers",
          "the",
          "allow",
          "you",
          "customize",
          "serialization",
          "individual",
          "model",
          "fields",
          "they",
          "can",
          "applied",
          "using",
          "serializer",
          "decorator"
        ],
        "term_weights": [
          {
            "term": "field",
            "tf": 3,
            "weight": 0.15
          },
          {
            "term": "serializers",
            "tf": 2,
            "weight": 0.1
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.1
          },
          {
            "term": "allow",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "customize",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "serialization",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "individual",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "fields",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "they",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "applied",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "serializer",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "decorator",
            "tf": 1,
            "weight": 0.05
          }
        ],
        "unique_terms": 16,
        "total_terms": 20
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Field Serializers",
        "allow",
        "customize",
        "field",
        "fields",
        "individual",
        "model",
        "serialization",
        "serializers",
        "the",
        "you"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.749540388584137,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "overall": 0.7305134628613791
    }
  },
  {
    "text": "## Advanced Serialization Techniques",
    "metadata": {
      "chunk_id": "12aa608e50c3-0017",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Advanced Serialization Techniques"
      ],
      "heading_text": "Advanced Serialization Techniques",
      "token_count": 4,
      "char_count": 36,
      "start_char": 0,
      "end_char": 36,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:14.950519",
      "document_id": "12aa608e50c3",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Advanced Serialization Techniques",
      "chunk_hash": "1bb6e27902d6be7b",
      "content_digest": "1bb6e27902d6be7b",
      "chunk_length": 36,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "advanced",
          "serialization",
          "techniques"
        ],
        "term_weights": [
          {
            "term": "advanced",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "serialization",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "techniques",
            "tf": 1,
            "weight": 0.333333
          }
        ],
        "unique_terms": 3,
        "total_terms": 3
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Advanced Serialization Techniques",
        "advanced",
        "serialization",
        "techniques"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "## Best Practices for Serializers  1. **Choose the right serializer type**:     - Use field serializers for customizing individual fields    - Use model serializers for complex model-level serialization    - Use functional serializers for reusable serialization logic  2. **Respect the serialization mode**:     - Use the `info.mode` parameter to adjust behavior based on the serialization mode    - Use `when_used` to apply serializers only in specific scenarios  3. **Be mindful of performance**:     - Use plain serializers for simple transformations    - Use wrap serializers when you need to modify the default serialization behavior  4. **Handle None values appropriately**:     - Use `when_used='unless-none'` to skip serialization of None values    - Explicitly handle None values in your serializers to avoid errors  5. **Provide return types**:     - Specify the `return_type` parameter to ensure correct JSON schema generation    - Use type annotations in your serializer functions for better IDE support  Sources:  - [tests/test\\_serialize.py171-197](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py#L171-L197) - [pydantic/functional\\_serializers.py18-52](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/functional_serializers.py#L18-L52)  Dismiss  Refresh this wiki  This wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "12aa608e50c3-0023",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Best Practices for Serializers"
      ],
      "heading_text": "Best Practices for Serializers",
      "token_count": 308,
      "char_count": 1388,
      "start_char": 0,
      "end_char": 1388,
      "semantic_score": 0.5011380910873413,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6768720496894411,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:14.952487",
      "document_id": "12aa608e50c3",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Best Practices for Serializers",
      "chunk_hash": "11903fb68d2b9f83",
      "content_digest": "11903fb68d2b9f83",
      "chunk_length": 1388,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "serializers",
          "use",
          "for",
          "the",
          "serialization",
          "pydantic",
          "none",
          "type",
          "functional",
          "mode",
          "when",
          "values",
          "serializer",
          "model",
          "parameter",
          "behavior",
          "used",
          "handle",
          "your",
          "return"
        ],
        "term_weights": [
          {
            "term": "serializers",
            "tf": 10,
            "weight": 0.060606
          },
          {
            "term": "use",
            "tf": 9,
            "weight": 0.054545
          },
          {
            "term": "for",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "serialization",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "none",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "functional",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "mode",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "when",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "values",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "serializer",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "parameter",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "behavior",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "used",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "handle",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "return",
            "tf": 2,
            "weight": 0.012121
          }
        ],
        "unique_terms": 96,
        "total_terms": 165
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Best Practices for Serializers",
        "for",
        "functional",
        "mode",
        "none",
        "pydantic",
        "serialization",
        "serializers",
        "the",
        "type",
        "use"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.5011380910873413,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6768720496894411,
      "overall": 0.6926700469255941
    }
  },
  {
    "text": "### On this page  - [Serializers](#serializers.md) - [Overview of the Serialization System](#overview-of-the-serialization-system.md) - [Core Serialization Components](#core-serialization-components.md) - [Serialization Modes](#serialization-modes.md) - [Field Serializers](#field-serializers.md) - [Using the field\\_serializer Decorator](#using-the-field_serializer-decorator.md) - [Field Serializer Signature](#field-serializer-signature.md) - [Functional Serializers](#functional-serializers.md) - [PlainSerializer](#plainserializer.md) - [WrapSerializer](#wrapserializer.md) - [Model Serializers](#model-serializers.md) - [Using the model\\_serializer Decorator](#using-the-model_serializer-decorator.md) - [Model Serializer Modes](#model-serializer-modes.md) - [Serialization Process](#serialization-process.md) - [Core Serialization Methods](#core-serialization-methods.md) - [Serialization in TypeAdapter](#serialization-in-typeadapter.md) - [Serialization with Computed Fields](#serialization-with-computed-fields.md) - [Advanced Serialization Techniques](#advanced-serialization-techniques.md) - [Conditional Serialization](#conditional-serialization.md) - [Serialization in Dataclasses](#serialization-in-dataclasses.md) - [Root Model Serialization](#root-model-serialization.md) - [Integration with pydantic-core](#integration-with-pydantic-core.md) - [Deferred Building and Mocking](#deferred-building-and-mocking.md) - [Best Practices for Serializers](#best-practices-for-serializers.md)",
    "metadata": {
      "chunk_id": "12aa608e50c3-0024",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 343,
      "char_count": 1499,
      "start_char": 0,
      "end_char": 1499,
      "semantic_score": 0.49701792001724243,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6797421052631578,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:14.953249",
      "document_id": "12aa608e50c3",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "45a609a38f49ba58",
      "content_digest": "45a609a38f49ba58",
      "chunk_length": 1499,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "serialization",
          "serializers",
          "serializer",
          "model",
          "the",
          "core",
          "field",
          "modes",
          "using",
          "decorator",
          "with",
          "overview",
          "system",
          "components",
          "signature",
          "functional",
          "plainserializer",
          "wrapserializer",
          "process",
          "methods"
        ],
        "term_weights": [
          {
            "term": "serialization",
            "tf": 22,
            "weight": 0.161765
          },
          {
            "term": "serializers",
            "tf": 10,
            "weight": 0.073529
          },
          {
            "term": "serializer",
            "tf": 8,
            "weight": 0.058824
          },
          {
            "term": "model",
            "tf": 8,
            "weight": 0.058824
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.044118
          },
          {
            "term": "core",
            "tf": 6,
            "weight": 0.044118
          },
          {
            "term": "field",
            "tf": 6,
            "weight": 0.044118
          },
          {
            "term": "modes",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "using",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "decorator",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "overview",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "components",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "signature",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "functional",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "plainserializer",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "wrapserializer",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "methods",
            "tf": 2,
            "weight": 0.014706
          }
        ],
        "unique_terms": 39,
        "total_terms": 136
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "core",
        "decorator",
        "field",
        "model",
        "modes",
        "serialization",
        "serializer",
        "serializers",
        "the",
        "using"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.49701792001724243,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6797421052631578,
      "overall": 0.6922533417601334
    }
  },
  {
    "text": "## Integration with pydantic-core  Pydantic uses `pydantic-core` for the actual serialization logic. The `SchemaSerializer` class from `pydantic-core` handles the serialization process. ``` ``` During model definition, Pydantic generates a serialization schema that incorporates all custom serializers. This schema is then used by `pydantic-core` to perform the actual serialization. Sources:  - [pydantic/\\_internal/\\_schema\\_generation\\_shared.py1-142](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_schema_generation_shared.py#L1-L142) - [pydantic/\\_internal/\\_mock\\_val\\_ser.py1-69](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_mock_val_ser.py#L1-L69)",
    "metadata": {
      "chunk_id": "12aa608e50c3-0021",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration with pydantic-core"
      ],
      "heading_text": "Integration with pydantic-core",
      "token_count": 188,
      "char_count": 705,
      "start_char": 0,
      "end_char": 705,
      "semantic_score": 0.6022815704345703,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5220754716981132,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:14.951511",
      "document_id": "12aa608e50c3",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Integration with pydantic-core",
      "chunk_hash": "af6b0be6b4bc910a",
      "content_digest": "af6b0be6b4bc910a",
      "chunk_length": 705,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "core",
          "the",
          "serialization",
          "schema",
          "internal",
          "actual",
          "generation",
          "shared",
          "py1",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "mock",
          "val",
          "ser",
          "integration",
          "with"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 14,
            "weight": 0.164706
          },
          {
            "term": "core",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "serialization",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "schema",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "actual",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "shared",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "py1",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "mock",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "val",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "ser",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.011765
          }
        ],
        "unique_terms": 45,
        "total_terms": 85
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration with pydantic-core",
        "actual",
        "core",
        "generation",
        "internal",
        "py1",
        "pydantic",
        "schema",
        "serialization",
        "shared",
        "the"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.6022815704345703,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5220754716981132,
      "overall": 0.6747856807108944
    }
  }
]