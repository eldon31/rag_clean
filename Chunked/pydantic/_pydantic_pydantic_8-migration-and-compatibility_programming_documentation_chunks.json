[
  {
    "text": "## Migration Tool  To help automate the migration process, Pydantic provides a code transformation tool called `bump-pydantic`.",
    "metadata": {
      "chunk_id": "edb6c49c948f-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Migration Tool"
      ],
      "heading_text": "Migration Tool",
      "token_count": 27,
      "char_count": 127,
      "start_char": 0,
      "end_char": 127,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:05:12.592285",
      "document_id": "edb6c49c948f",
      "document_name": "_pydantic_pydantic_8-migration-and-compatibility",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "hierarchy_path": "Migration Tool",
      "chunk_hash": "36320368e12e2682",
      "content_digest": "36320368e12e2682",
      "chunk_length": 127,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "migration",
          "tool",
          "pydantic",
          "help",
          "automate",
          "the",
          "process",
          "provides",
          "code",
          "transformation",
          "called",
          "bump"
        ],
        "term_weights": [
          {
            "term": "migration",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "tool",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "help",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "automate",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "transformation",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "called",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "bump",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 12,
        "total_terms": 15
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Migration Tool",
        "automate",
        "code",
        "help",
        "migration",
        "process",
        "provides",
        "pydantic",
        "the",
        "tool",
        "transformation"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "overall": 0.7515686274509804
    }
  },
  {
    "text": "### Equality Behavior  The `__eq__` method has changed for models in V2:  - Models can only be equal to other `BaseModel` instances - They must have the same type, field values, extra values, and private attribute values - Models are no longer equal to dicts containing their data",
    "metadata": {
      "chunk_id": "edb6c49c948f-0022",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Equality Behavior"
      ],
      "heading_text": "Equality Behavior",
      "token_count": 62,
      "char_count": 280,
      "start_char": 0,
      "end_char": 280,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:05:12.595926",
      "document_id": "edb6c49c948f",
      "document_name": "_pydantic_pydantic_8-migration-and-compatibility",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "hierarchy_path": "Equality Behavior",
      "chunk_hash": "8519fccd4c29d8ef",
      "content_digest": "8519fccd4c29d8ef",
      "chunk_length": 280,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "models",
          "values",
          "the",
          "equal",
          "equality",
          "behavior",
          "method",
          "has",
          "changed",
          "for",
          "can",
          "only",
          "other",
          "basemodel",
          "instances",
          "they",
          "must",
          "have",
          "same",
          "type"
        ],
        "term_weights": [
          {
            "term": "models",
            "tf": 3,
            "weight": 0.081081
          },
          {
            "term": "values",
            "tf": 3,
            "weight": 0.081081
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "equal",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "equality",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "behavior",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "has",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "changed",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "only",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "other",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "basemodel",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "instances",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "they",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "must",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "have",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "same",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.027027
          }
        ],
        "unique_terms": 31,
        "total_terms": 37
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Equality Behavior",
        "behavior",
        "changed",
        "equal",
        "equality",
        "for",
        "has",
        "method",
        "models",
        "the",
        "values"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "overall": 0.7466666666666667
    }
  },
  {
    "text": "## Installations and Versions",
    "metadata": {
      "chunk_id": "edb6c49c948f-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Installations and Versions"
      ],
      "heading_text": "Installations and Versions",
      "token_count": 5,
      "char_count": 29,
      "start_char": 0,
      "end_char": 29,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:05:12.591023",
      "document_id": "edb6c49c948f",
      "document_name": "_pydantic_pydantic_8-migration-and-compatibility",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "hierarchy_path": "Installations and Versions",
      "chunk_hash": "4f3a6bb80796a378",
      "content_digest": "4f3a6bb80796a378",
      "chunk_length": 29,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "installations",
          "and",
          "versions"
        ],
        "term_weights": [
          {
            "term": "installations",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "versions",
            "tf": 1,
            "weight": 0.333333
          }
        ],
        "unique_terms": 3,
        "total_terms": 3
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Installations and Versions",
        "and",
        "installations",
        "versions"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "## Key Breaking Changes and Migration Paths",
    "metadata": {
      "chunk_id": "edb6c49c948f-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Key Breaking Changes and Migration Paths"
      ],
      "heading_text": "Key Breaking Changes and Migration Paths",
      "token_count": 7,
      "char_count": 43,
      "start_char": 0,
      "end_char": 43,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:05:12.592536",
      "document_id": "edb6c49c948f",
      "document_name": "_pydantic_pydantic_8-migration-and-compatibility",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "hierarchy_path": "Key Breaking Changes and Migration Paths",
      "chunk_hash": "b9480656f93d8f31",
      "content_digest": "b9480656f93d8f31",
      "chunk_length": 43,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "key",
          "breaking",
          "changes",
          "and",
          "migration",
          "paths"
        ],
        "term_weights": [
          {
            "term": "key",
            "tf": 1,
            "weight": 0.166667
          },
          {
            "term": "breaking",
            "tf": 1,
            "weight": 0.166667
          },
          {
            "term": "changes",
            "tf": 1,
            "weight": 0.166667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.166667
          },
          {
            "term": "migration",
            "tf": 1,
            "weight": 0.166667
          },
          {
            "term": "paths",
            "tf": 1,
            "weight": 0.166667
          }
        ],
        "unique_terms": 6,
        "total_terms": 6
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Key Breaking Changes and Migration Paths",
        "and",
        "breaking",
        "changes",
        "key",
        "migration",
        "paths"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "## Forward Compatibility Techniques  When writing code that needs to work with both V1 and V2, consider these approaches:",
    "metadata": {
      "chunk_id": "edb6c49c948f-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Forward Compatibility Techniques"
      ],
      "heading_text": "Forward Compatibility Techniques",
      "token_count": 24,
      "char_count": 121,
      "start_char": 0,
      "end_char": 121,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:05:12.595530",
      "document_id": "edb6c49c948f",
      "document_name": "_pydantic_pydantic_8-migration-and-compatibility",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_filename": "_pydantic_pydantic_8-migration-and-compatibility.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_8-migration-and-compatibility.md",
      "hierarchy_path": "Forward Compatibility Techniques",
      "chunk_hash": "5b1dfe4dbf302c03",
      "content_digest": "5b1dfe4dbf302c03",
      "chunk_length": 121,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "forward",
          "compatibility",
          "techniques",
          "when",
          "writing",
          "code",
          "that",
          "needs",
          "work",
          "with",
          "both",
          "and",
          "consider",
          "these",
          "approaches"
        ],
        "term_weights": [
          {
            "term": "forward",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "compatibility",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "techniques",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "writing",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "needs",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "work",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "both",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "consider",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "these",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "approaches",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 15,
        "total_terms": 15
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Forward Compatibility Techniques",
        "code",
        "compatibility",
        "forward",
        "needs",
        "techniques",
        "that",
        "when",
        "with",
        "work",
        "writing"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "overall": 0.6966666666666667
    }
  }
]