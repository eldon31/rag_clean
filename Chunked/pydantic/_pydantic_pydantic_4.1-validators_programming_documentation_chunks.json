[
  {
    "text": "## Functional Validators  Functional validators are used with `Annotated` types and provide a reusable way to apply validation logic: ``` ```",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Functional Validators"
      ],
      "heading_text": "Functional Validators",
      "token_count": 26,
      "char_count": 141,
      "start_char": 0,
      "end_char": 141,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:07.110528",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Functional Validators",
      "chunk_hash": "c5f353f2d2079d8a",
      "content_digest": "c5f353f2d2079d8a",
      "chunk_length": 141,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "functional",
          "validators",
          "are",
          "used",
          "with",
          "annotated",
          "types",
          "and",
          "provide",
          "reusable",
          "way",
          "apply",
          "validation",
          "logic"
        ],
        "term_weights": [
          {
            "term": "functional",
            "tf": 2,
            "weight": 0.125
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.125
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "annotated",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "reusable",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "way",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "apply",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.0625
          }
        ],
        "unique_terms": 14,
        "total_terms": 16
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Functional Validators",
        "and",
        "annotated",
        "are",
        "functional",
        "provide",
        "reusable",
        "types",
        "used",
        "validators",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.7490476190476191
    }
  },
  {
    "text": "### Types of Functional Validators  - **BeforeValidator**: Runs before standard validation, useful for pre-processing input - **AfterValidator**: Runs after standard validation, for additional checks on typed data - **PlainValidator**: Direct validator without standard validation - **WrapValidator**: Gives full control over the validation process",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Types of Functional Validators"
      ],
      "heading_text": "Types of Functional Validators",
      "token_count": 59,
      "char_count": 348,
      "start_char": 0,
      "end_char": 348,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5272093023255814,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:07.110676",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Types of Functional Validators",
      "chunk_hash": "7e14891128154a55",
      "content_digest": "7e14891128154a55",
      "chunk_length": 348,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validation",
          "standard",
          "runs",
          "for",
          "types",
          "functional",
          "validators",
          "beforevalidator",
          "before",
          "useful",
          "pre",
          "processing",
          "input",
          "aftervalidator",
          "after",
          "additional",
          "checks",
          "typed",
          "data",
          "plainvalidator"
        ],
        "term_weights": [
          {
            "term": "validation",
            "tf": 4,
            "weight": 0.108108
          },
          {
            "term": "standard",
            "tf": 3,
            "weight": 0.081081
          },
          {
            "term": "runs",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "functional",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "validators",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "beforevalidator",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "before",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "useful",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "pre",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "aftervalidator",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "after",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "additional",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "checks",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "typed",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "plainvalidator",
            "tf": 1,
            "weight": 0.027027
          }
        ],
        "unique_terms": 30,
        "total_terms": 37
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Types of Functional Validators",
        "before",
        "beforevalidator",
        "for",
        "functional",
        "runs",
        "standard",
        "types",
        "useful",
        "validation",
        "validators"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5272093023255814,
      "overall": 0.7424031007751938
    }
  },
  {
    "text": "## Advanced Usage",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Advanced Usage"
      ],
      "heading_text": "Advanced Usage",
      "token_count": 3,
      "char_count": 17,
      "start_char": 0,
      "end_char": 17,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:07.111550",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Advanced Usage",
      "chunk_hash": "8f3400e816e20e32",
      "content_digest": "8f3400e816e20e32",
      "chunk_length": 17,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "advanced",
          "usage"
        ],
        "term_weights": [
          {
            "term": "advanced",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "usage",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Advanced Usage",
        "advanced",
        "usage"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "# Validators  Relevant source files  - [pydantic/\\_internal/\\_decorators.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_decorators.py) - [pydantic/\\_internal/\\_validate\\_call.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validate_call.py) - [pydantic/functional\\_serializers.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/functional_serializers.py) - [pydantic/functional\\_validators.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/functional_validators.py) - [pydantic/plugin/\\_\\_init\\_\\_.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/plugin/__init__.py) - [pydantic/plugin/\\_schema\\_validator.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/plugin/_schema_validator.py) - [pydantic/root\\_model.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/root_model.py) - [pydantic/type\\_adapter.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/type_adapter.py) - [pydantic/validate\\_call\\_decorator.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/validate_call_decorator.py) - [tests/test\\_computed\\_fields.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_computed_fields.py) - [tests/test\\_construction.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_construction.py) - [tests/test\\_plugins.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_plugins.py) - [tests/test\\_serialize.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py) - [tests/test\\_type\\_adapter.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_type_adapter.py) - [tests/test\\_validate\\_call.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validate_call.py) - [tests/test\\_validators.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py)  Validators in Pydantic are powerful tools for customizing validation logic beyond simple type checking. They allow you to validate and transform data during model creation or when field values change, ensuring data meets specific requirements, enforcing business rules, and modifying values as needed. For information about serializers, which handle converting data out of Pydantic models, see [Serializers](pydantic/pydantic/4.2-serializers.md).",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validators"
      ],
      "heading_text": "Validators",
      "token_count": 661,
      "char_count": 2351,
      "start_char": 0,
      "end_char": 2351,
      "semantic_score": 0.38119029998779297,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7297872340425532,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:07.108097",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Validators",
      "chunk_hash": "e2fe10fcd4c4b195",
      "content_digest": "e2fe10fcd4c4b195",
      "chunk_length": 2351,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test",
          "validate",
          "validators",
          "call",
          "serializers",
          "type",
          "internal",
          "functional",
          "plugin",
          "adapter",
          "model",
          "data",
          "decorators"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 54,
            "weight": 0.193548
          },
          {
            "term": "https",
            "tf": 16,
            "weight": 0.057348
          },
          {
            "term": "github",
            "tf": 16,
            "weight": 0.057348
          },
          {
            "term": "com",
            "tf": 16,
            "weight": 0.057348
          },
          {
            "term": "blob",
            "tf": 16,
            "weight": 0.057348
          },
          {
            "term": "76ef0b08",
            "tf": 16,
            "weight": 0.057348
          },
          {
            "term": "tests",
            "tf": 14,
            "weight": 0.050179
          },
          {
            "term": "test",
            "tf": 14,
            "weight": 0.050179
          },
          {
            "term": "validate",
            "tf": 7,
            "weight": 0.02509
          },
          {
            "term": "validators",
            "tf": 6,
            "weight": 0.021505
          },
          {
            "term": "call",
            "tf": 6,
            "weight": 0.021505
          },
          {
            "term": "serializers",
            "tf": 5,
            "weight": 0.017921
          },
          {
            "term": "type",
            "tf": 5,
            "weight": 0.017921
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.014337
          },
          {
            "term": "functional",
            "tf": 4,
            "weight": 0.014337
          },
          {
            "term": "plugin",
            "tf": 4,
            "weight": 0.014337
          },
          {
            "term": "adapter",
            "tf": 4,
            "weight": 0.014337
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.010753
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.010753
          },
          {
            "term": "decorators",
            "tf": 2,
            "weight": 0.007168
          }
        ],
        "unique_terms": 71,
        "total_terms": 279
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Validators",
        "blob",
        "com",
        "github",
        "https",
        "pydantic",
        "test",
        "tests",
        "validate",
        "validators"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.38119029998779297,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7297872340425532,
      "overall": 0.670325844676782
    }
  },
  {
    "text": "### On this page  - [Validators](#validators.md) - [Validation Pipeline](#validation-pipeline.md) - [Field Validators](#field-validators.md) - [Basic Usage](#basic-usage.md) - [Validator Modes](#validator-modes.md) - [Multi-field Validators](#multi-field-validators.md) - [Wildcard Validators](#wildcard-validators.md) - [Validator Information](#validator-information.md) - [Model Validators](#model-validators.md) - [Functional Validators](#functional-validators.md) - [Types of Functional Validators](#types-of-functional-validators.md) - [Examples](#examples.md) - [Root Validators (Deprecated)](#root-validators-deprecated.md) - [Validator Inheritance](#validator-inheritance.md) - [Advanced Usage](#advanced-usage.md) - [Validating Collections](#validating-collections.md) - [Validation on Assignment](#validation-on-assignment.md) - [Validators with Default Values](#validators-with-default-values.md) - [Core Internals](#core-internals.md) - [Combining Validators with Constrained Types](#combining-validators-with-constrained-types.md) - [Best Practices](#best-practices.md)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0021",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 259,
      "char_count": 1082,
      "start_char": 0,
      "end_char": 1082,
      "semantic_score": 0.4187224507331848,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6845945945945946,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:02:07.113539",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "3d3588f80c491b9a",
      "content_digest": "3d3588f80c491b9a",
      "chunk_length": 1082,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validators",
          "validator",
          "validation",
          "field",
          "usage",
          "functional",
          "types",
          "with",
          "pipeline",
          "basic",
          "modes",
          "multi",
          "wildcard",
          "information",
          "model",
          "examples",
          "root",
          "deprecated",
          "inheritance",
          "advanced"
        ],
        "term_weights": [
          {
            "term": "validators",
            "tf": 20,
            "weight": 0.204082
          },
          {
            "term": "validator",
            "tf": 6,
            "weight": 0.061224
          },
          {
            "term": "validation",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "field",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "usage",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "functional",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "types",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "pipeline",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "basic",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "modes",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "multi",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "wildcard",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "information",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "root",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "deprecated",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "inheritance",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.020408
          }
        ],
        "unique_terms": 33,
        "total_terms": 98
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "basic",
        "field",
        "functional",
        "pipeline",
        "types",
        "usage",
        "validation",
        "validator",
        "validators",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.4187224507331848,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6845945945945946,
      "overall": 0.6677723484425931
    }
  }
]