[
  {
    "text": "## Validation Pipeline\n\nThe Pydantic validation process follows a structured pipeline to transform raw input data into validated model instances:\n\n```\n```\n\nSources:\n\n- [tests/test\\_validators.py312-384](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L312-L384)\n- [tests/test\\_validators.py192-215](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L192-L215)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validation Pipeline"
      ],
      "heading_text": "Validation Pipeline",
      "token_count": 108,
      "char_count": 413,
      "start_char": 4763,
      "end_char": 5176,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5455555555555556,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.642452",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Validation Pipeline",
      "chunk_hash": "f3ef9c8074e00ada",
      "content_digest": "f3ef9c8074e00ada",
      "chunk_length": 413,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "tests",
          "test",
          "validators",
          "validation",
          "pipeline",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "the",
          "process",
          "follows",
          "structured",
          "transform",
          "raw",
          "input",
          "data",
          "into"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.096154
          },
          {
            "term": "tests",
            "tf": 4,
            "weight": 0.076923
          },
          {
            "term": "test",
            "tf": 4,
            "weight": 0.076923
          },
          {
            "term": "validators",
            "tf": 4,
            "weight": 0.076923
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "pipeline",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "follows",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "structured",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "transform",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "raw",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.019231
          }
        ],
        "unique_terms": 32,
        "total_terms": 52
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Validation Pipeline",
        "blob",
        "com",
        "github",
        "https",
        "pipeline",
        "pydantic",
        "test",
        "tests",
        "validation",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5455555555555556,
      "overall": 0.6485185185185185
    }
  },
  {
    "text": "### Validator Modes\n\nField validators can operate in different modes that determine when they run in the validation pipeline:\n\n- `mode='before'`: Runs before type coercion, useful for custom parsing or transforming raw input data\n- `mode='after'`: Runs after type coercion (default), for validating properly typed values\n- `mode='plain'`: Similar to 'after' but with a simpler function signature\n- `mode='wrap'`: Advanced mode that wraps around standard validation, giving access to both pre- and post-validation values\n\n```\n```\n\nSources:\n\n- [tests/test\\_validators.py313-329](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L313-L329)\n- [pydantic/\\_internal/\\_decorators.py518-552](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_decorators.py#L518-L552)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validator Modes"
      ],
      "heading_text": "Validator Modes",
      "token_count": 200,
      "char_count": 806,
      "start_char": 5687,
      "end_char": 6493,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5381481481481482,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.644509",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Validator Modes",
      "chunk_hash": "c98a29926a297ea0",
      "content_digest": "c98a29926a297ea0",
      "chunk_length": 806,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "mode",
          "validators",
          "validation",
          "after",
          "modes",
          "that",
          "before",
          "runs",
          "type",
          "coercion",
          "for",
          "values",
          "tests",
          "test",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.058252
          },
          {
            "term": "mode",
            "tf": 5,
            "weight": 0.048544
          },
          {
            "term": "validators",
            "tf": 3,
            "weight": 0.029126
          },
          {
            "term": "validation",
            "tf": 3,
            "weight": 0.029126
          },
          {
            "term": "after",
            "tf": 3,
            "weight": 0.029126
          },
          {
            "term": "modes",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "that",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "before",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "runs",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "coercion",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "values",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.019417
          }
        ],
        "unique_terms": 71,
        "total_terms": 103
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Validator Modes",
        "after",
        "before",
        "mode",
        "modes",
        "pydantic",
        "runs",
        "that",
        "type",
        "validation",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5381481481481482,
      "overall": 0.6793827160493827
    }
  },
  {
    "text": "### Multi-field Validators\n\nValidators can be applied to multiple fields at once:\n\n```\n```\n\nThe `info` parameter provides context about the current validation, including the field being validated and model data.\n\nSources:\n\n- [tests/test\\_validators.py486-518](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L486-L518)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Multi-field Validators"
      ],
      "heading_text": "Multi-field Validators",
      "token_count": 81,
      "char_count": 346,
      "start_char": 6495,
      "end_char": 6841,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5547058823529412,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.644509",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Multi-field Validators",
      "chunk_hash": "c26cd7bb0a1c16de",
      "content_digest": "c26cd7bb0a1c16de",
      "chunk_length": 346,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validators",
          "the",
          "field",
          "tests",
          "test",
          "pydantic",
          "multi",
          "can",
          "applied",
          "multiple",
          "fields",
          "once",
          "info",
          "parameter",
          "provides",
          "context",
          "about",
          "current",
          "validation",
          "including"
        ],
        "term_weights": [
          {
            "term": "validators",
            "tf": 4,
            "weight": 0.090909
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.068182
          },
          {
            "term": "field",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.045455
          },
          {
            "term": "multi",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "applied",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "fields",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "once",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "info",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "parameter",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "context",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "about",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "current",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.022727
          },
          {
            "term": "including",
            "tf": 1,
            "weight": 0.022727
          }
        ],
        "unique_terms": 35,
        "total_terms": 44
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Multi-field Validators",
        "applied",
        "can",
        "field",
        "multi",
        "multiple",
        "pydantic",
        "test",
        "tests",
        "the",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5547058823529412,
      "overall": 0.6849019607843138
    }
  },
  {
    "text": "## Model Validators\n\nModel validators validate entire models, enabling validation logic that depends on multiple fields:\n\n```\n```\n\nModel validators can run in three modes:\n\n- `mode='before'`: Runs before field validation, useful for pre-processing raw input data\n- `mode='after'`: Runs after field validation (default), for validating the model as a whole\n- `mode='wrap'`: Wraps the validation process, giving full control over the validation pipeline\n\nSources:\n\n- [pydantic/\\_internal/\\_decorators.py141-143](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_decorators.py#L141-L143)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Validators"
      ],
      "heading_text": "Model Validators",
      "token_count": 143,
      "char_count": 605,
      "start_char": 7560,
      "end_char": 8165,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5138805970149254,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.645513",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Model Validators",
      "chunk_hash": "8a14582d18efd23b",
      "content_digest": "8a14582d18efd23b",
      "chunk_length": 605,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validation",
          "model",
          "pydantic",
          "validators",
          "mode",
          "the",
          "before",
          "runs",
          "field",
          "for",
          "after",
          "internal",
          "decorators",
          "validate",
          "entire",
          "models",
          "enabling",
          "logic",
          "that",
          "depends"
        ],
        "term_weights": [
          {
            "term": "validation",
            "tf": 5,
            "weight": 0.065789
          },
          {
            "term": "model",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "validators",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "mode",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "before",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "runs",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "field",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "after",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "decorators",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "validate",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "entire",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "enabling",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "depends",
            "tf": 1,
            "weight": 0.013158
          }
        ],
        "unique_terms": 53,
        "total_terms": 76
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Validators",
        "before",
        "field",
        "for",
        "mode",
        "model",
        "pydantic",
        "runs",
        "the",
        "validation",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5138805970149254,
      "overall": 0.7046268656716417
    }
  },
  {
    "text": "## Functional Validators\n\nFunctional validators are used with `Annotated` types and provide a reusable way to apply validation logic:\n\n```\n```",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Functional Validators"
      ],
      "heading_text": "Functional Validators",
      "token_count": 27,
      "char_count": 142,
      "start_char": 8167,
      "end_char": 8309,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.645513",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Functional Validators",
      "chunk_hash": "6b4cb776eb518ed9",
      "content_digest": "6b4cb776eb518ed9",
      "chunk_length": 142,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "functional",
          "validators",
          "are",
          "used",
          "with",
          "annotated",
          "types",
          "and",
          "provide",
          "reusable",
          "way",
          "apply",
          "validation",
          "logic"
        ],
        "term_weights": [
          {
            "term": "functional",
            "tf": 2,
            "weight": 0.125
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.125
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "annotated",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "reusable",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "way",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "apply",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.0625
          }
        ],
        "unique_terms": 14,
        "total_terms": 16
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Functional Validators",
        "and",
        "annotated",
        "are",
        "functional",
        "provide",
        "reusable",
        "types",
        "used",
        "validators",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.6823809523809524
    }
  },
  {
    "text": "### Types of Functional Validators  - **BeforeValidator**: Runs before standard validation, useful for pre-processing input - **AfterValidator**: Runs after standard validation, for additional checks on typed data - **PlainValidator**: Direct validator without standard validation - **WrapValidator**: Gives full control over the validation process",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Types of Functional Validators"
      ],
      "heading_text": "Types of Functional Validators",
      "token_count": 59,
      "char_count": 348,
      "start_char": 8311,
      "end_char": 8659,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5272093023255814,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.645513",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Types of Functional Validators",
      "chunk_hash": "7e14891128154a55",
      "content_digest": "7e14891128154a55",
      "chunk_length": 348,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validation",
          "standard",
          "runs",
          "for",
          "types",
          "functional",
          "validators",
          "beforevalidator",
          "before",
          "useful",
          "pre",
          "processing",
          "input",
          "aftervalidator",
          "after",
          "additional",
          "checks",
          "typed",
          "data",
          "plainvalidator"
        ],
        "term_weights": [
          {
            "term": "validation",
            "tf": 4,
            "weight": 0.108108
          },
          {
            "term": "standard",
            "tf": 3,
            "weight": 0.081081
          },
          {
            "term": "runs",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "functional",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "validators",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "beforevalidator",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "before",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "useful",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "pre",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "aftervalidator",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "after",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "additional",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "checks",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "typed",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "plainvalidator",
            "tf": 1,
            "weight": 0.027027
          }
        ],
        "unique_terms": 30,
        "total_terms": 37
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Types of Functional Validators",
        "before",
        "beforevalidator",
        "for",
        "functional",
        "runs",
        "standard",
        "types",
        "useful",
        "validation",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5272093023255814,
      "overall": 0.7424031007751938
    }
  },
  {
    "text": "### Examples\n\n```\n```\n\nSources:\n\n- [tests/test\\_validators.py51-166](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L51-L166)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 48,
      "char_count": 154,
      "start_char": 8661,
      "end_char": 8815,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.646900",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "2655ee3f4a4292a5",
      "content_digest": "2655ee3f4a4292a5",
      "chunk_length": 154,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "tests",
          "test",
          "validators",
          "pydantic",
          "examples",
          "sources",
          "py51",
          "166",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "l51",
          "l166"
        ],
        "term_weights": [
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "py51",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "166",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "76ef0b08",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "l51",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "l166",
            "tf": 1,
            "weight": 0.052632
          }
        ],
        "unique_terms": 15,
        "total_terms": 19
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "166",
        "Examples",
        "examples",
        "github",
        "https",
        "py51",
        "pydantic",
        "sources",
        "test",
        "tests",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.649047619047619
    }
  },
  {
    "text": "## Root Validators (Deprecated)\n\nThe `@root_validator` decorator from Pydantic v1 has been deprecated in favor of `@model_validator`. Root validators still work but will emit deprecation warnings.\n\n```\n```\n\nSources:\n\n- [tests/test\\_validators.py1046-1083](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L1046-L1083)\n- [pydantic/\\_internal/\\_decorators.py76-88](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_decorators.py#L76-L88)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Root Validators (Deprecated)"
      ],
      "heading_text": "Root Validators (Deprecated)",
      "token_count": 137,
      "char_count": 483,
      "start_char": 8817,
      "end_char": 9300,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5536363636363636,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.646900",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Root Validators (Deprecated)",
      "chunk_hash": "5591712603b0ae21",
      "content_digest": "5591712603b0ae21",
      "chunk_length": 483,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "validators",
          "root",
          "deprecated",
          "validator",
          "tests",
          "test",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "internal",
          "decorators",
          "the",
          "decorator",
          "from",
          "has",
          "been",
          "favor"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 7,
            "weight": 0.12069
          },
          {
            "term": "validators",
            "tf": 4,
            "weight": 0.068966
          },
          {
            "term": "root",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "deprecated",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "validator",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "decorators",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "decorator",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "has",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "been",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "favor",
            "tf": 1,
            "weight": 0.017241
          }
        ],
        "unique_terms": 36,
        "total_terms": 58
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Root Validators (Deprecated)",
        "com",
        "deprecated",
        "github",
        "https",
        "pydantic",
        "root",
        "test",
        "tests",
        "validator",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5536363636363636,
      "overall": 0.6512121212121212
    }
  },
  {
    "text": "## Validator Inheritance\n\nValidators are inherited when subclassing models. If a subclass defines a validator with the same name as a parent class validator, the subclass validator overrides the parent's.\n\n```\n```\n\nSources:\n\n- [tests/test\\_validators.py820-927](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L820-L927)\n- [tests/test\\_validators.py995-1037](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L995-L1037)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validator Inheritance"
      ],
      "heading_text": "Validator Inheritance",
      "token_count": 123,
      "char_count": 474,
      "start_char": 9302,
      "end_char": 9776,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5170270270270271,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.646900",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Validator Inheritance",
      "chunk_hash": "d01d79704bc96fb0",
      "content_digest": "d01d79704bc96fb0",
      "chunk_length": 474,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validators",
          "validator",
          "tests",
          "test",
          "pydantic",
          "the",
          "subclass",
          "parent",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "inheritance",
          "are",
          "inherited",
          "when",
          "subclassing",
          "models",
          "defines"
        ],
        "term_weights": [
          {
            "term": "validators",
            "tf": 5,
            "weight": 0.084746
          },
          {
            "term": "validator",
            "tf": 4,
            "weight": 0.067797
          },
          {
            "term": "tests",
            "tf": 4,
            "weight": 0.067797
          },
          {
            "term": "test",
            "tf": 4,
            "weight": 0.067797
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.067797
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "subclass",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "parent",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "inheritance",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "inherited",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "subclassing",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "defines",
            "tf": 1,
            "weight": 0.016949
          }
        ],
        "unique_terms": 34,
        "total_terms": 59
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Validator Inheritance",
        "github",
        "https",
        "parent",
        "pydantic",
        "subclass",
        "test",
        "tests",
        "the",
        "validator",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5170270270270271,
      "overall": 0.6390090090090089
    }
  },
  {
    "text": "### Validating Collections\n\nFor validating each item in collections, the classic approach of using `each_item=True` with the `@validator` decorator is deprecated. Instead, use validator functions directly with the collection's item type:\n\n```\n```\n\nSources:\n\n- [tests/test\\_validators.py1086-1126](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L1086-L1126)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validating Collections"
      ],
      "heading_text": "Validating Collections",
      "token_count": 94,
      "char_count": 385,
      "start_char": 9797,
      "end_char": 10182,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.648256",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Validating Collections",
      "chunk_hash": "107b644dc07b3f2d",
      "content_digest": "107b644dc07b3f2d",
      "chunk_length": 385,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "item",
          "the",
          "validating",
          "collections",
          "each",
          "with",
          "validator",
          "tests",
          "test",
          "validators",
          "pydantic",
          "for",
          "classic",
          "approach",
          "using",
          "true",
          "decorator",
          "deprecated",
          "instead",
          "use"
        ],
        "term_weights": [
          {
            "term": "item",
            "tf": 3,
            "weight": 0.06383
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.06383
          },
          {
            "term": "validating",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "each",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "validator",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "classic",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "approach",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "true",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "decorator",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "deprecated",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "instead",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.021277
          }
        ],
        "unique_terms": 34,
        "total_terms": 47
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Validating Collections",
        "collections",
        "each",
        "item",
        "test",
        "tests",
        "the",
        "validating",
        "validator",
        "validators",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.54,
      "overall": 0.68
    }
  },
  {
    "text": "### Validation on Assignment\n\nBy default, validators only run during model initialization. To run them when values are assigned, set `validate_assignment=True` in model config:\n\n```\n```\n\nSources:\n\n- [tests/test\\_validators.py387-483](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L387-L483)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validation on Assignment"
      ],
      "heading_text": "Validation on Assignment",
      "token_count": 78,
      "char_count": 320,
      "start_char": 10184,
      "end_char": 10504,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5589655172413793,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.648256",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Validation on Assignment",
      "chunk_hash": "c571df04aa7e1e49",
      "content_digest": "c571df04aa7e1e49",
      "chunk_length": 320,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validators",
          "assignment",
          "run",
          "model",
          "tests",
          "test",
          "pydantic",
          "validation",
          "default",
          "only",
          "during",
          "initialization",
          "them",
          "when",
          "values",
          "are",
          "assigned",
          "set",
          "validate",
          "true"
        ],
        "term_weights": [
          {
            "term": "validators",
            "tf": 3,
            "weight": 0.076923
          },
          {
            "term": "assignment",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "run",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "default",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "only",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "during",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "initialization",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "them",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "assigned",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "validate",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "true",
            "tf": 1,
            "weight": 0.025641
          }
        ],
        "unique_terms": 31,
        "total_terms": 39
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Validation on Assignment",
        "assignment",
        "default",
        "model",
        "only",
        "pydantic",
        "run",
        "test",
        "tests",
        "validation",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5589655172413793,
      "overall": 0.6863218390804597
    }
  },
  {
    "text": "## Core Internals\n\nInternally, validators are processed by the Pydantic Core engine, which converts them into a validation schema:\n\n```\n```\n\nField validators and model validators are stored in specialized container classes (`DecoratorInfos`) during model creation and used to build the final validation schema.\n\nSources:\n\n- [pydantic/\\_internal/\\_decorators.py412-515](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_decorators.py#L412-L515)\n- [pydantic/\\_internal/\\_core\\_utils.py16-42](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_core_utils.py#L16-L42)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Core Internals"
      ],
      "heading_text": "Core Internals",
      "token_count": 157,
      "char_count": 604,
      "start_char": 10881,
      "end_char": 11485,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5287755102040816,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.649350",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Core Internals",
      "chunk_hash": "504a02fd9dc96adf",
      "content_digest": "504a02fd9dc96adf",
      "chunk_length": 604,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "core",
          "internal",
          "validators",
          "are",
          "the",
          "validation",
          "schema",
          "and",
          "model",
          "decorators",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "utils",
          "internals",
          "internally",
          "processed"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 9,
            "weight": 0.123288
          },
          {
            "term": "core",
            "tf": 4,
            "weight": 0.054795
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.054795
          },
          {
            "term": "validators",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "schema",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "decorators",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "utils",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "internals",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "internally",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "processed",
            "tf": 1,
            "weight": 0.013699
          }
        ],
        "unique_terms": 44,
        "total_terms": 73
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Core Internals",
        "and",
        "are",
        "core",
        "internal",
        "model",
        "pydantic",
        "schema",
        "the",
        "validation",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5287755102040816,
      "overall": 0.6762585034013604
    }
  },
  {
    "text": "## Best Practices\n\n1. Use `@field_validator` for field-specific validation\n2. Use `@model_validator` for validations that involve multiple fields\n3. Use functional validators with `Annotated` for reusable validation logic\n4. Always use `@classmethod` when defining class-based validators\n5. Return the value from validators to pass it to the next validator in the pipeline\n6. Use `ValidationInfo` to access contextual information during validation\n\nBy combining these validator types, you can build complex validation rules while keeping your code modular and maintainable.\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0020",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Best Practices"
      ],
      "heading_text": "Best Practices",
      "token_count": 135,
      "char_count": 673,
      "start_char": 11955,
      "end_char": 12628,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7268421052631578,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.650350",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "Best Practices",
      "chunk_hash": "40fdbc4a4abaadfe",
      "content_digest": "40fdbc4a4abaadfe",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "use",
          "validator",
          "validation",
          "for",
          "validators",
          "the",
          "field",
          "refresh",
          "this",
          "wiki",
          "best",
          "practices",
          "specific",
          "model",
          "validations",
          "that",
          "involve",
          "multiple",
          "fields",
          "functional"
        ],
        "term_weights": [
          {
            "term": "use",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "validator",
            "tf": 4,
            "weight": 0.047619
          },
          {
            "term": "validation",
            "tf": 4,
            "weight": 0.047619
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "validators",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "field",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "wiki",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "best",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "practices",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "specific",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "validations",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "involve",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "fields",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "functional",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 64,
        "total_terms": 84
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Best Practices",
        "field",
        "for",
        "refresh",
        "the",
        "this",
        "use",
        "validation",
        "validator",
        "validators",
        "wiki"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7268421052631578,
      "overall": 0.7756140350877193
    }
  },
  {
    "text": "### On this page  - [Validators](#validators.md) - [Validation Pipeline](#validation-pipeline.md) - [Field Validators](#field-validators.md) - [Basic Usage](#basic-usage.md) - [Validator Modes](#validator-modes.md) - [Multi-field Validators](#multi-field-validators.md) - [Wildcard Validators](#wildcard-validators.md) - [Validator Information](#validator-information.md) - [Model Validators](#model-validators.md) - [Functional Validators](#functional-validators.md) - [Types of Functional Validators](#types-of-functional-validators.md) - [Examples](#examples.md) - [Root Validators (Deprecated)](#root-validators-deprecated.md) - [Validator Inheritance](#validator-inheritance.md) - [Advanced Usage](#advanced-usage.md) - [Validating Collections](#validating-collections.md) - [Validation on Assignment](#validation-on-assignment.md) - [Validators with Default Values](#validators-with-default-values.md) - [Core Internals](#core-internals.md) - [Combining Validators with Constrained Types](#combining-validators-with-constrained-types.md) - [Best Practices](#best-practices.md)",
    "metadata": {
      "chunk_id": "02a7aa70abfd-0021",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "filename": "_pydantic_pydantic_4.1-validators.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 259,
      "char_count": 1082,
      "start_char": 12630,
      "end_char": 13712,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6845945945945946,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.651358",
      "document_id": "02a7aa70abfd",
      "document_name": "_pydantic_pydantic_4.1-validators",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "source_filename": "_pydantic_pydantic_4.1-validators.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.1-validators.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "3d3588f80c491b9a",
      "content_digest": "3d3588f80c491b9a",
      "chunk_length": 1082,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validators",
          "validator",
          "validation",
          "field",
          "usage",
          "functional",
          "types",
          "with",
          "pipeline",
          "basic",
          "modes",
          "multi",
          "wildcard",
          "information",
          "model",
          "examples",
          "root",
          "deprecated",
          "inheritance",
          "advanced"
        ],
        "term_weights": [
          {
            "term": "validators",
            "tf": 20,
            "weight": 0.204082
          },
          {
            "term": "validator",
            "tf": 6,
            "weight": 0.061224
          },
          {
            "term": "validation",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "field",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "usage",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "functional",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "types",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "pipeline",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "basic",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "modes",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "multi",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "wildcard",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "information",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "root",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "deprecated",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "inheritance",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.020408
          }
        ],
        "unique_terms": 33,
        "total_terms": 98
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "basic",
        "field",
        "functional",
        "pipeline",
        "types",
        "usage",
        "validation",
        "validator",
        "validators",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6845945945945946,
      "overall": 0.7281981981981982
    }
  }
]