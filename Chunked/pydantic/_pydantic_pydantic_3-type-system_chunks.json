[
  {
    "text": "## Type System Architecture  Pydantic's type system extends Python's built-in type system to provide additional validation capabilities. It consists of several key components: ``` ``` Sources: [pydantic/types.py1-110](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/types.py#L1-L110), [pydantic/networks.py1-67](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/networks.py#L1-L67)",
    "metadata": {
      "chunk_id": "048285554fb1-0001",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "filename": "_pydantic_pydantic_3-type-system.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Type System Architecture"
      ],
      "heading_text": "Type System Architecture",
      "token_count": 113,
      "char_count": 403,
      "start_char": 5054,
      "end_char": 5457,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5364285714285714,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:12.175496",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 113,
      "document_id": "048285554fb1",
      "document_name": "_pydantic_pydantic_3-type-system",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "source_filename": "_pydantic_pydantic_3-type-system.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "hierarchy_path": "Type System Architecture",
      "chunk_hash": "38b090cdf03df6eb",
      "content_digest": "38b090cdf03df6eb",
      "chunk_length": 403,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "type",
          "system",
          "types",
          "py1",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "networks",
          "architecture",
          "extends",
          "python",
          "built",
          "provide",
          "additional",
          "validation",
          "capabilities",
          "consists"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 9,
            "weight": 0.191489
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.06383
          },
          {
            "term": "system",
            "tf": 3,
            "weight": 0.06383
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "py1",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "networks",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "extends",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "built",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "additional",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "capabilities",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "consists",
            "tf": 1,
            "weight": 0.021277
          }
        ],
        "unique_terms": 27,
        "total_terms": 47
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Type System Architecture",
        "blob",
        "com",
        "github",
        "https",
        "py1",
        "pydantic",
        "system",
        "type",
        "types"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5364285714285714,
      "overall": 0.6788095238095239
    }
  },
  {
    "text": "### Constrained Types and Annotations  Pydantic supports two approaches for adding constraints to types:  1. **Constrained Type Functions**: Functions like `conint()`, `constr()`, etc. 2. **Annotated with Field Constraints**: Using Python's `Annotated` with field constraints ``` ``` Sources: [pydantic/types.py111-146](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/types.py#L111-L146) [pydantic/types.py147-219](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/types.py#L147-L219) [pydantic/types.py661-685](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/types.py#L661-L685)  The two approaches serve the same purpose with different syntax: ```",
    "metadata": {
      "chunk_id": "048285554fb1-0003",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "filename": "_pydantic_pydantic_3-type-system.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Constrained Types and Annotations"
      ],
      "heading_text": "Constrained Types and Annotations",
      "token_count": 194,
      "char_count": 683,
      "start_char": 5484,
      "end_char": 6167,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5370588235294117,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:12.177184",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 194,
      "document_id": "048285554fb1",
      "document_name": "_pydantic_pydantic_3-type-system",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "source_filename": "_pydantic_pydantic_3-type-system.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "hierarchy_path": "Constrained Types and Annotations",
      "chunk_hash": "561dde090eb54c1a",
      "content_digest": "561dde090eb54c1a",
      "chunk_length": 683,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "types",
          "constraints",
          "with",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "constrained",
          "two",
          "approaches",
          "functions",
          "annotated",
          "field",
          "the",
          "and",
          "annotations",
          "supports",
          "for"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 13,
            "weight": 0.151163
          },
          {
            "term": "types",
            "tf": 8,
            "weight": 0.093023
          },
          {
            "term": "constraints",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.034884
          },
          {
            "term": "constrained",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "two",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "approaches",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "functions",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "annotated",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "field",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "annotations",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011628
          }
        ],
        "unique_terms": 46,
        "total_terms": 86
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Constrained Types and Annotations",
        "blob",
        "com",
        "constrained",
        "constraints",
        "github",
        "https",
        "pydantic",
        "types",
        "with"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5370588235294117,
      "overall": 0.6790196078431373
    }
  },
  {
    "text": "## Type Adapter  The `TypeAdapter` class provides a way to use Pydantic's validation system outside of models: ``` ``` Sources: [pydantic/\\_\\_init\\_\\_.py380](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/__init__.py#L380-L380)  The TypeAdapter makes it easy to apply Pydantic validation to standalone types: ``` ```",
    "metadata": {
      "chunk_id": "048285554fb1-0016",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "filename": "_pydantic_pydantic_3-type-system.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Type Adapter"
      ],
      "heading_text": "Type Adapter",
      "token_count": 92,
      "char_count": 329,
      "start_char": 11858,
      "end_char": 12187,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:12.186812",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 92,
      "document_id": "048285554fb1",
      "document_name": "_pydantic_pydantic_3-type-system",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "source_filename": "_pydantic_pydantic_3-type-system.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "hierarchy_path": "Type Adapter",
      "chunk_hash": "1ccfc8181742dd79",
      "content_digest": "1ccfc8181742dd79",
      "chunk_length": 329,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "the",
          "typeadapter",
          "validation",
          "init",
          "l380",
          "type",
          "adapter",
          "class",
          "provides",
          "way",
          "use",
          "system",
          "outside",
          "models",
          "sources",
          "py380",
          "https",
          "github",
          "com"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.162162
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "typeadapter",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "init",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "l380",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "adapter",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "way",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "outside",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "py380",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.027027
          }
        ],
        "unique_terms": 27,
        "total_terms": 37
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Type Adapter",
        "adapter",
        "class",
        "init",
        "l380",
        "provides",
        "pydantic",
        "the",
        "type",
        "typeadapter",
        "validation"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "overall": 0.71
    }
  },
  {
    "text": "## Creating Custom Types  Pydantic allows for creation of custom types by implementing `__get_pydantic_core_schema__` method: ``` ``` Sources: [pydantic/\\_internal/\\_validators.py66-127](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validators.py#L66-L127)",
    "metadata": {
      "chunk_id": "048285554fb1-0018",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "filename": "_pydantic_pydantic_3-type-system.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Creating Custom Types"
      ],
      "heading_text": "Creating Custom Types",
      "token_count": 78,
      "char_count": 281,
      "start_char": 12562,
      "end_char": 12843,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5426315789473684,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:12.188794",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 78,
      "document_id": "048285554fb1",
      "document_name": "_pydantic_pydantic_3-type-system",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "source_filename": "_pydantic_pydantic_3-type-system.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "hierarchy_path": "Creating Custom Types",
      "chunk_hash": "ea56a82279572558",
      "content_digest": "ea56a82279572558",
      "chunk_length": 281,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "custom",
          "types",
          "internal",
          "validators",
          "creating",
          "allows",
          "for",
          "creation",
          "implementing",
          "get",
          "core",
          "schema",
          "method",
          "sources",
          "py66",
          "127",
          "https",
          "github",
          "com"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.181818
          },
          {
            "term": "custom",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "creating",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "allows",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "creation",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "implementing",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "get",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "schema",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "py66",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "127",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.030303
          }
        ],
        "unique_terms": 24,
        "total_terms": 33
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Creating Custom Types",
        "allows",
        "creating",
        "creation",
        "custom",
        "for",
        "implementing",
        "internal",
        "pydantic",
        "types",
        "validators"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5426315789473684,
      "overall": 0.7142105263157893
    }
  },
  {
    "text": "## Internal Validation Process  The type system works with Pydantic's validation engine: ``` ``` Sources: [pydantic/\\_internal/\\_core\\_utils.py43-66](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_core_utils.py#L43-L66) [pydantic/\\_internal/\\_validators.py66-127](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validators.py#L66-L127)",
    "metadata": {
      "chunk_id": "048285554fb1-0019",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "filename": "_pydantic_pydantic_3-type-system.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Internal Validation Process"
      ],
      "heading_text": "Internal Validation Process",
      "token_count": 116,
      "char_count": 382,
      "start_char": 12847,
      "end_char": 13229,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:12.189694",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 116,
      "document_id": "048285554fb1",
      "document_name": "_pydantic_pydantic_3-type-system",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "source_filename": "_pydantic_pydantic_3-type-system.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3-type-system.md",
      "hierarchy_path": "Internal Validation Process",
      "chunk_hash": "9e3cf291203ad3c0",
      "content_digest": "9e3cf291203ad3c0",
      "chunk_length": 382,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "internal",
          "validation",
          "core",
          "utils",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "l66",
          "validators",
          "process",
          "the",
          "type",
          "system",
          "works",
          "with",
          "engine",
          "sources"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 9,
            "weight": 0.191489
          },
          {
            "term": "internal",
            "tf": 5,
            "weight": 0.106383
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "core",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "utils",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "l66",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "works",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "engine",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.021277
          }
        ],
        "unique_terms": 25,
        "total_terms": 47
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Internal Validation Process",
        "blob",
        "com",
        "core",
        "github",
        "https",
        "internal",
        "pydantic",
        "utils",
        "validation"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "overall": 0.6849019607843138
    }
  }
]