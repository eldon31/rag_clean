[
  {
    "text": "## What is Pydantic\n\nPydantic is a data validation library for Python that uses Python type hints to validate, parse, and serialize data. It provides runtime type checking and data conversion, ensuring that data conforms to specified types and constraints.\n\nThe library's primary goal is to guarantee that the output data structure precisely conforms to the applied type hints, rather than simply checking input validity. This means Pydantic can coerce input data (e.g., converting string `\"123\"` to integer `123`) while ensuring the resulting instance meets all type requirements.\n\n**Sources:** [pydantic/main.py1-70](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L1-L70) [docs/concepts/models.md1-52](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/concepts/models.md#L1-L52)",
    "metadata": {
      "chunk_id": "4b1b37699e58-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "What is Pydantic"
      ],
      "heading_text": "What is Pydantic",
      "token_count": 190,
      "char_count": 807,
      "start_char": 5785,
      "end_char": 6592,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5009890109890109,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.354505",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "What is Pydantic",
      "chunk_hash": "d40f1d3d2d642151",
      "content_digest": "d40f1d3d2d642151",
      "chunk_length": 807,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "data",
          "type",
          "the",
          "that",
          "and",
          "library",
          "python",
          "hints",
          "checking",
          "ensuring",
          "conforms",
          "input",
          "123",
          "main",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 9,
            "weight": 0.085714
          },
          {
            "term": "data",
            "tf": 6,
            "weight": 0.057143
          },
          {
            "term": "type",
            "tf": 4,
            "weight": 0.038095
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.038095
          },
          {
            "term": "that",
            "tf": 3,
            "weight": 0.028571
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.028571
          },
          {
            "term": "library",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "hints",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "checking",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "ensuring",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "conforms",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "input",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "123",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.019048
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.019048
          }
        ],
        "unique_terms": 65,
        "total_terms": 105
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "What is Pydantic",
        "and",
        "checking",
        "data",
        "hints",
        "library",
        "pydantic",
        "python",
        "that",
        "the",
        "type"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5009890109890109,
      "overall": 0.6669963369963369
    }
  },
  {
    "text": "### Pydantic-Core Integration\n\nPydantic's performance-critical validation and serialization logic is implemented in `pydantic-core`, a separate Rust library. The relationship is strictly versioned:\n\n```\n```\n\nThe version compatibility is enforced at import time:\n\n- **Current Pydantic version:** `2.12.0b1+dev` [pydantic/version.py11](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L11-L11)\n- **Required pydantic-core version:** `2.40.1` [pydantic/version.py22](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L22-L22)\n- **Compatibility check:** `_ensure_pydantic_core_version()` [pydantic/version.py82-98](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L82-L98)\n\n**Sources:** [pydantic/version.py1-114](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L1-L114) [pydantic/\\_internal/\\_generate\\_schema.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py)",
    "metadata": {
      "chunk_id": "4b1b37699e58-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Pydantic-Core Integration"
      ],
      "heading_text": "Pydantic-Core Integration",
      "token_count": 292,
      "char_count": 988,
      "start_char": 8450,
      "end_char": 9438,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5438461538461539,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.355892",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "Pydantic-Core Integration",
      "chunk_hash": "aa7f459a749f5e09",
      "content_digest": "aa7f459a749f5e09",
      "chunk_length": 988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "version",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "core",
          "the",
          "compatibility",
          "l11",
          "l22",
          "internal",
          "generate",
          "schema",
          "integration",
          "performance",
          "critical",
          "validation",
          "and"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 26,
            "weight": 0.230088
          },
          {
            "term": "version",
            "tf": 12,
            "weight": 0.106195
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.044248
          },
          {
            "term": "github",
            "tf": 5,
            "weight": 0.044248
          },
          {
            "term": "com",
            "tf": 5,
            "weight": 0.044248
          },
          {
            "term": "blob",
            "tf": 5,
            "weight": 0.044248
          },
          {
            "term": "76ef0b08",
            "tf": 5,
            "weight": 0.044248
          },
          {
            "term": "core",
            "tf": 4,
            "weight": 0.035398
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "compatibility",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "l11",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "l22",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "schema",
            "tf": 2,
            "weight": 0.017699
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.00885
          },
          {
            "term": "performance",
            "tf": 1,
            "weight": 0.00885
          },
          {
            "term": "critical",
            "tf": 1,
            "weight": 0.00885
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.00885
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.00885
          }
        ],
        "unique_terms": 47,
        "total_terms": 113
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Pydantic-Core Integration",
        "blob",
        "com",
        "compatibility",
        "core",
        "github",
        "https",
        "pydantic",
        "the",
        "version"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5438461538461539,
      "overall": 0.6479487179487179
    }
  },
  {
    "text": "### Validation Pipeline\n\nThe validation process transforms raw input data into validated model instances through multiple stages:\n\n```\n```\n\nKey validation entry points:\n\n- `BaseModel.__init__(self, **data)` [pydantic/main.py240-257](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L240-L257)\n- `BaseModel.model_validate(cls, obj)` [pydantic/main.py653-699](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L653-L699)\n- `BaseModel.model_validate_json(cls, json_data)` [pydantic/main.py702-743](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L702-L743)\n- `TypeAdapter.validate_python(obj)` and `TypeAdapter.validate_json(json_data)`\n\nThe actual validation is delegated to `SchemaValidator` from pydantic-core:\n\n- Stored in `cls.__pydantic_validator__` [pydantic/main.py197-198](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L197-L198)\n- Called via `validate_python()`, `validate_json()`, or `validate_strings()` methods\n\n**Sources:** [pydantic/main.py240-781](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L240-L781) [docs/concepts/validators.md1-50](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/concepts/validators.md#L1-L50)",
    "metadata": {
      "chunk_id": "4b1b37699e58-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validation Pipeline"
      ],
      "heading_text": "Validation Pipeline",
      "token_count": 361,
      "char_count": 1239,
      "start_char": 9459,
      "end_char": 10698,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.561425,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.356506",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "Validation Pipeline",
      "chunk_hash": "9403048f2020253a",
      "content_digest": "9403048f2020253a",
      "chunk_length": 1239,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "main",
          "validate",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "json",
          "validation",
          "data",
          "model",
          "basemodel",
          "cls",
          "the",
          "py240",
          "l240",
          "obj",
          "typeadapter",
          "python"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 24,
            "weight": 0.151899
          },
          {
            "term": "main",
            "tf": 10,
            "weight": 0.063291
          },
          {
            "term": "validate",
            "tf": 7,
            "weight": 0.044304
          },
          {
            "term": "https",
            "tf": 6,
            "weight": 0.037975
          },
          {
            "term": "github",
            "tf": 6,
            "weight": 0.037975
          },
          {
            "term": "com",
            "tf": 6,
            "weight": 0.037975
          },
          {
            "term": "blob",
            "tf": 6,
            "weight": 0.037975
          },
          {
            "term": "76ef0b08",
            "tf": 6,
            "weight": 0.037975
          },
          {
            "term": "json",
            "tf": 5,
            "weight": 0.031646
          },
          {
            "term": "validation",
            "tf": 4,
            "weight": 0.025316
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.025316
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.018987
          },
          {
            "term": "basemodel",
            "tf": 3,
            "weight": 0.018987
          },
          {
            "term": "cls",
            "tf": 3,
            "weight": 0.018987
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.012658
          },
          {
            "term": "py240",
            "tf": 2,
            "weight": 0.012658
          },
          {
            "term": "l240",
            "tf": 2,
            "weight": 0.012658
          },
          {
            "term": "obj",
            "tf": 2,
            "weight": 0.012658
          },
          {
            "term": "typeadapter",
            "tf": 2,
            "weight": 0.012658
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.012658
          }
        ],
        "unique_terms": 70,
        "total_terms": 158
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Validation Pipeline",
        "blob",
        "com",
        "github",
        "https",
        "json",
        "main",
        "pydantic",
        "validate",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.561425,
      "overall": 0.6538083333333332
    }
  },
  {
    "text": "### Serialization Pipeline\n\nSerialization converts validated model instances into dictionaries or JSON strings:\n\n```\n```\n\nKey serialization methods:\n\n- `model_dump(mode='python'|'json')` [pydantic/main.py418-474](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L418-L474)\n- `model_dump_json()` [pydantic/main.py476-534](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L476-L534)\n\nThe serialization is handled by `SchemaSerializer` from pydantic-core:\n\n- Stored in `cls.__pydantic_serializer__` [pydantic/main.py194-195](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L194-L195)\n- Called via `to_python()` or `to_json()` methods\n\n**Sources:** [pydantic/main.py418-534](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L418-L534) [docs/concepts/serialization.md1-50](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/concepts/serialization.md#L1-L50)",
    "metadata": {
      "chunk_id": "4b1b37699e58-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Serialization Pipeline"
      ],
      "heading_text": "Serialization Pipeline",
      "token_count": 277,
      "char_count": 934,
      "start_char": 10700,
      "end_char": 11634,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.538936170212766,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.356914",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "Serialization Pipeline",
      "chunk_hash": "35d391f589eb2f40",
      "content_digest": "35d391f589eb2f40",
      "chunk_length": 934,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "main",
          "serialization",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "json",
          "model",
          "methods",
          "dump",
          "python",
          "py418",
          "l418",
          "534",
          "l534",
          "docs",
          "concepts",
          "pipeline"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 20,
            "weight": 0.175439
          },
          {
            "term": "main",
            "tf": 8,
            "weight": 0.070175
          },
          {
            "term": "serialization",
            "tf": 6,
            "weight": 0.052632
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.04386
          },
          {
            "term": "github",
            "tf": 5,
            "weight": 0.04386
          },
          {
            "term": "com",
            "tf": 5,
            "weight": 0.04386
          },
          {
            "term": "blob",
            "tf": 5,
            "weight": 0.04386
          },
          {
            "term": "76ef0b08",
            "tf": 5,
            "weight": 0.04386
          },
          {
            "term": "json",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "methods",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "dump",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "py418",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "l418",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "534",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "l534",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "docs",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "concepts",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.008772
          }
        ],
        "unique_terms": 49,
        "total_terms": 114
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Serialization Pipeline",
        "blob",
        "com",
        "github",
        "https",
        "json",
        "main",
        "model",
        "pydantic",
        "serialization"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.538936170212766,
      "overall": 0.6463120567375886
    }
  },
  {
    "text": "### Schema Generation Flow\n\nSchema generation is a two-stage process: first generating CoreSchema for validation, then optionally generating JSON Schema for documentation:\n\n```\n```\n\nThe schema generation process:\n\n1. **Type Analysis:** Python type annotations are analyzed using `GenerateSchema` class [pydantic/\\_internal/\\_generate\\_schema.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py)\n2. **CoreSchema Creation:** Types are converted to CoreSchema format understood by pydantic-core\n3. **Validator/Serializer Creation:** CoreSchema is used to build `SchemaValidator` and `SchemaSerializer` instances\n4. **JSON Schema Generation:** Optionally, CoreSchema is converted to JSON Schema for API documentation\n\n**Sources:** [pydantic/\\_internal/\\_generate\\_schema.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py) [pydantic/json\\_schema.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/json_schema.py) [docs/concepts/json\\_schema.md1-50](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/concepts/json_schema.md#L1-L50)",
    "metadata": {
      "chunk_id": "4b1b37699e58-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Schema Generation Flow"
      ],
      "heading_text": "Schema Generation Flow",
      "token_count": 279,
      "char_count": 1130,
      "start_char": 11636,
      "end_char": 12766,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5021951219512195,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.357322",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "Schema Generation Flow",
      "chunk_hash": "719ccc073c33ecb6",
      "content_digest": "719ccc073c33ecb6",
      "chunk_length": 1130,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "json",
          "coreschema",
          "generation",
          "internal",
          "generate",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "for",
          "process",
          "generating",
          "optionally",
          "documentation",
          "type",
          "are",
          "creation"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 15,
            "weight": 0.119048
          },
          {
            "term": "schema",
            "tf": 14,
            "weight": 0.111111
          },
          {
            "term": "json",
            "tf": 7,
            "weight": 0.055556
          },
          {
            "term": "coreschema",
            "tf": 5,
            "weight": 0.039683
          },
          {
            "term": "generation",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "generate",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "github",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "blob",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "76ef0b08",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "generating",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "optionally",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "creation",
            "tf": 2,
            "weight": 0.015873
          }
        ],
        "unique_terms": 53,
        "total_terms": 126
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Schema Generation Flow",
        "com",
        "coreschema",
        "generate",
        "generation",
        "github",
        "https",
        "internal",
        "json",
        "pydantic",
        "schema"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5021951219512195,
      "overall": 0.6673983739837398
    }
  },
  {
    "text": "## Field and Configuration System",
    "metadata": {
      "chunk_id": "4b1b37699e58-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Field and Configuration System"
      ],
      "heading_text": "Field and Configuration System",
      "token_count": 5,
      "char_count": 33,
      "start_char": 12768,
      "end_char": 12801,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.357391",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "Field and Configuration System",
      "chunk_hash": "2a2a4883c821a3e6",
      "content_digest": "2a2a4883c821a3e6",
      "chunk_length": 33,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "field",
          "and",
          "configuration",
          "system"
        ],
        "term_weights": [
          {
            "term": "field",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.25
          }
        ],
        "unique_terms": 4,
        "total_terms": 4
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Field and Configuration System",
        "and",
        "configuration",
        "field",
        "system"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "## Model Lifecycle\n\nThe lifecycle of a Pydantic model class from definition to usage:\n\n```\n```\n\nKey lifecycle steps:\n\n1. **Metaclass invocation:** `ModelMetaclass.__new__()` [pydantic/\\_internal/\\_model\\_construction.py80-276](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L80-L276)\n2. **Namespace inspection:** `inspect_namespace()` identifies fields vs class vars [pydantic/\\_internal/\\_model\\_construction.py520-642](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L520-L642)\n3. **Field collection:** `set_model_fields()` creates `FieldInfo` instances [pydantic/\\_internal/\\_model\\_construction.py299-331](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L299-L331)\n4. **Schema generation:** `complete_model_class()` builds validation/serialization schemas [pydantic/\\_internal/\\_model\\_construction.py387-518](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L387-L518)\n5. **Completion:** Model marked as complete in `__pydantic_complete__` [pydantic/main.py167-168](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L167-L168)\n\nModels can be rebuilt after definition using `model_rebuild()` [pydantic/main.py593-650](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L593-L650) if forward references need resolution.\n\n**Sources:** [pydantic/\\_internal/\\_model\\_construction.py79-277](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L79-L277) [pydantic/\\_internal/\\_model\\_construction.py387-518](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L387-L518) [pydantic/main.py593-650](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L593-L650)",
    "metadata": {
      "chunk_id": "4b1b37699e58-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Lifecycle"
      ],
      "heading_text": "Model Lifecycle",
      "token_count": 542,
      "char_count": 1870,
      "start_char": 14563,
      "end_char": 16433,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.964935064935065,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.359390",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "Model Lifecycle",
      "chunk_hash": "8033c82a8fd6bcee",
      "content_digest": "8033c82a8fd6bcee",
      "chunk_length": 1870,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "model",
          "internal",
          "construction",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "main",
          "lifecycle",
          "class",
          "complete",
          "definition",
          "namespace",
          "fields",
          "py387",
          "518",
          "l387",
          "l518"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 38,
            "weight": 0.172727
          },
          {
            "term": "model",
            "tf": 18,
            "weight": 0.081818
          },
          {
            "term": "internal",
            "tf": 12,
            "weight": 0.054545
          },
          {
            "term": "construction",
            "tf": 12,
            "weight": 0.054545
          },
          {
            "term": "https",
            "tf": 9,
            "weight": 0.040909
          },
          {
            "term": "github",
            "tf": 9,
            "weight": 0.040909
          },
          {
            "term": "com",
            "tf": 9,
            "weight": 0.040909
          },
          {
            "term": "blob",
            "tf": 9,
            "weight": 0.040909
          },
          {
            "term": "76ef0b08",
            "tf": 9,
            "weight": 0.040909
          },
          {
            "term": "main",
            "tf": 6,
            "weight": 0.027273
          },
          {
            "term": "lifecycle",
            "tf": 3,
            "weight": 0.013636
          },
          {
            "term": "class",
            "tf": 3,
            "weight": 0.013636
          },
          {
            "term": "complete",
            "tf": 3,
            "weight": 0.013636
          },
          {
            "term": "definition",
            "tf": 2,
            "weight": 0.009091
          },
          {
            "term": "namespace",
            "tf": 2,
            "weight": 0.009091
          },
          {
            "term": "fields",
            "tf": 2,
            "weight": 0.009091
          },
          {
            "term": "py387",
            "tf": 2,
            "weight": 0.009091
          },
          {
            "term": "518",
            "tf": 2,
            "weight": 0.009091
          },
          {
            "term": "l387",
            "tf": 2,
            "weight": 0.009091
          },
          {
            "term": "l518",
            "tf": 2,
            "weight": 0.009091
          }
        ],
        "unique_terms": 82,
        "total_terms": 220
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Model Lifecycle",
        "blob",
        "com",
        "construction",
        "github",
        "https",
        "internal",
        "main",
        "model",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.964935064935065,
      "overall": 0.7883116883116883
    }
  },
  {
    "text": "## Class Attributes Reference  Every `BaseModel` subclass has these key class attributes:  | Attribute                      | Type                           | Description                                                                                                                                 | | ------------------------------ | ------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------- | | `model_config`                 | `ConfigDict`                   | Configuration dictionary [pydantic/main.py153-156](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L153-L156)           | | `__pydantic_core_schema__`     | `CoreSchema`                   | Core validation schema [pydantic/main.py170-171](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L170-L171)             | | `__pydantic_validator__`       | `SchemaValidator`              | Validation engine instance [pydantic/main.py197-198](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L197-L198)         | | `__pydantic_serializer__`      | `SchemaSerializer`             | Serialization engine instance [pydantic/main.py194-195](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L194-L195)      | | `__pydantic_fields__`          | `dict[str, FieldInfo]`         | Field definitions [pydantic/main.py200-203](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L200-L203)                  | | `__pydantic_computed_fields__` | `dict[str, ComputedFieldInfo]` | Computed field definitions [pydantic/main.py208-209](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L208-L209)         | | `__pydantic_decorators__`      | `DecoratorInfos`               | Validator/serializer decorators [pydantic/main.py177-179](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L177-L179)    | | `__pydantic_complete__`        | `bool`                         | Whether model building is complete [pydantic/main.py167-168](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L167-L168) |  **Sources:** [pydantic/main.py118-238](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L118-L238)",
    "metadata": {
      "chunk_id": "4b1b37699e58-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Class Attributes Reference"
      ],
      "heading_text": "Class Attributes Reference",
      "token_count": 569,
      "char_count": 2309,
      "start_char": 16435,
      "end_char": 18744,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6706422018348623,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.360372",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "Class Attributes Reference",
      "chunk_hash": "cf372c8acbc23a66",
      "content_digest": "cf372c8acbc23a66",
      "chunk_length": 2309,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "main",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "class",
          "attributes",
          "model",
          "core",
          "schema",
          "validation",
          "validator",
          "engine",
          "instance",
          "serializer",
          "fields",
          "dict",
          "str"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 43,
            "weight": 0.211823
          },
          {
            "term": "main",
            "tf": 18,
            "weight": 0.08867
          },
          {
            "term": "https",
            "tf": 9,
            "weight": 0.044335
          },
          {
            "term": "github",
            "tf": 9,
            "weight": 0.044335
          },
          {
            "term": "com",
            "tf": 9,
            "weight": 0.044335
          },
          {
            "term": "blob",
            "tf": 9,
            "weight": 0.044335
          },
          {
            "term": "76ef0b08",
            "tf": 9,
            "weight": 0.044335
          },
          {
            "term": "class",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "attributes",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "core",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "schema",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "validator",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "engine",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "instance",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "serializer",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "fields",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "dict",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "str",
            "tf": 2,
            "weight": 0.009852
          }
        ],
        "unique_terms": 86,
        "total_terms": 203
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Class Attributes Reference",
        "attributes",
        "blob",
        "class",
        "com",
        "github",
        "https",
        "main",
        "model",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6706422018348623,
      "overall": 0.756880733944954
    }
  },
  {
    "text": "## Project Structure\n\nThe Pydantic codebase is organized into several key directories:\n\n```\npydantic/\n├── main.py              # BaseModel implementation\n├── fields.py            # FieldInfo and Field() function\n├── config.py            # ConfigDict definition\n├── types.py             # Custom types (URL, Email, etc.)\n├── type_adapter.py      # TypeAdapter implementation\n├── dataclasses.py       # Enhanced dataclass support\n├── json_schema.py       # JSON Schema generation\n├── functional_validators.py    # Validator decorators\n├── functional_serializers.py   # Serializer decorators\n└── _internal/\n    ├── _model_construction.py  # ModelMetaclass\n    ├── _generate_schema.py     # GenerateSchema class\n    ├── _fields.py              # Field collection logic\n    ├── _decorators.py          # Decorator processing\n    ├── _config.py              # ConfigWrapper\n    └── _namespace_utils.py     # Type resolution\n```\n\n**Sources:** [pydantic/main.py1](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L1-L1) [pydantic/fields.py1](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/fields.py#L1-L1) [pydantic/\\_internal/\\_model\\_construction.py1](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L1-L1)",
    "metadata": {
      "chunk_id": "4b1b37699e58-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Project Structure"
      ],
      "heading_text": "Project Structure",
      "token_count": 338,
      "char_count": 1277,
      "start_char": 20147,
      "end_char": 21424,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5102235294117647,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.362562",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "Project Structure",
      "chunk_hash": "d03c6ec4d4e8c5da",
      "content_digest": "d03c6ec4d4e8c5da",
      "chunk_length": 1277,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "fields",
          "main",
          "schema",
          "decorators",
          "internal",
          "model",
          "construction",
          "py1",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "implementation",
          "field",
          "config",
          "types",
          "type",
          "json"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 14,
            "weight": 0.126126
          },
          {
            "term": "fields",
            "tf": 4,
            "weight": 0.036036
          },
          {
            "term": "main",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "schema",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "decorators",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "internal",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "construction",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "py1",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.027027
          },
          {
            "term": "implementation",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "field",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "config",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.018018
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.018018
          }
        ],
        "unique_terms": 64,
        "total_terms": 111
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Project Structure",
        "construction",
        "decorators",
        "fields",
        "https",
        "internal",
        "main",
        "model",
        "py1",
        "pydantic",
        "schema"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5102235294117647,
      "overall": 0.6367411764705883
    }
  },
  {
    "text": "## Performance Considerations\n\nPydantic V2's performance characteristics:\n\n1. **Rust-based validation:** Core validation logic runs in Rust for significant speedup\n2. **Schema caching:** Validators and serializers are cached on the class [pydantic/\\_internal/\\_model\\_construction.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py)\n3. **JSON parsing:** `model_validate_json()` is faster than `model_validate(json.loads())` [docs/concepts/performance.md5-16](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/concepts/performance.md#L5-L16)\n4. **Deferred building:** Models can defer schema generation with `defer_build=True` config\n\n**Sources:** [docs/concepts/performance.md1-50](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/concepts/performance.md#L1-L50) [pydantic/\\_internal/\\_model\\_construction.py247-258](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L247-L258)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "4b1b37699e58-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Performance Considerations"
      ],
      "heading_text": "Performance Considerations",
      "token_count": 283,
      "char_count": 1079,
      "start_char": 22426,
      "end_char": 23505,
      "semantic_score": 0.6,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.5728571428571428,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.363915",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "Performance Considerations",
      "chunk_hash": "3ce2038c5f09d4e7",
      "content_digest": "3ce2038c5f09d4e7",
      "chunk_length": 1079,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "performance",
          "model",
          "internal",
          "construction",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "docs",
          "concepts",
          "json",
          "rust",
          "validation",
          "schema",
          "validate",
          "defer",
          "refresh",
          "this"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 13,
            "weight": 0.102362
          },
          {
            "term": "performance",
            "tf": 6,
            "weight": 0.047244
          },
          {
            "term": "model",
            "tf": 6,
            "weight": 0.047244
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "construction",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "github",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "blob",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "76ef0b08",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "docs",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "concepts",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "json",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "rust",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "schema",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "validate",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "defer",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.015748
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.015748
          }
        ],
        "unique_terms": 68,
        "total_terms": 127
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Performance Considerations",
        "blob",
        "com",
        "construction",
        "github",
        "https",
        "internal",
        "model",
        "performance",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.5728571428571428,
      "overall": 0.7242857142857142
    }
  },
  {
    "text": "### On this page\n\n- [Overview](#overview.md)\n- [What is Pydantic](#what-is-pydantic.md)\n- [Core Architecture](#core-architecture.md)\n- [System Overview](#system-overview.md)\n- [User-Facing APIs](#user-facing-apis.md)\n- [Pydantic-Core Integration](#pydantic-core-integration.md)\n- [Main Workflows](#main-workflows.md)\n- [Validation Pipeline](#validation-pipeline.md)\n- [Serialization Pipeline](#serialization-pipeline.md)\n- [Schema Generation Flow](#schema-generation-flow.md)\n- [Field and Configuration System](#field-and-configuration-system.md)\n- [Field Definition](#field-definition.md)\n- [Configuration Hierarchy](#configuration-hierarchy.md)\n- [Model Lifecycle](#model-lifecycle.md)\n- [Class Attributes Reference](#class-attributes-reference.md)\n- [Instance Attributes Reference](#instance-attributes-reference.md)\n- [Project Structure](#project-structure.md)\n- [Migration from V1](#migration-from-v1.md)\n- [Performance Considerations](#performance-considerations.md)",
    "metadata": {
      "chunk_id": "4b1b37699e58-0019",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "filename": "_pydantic_pydantic.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 240,
      "char_count": 972,
      "start_char": 23507,
      "end_char": 24479,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5004477611940299,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.364350",
      "document_id": "4b1b37699e58",
      "document_name": "_pydantic_pydantic",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic.md",
      "source_filename": "_pydantic_pydantic.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "26f7c583ecc13fff",
      "content_digest": "26f7c583ecc13fff",
      "chunk_length": 972,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "overview",
          "pydantic",
          "core",
          "system",
          "pipeline",
          "field",
          "configuration",
          "attributes",
          "reference",
          "what",
          "architecture",
          "user",
          "facing",
          "apis",
          "integration",
          "main",
          "workflows",
          "validation",
          "serialization",
          "schema"
        ],
        "term_weights": [
          {
            "term": "overview",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "core",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "system",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "pipeline",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "field",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "configuration",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "attributes",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "reference",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "what",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "architecture",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "user",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "facing",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "apis",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "workflows",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "schema",
            "tf": 2,
            "weight": 0.022222
          }
        ],
        "unique_terms": 37,
        "total_terms": 90
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "attributes",
        "configuration",
        "core",
        "field",
        "overview",
        "pipeline",
        "pydantic",
        "reference",
        "system",
        "what"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5004477611940299,
      "overall": 0.6334825870646766
    }
  }
]