[
  {
    "text": "### Creating Pydantic Dataclasses\n\nThe `@pydantic.dataclasses.dataclass` decorator wraps the standard library `dataclasses.dataclass` and adds validation:\n\n```\n```\n\nThe decorator creates a custom `__init__` that validates input using a `__pydantic_validator__` attribute. The actual dataclass creation happens via `dataclasses.dataclass()` after field processing.\n\nSources: [pydantic/dataclasses.py98-250](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/dataclasses.py#L98-L250) [pydantic/\\_internal/\\_dataclasses.py85-190](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_dataclasses.py#L85-L190)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Creating Pydantic Dataclasses"
      ],
      "heading_text": "Creating Pydantic Dataclasses",
      "token_count": 170,
      "char_count": 631,
      "start_char": 5362,
      "end_char": 5993,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5481395348837209,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.717142",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Creating Pydantic Dataclasses",
      "chunk_hash": "14a7ffb9bfa900cf",
      "content_digest": "14a7ffb9bfa900cf",
      "chunk_length": 631,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "dataclasses",
          "the",
          "dataclass",
          "decorator",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "internal",
          "creating",
          "wraps",
          "standard",
          "library",
          "and",
          "adds",
          "validation",
          "creates",
          "custom"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 11,
            "weight": 0.150685
          },
          {
            "term": "dataclasses",
            "tf": 8,
            "weight": 0.109589
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.054795
          },
          {
            "term": "dataclass",
            "tf": 4,
            "weight": 0.054795
          },
          {
            "term": "decorator",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "creating",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "wraps",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "standard",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "library",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "adds",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "creates",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "custom",
            "tf": 1,
            "weight": 0.013699
          }
        ],
        "unique_terms": 43,
        "total_terms": 73
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Creating Pydantic Dataclasses",
        "blob",
        "com",
        "dataclass",
        "dataclasses",
        "decorator",
        "github",
        "https",
        "pydantic",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5481395348837209,
      "overall": 0.6160465116279069
    }
  },
  {
    "text": "### Configuration Options  Dataclass configuration is provided via the `config` parameter, which accepts a `ConfigDict`:  | Configuration             | Description                                                            | | ------------------------- | ---------------------------------------------------------------------- | | `validate_assignment`     | When `True`, validates field values on assignment after initialization | | `frozen`                  | Creates immutable dataclass instances                                  | | `str_max_length`          | Maximum string length for all string fields                            | | `arbitrary_types_allowed` | Allows arbitrary types that don't have Pydantic validation             |  The `frozen` parameter can be set on both the decorator and in config. The decorator value takes precedence. Sources: [pydantic/dataclasses.py99-221](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/dataclasses.py#L99-L221) [tests/test\\_dataclasses.py108-130](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_dataclasses.py#L108-L130)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Configuration Options"
      ],
      "heading_text": "Configuration Options",
      "token_count": 214,
      "char_count": 1099,
      "start_char": 5995,
      "end_char": 7094,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.717619",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Configuration Options",
      "chunk_hash": "b4a80c334548e19e",
      "content_digest": "b4a80c334548e19e",
      "chunk_length": 1099,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "the",
          "dataclasses",
          "configuration",
          "dataclass",
          "config",
          "parameter",
          "assignment",
          "frozen",
          "length",
          "string",
          "arbitrary",
          "types",
          "decorator",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 7,
            "weight": 0.071429
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "dataclasses",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "configuration",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "dataclass",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "config",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "parameter",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "assignment",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "frozen",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "length",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "string",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "arbitrary",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "decorator",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.020408
          }
        ],
        "unique_terms": 67,
        "total_terms": 98
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Configuration Options",
        "assignment",
        "config",
        "configuration",
        "dataclass",
        "dataclasses",
        "frozen",
        "length",
        "parameter",
        "pydantic",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5,
      "overall": 0.7333333333333333
    }
  },
  {
    "text": "### Converting Standard Dataclasses\n\nExisting standard library dataclasses can be wrapped to add validation without modifying the original class:\n\n```\n```\n\nWhen wrapping a standard dataclass, Pydantic creates a new subclass (not modifying the original) and processes it through the same field collection and schema generation pipeline as regular Pydantic dataclasses.\n\nSources: [pydantic/dataclasses.py194-206](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/dataclasses.py#L194-L206) [tests/test\\_dataclasses.py807-840](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_dataclasses.py#L807-L840)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Converting Standard Dataclasses"
      ],
      "heading_text": "Converting Standard Dataclasses",
      "token_count": 149,
      "char_count": 620,
      "start_char": 7097,
      "end_char": 7717,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5344444444444444,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.718116",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Converting Standard Dataclasses",
      "chunk_hash": "6c5ce19f617404e1",
      "content_digest": "6c5ce19f617404e1",
      "chunk_length": 620,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "dataclasses",
          "standard",
          "the",
          "modifying",
          "original",
          "and",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test",
          "converting",
          "existing",
          "library",
          "can",
          "wrapped",
          "add"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 8,
            "weight": 0.106667
          },
          {
            "term": "dataclasses",
            "tf": 7,
            "weight": 0.093333
          },
          {
            "term": "standard",
            "tf": 3,
            "weight": 0.04
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.04
          },
          {
            "term": "modifying",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "original",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "converting",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "existing",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "library",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "wrapped",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "add",
            "tf": 1,
            "weight": 0.013333
          }
        ],
        "unique_terms": 48,
        "total_terms": 75
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Converting Standard Dataclasses",
        "and",
        "com",
        "dataclasses",
        "github",
        "https",
        "modifying",
        "original",
        "pydantic",
        "standard",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5344444444444444,
      "overall": 0.6448148148148148
    }
  },
  {
    "text": "### Field Collection\n\nPydantic dataclasses collect fields using `collect_dataclass_fields()`, which:\n\n1. Iterates through the dataclass MRO (Method Resolution Order) in reverse\n2. Processes `__dataclass_fields__` from each dataclass in the hierarchy\n3. Evaluates field annotations using the namespace resolver\n4. Creates `FieldInfo` instances for each field\n5. Applies typevars mapping for generic dataclasses\n\nThe process respects both `dataclasses.field()` and `pydantic.Field()` for defining field metadata.\n\nSources: [pydantic/\\_internal/\\_fields.py460-539](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_fields.py#L460-L539) [pydantic/\\_internal/\\_dataclasses.py65-83](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_dataclasses.py#L65-L83)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Field Collection"
      ],
      "heading_text": "Field Collection",
      "token_count": 208,
      "char_count": 792,
      "start_char": 7719,
      "end_char": 8511,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5309090909090909,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.718551",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Field Collection",
      "chunk_hash": "0d7b8c1a12ced9b1",
      "content_digest": "0d7b8c1a12ced9b1",
      "chunk_length": 792,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "field",
          "dataclasses",
          "fields",
          "dataclass",
          "the",
          "internal",
          "for",
          "collect",
          "using",
          "each",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "collection",
          "which",
          "iterates",
          "through"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 10,
            "weight": 0.106383
          },
          {
            "term": "field",
            "tf": 6,
            "weight": 0.06383
          },
          {
            "term": "dataclasses",
            "tf": 5,
            "weight": 0.053191
          },
          {
            "term": "fields",
            "tf": 5,
            "weight": 0.053191
          },
          {
            "term": "dataclass",
            "tf": 4,
            "weight": 0.042553
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.042553
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.042553
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.031915
          },
          {
            "term": "collect",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "each",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "collection",
            "tf": 1,
            "weight": 0.010638
          },
          {
            "term": "which",
            "tf": 1,
            "weight": 0.010638
          },
          {
            "term": "iterates",
            "tf": 1,
            "weight": 0.010638
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.010638
          }
        ],
        "unique_terms": 53,
        "total_terms": 94
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Field Collection",
        "collect",
        "dataclass",
        "dataclasses",
        "field",
        "fields",
        "for",
        "internal",
        "pydantic",
        "the",
        "using"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5309090909090909,
      "overall": 0.6103030303030302
    }
  },
  {
    "text": "#### Post-Init Processing\n\nThe `__post_init__` method is called after validation completes, allowing for derived field computation:\n\n```\n```\n\nSources: [tests/test\\_dataclasses.py689-702](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_dataclasses.py#L689-L702)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Post-Init Processing"
      ],
      "heading_text": "Post-Init Processing",
      "token_count": 71,
      "char_count": 274,
      "start_char": 8883,
      "end_char": 9157,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.575,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.718952",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Post-Init Processing",
      "chunk_hash": "d085269261cd1fef",
      "content_digest": "d085269261cd1fef",
      "chunk_length": 274,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "post",
          "init",
          "tests",
          "test",
          "dataclasses",
          "pydantic",
          "processing",
          "the",
          "method",
          "called",
          "after",
          "validation",
          "completes",
          "allowing",
          "for",
          "derived",
          "field",
          "computation",
          "sources",
          "py689"
        ],
        "term_weights": [
          {
            "term": "post",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "init",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "dataclasses",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "called",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "after",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "completes",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "allowing",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "derived",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "field",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "computation",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "py689",
            "tf": 1,
            "weight": 0.029412
          }
        ],
        "unique_terms": 28,
        "total_terms": 34
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Post-Init Processing",
        "called",
        "dataclasses",
        "init",
        "method",
        "post",
        "processing",
        "pydantic",
        "test",
        "tests",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.575,
      "overall": 0.6583333333333333
    }
  },
  {
    "text": "#### Validate Assignment\n\nWhen `validate_assignment=True`, field assignments after initialization are validated:\n\n```\n```\n\nThe implementation wraps `__setattr__` with validation logic that calls `__pydantic_validator__.validate_assignment()`.\n\nSources: [pydantic/dataclasses.py251-268](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/dataclasses.py#L251-L268) [tests/test\\_dataclasses.py120-149](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_dataclasses.py#L120-L149)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validate Assignment"
      ],
      "heading_text": "Validate Assignment",
      "token_count": 126,
      "char_count": 495,
      "start_char": 9159,
      "end_char": 9654,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5784615384615385,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.719197",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Validate Assignment",
      "chunk_hash": "9ed34db7556764b6",
      "content_digest": "9ed34db7556764b6",
      "chunk_length": 495,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "dataclasses",
          "validate",
          "assignment",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test",
          "when",
          "true",
          "field",
          "assignments",
          "after",
          "initialization",
          "are",
          "validated",
          "the"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 7,
            "weight": 0.12069
          },
          {
            "term": "dataclasses",
            "tf": 4,
            "weight": 0.068966
          },
          {
            "term": "validate",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "assignment",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "true",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "field",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "assignments",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "after",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "initialization",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "validated",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.017241
          }
        ],
        "unique_terms": 38,
        "total_terms": 58
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Validate Assignment",
        "assignment",
        "blob",
        "com",
        "dataclasses",
        "github",
        "https",
        "pydantic",
        "tests",
        "validate"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5784615384615385,
      "overall": 0.6261538461538461
    }
  },
  {
    "text": "## Function Validation\n\nThe `@validate_call` decorator validates function arguments and optionally return values against type annotations.\n\n```\n```",
    "metadata": {
      "chunk_id": "59eee5c3271c-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Function Validation"
      ],
      "heading_text": "Function Validation",
      "token_count": 25,
      "char_count": 147,
      "start_char": 10297,
      "end_char": 10444,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.5566666666666666,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.719669",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Function Validation",
      "chunk_hash": "ea4452ab0abe06fc",
      "content_digest": "ea4452ab0abe06fc",
      "chunk_length": 147,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "function",
          "validation",
          "the",
          "validate",
          "call",
          "decorator",
          "validates",
          "arguments",
          "and",
          "optionally",
          "return",
          "values",
          "against",
          "type",
          "annotations"
        ],
        "term_weights": [
          {
            "term": "function",
            "tf": 2,
            "weight": 0.125
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "validate",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "call",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "decorator",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "arguments",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "optionally",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "return",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "against",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "annotations",
            "tf": 1,
            "weight": 0.0625
          }
        ],
        "unique_terms": 15,
        "total_terms": 16
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Function Validation",
        "and",
        "arguments",
        "call",
        "decorator",
        "function",
        "optionally",
        "the",
        "validate",
        "validates",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.5566666666666666,
      "overall": 0.6855555555555556
    }
  },
  {
    "text": "### The `@validate_call` Decorator\n\nThe decorator creates a `ValidateCallWrapper` that intercepts function calls:\n\n```\n```\n\nThe wrapper validates arguments using `ArgsKwargs` and converts them to match the function signature.\n\nSources: [pydantic/validate\\_call\\_decorator.py57-116](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/validate_call_decorator.py#L57-L116) [pydantic/\\_internal/\\_validate\\_call.py49-90](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validate_call.py#L49-L90)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "The `@validate_call` Decorator"
      ],
      "heading_text": "The `@validate_call` Decorator",
      "token_count": 146,
      "char_count": 522,
      "start_char": 10446,
      "end_char": 10968,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.53375,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.719971",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "The `@validate_call` Decorator",
      "chunk_hash": "3b49c67d200af6f0",
      "content_digest": "3b49c67d200af6f0",
      "chunk_length": 522,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "validate",
          "call",
          "the",
          "decorator",
          "function",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "internal",
          "creates",
          "validatecallwrapper",
          "that",
          "intercepts",
          "calls",
          "wrapper",
          "validates",
          "arguments"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 8,
            "weight": 0.126984
          },
          {
            "term": "validate",
            "tf": 5,
            "weight": 0.079365
          },
          {
            "term": "call",
            "tf": 5,
            "weight": 0.079365
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.063492
          },
          {
            "term": "decorator",
            "tf": 4,
            "weight": 0.063492
          },
          {
            "term": "function",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "creates",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "validatecallwrapper",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "intercepts",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "calls",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "wrapper",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "arguments",
            "tf": 1,
            "weight": 0.015873
          }
        ],
        "unique_terms": 35,
        "total_terms": 63
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "The `@validate_call` Decorator",
        "blob",
        "call",
        "com",
        "decorator",
        "function",
        "github",
        "https",
        "pydantic",
        "the",
        "validate"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.53375,
      "overall": 0.6445833333333333
    }
  },
  {
    "text": "### Function Schema Generation\n\nSchema generation for functions happens in `GenerateSchema.validate_call_schema()`:\n\n1. Extracts function signature via `inspect.signature()`\n2. Processes each parameter to create argument schemas\n3. Handles special parameter types (VAR\\_POSITIONAL, VAR\\_KEYWORD)\n4. Creates an `arguments_schema` for validation\n5. Optionally creates a return schema if `validate_return=True`\n\nThe generated schema validates arguments as an `ArgsKwargs` structure that gets unpacked to call the function.\n\nSources: [pydantic/\\_internal/\\_generate\\_schema.py1547-1651](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L1547-L1651)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Function Schema Generation"
      ],
      "heading_text": "Function Schema Generation",
      "token_count": 159,
      "char_count": 685,
      "start_char": 11976,
      "end_char": 12661,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5384375,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.720969",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Function Schema Generation",
      "chunk_hash": "ce25805ef6aeac95",
      "content_digest": "ce25805ef6aeac95",
      "chunk_length": 685,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "schema",
          "pydantic",
          "function",
          "generation",
          "for",
          "validate",
          "call",
          "signature",
          "parameter",
          "var",
          "creates",
          "arguments",
          "return",
          "the",
          "internal",
          "generate",
          "functions",
          "happens",
          "generateschema",
          "extracts"
        ],
        "term_weights": [
          {
            "term": "schema",
            "tf": 8,
            "weight": 0.103896
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "function",
            "tf": 3,
            "weight": 0.038961
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "validate",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "call",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "signature",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "parameter",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "var",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "creates",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "arguments",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "return",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "functions",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "happens",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "generateschema",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "extracts",
            "tf": 1,
            "weight": 0.012987
          }
        ],
        "unique_terms": 52,
        "total_terms": 77
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Function Schema Generation",
        "call",
        "for",
        "function",
        "generation",
        "parameter",
        "pydantic",
        "schema",
        "signature",
        "validate",
        "var"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5384375,
      "overall": 0.6128125
    }
  },
  {
    "text": "### Configuration\n\nConfiguration is passed via the `config` parameter:\n\n```\n```\n\nThe configuration affects both argument and return value validation.\n\nSources: [pydantic/validate\\_call\\_decorator.py57-116](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/validate_call_decorator.py#L57-L116) [tests/test\\_validate\\_call.py618-641](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validate_call.py#L618-L641)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Configuration"
      ],
      "heading_text": "Configuration",
      "token_count": 116,
      "char_count": 431,
      "start_char": 13156,
      "end_char": 13587,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5378260869565217,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.721479",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Configuration",
      "chunk_hash": "2f580b46d1c19dd6",
      "content_digest": "2f580b46d1c19dd6",
      "chunk_length": 431,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "validate",
          "call",
          "configuration",
          "the",
          "decorator",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test",
          "passed",
          "via",
          "config",
          "parameter",
          "affects",
          "both",
          "argument"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.109091
          },
          {
            "term": "validate",
            "tf": 4,
            "weight": 0.072727
          },
          {
            "term": "call",
            "tf": 4,
            "weight": 0.072727
          },
          {
            "term": "configuration",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "decorator",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "passed",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "via",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "config",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "parameter",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "affects",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "both",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "argument",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 33,
        "total_terms": 55
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Configuration",
        "blob",
        "call",
        "com",
        "configuration",
        "decorator",
        "github",
        "https",
        "pydantic",
        "the",
        "validate"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5378260869565217,
      "overall": 0.6126086956521738
    }
  },
  {
    "text": "### Supported Function Types\n\nThe decorator supports:\n\n- Regular functions\n- Async functions\n- Methods (instance, class, static)\n- Lambda functions\n- `functools.partial` objects\n\nIt does not support:\n\n- Built-in functions (e.g., `breakpoint`)\n- Classes (use on `__init__` or `__new__` instead)\n- Non-callable objects\n\nSources: [pydantic/validate\\_call\\_decorator.py24-95](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/validate_call_decorator.py#L24-L95) [tests/test\\_validate\\_call.py42-97](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validate_call.py#L42-L97)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0017",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Supported Function Types"
      ],
      "heading_text": "Supported Function Types",
      "token_count": 169,
      "char_count": 592,
      "start_char": 13589,
      "end_char": 14181,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5197872340425532,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.721864",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Supported Function Types",
      "chunk_hash": "81f2877514c78d9a",
      "content_digest": "81f2877514c78d9a",
      "chunk_length": 592,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "functions",
          "validate",
          "call",
          "decorator",
          "objects",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test",
          "supported",
          "function",
          "types",
          "the",
          "supports",
          "regular",
          "async"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.085714
          },
          {
            "term": "functions",
            "tf": 4,
            "weight": 0.057143
          },
          {
            "term": "validate",
            "tf": 4,
            "weight": 0.057143
          },
          {
            "term": "call",
            "tf": 4,
            "weight": 0.057143
          },
          {
            "term": "decorator",
            "tf": 3,
            "weight": 0.042857
          },
          {
            "term": "objects",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.028571
          },
          {
            "term": "supported",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "regular",
            "tf": 1,
            "weight": 0.014286
          },
          {
            "term": "async",
            "tf": 1,
            "weight": 0.014286
          }
        ],
        "unique_terms": 46,
        "total_terms": 70
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Supported Function Types",
        "blob",
        "call",
        "com",
        "decorator",
        "functions",
        "github",
        "https",
        "objects",
        "pydantic",
        "validate"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5197872340425532,
      "overall": 0.6732624113475176
    }
  },
  {
    "text": "## RootModel and Computed Fields",
    "metadata": {
      "chunk_id": "59eee5c3271c-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "RootModel and Computed Fields"
      ],
      "heading_text": "RootModel and Computed Fields",
      "token_count": 7,
      "char_count": 32,
      "start_char": 14183,
      "end_char": 14215,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.721956",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "RootModel and Computed Fields",
      "chunk_hash": "52880ee6f71681e0",
      "content_digest": "52880ee6f71681e0",
      "chunk_length": 32,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "rootmodel",
          "and",
          "computed",
          "fields"
        ],
        "term_weights": [
          {
            "term": "rootmodel",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "computed",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "fields",
            "tf": 1,
            "weight": 0.25
          }
        ],
        "unique_terms": 4,
        "total_terms": 4
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "RootModel and Computed Fields",
        "and",
        "computed",
        "fields",
        "rootmodel"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### RootModel\n\nThe `RootModel` class validates a single root-level value rather than multiple fields. It's a `BaseModel` subclass with a single field named `root`.\n\n**RootModel Validation Flow**\n\n```\n```\n\nThe `RootModel` class:\n\n- Sets `__pydantic_root_model__ = True`\n- Has a single field `root: RootModelRootType`\n- Does not support `model_config['extra']`\n- Accepts either positional or keyword arguments in `__init__`\n\nSources: [pydantic/root\\_model.py32-86](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/root_model.py#L32-L86)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0019",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "RootModel"
      ],
      "heading_text": "RootModel",
      "token_count": 148,
      "char_count": 545,
      "start_char": 14217,
      "end_char": 14762,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.722267",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "RootModel",
      "chunk_hash": "f7ffa6dfb8aaceba",
      "content_digest": "f7ffa6dfb8aaceba",
      "chunk_length": 545,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "root",
          "pydantic",
          "rootmodel",
          "model",
          "single",
          "the",
          "class",
          "field",
          "validates",
          "level",
          "value",
          "rather",
          "than",
          "multiple",
          "fields",
          "basemodel",
          "subclass",
          "with",
          "named",
          "validation"
        ],
        "term_weights": [
          {
            "term": "root",
            "tf": 6,
            "weight": 0.092308
          },
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.076923
          },
          {
            "term": "rootmodel",
            "tf": 4,
            "weight": 0.061538
          },
          {
            "term": "model",
            "tf": 4,
            "weight": 0.061538
          },
          {
            "term": "single",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "class",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "field",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "level",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "value",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "rather",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "than",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "fields",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "basemodel",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "subclass",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "named",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.015385
          }
        ],
        "unique_terms": 45,
        "total_terms": 65
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "RootModel",
        "class",
        "field",
        "level",
        "model",
        "pydantic",
        "root",
        "rootmodel",
        "single",
        "the",
        "validates"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.53,
      "overall": 0.6766666666666666
    }
  },
  {
    "text": "#### Creating RootModels\n\n```\n```\n\nThe root type is specified as a generic parameter. The model validates that the input matches the root type.\n\nSources: [pydantic/root\\_model.py32-69](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/root_model.py#L32-L69)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0020",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Creating RootModels"
      ],
      "heading_text": "Creating RootModels",
      "token_count": 73,
      "char_count": 267,
      "start_char": 14764,
      "end_char": 15031,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5323076923076923,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.722426",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Creating RootModels",
      "chunk_hash": "9ae17bf79c22345b",
      "content_digest": "9ae17bf79c22345b",
      "chunk_length": 267,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "root",
          "pydantic",
          "model",
          "type",
          "creating",
          "rootmodels",
          "specified",
          "generic",
          "parameter",
          "validates",
          "that",
          "input",
          "matches",
          "sources",
          "py32",
          "https",
          "github",
          "com",
          "blob"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "root",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "creating",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "rootmodels",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "specified",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "generic",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "parameter",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "matches",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "py32",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 23,
        "total_terms": 35
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Creating RootModels",
        "creating",
        "generic",
        "model",
        "parameter",
        "pydantic",
        "root",
        "rootmodels",
        "specified",
        "the",
        "type"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5323076923076923,
      "overall": 0.6107692307692307
    }
  },
  {
    "text": "### Computed Fields\n\nThe `@computed_field` decorator creates dynamic properties that appear in serialization but are not part of the model's validated fields.\n\n**Computed Field Lifecycle**\n\n```\n```\n\nComputed fields:\n\n- Are evaluated during serialization, not validation\n- Appear in `model_dump()` and `model_dump_json()` output\n- Can be cached with `@cached_property`\n- Support custom serializers via `@field_serializer`\n\nSources: [pydantic/fields.py745-894](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/fields.py#L745-L894)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0022",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Computed Fields"
      ],
      "heading_text": "Computed Fields",
      "token_count": 129,
      "char_count": 539,
      "start_char": 15480,
      "end_char": 16019,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5373684210526316,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.723048",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Computed Fields",
      "chunk_hash": "3bc65ca51f8eff3d",
      "content_digest": "3bc65ca51f8eff3d",
      "chunk_length": 539,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "fields",
          "computed",
          "pydantic",
          "field",
          "model",
          "the",
          "appear",
          "serialization",
          "are",
          "not",
          "dump",
          "cached",
          "decorator",
          "creates",
          "dynamic",
          "properties",
          "that",
          "but",
          "part",
          "validated"
        ],
        "term_weights": [
          {
            "term": "fields",
            "tf": 5,
            "weight": 0.075758
          },
          {
            "term": "computed",
            "tf": 4,
            "weight": 0.060606
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.060606
          },
          {
            "term": "field",
            "tf": 3,
            "weight": 0.045455
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.045455
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "appear",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "not",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "dump",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "cached",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "decorator",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "creates",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "dynamic",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "properties",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "but",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "part",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "validated",
            "tf": 1,
            "weight": 0.015152
          }
        ],
        "unique_terms": 45,
        "total_terms": 66
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Computed Fields",
        "appear",
        "are",
        "computed",
        "field",
        "fields",
        "model",
        "not",
        "pydantic",
        "serialization",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5373684210526316,
      "overall": 0.6791228070175438
    }
  },
  {
    "text": "## Plugin System\n\nPydantic provides a plugin system that allows you to customize validation, serialization, and other behaviors. This is particularly useful for integrating Pydantic with other libraries or adding custom validation logic.\n\n```\n```",
    "metadata": {
      "chunk_id": "59eee5c3271c-0026",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 26,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Plugin System"
      ],
      "heading_text": "Plugin System",
      "token_count": 45,
      "char_count": 246,
      "start_char": 16887,
      "end_char": 17133,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.723700",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Plugin System",
      "chunk_hash": "fb72761940e53b9a",
      "content_digest": "fb72761940e53b9a",
      "chunk_length": 246,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "plugin",
          "system",
          "pydantic",
          "validation",
          "other",
          "provides",
          "that",
          "allows",
          "you",
          "customize",
          "serialization",
          "and",
          "behaviors",
          "this",
          "particularly",
          "useful",
          "for",
          "integrating",
          "with",
          "libraries"
        ],
        "term_weights": [
          {
            "term": "plugin",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "other",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "allows",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "customize",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "serialization",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "behaviors",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "particularly",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "useful",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "integrating",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "libraries",
            "tf": 1,
            "weight": 0.035714
          }
        ],
        "unique_terms": 23,
        "total_terms": 28
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Plugin System",
        "allows",
        "customize",
        "other",
        "plugin",
        "provides",
        "pydantic",
        "system",
        "that",
        "validation",
        "you"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.649047619047619
    }
  },
  {
    "text": "### Validation Handlers\n\nPlugins can provide handlers for different validation methods:\n\n```\n```",
    "metadata": {
      "chunk_id": "59eee5c3271c-0028",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 28,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validation Handlers"
      ],
      "heading_text": "Validation Handlers",
      "token_count": 16,
      "char_count": 96,
      "start_char": 17167,
      "end_char": 17263,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.5207692307692308,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.723851",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Validation Handlers",
      "chunk_hash": "7ae0bd97b07aaac6",
      "content_digest": "7ae0bd97b07aaac6",
      "chunk_length": 96,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validation",
          "handlers",
          "plugins",
          "can",
          "provide",
          "for",
          "different",
          "methods"
        ],
        "term_weights": [
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.2
          },
          {
            "term": "handlers",
            "tf": 2,
            "weight": 0.2
          },
          {
            "term": "plugins",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "different",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.1
          }
        ],
        "unique_terms": 8,
        "total_terms": 10
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Validation Handlers",
        "can",
        "different",
        "for",
        "handlers",
        "methods",
        "plugins",
        "provide",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.5207692307692308,
      "overall": 0.6735897435897437
    }
  },
  {
    "text": "### Using Plugins\n\nPlugins are configured through model config:\n\n```\n```\n\nSources: [pydantic/plugin/\\_\\_init\\_\\_.py38-71](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/plugin/__init__.py#L38-L71) [pydantic/plugin/\\_schema\\_validator.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/plugin/_schema_validator.py)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0029",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 29,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Using Plugins"
      ],
      "heading_text": "Using Plugins",
      "token_count": 103,
      "char_count": 339,
      "start_char": 17265,
      "end_char": 17604,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.724029",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "Using Plugins",
      "chunk_hash": "30ccf1dc967b79a1",
      "content_digest": "30ccf1dc967b79a1",
      "chunk_length": 339,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "plugin",
          "plugins",
          "init",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "schema",
          "validator",
          "using",
          "are",
          "configured",
          "through",
          "model",
          "config",
          "sources",
          "py38",
          "l38"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 8,
            "weight": 0.2
          },
          {
            "term": "plugin",
            "tf": 4,
            "weight": 0.1
          },
          {
            "term": "plugins",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "init",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "schema",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "validator",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "configured",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "config",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "py38",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "l38",
            "tf": 1,
            "weight": 0.025
          }
        ],
        "unique_terms": 21,
        "total_terms": 40
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Using Plugins",
        "blob",
        "com",
        "github",
        "https",
        "init",
        "plugin",
        "plugins",
        "pydantic",
        "schema"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.6157142857142857
    }
  },
  {
    "text": "### FastAPI Integration\n\nFastAPI leverages Pydantic models for request validation and OpenAPI schema generation:\n\n```\n```",
    "metadata": {
      "chunk_id": "59eee5c3271c-0031",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 31,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "FastAPI Integration"
      ],
      "heading_text": "FastAPI Integration",
      "token_count": 25,
      "char_count": 121,
      "start_char": 17747,
      "end_char": 17868,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.724241",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "FastAPI Integration",
      "chunk_hash": "940c72a836752f28",
      "content_digest": "940c72a836752f28",
      "chunk_length": 121,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "fastapi",
          "integration",
          "leverages",
          "pydantic",
          "models",
          "for",
          "request",
          "validation",
          "and",
          "openapi",
          "schema",
          "generation"
        ],
        "term_weights": [
          {
            "term": "fastapi",
            "tf": 2,
            "weight": 0.153846
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "leverages",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "pydantic",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "request",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "openapi",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "schema",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "generation",
            "tf": 1,
            "weight": 0.076923
          }
        ],
        "unique_terms": 12,
        "total_terms": 13
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "FastAPI Integration",
        "and",
        "fastapi",
        "for",
        "integration",
        "leverages",
        "models",
        "openapi",
        "pydantic",
        "request",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.5525,
      "overall": 0.6841666666666667
    }
  },
  {
    "text": "### ORM Integration\n\nPydantic models can work with ORMs using `from_attributes`:\n\n```\n```\n\nThese integrations showcase Pydantic's versatility and how it can be used as a validation layer in various Python applications and frameworks.\n\nSources: [tests/test\\_type\\_adapter.py385-430](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_type_adapter.py#L385-L430) [tests/test\\_validate\\_call.py385-430](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validate_call.py#L385-L430)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "59eee5c3271c-0033",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 33,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "ORM Integration"
      ],
      "heading_text": "ORM Integration",
      "token_count": 152,
      "char_count": 599,
      "start_char": 17948,
      "end_char": 18547,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5560377358490566,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.724618",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "ORM Integration",
      "chunk_hash": "89c1f80f568d86d4",
      "content_digest": "89c1f80f568d86d4",
      "chunk_length": 599,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "tests",
          "test",
          "can",
          "and",
          "type",
          "adapter",
          "py385",
          "430",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "l385",
          "l430",
          "validate",
          "call",
          "refresh",
          "this"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.075
          },
          {
            "term": "tests",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "test",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "adapter",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "py385",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "430",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "l385",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "l430",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "validate",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "call",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.025
          }
        ],
        "unique_terms": 51,
        "total_terms": 80
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "430",
        "ORM Integration",
        "adapter",
        "and",
        "can",
        "https",
        "py385",
        "pydantic",
        "test",
        "tests",
        "type"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5560377358490566,
      "overall": 0.7186792452830187
    }
  },
  {
    "text": "### On this page\n\n- [Advanced Features](#advanced-features.md)\n- [Dataclass Support](#dataclass-support.md)\n- [Creating Pydantic Dataclasses](#creating-pydantic-dataclasses.md)\n- [Configuration Options](#configuration-options.md)\n- [Converting Standard Dataclasses](#converting-standard-dataclasses.md)\n- [Field Collection](#field-collection.md)\n- [Dataclass-Specific Features](#dataclass-specific-features.md)\n- [InitVar Support](#initvar-support.md)\n- [Post-Init Processing](#post-init-processing.md)\n- [Validate Assignment](#validate-assignment.md)\n- [Schema Generation](#schema-generation.md)\n- [Function Validation](#function-validation.md)\n- [The \\`@validate\\_call\\` Decorator](#the-validate_call-decorator.md)\n- [ValidateCallWrapper Implementation](#validatecallwrapper-implementation.md)\n- [Function Schema Generation](#function-schema-generation.md)\n- [Validating Return Values](#validating-return-values.md)\n- [Configuration](#configuration.md)\n- [Supported Function Types](#supported-function-types.md)\n- [RootModel and Computed Fields](#rootmodel-and-computed-fields.md)\n- [RootModel](#rootmodel.md)\n- [Creating RootModels](#creating-rootmodels.md)\n- [Serialization](#serialization.md)\n- [Computed Fields](#computed-fields.md)\n- [Basic Usage](#basic-usage.md)\n- [JSON Schema](#json-schema.md)\n- [Return Type Annotation](#return-type-annotation.md)\n- [Plugin System](#plugin-system.md)\n- [Creating a Plugin](#creating-a-plugin.md)\n- [Validation Handlers](#validation-handlers.md)\n- [Using Plugins](#using-plugins.md)\n- [Integration with Other Libraries](#integration-with-other-libraries.md)\n- [FastAPI Integration](#fastapi-integration.md)\n- [Dataframe Validation](#dataframe-validation.md)\n- [ORM Integration](#orm-integration.md)",
    "metadata": {
      "chunk_id": "59eee5c3271c-0034",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "filename": "_pydantic_pydantic_6-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 34,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 423,
      "char_count": 1743,
      "start_char": 18549,
      "end_char": 20292,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5329869565217391,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.725278",
      "document_id": "59eee5c3271c",
      "document_name": "_pydantic_pydantic_6-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "source_filename": "_pydantic_pydantic_6-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6-advanced-features.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "a598f4094da915f5",
      "content_digest": "a598f4094da915f5",
      "chunk_length": 1743,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "creating",
          "schema",
          "function",
          "validation",
          "integration",
          "features",
          "dataclass",
          "support",
          "dataclasses",
          "configuration",
          "validate",
          "generation",
          "return",
          "rootmodel",
          "computed",
          "fields",
          "plugin",
          "advanced",
          "pydantic",
          "options"
        ],
        "term_weights": [
          {
            "term": "creating",
            "tf": 6,
            "weight": 0.0375
          },
          {
            "term": "schema",
            "tf": 6,
            "weight": 0.0375
          },
          {
            "term": "function",
            "tf": 6,
            "weight": 0.0375
          },
          {
            "term": "validation",
            "tf": 6,
            "weight": 0.0375
          },
          {
            "term": "integration",
            "tf": 6,
            "weight": 0.0375
          },
          {
            "term": "features",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "dataclass",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "support",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "dataclasses",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "configuration",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "validate",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "generation",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "return",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "rootmodel",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "computed",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "fields",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "plugin",
            "tf": 4,
            "weight": 0.025
          },
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.0125
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.0125
          },
          {
            "term": "options",
            "tf": 2,
            "weight": 0.0125
          }
        ],
        "unique_terms": 59,
        "total_terms": 160
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "configuration",
        "creating",
        "dataclass",
        "dataclasses",
        "features",
        "function",
        "integration",
        "schema",
        "support",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5329869565217391,
      "overall": 0.6443289855072464
    }
  }
]