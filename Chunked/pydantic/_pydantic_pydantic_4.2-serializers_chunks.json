[
  {
    "text": "## Overview of the Serialization System  In Pydantic, serialization is the process of converting a model instance into a simplified representation suitable for storage or transmission. While validation transforms input data into model instances, serialization converts model instances back into primitive data types. ``` ``` Sources:  - [tests/test\\_serialize.py1-29](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py#L1-L29) - [pydantic/functional\\_serializers.py1-20](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/functional_serializers.py#L1-L20)",
    "metadata": {
      "chunk_id": "42a7a4660423-0001",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Overview of the Serialization System"
      ],
      "heading_text": "Overview of the Serialization System",
      "token_count": 139,
      "char_count": 588,
      "start_char": 4700,
      "end_char": 5288,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.518,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.175691",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 139,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Overview of the Serialization System",
      "chunk_hash": "ec40794ba4006064",
      "content_digest": "ec40794ba4006064",
      "chunk_length": 588,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "serialization",
          "model",
          "into",
          "the",
          "data",
          "instances",
          "tests",
          "test",
          "serialize",
          "py1",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "functional",
          "serializers",
          "overview",
          "system"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 7,
            "weight": 0.106061
          },
          {
            "term": "serialization",
            "tf": 3,
            "weight": 0.045455
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.045455
          },
          {
            "term": "into",
            "tf": 3,
            "weight": 0.045455
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "instances",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "serialize",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "py1",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "functional",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "serializers",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "overview",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.015152
          }
        ],
        "unique_terms": 40,
        "total_terms": 66
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Overview of the Serialization System",
        "data",
        "instances",
        "into",
        "model",
        "pydantic",
        "serialization",
        "serialize",
        "test",
        "tests",
        "the"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.518,
      "overall": 0.706
    }
  },
  {
    "text": "## Core Serialization Components  Pydantic offers several components for customizing serialization behavior: ``` ``` Sources:  - [pydantic/functional\\_serializers.py18-165](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/functional_serializers.py#L18-L165) - [pydantic/\\_internal/\\_decorators.py90-130](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_decorators.py#L90-L130)",
    "metadata": {
      "chunk_id": "42a7a4660423-0002",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Core Serialization Components"
      ],
      "heading_text": "Core Serialization Components",
      "token_count": 115,
      "char_count": 409,
      "start_char": 5292,
      "end_char": 5701,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5268421052631579,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.176853",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 115,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Core Serialization Components",
      "chunk_hash": "12ba1b7b7d9a50de",
      "content_digest": "12ba1b7b7d9a50de",
      "chunk_length": 409,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "serialization",
          "components",
          "functional",
          "serializers",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "internal",
          "decorators",
          "core",
          "offers",
          "several",
          "for",
          "customizing",
          "behavior",
          "sources",
          "py18"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 9,
            "weight": 0.195652
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "components",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "functional",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "serializers",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "decorators",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "offers",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "several",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "customizing",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "behavior",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "py18",
            "tf": 1,
            "weight": 0.021739
          }
        ],
        "unique_terms": 27,
        "total_terms": 46
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Core Serialization Components",
        "blob",
        "com",
        "components",
        "functional",
        "github",
        "https",
        "pydantic",
        "serialization",
        "serializers"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5268421052631579,
      "overall": 0.6756140350877193
    }
  },
  {
    "text": "## Field Serializers  Field serializers allow you to customize the serialization of individual model fields. They can be applied using the `@field_serializer` decorator. ``` ```",
    "metadata": {
      "chunk_id": "42a7a4660423-0004",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Field Serializers"
      ],
      "heading_text": "Field Serializers",
      "token_count": 33,
      "char_count": 177,
      "start_char": 6892,
      "end_char": 7069,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.178453",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 33,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Field Serializers",
      "chunk_hash": "724c726c666224da",
      "content_digest": "724c726c666224da",
      "chunk_length": 177,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "field",
          "serializers",
          "the",
          "allow",
          "you",
          "customize",
          "serialization",
          "individual",
          "model",
          "fields",
          "they",
          "can",
          "applied",
          "using",
          "serializer",
          "decorator"
        ],
        "term_weights": [
          {
            "term": "field",
            "tf": 3,
            "weight": 0.15
          },
          {
            "term": "serializers",
            "tf": 2,
            "weight": 0.1
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.1
          },
          {
            "term": "allow",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "customize",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "serialization",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "individual",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "fields",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "they",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "applied",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "serializer",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "decorator",
            "tf": 1,
            "weight": 0.05
          }
        ],
        "unique_terms": 16,
        "total_terms": 20
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Field Serializers",
        "allow",
        "customize",
        "field",
        "fields",
        "individual",
        "model",
        "serialization",
        "serializers",
        "the",
        "you"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "overall": 0.714
    }
  },
  {
    "text": "### Field Serializer Signature  Field serializers can have several valid function signatures: ``` ``` The `info` parameter provides context about the serialization process, including the field name and serialization mode. Sources:  - [tests/test\\_serialize.py225-271](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py#L225-L271) - [pydantic/\\_internal/\\_decorators.py90-111](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_decorators.py#L90-L111)",
    "metadata": {
      "chunk_id": "42a7a4660423-0006",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Field Serializer Signature"
      ],
      "heading_text": "Field Serializer Signature",
      "token_count": 124,
      "char_count": 494,
      "start_char": 7980,
      "end_char": 8474,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.183722",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 124,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Field Serializer Signature",
      "chunk_hash": "e2781f42ed1ab691",
      "content_digest": "e2781f42ed1ab691",
      "chunk_length": 494,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "field",
          "the",
          "serialization",
          "tests",
          "test",
          "serialize",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "internal",
          "decorators",
          "serializer",
          "signature",
          "serializers",
          "can",
          "have",
          "several"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.096774
          },
          {
            "term": "field",
            "tf": 3,
            "weight": 0.048387
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.048387
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "serialize",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "decorators",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "serializer",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "signature",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "serializers",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "have",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "several",
            "tf": 1,
            "weight": 0.016129
          }
        ],
        "unique_terms": 42,
        "total_terms": 62
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Field Serializer Signature",
        "com",
        "field",
        "github",
        "https",
        "pydantic",
        "serialization",
        "serialize",
        "test",
        "tests",
        "the"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "overall": 0.71
    }
  },
  {
    "text": "## Functional Serializers  Functional serializers are used with the `Annotated` type to define custom serialization logic for specific types. This allows you to reuse serialization logic across multiple models. ``` ``` Pydantic provides two main types of functional serializers:  1. **PlainSerializer**: Applies a transformation function directly to the value 2. **WrapSerializer**: Provides both the value and a handler function for more complex transformations",
    "metadata": {
      "chunk_id": "42a7a4660423-0007",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Functional Serializers"
      ],
      "heading_text": "Functional Serializers",
      "token_count": 84,
      "char_count": 462,
      "start_char": 8479,
      "end_char": 8941,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5185714285714286,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.186109",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 84,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Functional Serializers",
      "chunk_hash": "3595d53079ca784f",
      "content_digest": "3595d53079ca784f",
      "chunk_length": 462,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "functional",
          "serializers",
          "the",
          "serialization",
          "logic",
          "for",
          "types",
          "provides",
          "function",
          "value",
          "are",
          "used",
          "with",
          "annotated",
          "type",
          "define",
          "custom",
          "specific",
          "this",
          "allows"
        ],
        "term_weights": [
          {
            "term": "functional",
            "tf": 3,
            "weight": 0.057692
          },
          {
            "term": "serializers",
            "tf": 3,
            "weight": 0.057692
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.057692
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "logic",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "provides",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "function",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "value",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "annotated",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "define",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "custom",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "specific",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "allows",
            "tf": 1,
            "weight": 0.019231
          }
        ],
        "unique_terms": 39,
        "total_terms": 52
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Functional Serializers",
        "for",
        "function",
        "functional",
        "logic",
        "provides",
        "serialization",
        "serializers",
        "the",
        "types",
        "value"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5185714285714286,
      "overall": 0.7061904761904761
    }
  },
  {
    "text": "### WrapSerializer ``` ``` The `WrapSerializer` class accepts:  - `func`: The serializer function (which receives both a value and a handler) - `return_type`: The return type of the serializer (optional) - `when_used`: When the serializer should be applied (optional)  Sources:  - [tests/test\\_serialize.py104-129](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py#L104-L129) - [pydantic/functional\\_serializers.py89-247](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/functional_serializers.py#L89-L247)",
    "metadata": {
      "chunk_id": "42a7a4660423-0009",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "WrapSerializer"
      ],
      "heading_text": "WrapSerializer",
      "token_count": 147,
      "char_count": 542,
      "start_char": 9445,
      "end_char": 9987,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5013636363636363,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.191819",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 147,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "WrapSerializer",
      "chunk_hash": "9c42dbaaed8bda72",
      "content_digest": "9c42dbaaed8bda72",
      "chunk_length": 542,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "the",
          "serializer",
          "wrapserializer",
          "return",
          "type",
          "optional",
          "when",
          "tests",
          "test",
          "serialize",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "functional",
          "serializers",
          "class",
          "accepts"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.090909
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.075758
          },
          {
            "term": "serializer",
            "tf": 3,
            "weight": 0.045455
          },
          {
            "term": "wrapserializer",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "return",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "optional",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "when",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "serialize",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "functional",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "serializers",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "accepts",
            "tf": 1,
            "weight": 0.015152
          }
        ],
        "unique_terms": 40,
        "total_terms": 66
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "WrapSerializer",
        "optional",
        "pydantic",
        "return",
        "serializer",
        "test",
        "tests",
        "the",
        "type",
        "when",
        "wrapserializer"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5013636363636363,
      "overall": 0.7004545454545453
    }
  },
  {
    "text": "## Model Serializers  Model serializers allow you to customize the serialization of an entire model. This is useful when you need complete control over the serialization process. ``` ```",
    "metadata": {
      "chunk_id": "42a7a4660423-0010",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Serializers"
      ],
      "heading_text": "Model Serializers",
      "token_count": 33,
      "char_count": 186,
      "start_char": 9991,
      "end_char": 10177,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5279310344827586,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.193069",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 33,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Model Serializers",
      "chunk_hash": "c9e5df5cca77b9ca",
      "content_digest": "c9e5df5cca77b9ca",
      "chunk_length": 186,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "model",
          "serializers",
          "you",
          "the",
          "serialization",
          "allow",
          "customize",
          "entire",
          "this",
          "useful",
          "when",
          "need",
          "complete",
          "control",
          "over",
          "process"
        ],
        "term_weights": [
          {
            "term": "model",
            "tf": 3,
            "weight": 0.136364
          },
          {
            "term": "serializers",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "allow",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "customize",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "entire",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "useful",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "need",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "complete",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "control",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "over",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.045455
          }
        ],
        "unique_terms": 16,
        "total_terms": 22
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Serializers",
        "allow",
        "customize",
        "entire",
        "model",
        "serialization",
        "serializers",
        "the",
        "this",
        "useful",
        "you"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5279310344827586,
      "overall": 0.709310344827586
    }
  },
  {
    "text": "### Using the model\\_serializer Decorator  The `@model_serializer` decorator is used to define custom serialization logic for an entire model: ``` ``` The decorator accepts:  - `mode`: Serialization mode (`\"plain\"` or `\"wrap\"`) - `when_used`: When the serializer should be applied - `return_type`: The return type of the serializer function (optional)  Sources:  - [tests/test\\_serialize.py374-464](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py#L374-L464) - [pydantic/\\_internal/\\_decorators.py113-130](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_decorators.py#L113-L130)",
    "metadata": {
      "chunk_id": "42a7a4660423-0011",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Using the model\\_serializer Decorator"
      ],
      "heading_text": "Using the model\\_serializer Decorator",
      "token_count": 165,
      "char_count": 627,
      "start_char": 10180,
      "end_char": 10807,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5122222222222222,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.195889",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 165,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Using the model\\_serializer Decorator",
      "chunk_hash": "c902c856d5718e9b",
      "content_digest": "c902c856d5718e9b",
      "chunk_length": 627,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "pydantic",
          "serializer",
          "model",
          "decorator",
          "used",
          "serialization",
          "mode",
          "when",
          "return",
          "type",
          "tests",
          "test",
          "serialize",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "internal"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 6,
            "weight": 0.078947
          },
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.078947
          },
          {
            "term": "serializer",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "decorator",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "used",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "mode",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "when",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "return",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "serialize",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.026316
          }
        ],
        "unique_terms": 43,
        "total_terms": 76
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Using the model\\_serializer Decorator",
        "decorator",
        "mode",
        "model",
        "pydantic",
        "return",
        "serialization",
        "serializer",
        "the",
        "used",
        "when"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5122222222222222,
      "overall": 0.704074074074074
    }
  },
  {
    "text": "### Model Serializer Modes  Model serializers can operate in two modes:  1. **Plain mode**: The serializer has complete control over the serialization process    ```    ``` 2. **Wrap mode**: The serializer receives the standard serialized output and can modify it    ```    ``` In wrap mode, the handler function performs the standard serialization, allowing you to modify the result before returning it. Sources:  - [tests/test\\_serialize.py374-422](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py#L374-L422) - [tests/test\\_serialize.py423-464](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py#L423-L464)",
    "metadata": {
      "chunk_id": "42a7a4660423-0012",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Serializer Modes"
      ],
      "heading_text": "Model Serializer Modes",
      "token_count": 157,
      "char_count": 658,
      "start_char": 10811,
      "end_char": 11469,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5069230769230769,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.198579",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 157,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Model Serializer Modes",
      "chunk_hash": "da8d398e658ff538",
      "content_digest": "da8d398e658ff538",
      "chunk_length": 658,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "tests",
          "test",
          "serialize",
          "pydantic",
          "serializer",
          "mode",
          "model",
          "modes",
          "can",
          "serialization",
          "wrap",
          "standard",
          "modify",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "serializers"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 7,
            "weight": 0.084337
          },
          {
            "term": "tests",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "test",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "serialize",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.048193
          },
          {
            "term": "serializer",
            "tf": 3,
            "weight": 0.036145
          },
          {
            "term": "mode",
            "tf": 3,
            "weight": 0.036145
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "modes",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "wrap",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "standard",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "modify",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.024096
          },
          {
            "term": "serializers",
            "tf": 1,
            "weight": 0.012048
          }
        ],
        "unique_terms": 49,
        "total_terms": 83
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Serializer Modes",
        "can",
        "mode",
        "model",
        "modes",
        "pydantic",
        "serialize",
        "serializer",
        "test",
        "tests",
        "the"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5069230769230769,
      "overall": 0.7023076923076923
    }
  },
  {
    "text": "## Serialization Process  The serialization process in Pydantic involves converting model instances to Python dictionaries or JSON strings. This is handled by the `model_dump()` and `model_dump_json()` methods. ``` ```",
    "metadata": {
      "chunk_id": "42a7a4660423-0013",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Serialization Process"
      ],
      "heading_text": "Serialization Process",
      "token_count": 41,
      "char_count": 218,
      "start_char": 11476,
      "end_char": 11694,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5486206896551724,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.199977",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 41,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Serialization Process",
      "chunk_hash": "d4be2362ef68a79c",
      "content_digest": "d4be2362ef68a79c",
      "chunk_length": 218,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "model",
          "serialization",
          "process",
          "the",
          "json",
          "dump",
          "pydantic",
          "involves",
          "converting",
          "instances",
          "python",
          "dictionaries",
          "strings",
          "this",
          "handled",
          "and",
          "methods"
        ],
        "term_weights": [
          {
            "term": "model",
            "tf": 3,
            "weight": 0.125
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "dump",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "pydantic",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "involves",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "converting",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "instances",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "dictionaries",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "strings",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "handled",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.041667
          }
        ],
        "unique_terms": 17,
        "total_terms": 24
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Serialization Process",
        "converting",
        "dump",
        "instances",
        "involves",
        "json",
        "model",
        "process",
        "pydantic",
        "serialization",
        "the"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5486206896551724,
      "overall": 0.7162068965517241
    }
  },
  {
    "text": "### Serialization in TypeAdapter  The `TypeAdapter` class provides similar serialization functionality for arbitrary types:  - `dump_python()`: Serializes a value to a Python object - `dump_json()`: Serializes a value to a JSON string  These methods have similar parameters to the model serialization methods. Sources:  - [pydantic/type\\_adapter.py519-584](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/type_adapter.py#L519-L584)",
    "metadata": {
      "chunk_id": "42a7a4660423-0015",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Serialization in TypeAdapter"
      ],
      "heading_text": "Serialization in TypeAdapter",
      "token_count": 106,
      "char_count": 443,
      "start_char": 12661,
      "end_char": 13104,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5033333333333333,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.204183",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 106,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Serialization in TypeAdapter",
      "chunk_hash": "e6d1e4e94acd9bc4",
      "content_digest": "e6d1e4e94acd9bc4",
      "chunk_length": 443,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "serialization",
          "typeadapter",
          "the",
          "similar",
          "dump",
          "python",
          "serializes",
          "value",
          "json",
          "methods",
          "type",
          "adapter",
          "class",
          "provides",
          "functionality",
          "for",
          "arbitrary",
          "types",
          "object"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.078431
          },
          {
            "term": "serialization",
            "tf": 3,
            "weight": 0.058824
          },
          {
            "term": "typeadapter",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "similar",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "dump",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "serializes",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "value",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "methods",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "adapter",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "functionality",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "arbitrary",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "object",
            "tf": 1,
            "weight": 0.019608
          }
        ],
        "unique_terms": 35,
        "total_terms": 51
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Serialization in TypeAdapter",
        "dump",
        "json",
        "pydantic",
        "python",
        "serialization",
        "serializes",
        "similar",
        "the",
        "typeadapter",
        "value"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5033333333333333,
      "overall": 0.701111111111111
    }
  },
  {
    "text": "### Conditional Serialization  You can conditionally apply serializers based on the serialization mode: ``` ``` In this example, the serializer is only applied when serializing to JSON. Sources:  - [tests/test\\_serialize.py171-182](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py#L171-L182)",
    "metadata": {
      "chunk_id": "42a7a4660423-0018",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Conditional Serialization"
      ],
      "heading_text": "Conditional Serialization",
      "token_count": 74,
      "char_count": 317,
      "start_char": 13534,
      "end_char": 13851,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.206835",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 74,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Conditional Serialization",
      "chunk_hash": "0f1162d1d1bbbc1b",
      "content_digest": "0f1162d1d1bbbc1b",
      "chunk_length": 317,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "serialization",
          "the",
          "tests",
          "test",
          "serialize",
          "pydantic",
          "conditional",
          "you",
          "can",
          "conditionally",
          "apply",
          "serializers",
          "based",
          "mode",
          "this",
          "example",
          "serializer",
          "only",
          "applied",
          "when"
        ],
        "term_weights": [
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "serialize",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "conditional",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "conditionally",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "apply",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "serializers",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "mode",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "serializer",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "only",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "applied",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.026316
          }
        ],
        "unique_terms": 32,
        "total_terms": 38
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Conditional Serialization",
        "can",
        "conditional",
        "conditionally",
        "pydantic",
        "serialization",
        "serialize",
        "test",
        "tests",
        "the",
        "you"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "overall": 0.7200000000000001
    }
  },
  {
    "text": "### Serialization in Dataclasses  Pydantic's dataclasses support the same serialization features as models: ``` ``` Sources:  - [pydantic/dataclasses.py170-180](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/dataclasses.py#L170-L180) - [tests/test\\_dataclasses.py1220-1272](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_dataclasses.py#L1220-L1272)",
    "metadata": {
      "chunk_id": "42a7a4660423-0019",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Serialization in Dataclasses"
      ],
      "heading_text": "Serialization in Dataclasses",
      "token_count": 110,
      "char_count": 376,
      "start_char": 13856,
      "end_char": 14232,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.208001",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 110,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Serialization in Dataclasses",
      "chunk_hash": "3ce1c81672398d12",
      "content_digest": "3ce1c81672398d12",
      "chunk_length": 376,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "dataclasses",
          "serialization",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test",
          "support",
          "the",
          "same",
          "features",
          "models",
          "sources",
          "py170",
          "180",
          "l170",
          "l180"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 7,
            "weight": 0.162791
          },
          {
            "term": "dataclasses",
            "tf": 6,
            "weight": 0.139535
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.046512
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "same",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "features",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "py170",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "180",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "l170",
            "tf": 1,
            "weight": 0.023256
          },
          {
            "term": "l180",
            "tf": 1,
            "weight": 0.023256
          }
        ],
        "unique_terms": 24,
        "total_terms": 43
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Serialization in Dataclasses",
        "blob",
        "com",
        "dataclasses",
        "github",
        "https",
        "pydantic",
        "serialization",
        "test",
        "tests"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "overall": 0.6766666666666667
    }
  },
  {
    "text": "### Root Model Serialization  `RootModel` instances are serialized to their root value rather than a dictionary: ``` ``` Sources:  - [pydantic/root\\_model.py119-146](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/root_model.py#L119-L146)",
    "metadata": {
      "chunk_id": "42a7a4660423-0020",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Root Model Serialization"
      ],
      "heading_text": "Root Model Serialization",
      "token_count": 68,
      "char_count": 250,
      "start_char": 14236,
      "end_char": 14486,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5614285714285714,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.208958",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 68,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Root Model Serialization",
      "chunk_hash": "42b30c0772fd0950",
      "content_digest": "42b30c0772fd0950",
      "chunk_length": 250,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "root",
          "pydantic",
          "model",
          "serialization",
          "rootmodel",
          "instances",
          "are",
          "serialized",
          "their",
          "value",
          "rather",
          "than",
          "dictionary",
          "sources",
          "py119",
          "146",
          "https",
          "github",
          "com",
          "blob"
        ],
        "term_weights": [
          {
            "term": "root",
            "tf": 4,
            "weight": 0.129032
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.129032
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.096774
          },
          {
            "term": "serialization",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "rootmodel",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "instances",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "serialized",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "their",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "value",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "rather",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "than",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "dictionary",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "py119",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "146",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.032258
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.032258
          }
        ],
        "unique_terms": 23,
        "total_terms": 31
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Root Model Serialization",
        "are",
        "instances",
        "model",
        "pydantic",
        "root",
        "rootmodel",
        "serialization",
        "serialized",
        "their",
        "value"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5614285714285714,
      "overall": 0.7204761904761904
    }
  },
  {
    "text": "## Integration with pydantic-core  Pydantic uses `pydantic-core` for the actual serialization logic. The `SchemaSerializer` class from `pydantic-core` handles the serialization process. ``` ``` During model definition, Pydantic generates a serialization schema that incorporates all custom serializers. This schema is then used by `pydantic-core` to perform the actual serialization. Sources:  - [pydantic/\\_internal/\\_schema\\_generation\\_shared.py1-142](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_schema_generation_shared.py#L1-L142) - [pydantic/\\_internal/\\_mock\\_val\\_ser.py1-69](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_mock_val_ser.py#L1-L69)",
    "metadata": {
      "chunk_id": "42a7a4660423-0021",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration with pydantic-core"
      ],
      "heading_text": "Integration with pydantic-core",
      "token_count": 188,
      "char_count": 705,
      "start_char": 14490,
      "end_char": 15195,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5220754716981132,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.210989",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 188,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Integration with pydantic-core",
      "chunk_hash": "af6b0be6b4bc910a",
      "content_digest": "af6b0be6b4bc910a",
      "chunk_length": 705,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "core",
          "the",
          "serialization",
          "schema",
          "internal",
          "actual",
          "generation",
          "shared",
          "py1",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "mock",
          "val",
          "ser",
          "integration",
          "with"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 14,
            "weight": 0.164706
          },
          {
            "term": "core",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "serialization",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "schema",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "actual",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "shared",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "py1",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "mock",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "val",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "ser",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.011765
          }
        ],
        "unique_terms": 45,
        "total_terms": 85
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration with pydantic-core",
        "actual",
        "core",
        "generation",
        "internal",
        "py1",
        "pydantic",
        "schema",
        "serialization",
        "shared",
        "the"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5220754716981132,
      "overall": 0.7073584905660377
    }
  },
  {
    "text": "### Deferred Building and Mocking  Pydantic supports deferred building of serializers. When `defer_build=True` is set in the config, Pydantic creates mock serializers that are replaced with real serializers when needed. This allows for forward references and circular dependencies in models: ``` ``` Sources:  - [pydantic/\\_internal/\\_mock\\_val\\_ser.py70-110](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_mock_val_ser.py#L70-L110) - [pydantic/\\_internal/\\_dataclasses.py128-134](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_dataclasses.py#L128-L134)",
    "metadata": {
      "chunk_id": "42a7a4660423-0022",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Deferred Building and Mocking"
      ],
      "heading_text": "Deferred Building and Mocking",
      "token_count": 161,
      "char_count": 601,
      "start_char": 15200,
      "end_char": 15801,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5325531914893616,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.212911",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 161,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Deferred Building and Mocking",
      "chunk_hash": "a1eef10ba0d3cb96",
      "content_digest": "a1eef10ba0d3cb96",
      "chunk_length": 601,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "internal",
          "serializers",
          "mock",
          "deferred",
          "building",
          "and",
          "when",
          "val",
          "ser",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "dataclasses",
          "mocking",
          "supports",
          "defer",
          "build"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 10,
            "weight": 0.131579
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "serializers",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "mock",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "deferred",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "building",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "when",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "val",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "ser",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "dataclasses",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "mocking",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "defer",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "build",
            "tf": 1,
            "weight": 0.013158
          }
        ],
        "unique_terms": 48,
        "total_terms": 76
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Deferred Building and Mocking",
        "and",
        "building",
        "deferred",
        "internal",
        "mock",
        "pydantic",
        "ser",
        "serializers",
        "val",
        "when"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5325531914893616,
      "overall": 0.7108510638297871
    }
  },
  {
    "text": "## Best Practices for Serializers  1. **Choose the right serializer type**:     - Use field serializers for customizing individual fields    - Use model serializers for complex model-level serialization    - Use functional serializers for reusable serialization logic  2. **Respect the serialization mode**:     - Use the `info.mode` parameter to adjust behavior based on the serialization mode    - Use `when_used` to apply serializers only in specific scenarios  3. **Be mindful of performance**:     - Use plain serializers for simple transformations    - Use wrap serializers when you need to modify the default serialization behavior  4. **Handle None values appropriately**:     - Use `when_used='unless-none'` to skip serialization of None values    - Explicitly handle None values in your serializers to avoid errors  5. **Provide return types**:     - Specify the `return_type` parameter to ensure correct JSON schema generation    - Use type annotations in your serializer functions for better IDE support  Sources:  - [tests/test\\_serialize.py171-197](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py#L171-L197) - [pydantic/functional\\_serializers.py18-52](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/functional_serializers.py#L18-L52)  Dismiss  Refresh this wiki  This wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "42a7a4660423-0023",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Best Practices for Serializers"
      ],
      "heading_text": "Best Practices for Serializers",
      "token_count": 308,
      "char_count": 1388,
      "start_char": 15806,
      "end_char": 17194,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6768720496894411,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.213810",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 308,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "Best Practices for Serializers",
      "chunk_hash": "11903fb68d2b9f83",
      "content_digest": "11903fb68d2b9f83",
      "chunk_length": 1388,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "serializers",
          "use",
          "for",
          "the",
          "serialization",
          "pydantic",
          "none",
          "type",
          "functional",
          "mode",
          "when",
          "values",
          "serializer",
          "model",
          "parameter",
          "behavior",
          "used",
          "handle",
          "your",
          "return"
        ],
        "term_weights": [
          {
            "term": "serializers",
            "tf": 10,
            "weight": 0.060606
          },
          {
            "term": "use",
            "tf": 9,
            "weight": 0.054545
          },
          {
            "term": "for",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "serialization",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.036364
          },
          {
            "term": "none",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "functional",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "mode",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "when",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "values",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "serializer",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "parameter",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "behavior",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "used",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "handle",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "return",
            "tf": 2,
            "weight": 0.012121
          }
        ],
        "unique_terms": 96,
        "total_terms": 165
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Best Practices for Serializers",
        "for",
        "functional",
        "mode",
        "none",
        "pydantic",
        "serialization",
        "serializers",
        "the",
        "type",
        "use"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6768720496894411,
      "overall": 0.7589573498964803
    }
  },
  {
    "text": "### On this page  - [Serializers](#serializers.md) - [Overview of the Serialization System](#overview-of-the-serialization-system.md) - [Core Serialization Components](#core-serialization-components.md) - [Serialization Modes](#serialization-modes.md) - [Field Serializers](#field-serializers.md) - [Using the field\\_serializer Decorator](#using-the-field_serializer-decorator.md) - [Field Serializer Signature](#field-serializer-signature.md) - [Functional Serializers](#functional-serializers.md) - [PlainSerializer](#plainserializer.md) - [WrapSerializer](#wrapserializer.md) - [Model Serializers](#model-serializers.md) - [Using the model\\_serializer Decorator](#using-the-model_serializer-decorator.md) - [Model Serializer Modes](#model-serializer-modes.md) - [Serialization Process](#serialization-process.md) - [Core Serialization Methods](#core-serialization-methods.md) - [Serialization in TypeAdapter](#serialization-in-typeadapter.md) - [Serialization with Computed Fields](#serialization-with-computed-fields.md) - [Advanced Serialization Techniques](#advanced-serialization-techniques.md) - [Conditional Serialization](#conditional-serialization.md) - [Serialization in Dataclasses](#serialization-in-dataclasses.md) - [Root Model Serialization](#root-model-serialization.md) - [Integration with pydantic-core](#integration-with-pydantic-core.md) - [Deferred Building and Mocking](#deferred-building-and-mocking.md) - [Best Practices for Serializers](#best-practices-for-serializers.md)",
    "metadata": {
      "chunk_id": "42a7a4660423-0024",
      "source_file": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "filename": "_pydantic_pydantic_4.2-serializers.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 343,
      "char_count": 1499,
      "start_char": 17196,
      "end_char": 18695,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6797421052631578,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1024,
      "processing_timestamp": "2025-10-20T18:30:07.215749",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 343,
      "document_id": "42a7a4660423",
      "document_name": "_pydantic_pydantic_4.2-serializers",
      "source_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "source_filename": "_pydantic_pydantic_4.2-serializers.md",
      "source_directory": "Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_4.2-serializers.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "45a609a38f49ba58",
      "content_digest": "45a609a38f49ba58",
      "chunk_length": 1499,
      "payload_version": "1.3",
      "collection_hints": [
        "pydantic"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1024,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "serialization",
          "serializers",
          "serializer",
          "model",
          "the",
          "core",
          "field",
          "modes",
          "using",
          "decorator",
          "with",
          "overview",
          "system",
          "components",
          "signature",
          "functional",
          "plainserializer",
          "wrapserializer",
          "process",
          "methods"
        ],
        "term_weights": [
          {
            "term": "serialization",
            "tf": 22,
            "weight": 0.161765
          },
          {
            "term": "serializers",
            "tf": 10,
            "weight": 0.073529
          },
          {
            "term": "serializer",
            "tf": 8,
            "weight": 0.058824
          },
          {
            "term": "model",
            "tf": 8,
            "weight": 0.058824
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.044118
          },
          {
            "term": "core",
            "tf": 6,
            "weight": 0.044118
          },
          {
            "term": "field",
            "tf": 6,
            "weight": 0.044118
          },
          {
            "term": "modes",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "using",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "decorator",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "overview",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "components",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "signature",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "functional",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "plainserializer",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "wrapserializer",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "methods",
            "tf": 2,
            "weight": 0.014706
          }
        ],
        "unique_terms": 39,
        "total_terms": 136
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "core",
        "decorator",
        "field",
        "model",
        "modes",
        "serialization",
        "serializer",
        "serializers",
        "the",
        "using"
      ],
      "collection_name": "pydantic"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6797421052631578,
      "overall": 0.7599140350877193
    }
  }
]