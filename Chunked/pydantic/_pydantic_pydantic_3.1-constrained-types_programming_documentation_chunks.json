[
  {
    "text": "## Best Practices",
    "metadata": {
      "chunk_id": "52b75df91215-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Best Practices"
      ],
      "heading_text": "Best Practices",
      "token_count": 3,
      "char_count": 17,
      "start_char": 0,
      "end_char": 17,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:37.462163",
      "document_id": "52b75df91215",
      "document_name": "_pydantic_pydantic_3.1-constrained-types",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "source_filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "hierarchy_path": "Best Practices",
      "chunk_hash": "031679ed4ce8dee6",
      "content_digest": "031679ed4ce8dee6",
      "chunk_length": 17,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "best",
          "practices"
        ],
        "term_weights": [
          {
            "term": "best",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "practices",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Best Practices",
        "best",
        "practices"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### Using Constrained Types in Models ``` ```",
    "metadata": {
      "chunk_id": "52b75df91215-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Using Constrained Types in Models"
      ],
      "heading_text": "Using Constrained Types in Models",
      "token_count": 9,
      "char_count": 45,
      "start_char": 0,
      "end_char": 45,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:37.461566",
      "document_id": "52b75df91215",
      "document_name": "_pydantic_pydantic_3.1-constrained-types",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "source_filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "hierarchy_path": "Using Constrained Types in Models",
      "chunk_hash": "e68deb650f9acc0a",
      "content_digest": "e68deb650f9acc0a",
      "chunk_length": 45,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "using",
          "constrained",
          "types",
          "models"
        ],
        "term_weights": [
          {
            "term": "using",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "constrained",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.25
          }
        ],
        "unique_terms": 4,
        "total_terms": 4
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Using Constrained Types in Models",
        "constrained",
        "models",
        "types",
        "using"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "overall": 0.7508333333333334
    }
  },
  {
    "text": "### Bytes Constraints  The `conbytes` function creates a constrained bytes type with parameters:  - `min_length`: Minimum length in bytes - `max_length`: Maximum length in bytes - `strict`: When True, input must be an actual bytes object",
    "metadata": {
      "chunk_id": "52b75df91215-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Bytes Constraints"
      ],
      "heading_text": "Bytes Constraints",
      "token_count": 51,
      "char_count": 237,
      "start_char": 0,
      "end_char": 237,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5233333333333333,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:37.461060",
      "document_id": "52b75df91215",
      "document_name": "_pydantic_pydantic_3.1-constrained-types",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "source_filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "hierarchy_path": "Bytes Constraints",
      "chunk_hash": "0f27bb5696830bc2",
      "content_digest": "0f27bb5696830bc2",
      "chunk_length": 237,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "bytes",
          "length",
          "constraints",
          "the",
          "conbytes",
          "function",
          "creates",
          "constrained",
          "type",
          "with",
          "parameters",
          "min",
          "minimum",
          "max",
          "maximum",
          "strict",
          "when",
          "true",
          "input",
          "must"
        ],
        "term_weights": [
          {
            "term": "bytes",
            "tf": 5,
            "weight": 0.172414
          },
          {
            "term": "length",
            "tf": 4,
            "weight": 0.137931
          },
          {
            "term": "constraints",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "conbytes",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "creates",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "constrained",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "parameters",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "min",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "minimum",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "max",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "maximum",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "strict",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "true",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "must",
            "tf": 1,
            "weight": 0.034483
          }
        ],
        "unique_terms": 22,
        "total_terms": 29
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Bytes Constraints",
        "bytes",
        "conbytes",
        "constrained",
        "constraints",
        "creates",
        "function",
        "length",
        "the",
        "type",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5233333333333333,
      "overall": 0.741111111111111
    }
  },
  {
    "text": "### Set and FrozenSet Constraints  The `conset` and `confrozenset` functions create constrained set and frozenset types with similar parameters:  - `item_type`: The type of items in the set - `min_length`: Minimum number of items - `max_length`: Maximum number of items",
    "metadata": {
      "chunk_id": "52b75df91215-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Set and FrozenSet Constraints"
      ],
      "heading_text": "Set and FrozenSet Constraints",
      "token_count": 63,
      "char_count": 269,
      "start_char": 0,
      "end_char": 269,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.485,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:37.461404",
      "document_id": "52b75df91215",
      "document_name": "_pydantic_pydantic_3.1-constrained-types",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "source_filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "hierarchy_path": "Set and FrozenSet Constraints",
      "chunk_hash": "c63bfe9c4ec1f07a",
      "content_digest": "c63bfe9c4ec1f07a",
      "chunk_length": 269,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "set",
          "and",
          "the",
          "items",
          "frozenset",
          "type",
          "length",
          "number",
          "constraints",
          "conset",
          "confrozenset",
          "functions",
          "create",
          "constrained",
          "types",
          "with",
          "similar",
          "parameters",
          "item",
          "min"
        ],
        "term_weights": [
          {
            "term": "set",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "items",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "frozenset",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "length",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "number",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "constraints",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "conset",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "confrozenset",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "functions",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "constrained",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "similar",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "parameters",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "item",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "min",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 23,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Set and FrozenSet Constraints",
        "and",
        "conset",
        "constraints",
        "frozenset",
        "items",
        "length",
        "number",
        "set",
        "the",
        "type"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.485,
      "overall": 0.7283333333333334
    }
  },
  {
    "text": "### List Constraints  The `conlist` function creates a constrained list type with parameters:  - `item_type`: The type of items in the list - `min_length`: Minimum number of items - `max_length`: Maximum number of items",
    "metadata": {
      "chunk_id": "52b75df91215-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "List Constraints"
      ],
      "heading_text": "List Constraints",
      "token_count": 49,
      "char_count": 219,
      "start_char": 0,
      "end_char": 219,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.48411764705882354,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:37.461224",
      "document_id": "52b75df91215",
      "document_name": "_pydantic_pydantic_3.1-constrained-types",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "source_filename": "_pydantic_pydantic_3.1-constrained-types.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.1-constrained-types.md",
      "hierarchy_path": "List Constraints",
      "chunk_hash": "33b512e1ee30e9ba",
      "content_digest": "33b512e1ee30e9ba",
      "chunk_length": 219,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "list",
          "the",
          "type",
          "items",
          "length",
          "number",
          "constraints",
          "conlist",
          "function",
          "creates",
          "constrained",
          "with",
          "parameters",
          "item",
          "min",
          "minimum",
          "max",
          "maximum"
        ],
        "term_weights": [
          {
            "term": "list",
            "tf": 3,
            "weight": 0.107143
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.107143
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.107143
          },
          {
            "term": "items",
            "tf": 3,
            "weight": 0.107143
          },
          {
            "term": "length",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "number",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "constraints",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "conlist",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "creates",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "constrained",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "parameters",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "item",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "min",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "minimum",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "max",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "maximum",
            "tf": 1,
            "weight": 0.035714
          }
        ],
        "unique_terms": 18,
        "total_terms": 28
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "List Constraints",
        "conlist",
        "constraints",
        "creates",
        "function",
        "items",
        "length",
        "list",
        "number",
        "the",
        "type"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.48411764705882354,
      "overall": 0.7280392156862745
    }
  }
]