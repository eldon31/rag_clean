[
  {
    "text": "## Overview\n\nFunction validation in Pydantic enables automatic validation of function arguments and return values using the `@validate_call` decorator. This system extends Pydantic's validation capabilities beyond models to regular Python functions, methods, and lambdas by transforming function signatures into validation schemas and wrapping function calls with validation logic.\n\nFor field-level validation within models, see [Validators](pydantic/pydantic/4.1-validators.md). For model-level validation, see [Model Configuration](pydantic/pydantic/2.3-model-configuration.md).\n\n**Sources:** [pydantic/validate\\_call\\_decorator.py1-117](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/validate_call_decorator.py#L1-L117)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Overview"
      ],
      "heading_text": "Overview",
      "token_count": 163,
      "char_count": 735,
      "start_char": 3765,
      "end_char": 4500,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5328571428571428,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.675601",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Overview",
      "chunk_hash": "5f22d437234bcb10",
      "content_digest": "5f22d437234bcb10",
      "chunk_length": 735,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "validation",
          "function",
          "and",
          "validate",
          "call",
          "decorator",
          "model",
          "models",
          "for",
          "level",
          "see",
          "validators",
          "configuration",
          "overview",
          "enables",
          "automatic",
          "arguments",
          "return",
          "values"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 10,
            "weight": 0.117647
          },
          {
            "term": "validation",
            "tf": 7,
            "weight": 0.082353
          },
          {
            "term": "function",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "validate",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "call",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "decorator",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "level",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "see",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "configuration",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "overview",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "enables",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "automatic",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "arguments",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "return",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.011765
          }
        ],
        "unique_terms": 51,
        "total_terms": 85
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Overview",
        "and",
        "call",
        "decorator",
        "for",
        "function",
        "model",
        "models",
        "pydantic",
        "validate",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5328571428571428,
      "overall": 0.6776190476190475
    }
  },
  {
    "text": "## Decorator Interface\n\nThe `@validate_call` decorator is the primary entry point for function validation. It can be applied either as a bare decorator or with configuration options:\n\n```\n```",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Decorator Interface"
      ],
      "heading_text": "Decorator Interface",
      "token_count": 38,
      "char_count": 191,
      "start_char": 4502,
      "end_char": 4693,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5486206896551724,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.675909",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Decorator Interface",
      "chunk_hash": "1b65f66f05aef2df",
      "content_digest": "1b65f66f05aef2df",
      "chunk_length": 191,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "decorator",
          "the",
          "interface",
          "validate",
          "call",
          "primary",
          "entry",
          "point",
          "for",
          "function",
          "validation",
          "can",
          "applied",
          "either",
          "bare",
          "with",
          "configuration",
          "options"
        ],
        "term_weights": [
          {
            "term": "decorator",
            "tf": 3,
            "weight": 0.142857
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.095238
          },
          {
            "term": "interface",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "validate",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "call",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "primary",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "entry",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "point",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "applied",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "either",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "bare",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "options",
            "tf": 1,
            "weight": 0.047619
          }
        ],
        "unique_terms": 18,
        "total_terms": 21
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Decorator Interface",
        "call",
        "decorator",
        "entry",
        "for",
        "function",
        "interface",
        "point",
        "primary",
        "the",
        "validate"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5486206896551724,
      "overall": 0.6495402298850574
    }
  },
  {
    "text": "## ValidateCallWrapper Implementation\n\nThe `ValidateCallWrapper` class handles the core logic of function validation. It wraps the original function and intercepts all calls to perform validation.",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "ValidateCallWrapper Implementation"
      ],
      "heading_text": "ValidateCallWrapper Implementation",
      "token_count": 35,
      "char_count": 196,
      "start_char": 6094,
      "end_char": 6290,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.678439",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "ValidateCallWrapper Implementation",
      "chunk_hash": "2563f42ae98ff3a8",
      "content_digest": "2563f42ae98ff3a8",
      "chunk_length": 196,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "validatecallwrapper",
          "function",
          "validation",
          "implementation",
          "class",
          "handles",
          "core",
          "logic",
          "wraps",
          "original",
          "and",
          "intercepts",
          "all",
          "calls",
          "perform"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 3,
            "weight": 0.142857
          },
          {
            "term": "validatecallwrapper",
            "tf": 2,
            "weight": 0.095238
          },
          {
            "term": "function",
            "tf": 2,
            "weight": 0.095238
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.095238
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "handles",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "wraps",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "original",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "intercepts",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "calls",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "perform",
            "tf": 1,
            "weight": 0.047619
          }
        ],
        "unique_terms": 16,
        "total_terms": 21
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "ValidateCallWrapper Implementation",
        "class",
        "core",
        "function",
        "handles",
        "implementation",
        "logic",
        "the",
        "validatecallwrapper",
        "validation",
        "wraps"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "overall": 0.714
    }
  },
  {
    "text": "### Initialization Process\n\nThe wrapper is initialized in `__init__` with the following steps:\n\n1. **Extract function metadata**: Store the function, extract its module and qualname\n2. **Create namespace resolver**: Build `NsResolver` to handle forward references in type annotations\n3. **Configure wrapper**: Create `ConfigWrapper` from provided config\n4. **Conditional schema building**: If `defer_build` is not enabled, immediately create validators; otherwise defer until first call\n\n**Sources:** [pydantic/\\_internal/\\_validate\\_call.py65-90](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validate_call.py#L65-L90)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Initialization Process"
      ],
      "heading_text": "Initialization Process",
      "token_count": 150,
      "char_count": 644,
      "start_char": 6322,
      "end_char": 6966,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.7669230769230769,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.679745",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Initialization Process",
      "chunk_hash": "556622fe991bfd9b",
      "content_digest": "556622fe991bfd9b",
      "chunk_length": 644,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "the",
          "create",
          "call",
          "wrapper",
          "extract",
          "function",
          "build",
          "defer",
          "internal",
          "validate",
          "initialization",
          "process",
          "initialized",
          "init",
          "with",
          "following",
          "steps",
          "metadata",
          "store"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.055556
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "create",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "call",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "wrapper",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "extract",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "function",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "build",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "defer",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "validate",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "initialization",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "initialized",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "init",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "following",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "steps",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "metadata",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "store",
            "tf": 1,
            "weight": 0.013889
          }
        ],
        "unique_terms": 56,
        "total_terms": 72
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Initialization Process",
        "build",
        "call",
        "create",
        "defer",
        "extract",
        "function",
        "internal",
        "pydantic",
        "the",
        "wrapper"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.7669230769230769,
      "overall": 0.7556410256410255
    }
  },
  {
    "text": "### Validator Creation\n\nThe `_create_validators` method generates schemas and validators:\n\n```\n```\n\n**Sources:** [pydantic/\\_internal/\\_validate\\_call.py91-131](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validate_call.py#L91-L131)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validator Creation"
      ],
      "heading_text": "Validator Creation",
      "token_count": 72,
      "char_count": 258,
      "start_char": 6968,
      "end_char": 7226,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5685714285714286,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.680174",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Validator Creation",
      "chunk_hash": "a3661557eb1df13d",
      "content_digest": "a3661557eb1df13d",
      "chunk_length": 258,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "validators",
          "internal",
          "validate",
          "call",
          "validator",
          "creation",
          "the",
          "create",
          "method",
          "generates",
          "schemas",
          "and",
          "sources",
          "py91",
          "131",
          "https",
          "github",
          "com",
          "blob"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.133333
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.066667
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.066667
          },
          {
            "term": "validate",
            "tf": 2,
            "weight": 0.066667
          },
          {
            "term": "call",
            "tf": 2,
            "weight": 0.066667
          },
          {
            "term": "validator",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "creation",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "generates",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "schemas",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "py91",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "131",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.033333
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.033333
          }
        ],
        "unique_terms": 23,
        "total_terms": 30
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Validator Creation",
        "call",
        "create",
        "creation",
        "internal",
        "method",
        "pydantic",
        "the",
        "validate",
        "validator",
        "validators"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5685714285714286,
      "overall": 0.6895238095238095
    }
  },
  {
    "text": "### Call Interception\n\nWhen the wrapped function is called, the `__call__` method:\n\n1. **Lazy validation setup**: If validators weren't created during initialization (deferred build), create them now\n2. **Package arguments**: Wrap positional and keyword arguments in `ArgsKwargs` object\n3. **Validate arguments**: Pass through `__pydantic_validator__`\n4. **Execute function**: Call the validated function with validated args\n5. **Validate return** (optional): Pass return value through `__return_pydantic_validator__` if configured\n\n**Sources:** [pydantic/\\_internal/\\_validate\\_call.py132-141](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validate_call.py#L132-L141)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Call Interception"
      ],
      "heading_text": "Call Interception",
      "token_count": 169,
      "char_count": 693,
      "start_char": 7228,
      "end_char": 7921,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5452238805970149,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.681437",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Call Interception",
      "chunk_hash": "a2d1176f73419241",
      "content_digest": "a2d1176f73419241",
      "chunk_length": 693,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "call",
          "validate",
          "the",
          "function",
          "arguments",
          "return",
          "pass",
          "through",
          "validator",
          "validated",
          "internal",
          "interception",
          "when",
          "wrapped",
          "called",
          "method",
          "lazy",
          "validation",
          "setup"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.076923
          },
          {
            "term": "call",
            "tf": 5,
            "weight": 0.064103
          },
          {
            "term": "validate",
            "tf": 4,
            "weight": 0.051282
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "function",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "arguments",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "return",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "pass",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "through",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "validator",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "validated",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "interception",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "wrapped",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "called",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "lazy",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "setup",
            "tf": 1,
            "weight": 0.012821
          }
        ],
        "unique_terms": 53,
        "total_terms": 78
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Call Interception",
        "arguments",
        "call",
        "function",
        "pass",
        "pydantic",
        "return",
        "the",
        "through",
        "validate",
        "validator"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5452238805970149,
      "overall": 0.6817412935323383
    }
  },
  {
    "text": "## Function Schema Generation\n\nFunction signatures are transformed into pydantic-core schemas through the `GenerateSchema` class. This enables the same validation logic used for models to work with functions.",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Function Schema Generation"
      ],
      "heading_text": "Function Schema Generation",
      "token_count": 37,
      "char_count": 208,
      "start_char": 7923,
      "end_char": 8131,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5685714285714286,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.681801",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Function Schema Generation",
      "chunk_hash": "4a272aad6ec03dba",
      "content_digest": "4a272aad6ec03dba",
      "chunk_length": 208,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "function",
          "the",
          "schema",
          "generation",
          "signatures",
          "are",
          "transformed",
          "into",
          "pydantic",
          "core",
          "schemas",
          "through",
          "generateschema",
          "class",
          "this",
          "enables",
          "same",
          "validation",
          "logic",
          "used"
        ],
        "term_weights": [
          {
            "term": "function",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "schema",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "generation",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "signatures",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "transformed",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "pydantic",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "schemas",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "generateschema",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "enables",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "same",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.037037
          }
        ],
        "unique_terms": 25,
        "total_terms": 27
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Function Schema Generation",
        "are",
        "core",
        "function",
        "generation",
        "into",
        "pydantic",
        "schema",
        "signatures",
        "the",
        "transformed"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5685714285714286,
      "overall": 0.7228571428571429
    }
  },
  {
    "text": "### Special Handling: TypedDict Unpacking\n\nWhen using `Unpack[TypedDict]` for `**kwargs`, the decorator validates kwargs against the TypedDict schema:\n\n```\n```\n\nThe implementation checks for overlaps between regular parameters and TypedDict keys, raising `PydanticUserError` if positional-or-keyword parameters conflict with TypedDict keys.\n\n**Sources:** [tests/test\\_validate\\_call.py286-417](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validate_call.py#L286-L417)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Special Handling: TypedDict Unpacking"
      ],
      "heading_text": "Special Handling: TypedDict Unpacking",
      "token_count": 114,
      "char_count": 483,
      "start_char": 9055,
      "end_char": 9538,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5328571428571428,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.683768",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Special Handling: TypedDict Unpacking",
      "chunk_hash": "d595c4e48dffde22",
      "content_digest": "d595c4e48dffde22",
      "chunk_length": 483,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "typeddict",
          "the",
          "for",
          "kwargs",
          "parameters",
          "keys",
          "tests",
          "test",
          "validate",
          "call",
          "pydantic",
          "special",
          "handling",
          "unpacking",
          "when",
          "using",
          "unpack",
          "decorator",
          "validates",
          "against"
        ],
        "term_weights": [
          {
            "term": "typeddict",
            "tf": 5,
            "weight": 0.086207
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "kwargs",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "parameters",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "keys",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "validate",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "call",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "special",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "handling",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "unpacking",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "unpack",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "decorator",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "against",
            "tf": 1,
            "weight": 0.017241
          }
        ],
        "unique_terms": 43,
        "total_terms": 58
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Special Handling: TypedDict Unpacking",
        "call",
        "for",
        "keys",
        "kwargs",
        "parameters",
        "test",
        "tests",
        "the",
        "typeddict",
        "validate"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5328571428571428,
      "overall": 0.6776190476190475
    }
  },
  {
    "text": "## Function Type Validation\n\nThe `_check_function_type` function validates that the decorated object is a supported callable type:\n\n```\n```\n\n**Sources:** [pydantic/validate\\_call\\_decorator.py24-70](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/validate_call_decorator.py#L24-L70)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Function Type Validation"
      ],
      "heading_text": "Function Type Validation",
      "token_count": 77,
      "char_count": 294,
      "start_char": 9540,
      "end_char": 9834,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.684194",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Function Type Validation",
      "chunk_hash": "3b315019ce3aef61",
      "content_digest": "3b315019ce3aef61",
      "chunk_length": 294,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "function",
          "type",
          "the",
          "validate",
          "call",
          "decorator",
          "validation",
          "check",
          "validates",
          "that",
          "decorated",
          "object",
          "supported",
          "callable",
          "sources",
          "py24",
          "https",
          "github",
          "com"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "function",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "validate",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "call",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "decorator",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "check",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "decorated",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "object",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "supported",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "callable",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "py24",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 24,
        "total_terms": 35
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Function Type Validation",
        "call",
        "check",
        "decorator",
        "function",
        "pydantic",
        "the",
        "type",
        "validate",
        "validates",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.6823809523809524
    }
  },
  {
    "text": "### Return Value Validation\n\nWhen `validate_return=True`, the decorator validates the function's return value against its return type annotation:\n\n```\n```\n\nThe implementation creates a separate validator for the return type and wraps the result in an appropriate handler (async or sync).\n\n**Sources:** [pydantic/\\_internal/\\_validate\\_call.py105-128](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validate_call.py#L105-L128)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Return Value Validation"
      ],
      "heading_text": "Return Value Validation",
      "token_count": 104,
      "char_count": 449,
      "start_char": 9858,
      "end_char": 10307,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5202325581395348,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.684932",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Return Value Validation",
      "chunk_hash": "eb1c483aec7ce84a",
      "content_digest": "eb1c483aec7ce84a",
      "chunk_length": 449,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "return",
          "the",
          "pydantic",
          "validate",
          "value",
          "type",
          "internal",
          "call",
          "validation",
          "when",
          "true",
          "decorator",
          "validates",
          "function",
          "against",
          "its",
          "annotation",
          "implementation",
          "creates",
          "separate"
        ],
        "term_weights": [
          {
            "term": "return",
            "tf": 5,
            "weight": 0.089286
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.089286
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.071429
          },
          {
            "term": "validate",
            "tf": 3,
            "weight": 0.053571
          },
          {
            "term": "value",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "call",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "true",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "decorator",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "against",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "its",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "annotation",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "creates",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "separate",
            "tf": 1,
            "weight": 0.017857
          }
        ],
        "unique_terms": 39,
        "total_terms": 56
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Return Value Validation",
        "call",
        "internal",
        "pydantic",
        "return",
        "the",
        "type",
        "validate",
        "validation",
        "value",
        "when"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5202325581395348,
      "overall": 0.6734108527131782
    }
  },
  {
    "text": "### Configuration Options\n\nAll `ConfigDict` options are supported:\n\n```\n```\n\n**Sources:** [tests/test\\_validate\\_call.py730-776](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validate_call.py#L730-L776)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0017",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Configuration Options"
      ],
      "heading_text": "Configuration Options",
      "token_count": 60,
      "char_count": 218,
      "start_char": 10860,
      "end_char": 11078,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.685820",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Configuration Options",
      "chunk_hash": "820f6e475d47119d",
      "content_digest": "820f6e475d47119d",
      "chunk_length": 218,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "options",
          "tests",
          "test",
          "validate",
          "call",
          "pydantic",
          "configuration",
          "all",
          "configdict",
          "are",
          "supported",
          "sources",
          "py730",
          "776",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "l730"
        ],
        "term_weights": [
          {
            "term": "options",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "validate",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "call",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.074074
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "configdict",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "supported",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "py730",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "776",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "76ef0b08",
            "tf": 1,
            "weight": 0.037037
          },
          {
            "term": "l730",
            "tf": 1,
            "weight": 0.037037
          }
        ],
        "unique_terms": 21,
        "total_terms": 27
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Configuration Options",
        "all",
        "are",
        "call",
        "configdict",
        "configuration",
        "options",
        "pydantic",
        "test",
        "tests",
        "validate"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.54,
      "overall": 0.6466666666666666
    }
  },
  {
    "text": "### Field-Level Annotations\n\nFunction parameters support Pydantic's `Field` and `Annotated` for additional validation:\n\n```\n```\n\n**Sources:** [tests/test\\_validate\\_call.py419-436](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validate_call.py#L419-L436) [tests/test\\_validate\\_call.py778-796](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validate_call.py#L778-L796)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Field-Level Annotations"
      ],
      "heading_text": "Field-Level Annotations",
      "token_count": 111,
      "char_count": 399,
      "start_char": 11080,
      "end_char": 11479,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5733333333333334,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.686200",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Field-Level Annotations",
      "chunk_hash": "01b16be32020b9dd",
      "content_digest": "01b16be32020b9dd",
      "chunk_length": 399,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "tests",
          "test",
          "validate",
          "call",
          "field",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "level",
          "annotations",
          "function",
          "parameters",
          "support",
          "and",
          "annotated",
          "for",
          "additional"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.096154
          },
          {
            "term": "tests",
            "tf": 4,
            "weight": 0.076923
          },
          {
            "term": "test",
            "tf": 4,
            "weight": 0.076923
          },
          {
            "term": "validate",
            "tf": 4,
            "weight": 0.076923
          },
          {
            "term": "call",
            "tf": 4,
            "weight": 0.076923
          },
          {
            "term": "field",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "level",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "annotations",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "parameters",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "annotated",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "additional",
            "tf": 1,
            "weight": 0.019231
          }
        ],
        "unique_terms": 30,
        "total_terms": 52
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Field-Level Annotations",
        "blob",
        "call",
        "com",
        "field",
        "github",
        "https",
        "pydantic",
        "test",
        "tests",
        "validate"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5733333333333334,
      "overall": 0.6577777777777777
    }
  },
  {
    "text": "## Integration with Plugin System\n\nThe `validate_call` decorator integrates with Pydantic's plugin system through the `create_schema_validator` function. When plugins are installed, they receive notifications about function validation:\n\n```\n```\n\nPlugins receive:\n\n- `schema_kind='validate_call'`\n- `schema_type`: The original function\n- `schema_type_path`: Module and qualname of the function\n\n**Sources:** [pydantic/\\_internal/\\_validate\\_call.py96-104](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validate_call.py#L96-L104) [tests/test\\_plugins.py410-447](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_plugins.py#L410-L447)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0019",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration with Plugin System"
      ],
      "heading_text": "Integration with Plugin System",
      "token_count": 169,
      "char_count": 668,
      "start_char": 11481,
      "end_char": 12149,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5165306122448979,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.686759",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Integration with Plugin System",
      "chunk_hash": "027f6eae6f0052a0",
      "content_digest": "027f6eae6f0052a0",
      "chunk_length": 668,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "the",
          "validate",
          "call",
          "schema",
          "function",
          "plugins",
          "with",
          "plugin",
          "system",
          "receive",
          "type",
          "internal",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 7,
            "weight": 0.082353
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "validate",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "call",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "schema",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "function",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "plugins",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "plugin",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "receive",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.023529
          }
        ],
        "unique_terms": 48,
        "total_terms": 85
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration with Plugin System",
        "call",
        "function",
        "plugin",
        "plugins",
        "pydantic",
        "schema",
        "system",
        "the",
        "validate",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5165306122448979,
      "overall": 0.6721768707482992
    }
  },
  {
    "text": "## Wrapper Attribute Preservation\n\nThe `update_wrapper_attributes` function ensures the decorated function preserves key attributes:\n\n```\n```\n\nFor `partial` objects, special handling generates names like `partial(func_name)`.\n\n**Sources:** [pydantic/\\_internal/\\_validate\\_call.py18-46](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_validate_call.py#L18-L46) [tests/test\\_validate\\_call.py28-53](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validate_call.py#L28-L53)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0022",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Wrapper Attribute Preservation"
      ],
      "heading_text": "Wrapper Attribute Preservation",
      "token_count": 154,
      "char_count": 608,
      "start_char": 13510,
      "end_char": 14118,
      "semantic_score": 0.7,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.5490909090909091,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.689327",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Wrapper Attribute Preservation",
      "chunk_hash": "30a65e4e339c269a",
      "content_digest": "30a65e4e339c269a",
      "chunk_length": 608,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "validate",
          "call",
          "wrapper",
          "the",
          "attributes",
          "function",
          "partial",
          "internal",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test",
          "refresh",
          "this",
          "wiki",
          "attribute"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.077922
          },
          {
            "term": "validate",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "call",
            "tf": 4,
            "weight": 0.051948
          },
          {
            "term": "wrapper",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "attributes",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "function",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "partial",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "wiki",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "attribute",
            "tf": 1,
            "weight": 0.012987
          }
        ],
        "unique_terms": 50,
        "total_terms": 77
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Wrapper Attribute Preservation",
        "attributes",
        "call",
        "function",
        "https",
        "internal",
        "partial",
        "pydantic",
        "the",
        "validate",
        "wrapper"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.5490909090909091,
      "overall": 0.7496969696969696
    }
  }
]