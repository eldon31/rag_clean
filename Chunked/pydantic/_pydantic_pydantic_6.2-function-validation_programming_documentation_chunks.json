[
  {
    "text": "## Advanced Features",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Advanced Features"
      ],
      "heading_text": "Advanced Features",
      "token_count": 3,
      "char_count": 20,
      "start_char": 0,
      "end_char": 20,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:03:34.815098",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Advanced Features",
      "chunk_hash": "d707818370d113fc",
      "content_digest": "d707818370d113fc",
      "chunk_length": 20,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "advanced",
          "features"
        ],
        "term_weights": [
          {
            "term": "advanced",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "features",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Advanced Features",
        "advanced",
        "features"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "## ValidateCallWrapper Implementation  The `ValidateCallWrapper` class handles the core logic of function validation. It wraps the original function and intercepts all calls to perform validation.",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "ValidateCallWrapper Implementation"
      ],
      "heading_text": "ValidateCallWrapper Implementation",
      "token_count": 35,
      "char_count": 196,
      "start_char": 0,
      "end_char": 196,
      "semantic_score": 0.6416692733764648,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:03:34.812619",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "ValidateCallWrapper Implementation",
      "chunk_hash": "e9c40079bc2b1196",
      "content_digest": "e9c40079bc2b1196",
      "chunk_length": 196,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "validatecallwrapper",
          "function",
          "validation",
          "implementation",
          "class",
          "handles",
          "core",
          "logic",
          "wraps",
          "original",
          "and",
          "intercepts",
          "all",
          "calls",
          "perform"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 3,
            "weight": 0.142857
          },
          {
            "term": "validatecallwrapper",
            "tf": 2,
            "weight": 0.095238
          },
          {
            "term": "function",
            "tf": 2,
            "weight": 0.095238
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.095238
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "handles",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "wraps",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "original",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "intercepts",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "calls",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "perform",
            "tf": 1,
            "weight": 0.047619
          }
        ],
        "unique_terms": 16,
        "total_terms": 21
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "ValidateCallWrapper Implementation",
        "class",
        "core",
        "function",
        "handles",
        "implementation",
        "logic",
        "the",
        "validatecallwrapper",
        "validation",
        "wraps"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.6416692733764648,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.542,
      "overall": 0.6945564244588217
    }
  },
  {
    "text": "### Core Components ``` ```",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Core Components"
      ],
      "heading_text": "Core Components",
      "token_count": 5,
      "char_count": 27,
      "start_char": 0,
      "end_char": 27,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.32999999999999996,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:03:34.812702",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Core Components",
      "chunk_hash": "2d92d9e78bca5ba7",
      "content_digest": "2d92d9e78bca5ba7",
      "chunk_length": 27,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "core",
          "components"
        ],
        "term_weights": [
          {
            "term": "core",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "components",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Core Components",
        "components",
        "core"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.32999999999999996,
      "overall": 0.6766666666666666
    }
  },
  {
    "text": "### Argument Types and Schema Mapping  | Argument Kind                 | Schema Type                                   | Example                                   | | ----------------------------- | --------------------------------------------- | ----------------------------------------- | | Positional-only (`/`)         | `arguments_schema` with positional parameters | `def f(a, /, b): ...`                     | | Keyword-only (`*`)            | `arguments_schema` with keyword parameters    | `def f(*, a, b): ...`                     | | Variable positional (`*args`) | `arguments_schema` with var\\_args\\_schema     | `def f(*args): ...`                       | | Variable keyword (`**kwargs`) | `arguments_schema` with var\\_kwargs\\_schema   | `def f(**kwargs): ...`                    | | Mixed                         | Combined `arguments_schema`                   | `def f(a, /, b, *args, c, **kwargs): ...` |",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Argument Types and Schema Mapping"
      ],
      "heading_text": "Argument Types and Schema Mapping",
      "token_count": 180,
      "char_count": 920,
      "start_char": 0,
      "end_char": 920,
      "semantic_score": 0.6605587601661682,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.4254838709677419,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:03:34.814357",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Argument Types and Schema Mapping",
      "chunk_hash": "40b8516a17278612",
      "content_digest": "40b8516a17278612",
      "chunk_length": 920,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "schema",
          "arguments",
          "def",
          "with",
          "args",
          "kwargs",
          "positional",
          "keyword",
          "argument",
          "only",
          "parameters",
          "variable",
          "var",
          "types",
          "and",
          "mapping",
          "kind",
          "type",
          "example",
          "mixed"
        ],
        "term_weights": [
          {
            "term": "schema",
            "tf": 9,
            "weight": 0.163636
          },
          {
            "term": "arguments",
            "tf": 5,
            "weight": 0.090909
          },
          {
            "term": "def",
            "tf": 5,
            "weight": 0.090909
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.072727
          },
          {
            "term": "args",
            "tf": 4,
            "weight": 0.072727
          },
          {
            "term": "kwargs",
            "tf": 4,
            "weight": 0.072727
          },
          {
            "term": "positional",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "keyword",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "argument",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "only",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "parameters",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "variable",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "var",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "mapping",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "kind",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "mixed",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 21,
        "total_terms": 55
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Argument Types and Schema Mapping",
        "args",
        "argument",
        "arguments",
        "def",
        "keyword",
        "kwargs",
        "only",
        "positional",
        "schema",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.6605587601661682,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.4254838709677419,
      "overall": 0.6620142103779699
    }
  },
  {
    "text": "## Overview  Function validation in Pydantic enables automatic validation of function arguments and return values using the `@validate_call` decorator. This system extends Pydantic's validation capabilities beyond models to regular Python functions, methods, and lambdas by transforming function signatures into validation schemas and wrapping function calls with validation logic. For field-level validation within models, see [Validators](pydantic/pydantic/4.1-validators.md). For model-level validation, see [Model Configuration](pydantic/pydantic/2.3-model-configuration.md). **Sources:** [pydantic/validate\\_call\\_decorator.py1-117](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/validate_call_decorator.py#L1-L117)",
    "metadata": {
      "chunk_id": "efb060cdcfaa-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "filename": "_pydantic_pydantic_6.2-function-validation.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Overview"
      ],
      "heading_text": "Overview",
      "token_count": 163,
      "char_count": 733,
      "start_char": 0,
      "end_char": 733,
      "semantic_score": 0.4950793385505676,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5328571428571428,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:03:34.811337",
      "document_id": "efb060cdcfaa",
      "document_name": "_pydantic_pydantic_6.2-function-validation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "source_filename": "_pydantic_pydantic_6.2-function-validation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_6.2-function-validation.md",
      "hierarchy_path": "Overview",
      "chunk_hash": "f524cdffc917f95e",
      "content_digest": "f524cdffc917f95e",
      "chunk_length": 733,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "validation",
          "function",
          "and",
          "validate",
          "call",
          "decorator",
          "model",
          "models",
          "for",
          "level",
          "see",
          "validators",
          "configuration",
          "overview",
          "enables",
          "automatic",
          "arguments",
          "return",
          "values"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 10,
            "weight": 0.117647
          },
          {
            "term": "validation",
            "tf": 7,
            "weight": 0.082353
          },
          {
            "term": "function",
            "tf": 4,
            "weight": 0.047059
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "validate",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "call",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "decorator",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "level",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "see",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "configuration",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "overview",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "enables",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "automatic",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "arguments",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "return",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.011765
          }
        ],
        "unique_terms": 51,
        "total_terms": 85
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Overview",
        "and",
        "call",
        "decorator",
        "for",
        "function",
        "model",
        "models",
        "pydantic",
        "validate",
        "validation"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.4950793385505676,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5328571428571428,
      "overall": 0.6426454938025702
    }
  }
]