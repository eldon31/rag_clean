[
  {
    "text": "## Purpose and Functionality  BaseModel serves as the foundation for creating validated data models in Pydantic. Key functionality includes:  - Validation of input data against defined types - Automatic type coercion where possible - JSON serialization and deserialization - Schema generation for documentation - Data manipulation utilities - Configuration customization  Models are defined by creating classes that inherit from BaseModel, with fields specified using Python type annotations. Sources: [pydantic/main.py121-152](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L121-L152)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Purpose and Functionality"
      ],
      "heading_text": "Purpose and Functionality",
      "token_count": 118,
      "char_count": 606,
      "start_char": 3766,
      "end_char": 4372,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5291304347826087,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.348555",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Purpose and Functionality",
      "chunk_hash": "136518e0a1f08fc3",
      "content_digest": "136518e0a1f08fc3",
      "chunk_length": 606,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "data",
          "and",
          "functionality",
          "basemodel",
          "for",
          "creating",
          "models",
          "defined",
          "type",
          "main",
          "purpose",
          "serves",
          "the",
          "foundation",
          "validated",
          "key",
          "includes",
          "validation",
          "input"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.069444
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "functionality",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "basemodel",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "creating",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "defined",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "purpose",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "serves",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "foundation",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "validated",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "key",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "includes",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.013889
          }
        ],
        "unique_terms": 57,
        "total_terms": 72
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Purpose and Functionality",
        "and",
        "basemodel",
        "creating",
        "data",
        "defined",
        "for",
        "functionality",
        "models",
        "pydantic",
        "type"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5291304347826087,
      "overall": 0.7097101449275361
    }
  },
  {
    "text": "## BaseModel Architecture\n\n**BaseModel Class Structure**\n\n```\n```\n\nBaseModel is implemented with `ModelMetaclass` (defined in [pydantic/\\_internal/\\_model\\_construction.py79](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L79-L79)) as its metaclass. During class definition, `ModelMetaclass.__new__` processes type annotations, collects field information from the class and its bases, generates core schemas, and creates the `SchemaValidator` and `SchemaSerializer` instances from pydantic-core.\n\nSources:\n\n- [pydantic/main.py118-238](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L118-L238)\n- [pydantic/\\_internal/\\_model\\_construction.py79-276](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L79-L276)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "BaseModel Architecture"
      ],
      "heading_text": "BaseModel Architecture",
      "token_count": 221,
      "char_count": 817,
      "start_char": 4375,
      "end_char": 5192,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5323076923076923,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.349556",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "BaseModel Architecture",
      "chunk_hash": "60c1fe3a170d3291",
      "content_digest": "60c1fe3a170d3291",
      "chunk_length": 817,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "internal",
          "model",
          "construction",
          "basemodel",
          "class",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "l79",
          "and",
          "modelmetaclass",
          "py79",
          "its",
          "from",
          "the",
          "core",
          "main"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 13,
            "weight": 0.136842
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.042105
          },
          {
            "term": "model",
            "tf": 4,
            "weight": 0.042105
          },
          {
            "term": "construction",
            "tf": 4,
            "weight": 0.042105
          },
          {
            "term": "basemodel",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "class",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "l79",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "modelmetaclass",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "py79",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "its",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "core",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.021053
          }
        ],
        "unique_terms": 49,
        "total_terms": 95
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "BaseModel Architecture",
        "basemodel",
        "blob",
        "class",
        "com",
        "construction",
        "github",
        "https",
        "internal",
        "model",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5323076923076923,
      "overall": 0.6774358974358973
    }
  },
  {
    "text": "## Model Lifecycle\n\n**Model Definition and Instantiation Flow**\n\n```\n```",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Lifecycle"
      ],
      "heading_text": "Model Lifecycle",
      "token_count": 15,
      "char_count": 72,
      "start_char": 5194,
      "end_char": 5266,
      "semantic_score": 0.8,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.56,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.349556",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Model Lifecycle",
      "chunk_hash": "4f483e63a7ff4299",
      "content_digest": "4f483e63a7ff4299",
      "chunk_length": 72,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "model",
          "lifecycle",
          "definition",
          "and",
          "instantiation",
          "flow"
        ],
        "term_weights": [
          {
            "term": "model",
            "tf": 2,
            "weight": 0.285714
          },
          {
            "term": "lifecycle",
            "tf": 1,
            "weight": 0.142857
          },
          {
            "term": "definition",
            "tf": 1,
            "weight": 0.142857
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.142857
          },
          {
            "term": "instantiation",
            "tf": 1,
            "weight": 0.142857
          },
          {
            "term": "flow",
            "tf": 1,
            "weight": 0.142857
          }
        ],
        "unique_terms": 6,
        "total_terms": 7
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Lifecycle",
        "and",
        "definition",
        "flow",
        "instantiation",
        "lifecycle",
        "model"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.56,
      "overall": 0.7200000000000001
    }
  },
  {
    "text": "### Model Definition Phase\n\nWhen a class inheriting from `BaseModel` is defined, `ModelMetaclass.__new__` is invoked:\n\n1. **Field Collection** ([pydantic/\\_internal/\\_fields.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_fields.py#LNaN-LNaN)): Annotations are inspected and converted to `FieldInfo` objects stored in `__pydantic_fields__`\n2. **Schema Generation** ([pydantic/\\_internal/\\_generate\\_schema.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#LNaN-LNaN)): A `CoreSchema` is generated from field definitions and decorators\n3. **Validator/Serializer Creation**: `SchemaValidator` and `SchemaSerializer` instances from pydantic-core are created from the core schema\n4. **Class Attributes Set**: `__pydantic_validator__`, `__pydantic_serializer__`, and `__pydantic_core_schema__` are assigned to the class",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Definition Phase"
      ],
      "heading_text": "Model Definition Phase",
      "token_count": 232,
      "char_count": 885,
      "start_char": 5268,
      "end_char": 6153,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5308450704225353,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.350557",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Model Definition Phase",
      "chunk_hash": "f51a84270f61ed47",
      "content_digest": "f51a84270f61ed47",
      "chunk_length": 885,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "from",
          "internal",
          "lnan",
          "and",
          "class",
          "fields",
          "are",
          "core",
          "field",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "generate",
          "validator",
          "serializer",
          "the"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 13,
            "weight": 0.135417
          },
          {
            "term": "schema",
            "tf": 5,
            "weight": 0.052083
          },
          {
            "term": "from",
            "tf": 4,
            "weight": 0.041667
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.041667
          },
          {
            "term": "lnan",
            "tf": 4,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.041667
          },
          {
            "term": "class",
            "tf": 3,
            "weight": 0.03125
          },
          {
            "term": "fields",
            "tf": 3,
            "weight": 0.03125
          },
          {
            "term": "are",
            "tf": 3,
            "weight": 0.03125
          },
          {
            "term": "core",
            "tf": 3,
            "weight": 0.03125
          },
          {
            "term": "field",
            "tf": 2,
            "weight": 0.020833
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020833
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.020833
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.020833
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.020833
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.020833
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.020833
          },
          {
            "term": "validator",
            "tf": 2,
            "weight": 0.020833
          },
          {
            "term": "serializer",
            "tf": 2,
            "weight": 0.020833
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.020833
          }
        ],
        "unique_terms": 50,
        "total_terms": 96
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Definition Phase",
        "and",
        "are",
        "class",
        "core",
        "fields",
        "from",
        "internal",
        "lnan",
        "pydantic",
        "schema"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5308450704225353,
      "overall": 0.6436150234741783
    }
  },
  {
    "text": "### Model Instantiation Phase  When instantiating a model with `MyModel(**data)`:  1. ****init** Entry** ([pydantic/main.py240](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L240-L240)): `BaseModel.__init__` receives keyword arguments as `**data` 2. **Validation** ([pydantic/main.py250](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L250-L250)): Calls `self.__pydantic_validator__.validate_python(data, self_instance=self)` 3. **Rust Validation**: pydantic-core (Rust) validates and coerces data according to the core schema 4. **Instance Attributes**: The validated data is set on `__dict__`, `__pydantic_fields_set__` is populated with explicitly provided fields 5. **Post-Init** ([pydantic/main.py369-370](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L369-L370)): If `__pydantic_post_init__` is set, `model_post_init(context)` is called 6. **Private Attributes** ([pydantic/\\_internal/\\_model\\_construction.py354-369](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L354-L369)): `__pydantic_private__` is initialized with default values  Sources:  - [pydantic/main.py240-260](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L240-L260) - [pydantic/\\_internal/\\_model\\_construction.py80-258](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L80-L258) - [pydantic/\\_internal/\\_fields.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_fields.py#LNaN-LNaN) - [pydantic/\\_internal/\\_generate\\_schema.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#LNaN-LNaN)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Instantiation Phase"
      ],
      "heading_text": "Model Instantiation Phase",
      "token_count": 519,
      "char_count": 1703,
      "start_char": 6155,
      "end_char": 7858,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.758139534883721,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.351555",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Model Instantiation Phase",
      "chunk_hash": "e5de71b2459c2790",
      "content_digest": "e5de71b2459c2790",
      "chunk_length": 1703,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "main",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "internal",
          "model",
          "data",
          "init",
          "fields",
          "construction",
          "lnan",
          "with",
          "l240",
          "self",
          "schema",
          "set",
          "post"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 37,
            "weight": 0.181373
          },
          {
            "term": "main",
            "tf": 8,
            "weight": 0.039216
          },
          {
            "term": "https",
            "tf": 8,
            "weight": 0.039216
          },
          {
            "term": "github",
            "tf": 8,
            "weight": 0.039216
          },
          {
            "term": "com",
            "tf": 8,
            "weight": 0.039216
          },
          {
            "term": "blob",
            "tf": 8,
            "weight": 0.039216
          },
          {
            "term": "76ef0b08",
            "tf": 8,
            "weight": 0.039216
          },
          {
            "term": "internal",
            "tf": 8,
            "weight": 0.039216
          },
          {
            "term": "model",
            "tf": 7,
            "weight": 0.034314
          },
          {
            "term": "data",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "init",
            "tf": 5,
            "weight": 0.02451
          },
          {
            "term": "fields",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "construction",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "lnan",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.014706
          },
          {
            "term": "l240",
            "tf": 3,
            "weight": 0.014706
          },
          {
            "term": "self",
            "tf": 3,
            "weight": 0.014706
          },
          {
            "term": "schema",
            "tf": 3,
            "weight": 0.014706
          },
          {
            "term": "set",
            "tf": 3,
            "weight": 0.014706
          },
          {
            "term": "post",
            "tf": 3,
            "weight": 0.014706
          }
        ],
        "unique_terms": 73,
        "total_terms": 204
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Model Instantiation Phase",
        "blob",
        "com",
        "data",
        "github",
        "https",
        "internal",
        "main",
        "model",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.758139534883721,
      "overall": 0.7527131782945737
    }
  },
  {
    "text": "## Core Instance Attributes\n\nBaseModel instances maintain several internal attributes for validation and serialization:",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Core Instance Attributes"
      ],
      "heading_text": "Core Instance Attributes",
      "token_count": 17,
      "char_count": 119,
      "start_char": 7860,
      "end_char": 7979,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.5685714285714286,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.351555",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Core Instance Attributes",
      "chunk_hash": "b37167753118f058",
      "content_digest": "b37167753118f058",
      "chunk_length": 119,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "attributes",
          "core",
          "instance",
          "basemodel",
          "instances",
          "maintain",
          "several",
          "internal",
          "for",
          "validation",
          "and",
          "serialization"
        ],
        "term_weights": [
          {
            "term": "attributes",
            "tf": 2,
            "weight": 0.153846
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "instance",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "basemodel",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "instances",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "maintain",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "several",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "internal",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.076923
          },
          {
            "term": "serialization",
            "tf": 1,
            "weight": 0.076923
          }
        ],
        "unique_terms": 12,
        "total_terms": 13
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Core Instance Attributes",
        "attributes",
        "basemodel",
        "core",
        "for",
        "instance",
        "instances",
        "internal",
        "maintain",
        "several",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.5685714285714286,
      "overall": 0.6895238095238095
    }
  },
  {
    "text": "## Validation Methods\n\n**Validation Method Flow**\n\n```\n```",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Validation Methods"
      ],
      "heading_text": "Validation Methods",
      "token_count": 12,
      "char_count": 58,
      "start_char": 11241,
      "end_char": 11299,
      "semantic_score": 0.8,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.353667",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Validation Methods",
      "chunk_hash": "d3c9fbda174be6b7",
      "content_digest": "d3c9fbda174be6b7",
      "chunk_length": 58,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validation",
          "methods",
          "method",
          "flow"
        ],
        "term_weights": [
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.4
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.2
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.2
          },
          {
            "term": "flow",
            "tf": 1,
            "weight": 0.2
          }
        ],
        "unique_terms": 4,
        "total_terms": 5
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Validation Methods",
        "flow",
        "method",
        "methods",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5525,
      "overall": 0.7174999999999999
    }
  },
  {
    "text": "### **init** (Primary Validation)\n\nThe primary validation method is model instantiation via `__init__`:\n\n```\n```\n\n**Implementation**: [pydantic/main.py240-260](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L240-L260)\n\n- Receives `**data` as keyword arguments\n- Calls `self.__pydantic_validator__.validate_python(data, self_instance=self)`\n- Returns the validated instance or raises `ValidationError`",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "**init** (Primary Validation)"
      ],
      "heading_text": "**init** (Primary Validation)",
      "token_count": 106,
      "char_count": 421,
      "start_char": 11301,
      "end_char": 11722,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5557142857142857,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.353667",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "**init** (Primary Validation)",
      "chunk_hash": "dd69aaf6ed42d151",
      "content_digest": "dd69aaf6ed42d151",
      "chunk_length": 421,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "self",
          "init",
          "primary",
          "validation",
          "the",
          "main",
          "data",
          "instance",
          "method",
          "model",
          "instantiation",
          "via",
          "implementation",
          "py240",
          "260",
          "https",
          "github",
          "com",
          "blob"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.106383
          },
          {
            "term": "self",
            "tf": 3,
            "weight": 0.06383
          },
          {
            "term": "init",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "primary",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "instance",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "instantiation",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "via",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "py240",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "260",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.021277
          }
        ],
        "unique_terms": 34,
        "total_terms": 47
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "**init** (Primary Validation)",
        "data",
        "init",
        "instance",
        "main",
        "method",
        "primary",
        "pydantic",
        "self",
        "the",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5557142857142857,
      "overall": 0.6852380952380952
    }
  },
  {
    "text": "### model\\_validate\n\nValidates a Python object (typically a dict) and returns a model instance:\n\n```\n```\n\n**Implementation**: [pydantic/main.py652-699](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L652-L699)\n\n**Parameters**:\n\n- `obj`: The object to validate (dict, model instance, object with attributes)\n- `strict`: Enforce strict type checking without coercion\n- `extra`: Override model config for extra field handling ('ignore', 'allow', 'forbid')\n- `from_attributes`: Extract data from object attributes instead of dict keys\n- `context`: Additional context passed to validators\n- `by_alias`: Use field aliases for input matching\n- `by_name`: Use field names for input matching (cannot both be False with `by_alias`)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "model\\_validate"
      ],
      "heading_text": "model\\_validate",
      "token_count": 179,
      "char_count": 742,
      "start_char": 11724,
      "end_char": 12466,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5141758241758242,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.354808",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "model\\_validate",
      "chunk_hash": "6851c7337622d252",
      "content_digest": "6851c7337622d252",
      "chunk_length": 742,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "model",
          "object",
          "pydantic",
          "dict",
          "attributes",
          "for",
          "field",
          "validate",
          "instance",
          "main",
          "with",
          "strict",
          "extra",
          "from",
          "context",
          "alias",
          "use",
          "input",
          "matching",
          "validates"
        ],
        "term_weights": [
          {
            "term": "model",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "object",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.044444
          },
          {
            "term": "dict",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "attributes",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "field",
            "tf": 3,
            "weight": 0.033333
          },
          {
            "term": "validate",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "instance",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "strict",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "extra",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "context",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "alias",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "input",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "matching",
            "tf": 2,
            "weight": 0.022222
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.011111
          }
        ],
        "unique_terms": 61,
        "total_terms": 90
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "attributes",
        "dict",
        "field",
        "for",
        "instance",
        "main",
        "model",
        "model\\_validate",
        "object",
        "pydantic",
        "validate"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5141758241758242,
      "overall": 0.7047252747252747
    }
  },
  {
    "text": "### model\\_validate\\_json\n\nValidates JSON data directly without intermediate Python dict:\n\n```\n```\n\n**Implementation**: [pydantic/main.py701-743](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L701-L743)\n\n**Parameters**: Same as `model_validate`, plus:\n\n- `json_data`: String, bytes, or bytearray containing JSON\n\n**Note**: Uses pydantic-core's native JSON parser for better performance than `json.loads()` + `model_validate()`",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "model\\_validate\\_json"
      ],
      "heading_text": "model\\_validate\\_json",
      "token_count": 112,
      "char_count": 448,
      "start_char": 12468,
      "end_char": 12916,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5675,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.354808",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "model\\_validate\\_json",
      "chunk_hash": "a4ee5889386117b1",
      "content_digest": "a4ee5889386117b1",
      "chunk_length": 448,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "json",
          "pydantic",
          "model",
          "validate",
          "data",
          "main",
          "validates",
          "directly",
          "without",
          "intermediate",
          "python",
          "dict",
          "implementation",
          "py701",
          "743",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08"
        ],
        "term_weights": [
          {
            "term": "json",
            "tf": 6,
            "weight": 0.111111
          },
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.092593
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.055556
          },
          {
            "term": "validate",
            "tf": 3,
            "weight": 0.055556
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "directly",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "without",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "intermediate",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "dict",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "py701",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "743",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "76ef0b08",
            "tf": 1,
            "weight": 0.018519
          }
        ],
        "unique_terms": 39,
        "total_terms": 54
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "data",
        "directly",
        "intermediate",
        "json",
        "main",
        "model",
        "model\\_validate\\_json",
        "pydantic",
        "validate",
        "validates",
        "without"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5675,
      "overall": 0.6891666666666666
    }
  },
  {
    "text": "### model\\_validate\\_strings\n\nValidates data where values are strings that need parsing:\n\n```\n```\n\n**Implementation**: [pydantic/main.py745-781](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L745-L781)\n\nUseful for parsing query parameters or form data where all values are strings.\n\nSources:\n\n- [pydantic/main.py240-260](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L240-L260)\n- [pydantic/main.py652-781](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L652-L781)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "model\\_validate\\_strings"
      ],
      "heading_text": "model\\_validate\\_strings",
      "token_count": 158,
      "char_count": 528,
      "start_char": 12918,
      "end_char": 13446,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5354545454545454,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.355870",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "model\\_validate\\_strings",
      "chunk_hash": "fa2835e09e42903e",
      "content_digest": "fa2835e09e42903e",
      "chunk_length": 528,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "main",
          "strings",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "data",
          "where",
          "values",
          "are",
          "parsing",
          "781",
          "l781",
          "model",
          "validate",
          "validates",
          "that",
          "need"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 12,
            "weight": 0.169014
          },
          {
            "term": "main",
            "tf": 6,
            "weight": 0.084507
          },
          {
            "term": "strings",
            "tf": 3,
            "weight": 0.042254
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.042254
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.042254
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.042254
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.042254
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.042254
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "where",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "values",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "parsing",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "781",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "l781",
            "tf": 2,
            "weight": 0.028169
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "validate",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "validates",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.014085
          },
          {
            "term": "need",
            "tf": 1,
            "weight": 0.014085
          }
        ],
        "unique_terms": 36,
        "total_terms": 71
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "blob",
        "com",
        "data",
        "github",
        "https",
        "main",
        "model\\_validate\\_strings",
        "pydantic",
        "strings",
        "where"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5354545454545454,
      "overall": 0.6451515151515151
    }
  },
  {
    "text": "## Serialization Methods\n\n**Serialization Flow**\n\n```\n```",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Serialization Methods"
      ],
      "heading_text": "Serialization Methods",
      "token_count": 11,
      "char_count": 57,
      "start_char": 13448,
      "end_char": 13505,
      "semantic_score": 0.8,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.355870",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Serialization Methods",
      "chunk_hash": "bade72763102c410",
      "content_digest": "bade72763102c410",
      "chunk_length": 57,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "serialization",
          "methods",
          "flow"
        ],
        "term_weights": [
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.5
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "flow",
            "tf": 1,
            "weight": 0.25
          }
        ],
        "unique_terms": 3,
        "total_terms": 4
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Serialization Methods",
        "flow",
        "methods",
        "serialization"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.7157142857142856
    }
  },
  {
    "text": "### model\\_dump\\_json  Serializes the model directly to a JSON string using pydantic-core's native JSON serializer. **Implementation**: [pydantic/main.py476-534](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L476-L534) ``` ``` **Additional Parameters**:  | Parameter      | Type          | Description                       | | -------------- | ------------- | --------------------------------- | | `indent`       | `int \\| None` | JSON indentation (None = compact) | | `ensure_ascii` | `bool`        | Escape non-ASCII characters       |  **Calls**: `self.__pydantic_serializer__.to_json(self, **options).decode()` [pydantic/main.py519-534](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L519-L534)  **Performance**: More efficient than `json.dumps(model.model_dump())` because it serializes directly to JSON without intermediate Python dict. Sources:  - [pydantic/main.py418-534](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L418-L534) - [tests/test\\_serialize.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_serialize.py)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0017",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "model\\_dump\\_json"
      ],
      "heading_text": "model\\_dump\\_json",
      "token_count": 289,
      "char_count": 1108,
      "start_char": 15390,
      "end_char": 16498,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5048148148148148,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.357869",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "model\\_dump\\_json",
      "chunk_hash": "7968a0dc6d296c3c",
      "content_digest": "7968a0dc6d296c3c",
      "chunk_length": 1108,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "json",
          "main",
          "model",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "534",
          "l534",
          "dump",
          "serializes",
          "directly",
          "serializer",
          "none",
          "ascii",
          "self",
          "tests",
          "test"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 16,
            "weight": 0.134454
          },
          {
            "term": "json",
            "tf": 7,
            "weight": 0.058824
          },
          {
            "term": "main",
            "tf": 6,
            "weight": 0.05042
          },
          {
            "term": "model",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "github",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "blob",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "76ef0b08",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "534",
            "tf": 3,
            "weight": 0.02521
          },
          {
            "term": "l534",
            "tf": 3,
            "weight": 0.02521
          },
          {
            "term": "dump",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "serializes",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "directly",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "serializer",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "none",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "ascii",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "self",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.016807
          }
        ],
        "unique_terms": 61,
        "total_terms": 119
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "534",
        "76ef0b08",
        "blob",
        "com",
        "github",
        "https",
        "json",
        "main",
        "model",
        "model\\_dump\\_json",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5048148148148148,
      "overall": 0.6682716049382716
    }
  },
  {
    "text": "## Model Construction and Copying",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Construction and Copying"
      ],
      "heading_text": "Model Construction and Copying",
      "token_count": 6,
      "char_count": 33,
      "start_char": 16504,
      "end_char": 16537,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.358978",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Model Construction and Copying",
      "chunk_hash": "c2a7276430e7e415",
      "content_digest": "c2a7276430e7e415",
      "chunk_length": 33,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "model",
          "construction",
          "and",
          "copying"
        ],
        "term_weights": [
          {
            "term": "model",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "construction",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "copying",
            "tf": 1,
            "weight": 0.25
          }
        ],
        "unique_terms": 4,
        "total_terms": 4
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Construction and Copying",
        "and",
        "construction",
        "copying",
        "model"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### model\\_construct\n\nCreates a model instance bypassing validation. Useful for trusted or pre-validated data.\n\n**Implementation**: [pydantic/main.py304-382](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L304-L382)\n\n```\n```\n\n**Behavior**:\n\n1. Creates instance with `cls.__new__(cls)` (no `__init__`)\n2. Processes field aliases (both `alias` and `validation_alias`)\n3. Sets default values for missing fields via `field.get_default(call_default_factory=True)`\n4. Directly sets `__dict__`, `__pydantic_fields_set__`, `__pydantic_extra__`\n5. Calls `model_post_init(None)` if defined\n6. Initializes `__pydantic_private__` with defaults\n\n**Key Parameters**:\n\n- `_fields_set`: Optional set of field names to mark as explicitly set. If `None`, uses all provided field names.\n- `**values`: Field values and extra fields (if `extra='allow'`)\n\n**Notes**:\n\n- Respects `model_config.extra` setting for handling extra fields\n- With `extra='allow'`, extra values go to `__pydantic_extra__`\n- With `extra='ignore'` or `extra='forbid'`, extra values are ignored (no error in construct)\n- Default factory functions are called\n- Validators are NOT executed\n\nSources:\n\n- [pydantic/main.py304-382](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L304-L382)\n- [tests/test\\_construction.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_construction.py)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0019",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "model\\_construct"
      ],
      "heading_text": "model\\_construct",
      "token_count": 375,
      "char_count": 1388,
      "start_char": 16539,
      "end_char": 17927,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5280555555555555,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.360573",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "model\\_construct",
      "chunk_hash": "a87477e16dcb81e8",
      "content_digest": "a87477e16dcb81e8",
      "chunk_length": 1388,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "extra",
          "field",
          "values",
          "fields",
          "model",
          "main",
          "with",
          "default",
          "set",
          "for",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "are",
          "construct",
          "creates",
          "instance"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 14,
            "weight": 0.08284
          },
          {
            "term": "extra",
            "tf": 11,
            "weight": 0.065089
          },
          {
            "term": "field",
            "tf": 5,
            "weight": 0.029586
          },
          {
            "term": "values",
            "tf": 5,
            "weight": 0.029586
          },
          {
            "term": "fields",
            "tf": 5,
            "weight": 0.029586
          },
          {
            "term": "model",
            "tf": 4,
            "weight": 0.023669
          },
          {
            "term": "main",
            "tf": 4,
            "weight": 0.023669
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.023669
          },
          {
            "term": "default",
            "tf": 4,
            "weight": 0.023669
          },
          {
            "term": "set",
            "tf": 4,
            "weight": 0.023669
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.017751
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.017751
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.017751
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.017751
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.017751
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.017751
          },
          {
            "term": "are",
            "tf": 3,
            "weight": 0.017751
          },
          {
            "term": "construct",
            "tf": 2,
            "weight": 0.011834
          },
          {
            "term": "creates",
            "tf": 2,
            "weight": 0.011834
          },
          {
            "term": "instance",
            "tf": 2,
            "weight": 0.011834
          }
        ],
        "unique_terms": 85,
        "total_terms": 169
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "default",
        "extra",
        "field",
        "fields",
        "main",
        "model",
        "model\\_construct",
        "pydantic",
        "set",
        "values",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5280555555555555,
      "overall": 0.6760185185185185
    }
  },
  {
    "text": "### model\\_copy\n\nCreates a shallow or deep copy of a model instance with optional updates.\n\n**Implementation**: [pydantic/main.py384-416](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L384-L416)\n\n```\n```\n\n**Parameters**:\n\n- `update`: Dictionary of field updates to apply (not validated)\n- `deep`: If `True`, performs deep copy; otherwise shallow copy\n\n**Behavior**:\n\n1. Calls `self.__deepcopy__()` or `self.__copy__()` based on `deep` parameter\n\n2. If `update` provided:\n\n   - For models with `extra='allow'`: Updates regular fields in `__dict__` and extra fields in `__pydantic_extra__`\n   - Otherwise: Updates `__dict__` directly\n\n3. Updates `__pydantic_fields_set__` with keys from `update`\n\n**Warning**: The copied instance's `__dict__` is copied, which may include unexpected items like cached property values.\n\nSources:\n\n- [pydantic/main.py384-416](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L384-L416)\n- [tests/test\\_edge\\_cases.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_edge_cases.py)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0020",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "model\\_copy"
      ],
      "heading_text": "model\\_copy",
      "token_count": 295,
      "char_count": 1063,
      "start_char": 17929,
      "end_char": 18992,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5194117647058824,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.361574",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "model\\_copy",
      "chunk_hash": "c4242a50ce2ca891",
      "content_digest": "c4242a50ce2ca891",
      "chunk_length": 1063,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "copy",
          "updates",
          "deep",
          "main",
          "with",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "update",
          "extra",
          "fields",
          "dict",
          "model",
          "shallow",
          "instance",
          "py384",
          "416"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 12,
            "weight": 0.095238
          },
          {
            "term": "copy",
            "tf": 5,
            "weight": 0.039683
          },
          {
            "term": "updates",
            "tf": 5,
            "weight": 0.039683
          },
          {
            "term": "deep",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "main",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "update",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "extra",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "fields",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "dict",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "shallow",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "instance",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "py384",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "416",
            "tf": 2,
            "weight": 0.015873
          }
        ],
        "unique_terms": 67,
        "total_terms": 126
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "blob",
        "com",
        "copy",
        "deep",
        "github",
        "https",
        "main",
        "model\\_copy",
        "pydantic",
        "updates",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5194117647058824,
      "overall": 0.6731372549019606
    }
  },
  {
    "text": "## Schema Generation\n\nBaseModel provides methods for generating JSON schemas:\n\n```\n```\n\nThis can be used for:\n\n- Documentation\n- Integration with other tools\n- Client-side validation\n- Code generation\n\nSources:\n\n- [pydantic/main.py535-557](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L535-L557)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0021",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Schema Generation"
      ],
      "heading_text": "Schema Generation",
      "token_count": 82,
      "char_count": 318,
      "start_char": 18994,
      "end_char": 19312,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5354545454545454,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.362546",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Schema Generation",
      "chunk_hash": "782b0b4b86217199",
      "content_digest": "782b0b4b86217199",
      "chunk_length": 318,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "generation",
          "for",
          "main",
          "schema",
          "basemodel",
          "provides",
          "methods",
          "generating",
          "json",
          "schemas",
          "this",
          "can",
          "used",
          "documentation",
          "integration",
          "with",
          "other",
          "tools",
          "client"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.102564
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "schema",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "basemodel",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "generating",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "schemas",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "documentation",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "other",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "tools",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "client",
            "tf": 1,
            "weight": 0.025641
          }
        ],
        "unique_terms": 33,
        "total_terms": 39
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Schema Generation",
        "basemodel",
        "for",
        "generating",
        "generation",
        "json",
        "main",
        "methods",
        "provides",
        "pydantic",
        "schema"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5354545454545454,
      "overall": 0.6784848484848484
    }
  },
  {
    "text": "### **setattr** Behavior\n\nBaseModel customizes `__setattr__` to support validation, frozen fields, and private attributes.\n\n**Implementation**: [pydantic/main.py815-908](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L815-L908)\n\n****setattr** Routing Table** (`__pydantic_setattr_handlers__`):\n\n```\n```\n\n**Flow**:\n\n1. `__setattr__` looks up the attribute name in `__pydantic_setattr_handlers__`\n2. Calls the appropriate handler function\n3. For unknown attributes: checks if extra allowed, private attr, or raises error",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0023",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "**setattr** Behavior"
      ],
      "heading_text": "**setattr** Behavior",
      "token_count": 140,
      "char_count": 539,
      "start_char": 19348,
      "end_char": 19887,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5664705882352941,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.362546",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "**setattr** Behavior",
      "chunk_hash": "a7587c8bfc091b8c",
      "content_digest": "a7587c8bfc091b8c",
      "chunk_length": 539,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "setattr",
          "pydantic",
          "private",
          "attributes",
          "main",
          "handlers",
          "the",
          "behavior",
          "basemodel",
          "customizes",
          "support",
          "validation",
          "frozen",
          "fields",
          "and",
          "implementation",
          "py815",
          "908",
          "https",
          "github"
        ],
        "term_weights": [
          {
            "term": "setattr",
            "tf": 6,
            "weight": 0.103448
          },
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.103448
          },
          {
            "term": "private",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "attributes",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "handlers",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "behavior",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "basemodel",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "customizes",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "frozen",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "fields",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "py815",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "908",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.017241
          }
        ],
        "unique_terms": 43,
        "total_terms": 58
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "**setattr** Behavior",
        "attributes",
        "basemodel",
        "behavior",
        "customizes",
        "handlers",
        "main",
        "private",
        "pydantic",
        "setattr",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5664705882352941,
      "overall": 0.6888235294117647
    }
  },
  {
    "text": "### Field Tracking with model\\_fields\\_set\n\nThe `model_fields_set` property returns fields explicitly set during initialization:\n\n```\n```\n\n**Implementation**: [pydantic/main.py293-301](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L293-L301)\n\nSources:\n\n- [pydantic/main.py81-115](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L81-L115)\n- [pydantic/main.py815-908](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L815-L908)\n- [tests/test\\_main.py535-610](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_main.py#L535-L610)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0026",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 26,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Field Tracking with model\\_fields\\_set"
      ],
      "heading_text": "Field Tracking with model\\_fields\\_set",
      "token_count": 187,
      "char_count": 598,
      "start_char": 20386,
      "end_char": 20984,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.554,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.363570",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Field Tracking with model\\_fields\\_set",
      "chunk_hash": "15d09f1d6739baf1",
      "content_digest": "15d09f1d6739baf1",
      "chunk_length": 598,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "main",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "fields",
          "set",
          "model",
          "tests",
          "test",
          "field",
          "tracking",
          "with",
          "the",
          "property",
          "returns",
          "explicitly",
          "during"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 14,
            "weight": 0.17284
          },
          {
            "term": "main",
            "tf": 8,
            "weight": 0.098765
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.049383
          },
          {
            "term": "github",
            "tf": 4,
            "weight": 0.049383
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.049383
          },
          {
            "term": "blob",
            "tf": 4,
            "weight": 0.049383
          },
          {
            "term": "76ef0b08",
            "tf": 4,
            "weight": 0.049383
          },
          {
            "term": "fields",
            "tf": 3,
            "weight": 0.037037
          },
          {
            "term": "set",
            "tf": 3,
            "weight": 0.037037
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "field",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "tracking",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "property",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "returns",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "explicitly",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "during",
            "tf": 1,
            "weight": 0.012346
          }
        ],
        "unique_terms": 39,
        "total_terms": 81
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Field Tracking with model\\_fields\\_set",
        "blob",
        "com",
        "fields",
        "github",
        "https",
        "main",
        "model",
        "pydantic",
        "set"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.554,
      "overall": 0.6513333333333333
    }
  },
  {
    "text": "## Extra Fields Handling\n\nThe `extra` config controls how fields not defined in the model are handled.",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0027",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 27,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Extra Fields Handling"
      ],
      "heading_text": "Extra Fields Handling",
      "token_count": 21,
      "char_count": 102,
      "start_char": 20986,
      "end_char": 21088,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.363570",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Extra Fields Handling",
      "chunk_hash": "9ca32d150bd795e6",
      "content_digest": "9ca32d150bd795e6",
      "chunk_length": 102,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "extra",
          "fields",
          "the",
          "handling",
          "config",
          "controls",
          "how",
          "not",
          "defined",
          "model",
          "are",
          "handled"
        ],
        "term_weights": [
          {
            "term": "extra",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "fields",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "handling",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "config",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "controls",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "not",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "defined",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "handled",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 12,
        "total_terms": 15
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Extra Fields Handling",
        "config",
        "controls",
        "defined",
        "extra",
        "fields",
        "handling",
        "how",
        "model",
        "not",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "overall": 0.7515686274509804
    }
  },
  {
    "text": "### extra='allow'\n\n```\n```\n\n**Attribute Access**: Extra fields are accessible via `__getattr__` [pydantic/main.py910-924](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L910-L924)\n\n**Serialization**: Extra fields are included in `model_dump()` output [pydantic/main.py211-212](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L211-L212)\n\n**Assignment After Init**:\n\n```\n```",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0029",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 29,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "extra='allow'"
      ],
      "heading_text": "extra='allow'",
      "token_count": 121,
      "char_count": 413,
      "start_char": 21568,
      "end_char": 21981,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5233333333333333,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.365197",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "extra='allow'",
      "chunk_hash": "fa0748ed86e0a5b4",
      "content_digest": "fa0748ed86e0a5b4",
      "chunk_length": 413,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "main",
          "extra",
          "fields",
          "are",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "allow",
          "attribute",
          "access",
          "accessible",
          "via",
          "getattr",
          "py910",
          "924",
          "l910",
          "l924"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 8,
            "weight": 0.156863
          },
          {
            "term": "main",
            "tf": 4,
            "weight": 0.078431
          },
          {
            "term": "extra",
            "tf": 3,
            "weight": 0.058824
          },
          {
            "term": "fields",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.039216
          },
          {
            "term": "allow",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "attribute",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "access",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "accessible",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "via",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "getattr",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "py910",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "924",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "l910",
            "tf": 1,
            "weight": 0.019608
          },
          {
            "term": "l924",
            "tf": 1,
            "weight": 0.019608
          }
        ],
        "unique_terms": 32,
        "total_terms": 51
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "are",
        "blob",
        "com",
        "extra",
        "extra='allow'",
        "fields",
        "github",
        "https",
        "main",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5233333333333333,
      "overall": 0.6411111111111111
    }
  },
  {
    "text": "## validate\\_assignment Configuration\n\nWhen `validate_assignment=True`, field assignments are validated after model initialization.\n\n**Configuration**:\n\n```\n```\n\n**Behavior**:\n\n```\n```\n\n**Implementation**: [pydantic/main.py111](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L111-L111)\n\n- Calls `__pydantic_validator__.validate_assignment(model, name, value)`\n- Runs full validation pipeline (field validators, type coercion, constraints)\n- Updates `__dict__[name]` and adds `name` to `__pydantic_fields_set__`\n\n**Performance Note**: Adds validation overhead to every field assignment. Only use when runtime data integrity is required.\n\nSources:\n\n- [pydantic/main.py111](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L111-L111)\n- [tests/test\\_main.py754-803](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_main.py#L754-L803)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0032",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 32,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "validate\\_assignment Configuration"
      ],
      "heading_text": "validate\\_assignment Configuration",
      "token_count": 228,
      "char_count": 882,
      "start_char": 22378,
      "end_char": 23260,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.366298",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "validate\\_assignment Configuration",
      "chunk_hash": "9272b7436cb803cb",
      "content_digest": "9272b7436cb803cb",
      "chunk_length": 882,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "main",
          "assignment",
          "l111",
          "validate",
          "field",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "name",
          "configuration",
          "when",
          "model",
          "py111",
          "validation",
          "adds",
          "tests",
          "test"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 12,
            "weight": 0.115385
          },
          {
            "term": "main",
            "tf": 6,
            "weight": 0.057692
          },
          {
            "term": "assignment",
            "tf": 4,
            "weight": 0.038462
          },
          {
            "term": "l111",
            "tf": 4,
            "weight": 0.038462
          },
          {
            "term": "validate",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "field",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "name",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "configuration",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "when",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "py111",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "adds",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.019231
          }
        ],
        "unique_terms": 58,
        "total_terms": 104
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "assignment",
        "blob",
        "com",
        "field",
        "github",
        "https",
        "l111",
        "main",
        "pydantic",
        "validate",
        "validate\\_assignment Configuration"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.53,
      "overall": 0.6766666666666666
    }
  },
  {
    "text": "### Storage and Access\n\nPrivate attributes are stored in `__pydantic_private__` dict:\n\n```\n```\n\n**Initialization**: [pydantic/\\_internal/\\_model\\_construction.py354-369](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L354-L369)\n\n- `__pydantic_private__` is initialized in `init_private_attributes()`\n- Called from wrapped `model_post_init()` if private attrs exist\n- Default values are set from `__private_attributes__` metadata",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0035",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 35,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Storage and Access"
      ],
      "heading_text": "Storage and Access",
      "token_count": 122,
      "char_count": 474,
      "start_char": 23539,
      "end_char": 24013,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5268421052631579,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.368004",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Storage and Access",
      "chunk_hash": "6b313ec174b6222f",
      "content_digest": "6b313ec174b6222f",
      "chunk_length": 474,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "private",
          "pydantic",
          "attributes",
          "model",
          "are",
          "internal",
          "construction",
          "init",
          "from",
          "storage",
          "and",
          "access",
          "stored",
          "dict",
          "initialization",
          "py354",
          "369",
          "https",
          "github",
          "com"
        ],
        "term_weights": [
          {
            "term": "private",
            "tf": 6,
            "weight": 0.113208
          },
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.113208
          },
          {
            "term": "attributes",
            "tf": 3,
            "weight": 0.056604
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.056604
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "construction",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "init",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "storage",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "access",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "stored",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "dict",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "initialization",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "py354",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "369",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.018868
          }
        ],
        "unique_terms": 34,
        "total_terms": 53
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Storage and Access",
        "are",
        "attributes",
        "construction",
        "from",
        "init",
        "internal",
        "model",
        "private",
        "pydantic",
        "storage"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5268421052631579,
      "overall": 0.6756140350877192
    }
  },
  {
    "text": "### Characteristics  | Aspect               | Behavior                                                                                                                                                   | | -------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | | **Validation**       | None - not validated on init or assignment                                                                                                                 | | **Serialization**    | Excluded from `model_dump()` and `model_dump_json()`                                                                                                       | | **model\\_construct** | Can be set via `**values` after model\\_post\\_init [pydantic/main.py371-375](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L371-L375) | | **Naming**           | Must start with single `_` (not `__` dunder)                                                                                                               | | **Access**           | Normal Python attribute access                                                                                                                             |  Sources:  - [pydantic/main.py217](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L217-L217) - [pydantic/\\_internal/\\_model\\_construction.py354-369](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L354-L369) - [pydantic/\\_internal/\\_model\\_construction.py418-517](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L418-L517) - [tests/test\\_private\\_attributes.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_private_attributes.py)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0036",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 36,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Characteristics"
      ],
      "heading_text": "Characteristics",
      "token_count": 329,
      "char_count": 1852,
      "start_char": 24015,
      "end_char": 25867,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5014027027027027,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.369062",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Characteristics",
      "chunk_hash": "6020a8e7b103b01c",
      "content_digest": "6020a8e7b103b01c",
      "chunk_length": 1852,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "model",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "main",
          "internal",
          "construction",
          "not",
          "init",
          "dump",
          "access",
          "l217",
          "tests",
          "test",
          "private",
          "attributes",
          "characteristics"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 18,
            "weight": 0.146341
          },
          {
            "term": "model",
            "tf": 8,
            "weight": 0.065041
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.04065
          },
          {
            "term": "github",
            "tf": 5,
            "weight": 0.04065
          },
          {
            "term": "com",
            "tf": 5,
            "weight": 0.04065
          },
          {
            "term": "blob",
            "tf": 5,
            "weight": 0.04065
          },
          {
            "term": "76ef0b08",
            "tf": 5,
            "weight": 0.04065
          },
          {
            "term": "main",
            "tf": 4,
            "weight": 0.03252
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.03252
          },
          {
            "term": "construction",
            "tf": 4,
            "weight": 0.03252
          },
          {
            "term": "not",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "init",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "dump",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "access",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "l217",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "private",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "attributes",
            "tf": 2,
            "weight": 0.01626
          },
          {
            "term": "characteristics",
            "tf": 1,
            "weight": 0.00813
          }
        ],
        "unique_terms": 61,
        "total_terms": 123
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Characteristics",
        "blob",
        "com",
        "construction",
        "github",
        "https",
        "internal",
        "main",
        "model",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5014027027027027,
      "overall": 0.7338009009009009
    }
  },
  {
    "text": "## Computed Fields\n\nComputed fields are properties included in model serialization, defined with the `@computed_field` decorator.",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0037",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 37,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Computed Fields"
      ],
      "heading_text": "Computed Fields",
      "token_count": 24,
      "char_count": 129,
      "start_char": 25869,
      "end_char": 25998,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.370052",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Computed Fields",
      "chunk_hash": "eed9986422f6ea61",
      "content_digest": "eed9986422f6ea61",
      "chunk_length": 129,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "computed",
          "fields",
          "are",
          "properties",
          "included",
          "model",
          "serialization",
          "defined",
          "with",
          "the",
          "field",
          "decorator"
        ],
        "term_weights": [
          {
            "term": "computed",
            "tf": 3,
            "weight": 0.2
          },
          {
            "term": "fields",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "properties",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "included",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "serialization",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "defined",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "field",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "decorator",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 12,
        "total_terms": 15
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Computed Fields",
        "are",
        "computed",
        "defined",
        "fields",
        "included",
        "model",
        "properties",
        "serialization",
        "the",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "overall": 0.7508333333333334
    }
  },
  {
    "text": "## Model Rebuilding\n\nThe `model_rebuild()` class method regenerates a model's schema when forward references couldn't be resolved initially.",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0042",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 42,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Rebuilding"
      ],
      "heading_text": "Model Rebuilding",
      "token_count": 29,
      "char_count": 140,
      "start_char": 27119,
      "end_char": 27259,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.371072",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Model Rebuilding",
      "chunk_hash": "80a226c45a32ac0d",
      "content_digest": "80a226c45a32ac0d",
      "chunk_length": 140,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "model",
          "rebuilding",
          "the",
          "rebuild",
          "class",
          "method",
          "regenerates",
          "schema",
          "when",
          "forward",
          "references",
          "couldn",
          "resolved",
          "initially"
        ],
        "term_weights": [
          {
            "term": "model",
            "tf": 3,
            "weight": 0.1875
          },
          {
            "term": "rebuilding",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "rebuild",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "regenerates",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "schema",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "forward",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "references",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "couldn",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "resolved",
            "tf": 1,
            "weight": 0.0625
          },
          {
            "term": "initially",
            "tf": 1,
            "weight": 0.0625
          }
        ],
        "unique_terms": 14,
        "total_terms": 16
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Rebuilding",
        "class",
        "forward",
        "method",
        "model",
        "rebuild",
        "rebuilding",
        "regenerates",
        "schema",
        "the",
        "when"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### Implementation\n\n**Method signature**: [pydantic/main.py593-650](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L593-L650)\n\n```\n```\n\n**Parameters**:\n\n- `force`: Rebuild even if `__pydantic_complete__=True`\n- `raise_errors`: Raise exceptions on schema generation errors\n- `_parent_namespace_depth`: Frame depth for namespace resolution\n- `_types_namespace`: Explicit namespace for type resolution\n\n**Returns**:\n\n- `None`: Schema was already complete and rebuild skipped\n- `True`: Rebuild succeeded\n- `False`: Rebuild failed (only when `raise_errors=False`)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0044",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 44,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Implementation"
      ],
      "heading_text": "Implementation",
      "token_count": 145,
      "char_count": 579,
      "start_char": 27355,
      "end_char": 27934,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5163157894736842,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.372052",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Implementation",
      "chunk_hash": "0cc2f637c3c6557a",
      "content_digest": "0cc2f637c3c6557a",
      "chunk_length": 579,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "rebuild",
          "namespace",
          "raise",
          "errors",
          "main",
          "complete",
          "true",
          "schema",
          "depth",
          "for",
          "resolution",
          "false",
          "implementation",
          "method",
          "signature",
          "py593",
          "650",
          "https",
          "github"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.074627
          },
          {
            "term": "rebuild",
            "tf": 4,
            "weight": 0.059701
          },
          {
            "term": "namespace",
            "tf": 4,
            "weight": 0.059701
          },
          {
            "term": "raise",
            "tf": 3,
            "weight": 0.044776
          },
          {
            "term": "errors",
            "tf": 3,
            "weight": 0.044776
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "complete",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "true",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "schema",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "depth",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "resolution",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "false",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "signature",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "py593",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "650",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.014925
          }
        ],
        "unique_terms": 45,
        "total_terms": 67
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Implementation",
        "complete",
        "depth",
        "errors",
        "main",
        "namespace",
        "pydantic",
        "raise",
        "rebuild",
        "schema",
        "true"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5163157894736842,
      "overall": 0.705438596491228
    }
  },
  {
    "text": "### Rebuild Process  1. **Check Completion**: If `__pydantic_complete__=True` and `force=False`, returns `None` 2. **Clear Schema Artifacts**: Deletes `__pydantic_core_schema__`, `__pydantic_validator__`, `__pydantic_serializer__` 3. **Resolve Namespace**: Gets parent frame namespace for type resolution 4. **Complete Model**: Calls `complete_model_class()` to regenerate schema  **Note**: Not thread-safe. Concurrent rebuilds can cause issues with shared validator/serializer instances. Sources:  - [pydantic/main.py593-650](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L593-L650) - [pydantic/\\_internal/\\_model\\_construction.py619-650](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L619-L650)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0045",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 45,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Rebuild Process"
      ],
      "heading_text": "Rebuild Process",
      "token_count": 211,
      "char_count": 765,
      "start_char": 27936,
      "end_char": 28701,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5790909090909091,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.372052",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Rebuild Process",
      "chunk_hash": "6d3784bf0c185132",
      "content_digest": "6d3784bf0c185132",
      "chunk_length": 765,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "model",
          "complete",
          "schema",
          "validator",
          "serializer",
          "namespace",
          "main",
          "650",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "l650",
          "internal",
          "construction",
          "rebuild",
          "process",
          "check"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 12,
            "weight": 0.134831
          },
          {
            "term": "model",
            "tf": 4,
            "weight": 0.044944
          },
          {
            "term": "complete",
            "tf": 3,
            "weight": 0.033708
          },
          {
            "term": "schema",
            "tf": 3,
            "weight": 0.033708
          },
          {
            "term": "validator",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "serializer",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "namespace",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "650",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "l650",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "construction",
            "tf": 2,
            "weight": 0.022472
          },
          {
            "term": "rebuild",
            "tf": 1,
            "weight": 0.011236
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.011236
          },
          {
            "term": "check",
            "tf": 1,
            "weight": 0.011236
          }
        ],
        "unique_terms": 58,
        "total_terms": 89
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "650",
        "Rebuild Process",
        "complete",
        "https",
        "main",
        "model",
        "namespace",
        "pydantic",
        "schema",
        "serializer",
        "validator"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5790909090909091,
      "overall": 0.693030303030303
    }
  },
  {
    "text": "## Dynamic Model Creation\n\nThe `create_model()` function creates BaseModel subclasses at runtime.\n\n**Function signature**: [pydantic/main.py1083-1228](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L1083-L1228)\n\n```\n```",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0046",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 46,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Dynamic Model Creation"
      ],
      "heading_text": "Dynamic Model Creation",
      "token_count": 66,
      "char_count": 240,
      "start_char": 28704,
      "end_char": 28944,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5723529411764706,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.373057",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Dynamic Model Creation",
      "chunk_hash": "5bb01716f51cdae6",
      "content_digest": "5bb01716f51cdae6",
      "chunk_length": 240,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "model",
          "function",
          "main",
          "dynamic",
          "creation",
          "the",
          "create",
          "creates",
          "basemodel",
          "subclasses",
          "runtime",
          "signature",
          "py1083",
          "1228",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.142857
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "function",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.071429
          },
          {
            "term": "dynamic",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "creation",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "creates",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "basemodel",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "subclasses",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "runtime",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "signature",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "py1083",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "1228",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "blob",
            "tf": 1,
            "weight": 0.035714
          },
          {
            "term": "76ef0b08",
            "tf": 1,
            "weight": 0.035714
          }
        ],
        "unique_terms": 22,
        "total_terms": 28
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Dynamic Model Creation",
        "basemodel",
        "create",
        "creates",
        "creation",
        "dynamic",
        "function",
        "main",
        "model",
        "pydantic",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5723529411764706,
      "overall": 0.6574509803921568
    }
  },
  {
    "text": "### Field Definition Formats  | Format            | Description               | Example                         | | ----------------- | ------------------------- | ------------------------------- | | `(type, default)` | Type with default value   | `field1=(str, 'default')`       | | `(type, ...)`     | Required field            | `field2=(int, ...)`             | | `type`            | Required, annotation-only | `field3=str`                    | | `FieldInfo`       | From Field() function     | `field4=Field(default=0, gt=0)` |",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0047",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 47,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Field Definition Formats"
      ],
      "heading_text": "Field Definition Formats",
      "token_count": 117,
      "char_count": 533,
      "start_char": 28946,
      "end_char": 29479,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6555172413793103,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.373057",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Field Definition Formats",
      "chunk_hash": "2a9ecb58989842ac",
      "content_digest": "2a9ecb58989842ac",
      "chunk_length": 533,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "field",
          "type",
          "default",
          "str",
          "required",
          "definition",
          "formats",
          "format",
          "description",
          "example",
          "with",
          "value",
          "field1",
          "field2",
          "int",
          "annotation",
          "only",
          "field3",
          "fieldinfo",
          "from"
        ],
        "term_weights": [
          {
            "term": "field",
            "tf": 4,
            "weight": 0.121212
          },
          {
            "term": "type",
            "tf": 4,
            "weight": 0.121212
          },
          {
            "term": "default",
            "tf": 4,
            "weight": 0.121212
          },
          {
            "term": "str",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "required",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "definition",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "formats",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "format",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "description",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "value",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "field1",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "field2",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "int",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "annotation",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "only",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "field3",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "fieldinfo",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.030303
          }
        ],
        "unique_terms": 22,
        "total_terms": 33
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Field Definition Formats",
        "default",
        "definition",
        "description",
        "example",
        "field",
        "format",
        "formats",
        "required",
        "str",
        "type"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6555172413793103,
      "overall": 0.7851724137931034
    }
  },
  {
    "text": "### Usage Examples\n\n**With inheritance**:\n\n```\n```\n\n**With validators** (V2 style):\n\n```\n```\n\nSources:\n\n- [pydantic/main.py1083-1228](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L1083-L1228)\n- [tests/test\\_create\\_model.py20-124](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_create_model.py#L20-L124)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0049",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 49,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Usage Examples"
      ],
      "heading_text": "Usage Examples",
      "token_count": 112,
      "char_count": 341,
      "start_char": 30106,
      "end_char": 30447,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.7066666666666667,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.374756",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Usage Examples",
      "chunk_hash": "82824cda57a53c08",
      "content_digest": "82824cda57a53c08",
      "chunk_length": 341,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "with",
          "main",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test",
          "create",
          "model",
          "usage",
          "examples",
          "inheritance",
          "validators",
          "style",
          "sources",
          "py1083",
          "1228"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.142857
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "usage",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "inheritance",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "validators",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "style",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "py1083",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "1228",
            "tf": 1,
            "weight": 0.02381
          }
        ],
        "unique_terms": 26,
        "total_terms": 42
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Usage Examples",
        "blob",
        "com",
        "github",
        "https",
        "main",
        "pydantic",
        "test",
        "tests",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.7066666666666667,
      "overall": 0.7022222222222222
    }
  },
  {
    "text": "### Custom **init**\n\nOverride `__init__` to customize pre-validation behavior:\n\n```\n```\n\n**Note**: `__pydantic_custom_init__` class attribute is set to `True` when `__init__` is overridden [pydantic/\\_internal/\\_model\\_construction.py165](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L165-L165)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0051",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 51,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Custom **init**"
      ],
      "heading_text": "Custom **init**",
      "token_count": 97,
      "char_count": 342,
      "start_char": 30473,
      "end_char": 30815,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.375318",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Custom **init**",
      "chunk_hash": "77f23a65bffbc70b",
      "content_digest": "77f23a65bffbc70b",
      "chunk_length": 342,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "init",
          "custom",
          "internal",
          "model",
          "construction",
          "l165",
          "override",
          "customize",
          "pre",
          "validation",
          "behavior",
          "note",
          "class",
          "attribute",
          "set",
          "true",
          "when",
          "overridden",
          "py165"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.135135
          },
          {
            "term": "init",
            "tf": 4,
            "weight": 0.108108
          },
          {
            "term": "custom",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "construction",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "l165",
            "tf": 2,
            "weight": 0.054054
          },
          {
            "term": "override",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "customize",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "pre",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "behavior",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "note",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "attribute",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "true",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "overridden",
            "tf": 1,
            "weight": 0.027027
          },
          {
            "term": "py165",
            "tf": 1,
            "weight": 0.027027
          }
        ],
        "unique_terms": 25,
        "total_terms": 37
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Custom **init**",
        "construction",
        "custom",
        "customize",
        "init",
        "internal",
        "l165",
        "model",
        "override",
        "pre",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.54,
      "overall": 0.68
    }
  },
  {
    "text": "### model\\_post\\_init\n\nHook called after validation and instance creation:\n\n```\n```\n\n**Signature**: [pydantic/main.py587-590](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/main.py#L587-L590)\n\n```\n```\n\n**Parameters**:\n\n- `__context`: Context passed from validators or `None`\n\n**When called**:\n\n- After `__pydantic_validator__.validate_python()` completes\n- Before `__init__` returns\n- Also called from `model_construct()` with `context=None`\n\n**Special behavior**:\n\n- If private attributes exist, ModelMetaclass wraps `model_post_init` to initialize `__pydantic_private__` first [pydantic/\\_internal/\\_model\\_construction.py133-147](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_model_construction.py#L133-L147)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0052",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 52,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "model\\_post\\_init"
      ],
      "heading_text": "model\\_post\\_init",
      "token_count": 203,
      "char_count": 749,
      "start_char": 30817,
      "end_char": 31566,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5364285714285714,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.375447",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "model\\_post\\_init",
      "chunk_hash": "ec0760d6754eeeb7",
      "content_digest": "ec0760d6754eeeb7",
      "chunk_length": 749,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "model",
          "init",
          "called",
          "context",
          "post",
          "after",
          "main",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "from",
          "none",
          "private",
          "internal",
          "construction",
          "hook",
          "validation"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 10,
            "weight": 0.117647
          },
          {
            "term": "model",
            "tf": 5,
            "weight": 0.058824
          },
          {
            "term": "init",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "called",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "context",
            "tf": 3,
            "weight": 0.035294
          },
          {
            "term": "post",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "after",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "none",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "private",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "construction",
            "tf": 2,
            "weight": 0.023529
          },
          {
            "term": "hook",
            "tf": 1,
            "weight": 0.011765
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.011765
          }
        ],
        "unique_terms": 53,
        "total_terms": 85
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "after",
        "called",
        "context",
        "github",
        "https",
        "init",
        "main",
        "model",
        "model\\_post\\_init",
        "post",
        "pydantic"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5364285714285714,
      "overall": 0.6788095238095236
    }
  },
  {
    "text": "## Integration with Validators\n\nBaseModel works closely with Pydantic validators to allow field-level and model-level validation:\n\n```\n```\n\nThis topic is covered in depth in the Validators documentation.\n\nSources:\n\n- [tests/test\\_validators.py192-215](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_validators.py#L192-L215)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0054",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 54,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration with Validators"
      ],
      "heading_text": "Integration with Validators",
      "token_count": 79,
      "char_count": 338,
      "start_char": 32411,
      "end_char": 32749,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5416129032258065,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.376374",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Integration with Validators",
      "chunk_hash": "d653ae6bb6a47bf5",
      "content_digest": "d653ae6bb6a47bf5",
      "chunk_length": 338,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validators",
          "pydantic",
          "with",
          "level",
          "tests",
          "test",
          "integration",
          "basemodel",
          "works",
          "closely",
          "allow",
          "field",
          "and",
          "model",
          "validation",
          "this",
          "topic",
          "covered",
          "depth",
          "the"
        ],
        "term_weights": [
          {
            "term": "validators",
            "tf": 5,
            "weight": 0.121951
          },
          {
            "term": "pydantic",
            "tf": 3,
            "weight": 0.073171
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "level",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "basemodel",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "works",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "closely",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "allow",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "field",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "topic",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "covered",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "depth",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.02439
          }
        ],
        "unique_terms": 31,
        "total_terms": 41
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration with Validators",
        "basemodel",
        "closely",
        "integration",
        "level",
        "pydantic",
        "test",
        "tests",
        "validators",
        "with",
        "works"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5416129032258065,
      "overall": 0.6805376344086022
    }
  },
  {
    "text": "## Usage Examples",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0055",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 55,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Usage Examples"
      ],
      "heading_text": "Usage Examples",
      "token_count": 3,
      "char_count": 17,
      "start_char": 32751,
      "end_char": 32768,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.376374",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Usage Examples",
      "chunk_hash": "40ba86df7413777b",
      "content_digest": "40ba86df7413777b",
      "chunk_length": 17,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "usage",
          "examples"
        ],
        "term_weights": [
          {
            "term": "usage",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Usage Examples",
        "examples",
        "usage"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### Basic Model Definition\n\n```\n```",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0056",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 56,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Basic Model Definition"
      ],
      "heading_text": "Basic Model Definition",
      "token_count": 8,
      "char_count": 35,
      "start_char": 32770,
      "end_char": 32805,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.376374",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Basic Model Definition",
      "chunk_hash": "876409a6097c5aca",
      "content_digest": "876409a6097c5aca",
      "chunk_length": 35,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "basic",
          "model",
          "definition"
        ],
        "term_weights": [
          {
            "term": "basic",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "definition",
            "tf": 1,
            "weight": 0.333333
          }
        ],
        "unique_terms": 3,
        "total_terms": 3
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Basic Model Definition",
        "basic",
        "definition",
        "model"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.54,
      "overall": 0.68
    }
  },
  {
    "text": "### Model Construction and Copying\n\n```\n```",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0059",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 59,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Construction and Copying"
      ],
      "heading_text": "Model Construction and Copying",
      "token_count": 10,
      "char_count": 43,
      "start_char": 32892,
      "end_char": 32935,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.376374",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Model Construction and Copying",
      "chunk_hash": "eb469d1ca9a650d0",
      "content_digest": "eb469d1ca9a650d0",
      "chunk_length": 43,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "model",
          "construction",
          "and",
          "copying"
        ],
        "term_weights": [
          {
            "term": "model",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "construction",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.25
          },
          {
            "term": "copying",
            "tf": 1,
            "weight": 0.25
          }
        ],
        "unique_terms": 4,
        "total_terms": 4
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Construction and Copying",
        "and",
        "construction",
        "copying",
        "model"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.6823809523809524
    }
  },
  {
    "text": "## Error Handling\n\nWhen validation fails, BaseModel raises a `ValidationError` with detailed information:\n\n```\n```\n\nError information includes:\n\n- Error type\n- Error location (field)\n- Error message\n- Invalid input value\n- Context-specific details\n\nSources:\n\n- [tests/test\\_main.py87-103](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_main.py#L87-L103)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0061",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 61,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Error Handling"
      ],
      "heading_text": "Error Handling",
      "token_count": 90,
      "char_count": 368,
      "start_char": 33221,
      "end_char": 33589,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5110526315789473,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.377368",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Error Handling",
      "chunk_hash": "29eb438f3b993a8c",
      "content_digest": "29eb438f3b993a8c",
      "chunk_length": 368,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "error",
          "information",
          "tests",
          "test",
          "main",
          "pydantic",
          "handling",
          "when",
          "validation",
          "fails",
          "basemodel",
          "raises",
          "validationerror",
          "with",
          "detailed",
          "includes",
          "type",
          "location",
          "field",
          "message"
        ],
        "term_weights": [
          {
            "term": "error",
            "tf": 5,
            "weight": 0.111111
          },
          {
            "term": "information",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "pydantic",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "handling",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "validation",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "fails",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "basemodel",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "raises",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "validationerror",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "detailed",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "includes",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "location",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "field",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "message",
            "tf": 1,
            "weight": 0.022222
          }
        ],
        "unique_terms": 36,
        "total_terms": 45
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Error Handling",
        "error",
        "fails",
        "handling",
        "information",
        "main",
        "pydantic",
        "test",
        "tests",
        "validation",
        "when"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5110526315789473,
      "overall": 0.6703508771929824
    }
  },
  {
    "text": "## Performance Considerations  - Use `model_construct` for trusted data to skip validation - Consider `frozen=True` for immutable models (enables hashing) - Use `exclude_unset=True` when serializing to minimize output - Be mindful of deep validation in complex nested models  Sources:  - [tests/test\\_construction.py15-35](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_construction.py#L15-L35) - [tests/test\\_main.py613-643](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_main.py#L613-L643)  Dismiss  Refresh this wiki  This wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0062",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 62,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Performance Considerations"
      ],
      "heading_text": "Performance Considerations",
      "token_count": 159,
      "char_count": 621,
      "start_char": 33591,
      "end_char": 34212,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5188135593220339,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.377368",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "Performance Considerations",
      "chunk_hash": "7b5288cc54ae6ff1",
      "content_digest": "7b5288cc54ae6ff1",
      "chunk_length": 621,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "tests",
          "test",
          "pydantic",
          "use",
          "for",
          "validation",
          "true",
          "models",
          "construction",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "main",
          "refresh",
          "this",
          "wiki",
          "performance",
          "considerations"
        ],
        "term_weights": [
          {
            "term": "tests",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "test",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "true",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "construction",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "wiki",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "performance",
            "tf": 1,
            "weight": 0.0125
          },
          {
            "term": "considerations",
            "tf": 1,
            "weight": 0.0125
          }
        ],
        "unique_terms": 56,
        "total_terms": 80
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Performance Considerations",
        "construction",
        "for",
        "https",
        "models",
        "pydantic",
        "test",
        "tests",
        "true",
        "use",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5188135593220339,
      "overall": 0.706271186440678
    }
  },
  {
    "text": "### On this page\n\n- [BaseModel](#basemodel.md)\n- [Purpose and Functionality](#purpose-and-functionality.md)\n- [BaseModel Architecture](#basemodel-architecture.md)\n- [Model Lifecycle](#model-lifecycle.md)\n- [Model Definition Phase](#model-definition-phase.md)\n- [Model Instantiation Phase](#model-instantiation-phase.md)\n- [Core Instance Attributes](#core-instance-attributes.md)\n- [Class-Level Attributes](#class-level-attributes.md)\n- [Instance-Level Attributes](#instance-level-attributes.md)\n- [Properties](#properties.md)\n- [Validation Methods](#validation-methods.md)\n- [\\_\\_init\\_\\_ (Primary Validation)](#__init__-primary-validation.md)\n- [model\\_validate](#model_validate.md)\n- [model\\_validate\\_json](#model_validate_json.md)\n- [model\\_validate\\_strings](#model_validate_strings.md)\n- [Serialization Methods](#serialization-methods.md)\n- [model\\_dump](#model_dump.md)\n- [model\\_dump\\_json](#model_dump_json.md)\n- [Model Construction and Copying](#model-construction-and-copying.md)\n- [model\\_construct](#model_construct.md)\n- [model\\_copy](#model_copy.md)\n- [Schema Generation](#schema-generation.md)\n- [Field Access and Modification](#field-access-and-modification.md)\n- [\\_\\_setattr\\_\\_ Behavior](#__setattr__-behavior.md)\n- [Field Assignment](#field-assignment.md)\n- [Frozen Fields](#frozen-fields.md)\n- [Field Tracking with model\\_fields\\_set](#field-tracking-with-model_fields_set.md)\n- [Extra Fields Handling](#extra-fields-handling.md)\n- [Configuration Options](#configuration-options.md)\n- [extra='allow'](#extraallow.md)\n- [extra='forbid'](#extraforbid.md)\n- [extra='ignore'](#extraignore.md)\n- [validate\\_assignment Configuration](#validate_assignment-configuration.md)\n- [Private Attributes](#private-attributes.md)\n- [Defining Private Attributes](#defining-private-attributes.md)\n- [Storage and Access](#storage-and-access.md)\n- [Characteristics](#characteristics.md)\n- [Computed Fields](#computed-fields.md)\n- [Definition](#definition.md)\n- [Characteristics](#characteristics-1.md)\n- [Serialization](#serialization.md)\n- [With cached\\_property](#with-cached_property.md)\n- [Model Rebuilding](#model-rebuilding.md)\n- [When to Use](#when-to-use.md)\n- [Implementation](#implementation.md)\n- [Rebuild Process](#rebuild-process.md)\n- [Dynamic Model Creation](#dynamic-model-creation.md)\n- [Field Definition Formats](#field-definition-formats.md)\n- [Special Parameters](#special-parameters.md)\n- [Usage Examples](#usage-examples.md)\n- [Customization Hooks](#customization-hooks.md)\n- [Custom \\_\\_init\\_\\_](#custom-__init__.md)\n- [model\\_post\\_init](#model_post_init.md)\n- [\\_\\_pydantic\\_init\\_subclass\\_\\_](#__pydantic_init_subclass__.md)\n- [Integration with Validators](#integration-with-validators.md)\n- [Usage Examples](#usage-examples-1.md)\n- [Basic Model Definition](#basic-model-definition.md)\n- [Validation from Different Sources](#validation-from-different-sources.md)\n- [Serialization Patterns](#serialization-patterns.md)\n- [Model Construction and Copying](#model-construction-and-copying-1.md)\n- [Working with Extra Fields](#working-with-extra-fields.md)\n- [Error Handling](#error-handling.md)",
    "metadata": {
      "chunk_id": "e2d347a5bc68-0063",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "filename": "_pydantic_pydantic_2.1-basemodel.md",
      "file_extension": ".md",
      "chunk_index": 63,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 800,
      "char_count": 3120,
      "start_char": 34214,
      "end_char": 37334,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.8760204081632654,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:35.380493",
      "document_id": "e2d347a5bc68",
      "document_name": "_pydantic_pydantic_2.1-basemodel",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "source_filename": "_pydantic_pydantic_2.1-basemodel.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_2.1-basemodel.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "9e6839fa448c75c6",
      "content_digest": "9e6839fa448c75c6",
      "chunk_length": 3120,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "model",
          "and",
          "attributes",
          "fields",
          "definition",
          "init",
          "validate",
          "field",
          "with",
          "extra",
          "validation",
          "serialization",
          "basemodel",
          "phase",
          "instance",
          "level",
          "methods",
          "json",
          "dump",
          "construction"
        ],
        "term_weights": [
          {
            "term": "model",
            "tf": 34,
            "weight": 0.112211
          },
          {
            "term": "and",
            "tf": 10,
            "weight": 0.033003
          },
          {
            "term": "attributes",
            "tf": 10,
            "weight": 0.033003
          },
          {
            "term": "fields",
            "tf": 10,
            "weight": 0.033003
          },
          {
            "term": "definition",
            "tf": 8,
            "weight": 0.026403
          },
          {
            "term": "init",
            "tf": 8,
            "weight": 0.026403
          },
          {
            "term": "validate",
            "tf": 8,
            "weight": 0.026403
          },
          {
            "term": "field",
            "tf": 8,
            "weight": 0.026403
          },
          {
            "term": "with",
            "tf": 8,
            "weight": 0.026403
          },
          {
            "term": "extra",
            "tf": 7,
            "weight": 0.023102
          },
          {
            "term": "validation",
            "tf": 6,
            "weight": 0.019802
          },
          {
            "term": "serialization",
            "tf": 6,
            "weight": 0.019802
          },
          {
            "term": "basemodel",
            "tf": 4,
            "weight": 0.013201
          },
          {
            "term": "phase",
            "tf": 4,
            "weight": 0.013201
          },
          {
            "term": "instance",
            "tf": 4,
            "weight": 0.013201
          },
          {
            "term": "level",
            "tf": 4,
            "weight": 0.013201
          },
          {
            "term": "methods",
            "tf": 4,
            "weight": 0.013201
          },
          {
            "term": "json",
            "tf": 4,
            "weight": 0.013201
          },
          {
            "term": "dump",
            "tf": 4,
            "weight": 0.013201
          },
          {
            "term": "construction",
            "tf": 4,
            "weight": 0.013201
          }
        ],
        "unique_terms": 89,
        "total_terms": 303
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "and",
        "attributes",
        "definition",
        "extra",
        "field",
        "fields",
        "init",
        "model",
        "validate",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.8760204081632654,
      "overall": 0.7586734693877552
    }
  }
]