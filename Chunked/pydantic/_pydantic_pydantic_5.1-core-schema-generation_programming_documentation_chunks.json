[
  {
    "text": "## The GenerateSchema Class\n\nThe `GenerateSchema` class is the central component responsible for transforming Python types into core schemas. It provides methods for handling different Python types and constructing appropriate schema representations.\n\n```\n```\n\nThe `generate_schema` method is the main entry point that dispatches to type-specific handlers based on the input object. The class also maintains state such as a stack of models being processed (to handle recursive references) and definitions being generated.\n\nSources:\n\n- [pydantic/\\_internal/\\_generate\\_schema.py318-342](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L318-L342)\n- [pydantic/\\_internal/\\_generate\\_schema.py679-716](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L679-L716)\n- [pydantic/\\_internal/\\_generate\\_schema.py366-377](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L366-L377)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "The GenerateSchema Class"
      ],
      "heading_text": "The GenerateSchema Class",
      "token_count": 243,
      "char_count": 994,
      "start_char": 4361,
      "end_char": 5355,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.52625,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.396372",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "The GenerateSchema Class",
      "chunk_hash": "09c89051be1b9caf",
      "content_digest": "09c89051be1b9caf",
      "chunk_length": 994,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "the",
          "generate",
          "internal",
          "class",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "generateschema",
          "for",
          "python",
          "types",
          "and",
          "being",
          "central",
          "component",
          "responsible"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 12,
            "weight": 0.099174
          },
          {
            "term": "schema",
            "tf": 8,
            "weight": 0.066116
          },
          {
            "term": "the",
            "tf": 7,
            "weight": 0.057851
          },
          {
            "term": "generate",
            "tf": 7,
            "weight": 0.057851
          },
          {
            "term": "internal",
            "tf": 6,
            "weight": 0.049587
          },
          {
            "term": "class",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "generateschema",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "being",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "central",
            "tf": 1,
            "weight": 0.008264
          },
          {
            "term": "component",
            "tf": 1,
            "weight": 0.008264
          },
          {
            "term": "responsible",
            "tf": 1,
            "weight": 0.008264
          }
        ],
        "unique_terms": 68,
        "total_terms": 121
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "The GenerateSchema Class",
        "blob",
        "class",
        "com",
        "generate",
        "github",
        "https",
        "internal",
        "pydantic",
        "schema",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.52625,
      "overall": 0.6754166666666666
    }
  },
  {
    "text": "## Schema Generation Process\n\nThe schema generation process follows several steps to convert Python types into a complete core schema:\n\n```\n```\n\nSources:\n\n- [pydantic/\\_internal/\\_generate\\_schema.py679-716](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L679-L716)\n- [pydantic/\\_internal/\\_generate\\_schema.py843-889](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L843-L889)\n- [pydantic/\\_internal/\\_generate\\_schema.py718-843](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L718-L843)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Schema Generation Process"
      ],
      "heading_text": "Schema Generation Process",
      "token_count": 178,
      "char_count": 616,
      "start_char": 5357,
      "end_char": 5973,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.7279310344827586,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.397043",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Schema Generation Process",
      "chunk_hash": "e8b02d7179159efd",
      "content_digest": "e8b02d7179159efd",
      "chunk_length": 616,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "internal",
          "generate",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "generation",
          "process",
          "l843",
          "the",
          "follows",
          "several",
          "steps",
          "convert",
          "python",
          "types",
          "into"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 12,
            "weight": 0.16
          },
          {
            "term": "schema",
            "tf": 9,
            "weight": 0.12
          },
          {
            "term": "internal",
            "tf": 6,
            "weight": 0.08
          },
          {
            "term": "generate",
            "tf": 6,
            "weight": 0.08
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.04
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.04
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.04
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.04
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.04
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "l843",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "follows",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "several",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "steps",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "convert",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.013333
          }
        ],
        "unique_terms": 33,
        "total_terms": 75
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Schema Generation Process",
        "blob",
        "com",
        "generate",
        "generation",
        "github",
        "https",
        "internal",
        "pydantic",
        "schema"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.7279310344827586,
      "overall": 0.7426436781609195
    }
  },
  {
    "text": "## Type-Specific Schema Generation\n\nDifferent Python types require specialized schema generation logic. Here are some key schema generation methods:",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Type-Specific Schema Generation"
      ],
      "heading_text": "Type-Specific Schema Generation",
      "token_count": 24,
      "char_count": 148,
      "start_char": 6653,
      "end_char": 6801,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5268421052631579,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.398161",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Type-Specific Schema Generation",
      "chunk_hash": "996fbfef105a30f2",
      "content_digest": "996fbfef105a30f2",
      "chunk_length": 148,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "schema",
          "generation",
          "type",
          "specific",
          "different",
          "python",
          "types",
          "require",
          "specialized",
          "logic",
          "here",
          "are",
          "some",
          "key",
          "methods"
        ],
        "term_weights": [
          {
            "term": "schema",
            "tf": 3,
            "weight": 0.157895
          },
          {
            "term": "generation",
            "tf": 3,
            "weight": 0.157895
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "specific",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "different",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "require",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "specialized",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "here",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "some",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "key",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.052632
          }
        ],
        "unique_terms": 15,
        "total_terms": 19
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Type-Specific Schema Generation",
        "different",
        "generation",
        "logic",
        "python",
        "require",
        "schema",
        "specialized",
        "specific",
        "type",
        "types"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5268421052631579,
      "overall": 0.642280701754386
    }
  },
  {
    "text": "### Container Types\n\nFor container types like lists, dictionaries, and sets, the schema generation recursively processes the contained types:\n\n```\n```\n\nSources:\n\n- [pydantic/\\_internal/\\_generate\\_schema.py366-377](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L366-L377)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Container Types"
      ],
      "heading_text": "Container Types",
      "token_count": 80,
      "char_count": 315,
      "start_char": 7013,
      "end_char": 7328,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.398864",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Container Types",
      "chunk_hash": "71af9682690c2450",
      "content_digest": "71af9682690c2450",
      "chunk_length": 315,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "types",
          "schema",
          "container",
          "the",
          "internal",
          "generate",
          "for",
          "like",
          "lists",
          "dictionaries",
          "and",
          "sets",
          "generation",
          "recursively",
          "processes",
          "contained",
          "sources",
          "py366",
          "377"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.105263
          },
          {
            "term": "types",
            "tf": 3,
            "weight": 0.078947
          },
          {
            "term": "schema",
            "tf": 3,
            "weight": 0.078947
          },
          {
            "term": "container",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.052632
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "like",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "lists",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "dictionaries",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "sets",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "generation",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "recursively",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "processes",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "contained",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "py366",
            "tf": 1,
            "weight": 0.026316
          },
          {
            "term": "377",
            "tf": 1,
            "weight": 0.026316
          }
        ],
        "unique_terms": 27,
        "total_terms": 38
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Container Types",
        "container",
        "for",
        "generate",
        "internal",
        "like",
        "lists",
        "pydantic",
        "schema",
        "the",
        "types"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.54,
      "overall": 0.68
    }
  },
  {
    "text": "### Models\n\nFor Pydantic models, the schema generation process is more complex, involving:\n\n1. Collecting field information\n2. Processing validators and serializers\n3. Handling inheritance and generics\n4. Creating the appropriate model schema\n\n```\n```\n\nSources:\n\n- [pydantic/\\_internal/\\_generate\\_schema.py718-842](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L718-L842)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Models"
      ],
      "heading_text": "Models",
      "token_count": 104,
      "char_count": 416,
      "start_char": 7923,
      "end_char": 8339,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5584210526315789,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.400061",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Models",
      "chunk_hash": "6bd496c2ef970bc9",
      "content_digest": "6bd496c2ef970bc9",
      "chunk_length": 416,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "models",
          "the",
          "and",
          "internal",
          "generate",
          "for",
          "generation",
          "process",
          "more",
          "complex",
          "involving",
          "collecting",
          "field",
          "information",
          "processing",
          "validators",
          "serializers",
          "handling"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.106383
          },
          {
            "term": "schema",
            "tf": 4,
            "weight": 0.085106
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.042553
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "generation",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "more",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "complex",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "involving",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "collecting",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "field",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "information",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "validators",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "serializers",
            "tf": 1,
            "weight": 0.021277
          },
          {
            "term": "handling",
            "tf": 1,
            "weight": 0.021277
          }
        ],
        "unique_terms": 35,
        "total_terms": 47
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Models",
        "and",
        "for",
        "generate",
        "generation",
        "internal",
        "models",
        "process",
        "pydantic",
        "schema",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5584210526315789,
      "overall": 0.6528070175438596
    }
  },
  {
    "text": "## Handling Discriminated Unions\n\nPydantic supports discriminated unions, which are unions of models that can be distinguished by a \"discriminator\" field. This enables more efficient validation and better error messages.\n\n```\n```\n\nSources:\n\n- [pydantic/\\_internal/\\_discriminated\\_union.py34-68](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_discriminated_union.py#L34-L68)\n- [pydantic/\\_internal/\\_discriminated\\_union.py140-168](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_discriminated_union.py#L140-L168)\n- [tests/test\\_discriminated\\_union.py94-141](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_discriminated_union.py#L94-L141)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Handling Discriminated Unions"
      ],
      "heading_text": "Handling Discriminated Unions",
      "token_count": 201,
      "char_count": 701,
      "start_char": 8341,
      "end_char": 9042,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5515384615384615,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.400840",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Handling Discriminated Unions",
      "chunk_hash": "54dc9c3b34d1a4d9",
      "content_digest": "54dc9c3b34d1a4d9",
      "chunk_length": 701,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "discriminated",
          "union",
          "internal",
          "unions",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test",
          "handling",
          "supports",
          "which",
          "are",
          "models",
          "that",
          "can",
          "distinguished"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 11,
            "weight": 0.134146
          },
          {
            "term": "discriminated",
            "tf": 8,
            "weight": 0.097561
          },
          {
            "term": "union",
            "tf": 6,
            "weight": 0.073171
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.04878
          },
          {
            "term": "unions",
            "tf": 3,
            "weight": 0.036585
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.036585
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.036585
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.036585
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.036585
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.036585
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.02439
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.02439
          },
          {
            "term": "handling",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "which",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "distinguished",
            "tf": 1,
            "weight": 0.012195
          }
        ],
        "unique_terms": 43,
        "total_terms": 82
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Handling Discriminated Unions",
        "blob",
        "com",
        "discriminated",
        "github",
        "https",
        "internal",
        "pydantic",
        "union",
        "unions"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5515384615384615,
      "overall": 0.6505128205128204
    }
  },
  {
    "text": "## Metadata Processing\n\nType annotations can include metadata that affects schema generation. This is particularly relevant for `Annotated` types and field constraints.\n\n```\n```\n\nMetadata can come from various sources:\n\n- Field constraints (min\\_length, max\\_length, etc.)\n- Validators (before, after, wrap validators)\n- Field descriptions and examples\n- Custom schema transformations\n\nSources:\n\n- [pydantic/\\_internal/\\_known\\_annotated\\_metadata.py168-329](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_known_annotated_metadata.py#L168-L329)\n- [tests/test\\_annotated.py28-134](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_annotated.py#L28-L134)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Metadata Processing"
      ],
      "heading_text": "Metadata Processing",
      "token_count": 173,
      "char_count": 688,
      "start_char": 9044,
      "end_char": 9732,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.715,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.401503",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Metadata Processing",
      "chunk_hash": "bee16099e2e442c2",
      "content_digest": "bee16099e2e442c2",
      "chunk_length": 688,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "metadata",
          "annotated",
          "field",
          "can",
          "schema",
          "and",
          "constraints",
          "sources",
          "length",
          "validators",
          "internal",
          "known",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "tests",
          "test"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "metadata",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "annotated",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "field",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "schema",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "constraints",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "sources",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "length",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "validators",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "known",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.02381
          }
        ],
        "unique_terms": 53,
        "total_terms": 84
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Metadata Processing",
        "and",
        "annotated",
        "can",
        "constraints",
        "field",
        "length",
        "metadata",
        "pydantic",
        "schema",
        "sources"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.715,
      "overall": 0.7383333333333333
    }
  },
  {
    "text": "## Reference Handling\n\nCore schema generation deals with references between types, which is especially important for recursive or self-referential models.\n\n```\n```\n\nSources:\n\n- [pydantic/\\_internal/\\_core\\_utils.py67-102](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_core_utils.py#L67-L102)\n- [pydantic/\\_internal/\\_generate\\_schema.py722-736](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L722-L736)\n- [tests/test\\_internal.py23-139](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_internal.py#L23-L139)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Reference Handling"
      ],
      "heading_text": "Reference Handling",
      "token_count": 170,
      "char_count": 588,
      "start_char": 9734,
      "end_char": 10322,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5589655172413793,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.402061",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Reference Handling",
      "chunk_hash": "7d43bc3ae81ee96c",
      "content_digest": "7d43bc3ae81ee96c",
      "chunk_length": 588,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "internal",
          "core",
          "schema",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "utils",
          "generate",
          "tests",
          "test",
          "reference",
          "handling",
          "generation",
          "deals",
          "with",
          "references",
          "between"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 10,
            "weight": 0.135135
          },
          {
            "term": "internal",
            "tf": 6,
            "weight": 0.081081
          },
          {
            "term": "core",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "schema",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "76ef0b08",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "utils",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "reference",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "handling",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "generation",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "deals",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "references",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "between",
            "tf": 1,
            "weight": 0.013514
          }
        ],
        "unique_terms": 42,
        "total_terms": 74
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Reference Handling",
        "blob",
        "com",
        "core",
        "github",
        "https",
        "internal",
        "pydantic",
        "schema",
        "utils"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5589655172413793,
      "overall": 0.6529885057471264
    }
  },
  {
    "text": "## Schema Cleaning and Finalization\n\nBefore the schema is used, it undergoes cleaning and finalization processes:\n\n1. Resolving definition references\n2. Validating the schema structure\n3. Removing unnecessary complexities\n4. Optimizing for performance\n\n```\n```\n\nSources:\n\n- [pydantic/\\_internal/\\_generate\\_schema.py664-666](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L664-L666)\n- [pydantic/\\_internal/\\_core\\_utils.py112-115](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_core_utils.py#L112-L115)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Schema Cleaning and Finalization"
      ],
      "heading_text": "Schema Cleaning and Finalization",
      "token_count": 156,
      "char_count": 569,
      "start_char": 10324,
      "end_char": 10893,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.402701",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Schema Cleaning and Finalization",
      "chunk_hash": "43af7f5fb5e1f7c6",
      "content_digest": "43af7f5fb5e1f7c6",
      "chunk_length": 569,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "internal",
          "cleaning",
          "and",
          "finalization",
          "the",
          "generate",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "core",
          "utils",
          "before",
          "used",
          "undergoes",
          "processes",
          "resolving"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 8,
            "weight": 0.123077
          },
          {
            "term": "schema",
            "tf": 5,
            "weight": 0.076923
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.061538
          },
          {
            "term": "cleaning",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "finalization",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "core",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "utils",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "before",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "undergoes",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "processes",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "resolving",
            "tf": 1,
            "weight": 0.015385
          }
        ],
        "unique_terms": 39,
        "total_terms": 65
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Schema Cleaning and Finalization",
        "and",
        "cleaning",
        "finalization",
        "generate",
        "github",
        "https",
        "internal",
        "pydantic",
        "schema",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.53,
      "overall": 0.6433333333333333
    }
  },
  {
    "text": "## Integration with JSON Schema Generation\n\nOnce a core schema is generated, it can be used to create a JSON Schema representation. This is a separate process handled by the `GenerateJsonSchema` class and is covered in [JSON Schema Generation](pydantic/pydantic/5.2-json-schema-generation.md).\n\n```\n```\n\nSources:\n\n- [pydantic/json\\_schema.py216-426](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/json_schema.py#L216-L426)\n- [pydantic/\\_internal/\\_generate\\_schema.py706-716](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L706-L716)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration with JSON Schema Generation"
      ],
      "heading_text": "Integration with JSON Schema Generation",
      "token_count": 161,
      "char_count": 589,
      "start_char": 10895,
      "end_char": 11484,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5247826086956522,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.403300",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Integration with JSON Schema Generation",
      "chunk_hash": "1bc39dd95878e155",
      "content_digest": "1bc39dd95878e155",
      "chunk_length": 589,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "json",
          "generation",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "internal",
          "generate",
          "integration",
          "with",
          "once",
          "core",
          "generated",
          "can",
          "used",
          "create",
          "representation"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 10,
            "weight": 0.144928
          },
          {
            "term": "schema",
            "tf": 9,
            "weight": 0.130435
          },
          {
            "term": "json",
            "tf": 6,
            "weight": 0.086957
          },
          {
            "term": "generation",
            "tf": 3,
            "weight": 0.043478
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "once",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "generated",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "representation",
            "tf": 1,
            "weight": 0.014493
          }
        ],
        "unique_terms": 38,
        "total_terms": 69
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "76ef0b08",
        "Integration with JSON Schema Generation",
        "blob",
        "com",
        "generation",
        "github",
        "https",
        "internal",
        "json",
        "pydantic",
        "schema"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5247826086956522,
      "overall": 0.6415942028985507
    }
  },
  {
    "text": "## Customizing Core Schema Generation\n\nTypes can customize their core schema generation by implementing the `__get_pydantic_core_schema__` method, which allows for complete control over how a type is validated and serialized.\n\n```\n```\n\nSources:\n\n- [tests/test\\_annotated.py198-249](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/test_annotated.py#L198-L249)\n- [pydantic/\\_internal/\\_generate\\_schema.py843-889](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L843-L889)",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Customizing Core Schema Generation"
      ],
      "heading_text": "Customizing Core Schema Generation",
      "token_count": 140,
      "char_count": 521,
      "start_char": 11486,
      "end_char": 12007,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5494594594594595,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.403831",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Customizing Core Schema Generation",
      "chunk_hash": "f0055627bb71d818",
      "content_digest": "f0055627bb71d818",
      "chunk_length": 521,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "core",
          "generation",
          "tests",
          "test",
          "annotated",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "internal",
          "generate",
          "customizing",
          "types",
          "can",
          "customize",
          "their",
          "implementing"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 7,
            "weight": 0.106061
          },
          {
            "term": "schema",
            "tf": 5,
            "weight": 0.075758
          },
          {
            "term": "core",
            "tf": 3,
            "weight": 0.045455
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "annotated",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.030303
          },
          {
            "term": "customizing",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "customize",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "their",
            "tf": 1,
            "weight": 0.015152
          },
          {
            "term": "implementing",
            "tf": 1,
            "weight": 0.015152
          }
        ],
        "unique_terms": 43,
        "total_terms": 66
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Customizing Core Schema Generation",
        "annotated",
        "com",
        "core",
        "generation",
        "github",
        "https",
        "pydantic",
        "schema",
        "test",
        "tests"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5494594594594595,
      "overall": 0.6831531531531532
    }
  },
  {
    "text": "## Conclusion\n\nCore Schema Generation is the fundamental process that enables Pydantic's validation capabilities. By converting Python types into a structured schema representation, it creates a bridge between Python's static type system and runtime validation logic. This system is highly extensible, allowing for custom validation rules, serialization behaviors, and schema transformations.\n\nThe generated core schemas are used throughout Pydantic for validation, serialization, and documentation generation, making this system central to Pydantic's functionality.\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "4a081ef2d5b3-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Conclusion"
      ],
      "heading_text": "Conclusion",
      "token_count": 115,
      "char_count": 666,
      "start_char": 12009,
      "end_char": 12675,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5218181818181818,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:53.404380",
      "document_id": "4a081ef2d5b3",
      "document_name": "_pydantic_pydantic_5.1-core-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5.1-core-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5.1-core-schema-generation.md",
      "hierarchy_path": "Conclusion",
      "chunk_hash": "923048e0fb4e89f3",
      "content_digest": "923048e0fb4e89f3",
      "chunk_length": 666,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "validation",
          "this",
          "schema",
          "pydantic",
          "system",
          "and",
          "core",
          "generation",
          "the",
          "python",
          "for",
          "serialization",
          "refresh",
          "wiki",
          "conclusion",
          "fundamental",
          "process",
          "that",
          "enables",
          "capabilities"
        ],
        "term_weights": [
          {
            "term": "validation",
            "tf": 4,
            "weight": 0.051282
          },
          {
            "term": "this",
            "tf": 4,
            "weight": 0.051282
          },
          {
            "term": "schema",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "pydantic",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "system",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "core",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "wiki",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "conclusion",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "fundamental",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "enables",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "capabilities",
            "tf": 1,
            "weight": 0.012821
          }
        ],
        "unique_terms": 56,
        "total_terms": 78
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Conclusion",
        "and",
        "core",
        "generation",
        "pydantic",
        "python",
        "schema",
        "system",
        "the",
        "this",
        "validation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5218181818181818,
      "overall": 0.7072727272727272
    }
  }
]