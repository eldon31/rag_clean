[
  {
    "text": "## Implementation Details",
    "metadata": {
      "chunk_id": "eb8bd7c305a1-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Implementation Details"
      ],
      "heading_text": "Implementation Details",
      "token_count": 3,
      "char_count": 25,
      "start_char": 0,
      "end_char": 25,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:54.291829",
      "document_id": "eb8bd7c305a1",
      "document_name": "_pydantic_pydantic_3.4-generics-and-forward-references",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "hierarchy_path": "Implementation Details",
      "chunk_hash": "812a10c977ea5550",
      "content_digest": "812a10c977ea5550",
      "chunk_length": 25,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "implementation",
          "details"
        ],
        "term_weights": [
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "details",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Implementation Details",
        "details",
        "implementation"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "## Forward References  Forward references allow referencing types that haven't been fully defined yet, which is essential for recursive models and handling circular dependencies.",
    "metadata": {
      "chunk_id": "eb8bd7c305a1-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Forward References"
      ],
      "heading_text": "Forward References",
      "token_count": 28,
      "char_count": 178,
      "start_char": 0,
      "end_char": 178,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.565,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:54.286801",
      "document_id": "eb8bd7c305a1",
      "document_name": "_pydantic_pydantic_3.4-generics-and-forward-references",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "hierarchy_path": "Forward References",
      "chunk_hash": "b7260795d1305071",
      "content_digest": "b7260795d1305071",
      "chunk_length": 178,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "forward",
          "references",
          "allow",
          "referencing",
          "types",
          "that",
          "haven",
          "been",
          "fully",
          "defined",
          "yet",
          "which",
          "essential",
          "for",
          "recursive",
          "models",
          "and",
          "handling",
          "circular",
          "dependencies"
        ],
        "term_weights": [
          {
            "term": "forward",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "references",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "allow",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "referencing",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "haven",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "been",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "fully",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "defined",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "yet",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "which",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "essential",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "recursive",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "handling",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "circular",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "dependencies",
            "tf": 1,
            "weight": 0.045455
          }
        ],
        "unique_terms": 20,
        "total_terms": 22
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Forward References",
        "allow",
        "been",
        "defined",
        "forward",
        "fully",
        "haven",
        "references",
        "referencing",
        "that",
        "types"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.565,
      "overall": 0.7549999999999999
    }
  },
  {
    "text": "## Combining Generics and Forward References",
    "metadata": {
      "chunk_id": "eb8bd7c305a1-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Combining Generics and Forward References"
      ],
      "heading_text": "Combining Generics and Forward References",
      "token_count": 8,
      "char_count": 44,
      "start_char": 0,
      "end_char": 44,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:54.289677",
      "document_id": "eb8bd7c305a1",
      "document_name": "_pydantic_pydantic_3.4-generics-and-forward-references",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "hierarchy_path": "Combining Generics and Forward References",
      "chunk_hash": "942f9771f004eeb6",
      "content_digest": "942f9771f004eeb6",
      "chunk_length": 44,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "combining",
          "generics",
          "and",
          "forward",
          "references"
        ],
        "term_weights": [
          {
            "term": "combining",
            "tf": 1,
            "weight": 0.2
          },
          {
            "term": "generics",
            "tf": 1,
            "weight": 0.2
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.2
          },
          {
            "term": "forward",
            "tf": 1,
            "weight": 0.2
          },
          {
            "term": "references",
            "tf": 1,
            "weight": 0.2
          }
        ],
        "unique_terms": 5,
        "total_terms": 5
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Combining Generics and Forward References",
        "and",
        "combining",
        "forward",
        "generics",
        "references"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "## Advanced Usage Patterns",
    "metadata": {
      "chunk_id": "eb8bd7c305a1-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Advanced Usage Patterns"
      ],
      "heading_text": "Advanced Usage Patterns",
      "token_count": 4,
      "char_count": 26,
      "start_char": 0,
      "end_char": 26,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:54.290788",
      "document_id": "eb8bd7c305a1",
      "document_name": "_pydantic_pydantic_3.4-generics-and-forward-references",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "hierarchy_path": "Advanced Usage Patterns",
      "chunk_hash": "6d33cf6fbbfb91cd",
      "content_digest": "6d33cf6fbbfb91cd",
      "chunk_length": 26,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "advanced",
          "usage",
          "patterns"
        ],
        "term_weights": [
          {
            "term": "advanced",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "usage",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "patterns",
            "tf": 1,
            "weight": 0.333333
          }
        ],
        "unique_terms": 3,
        "total_terms": 3
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Advanced Usage Patterns",
        "advanced",
        "patterns",
        "usage"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "## Generic Models  Generic models in Pydantic allow you to create model templates that can be parameterized with different types, similar to how generic classes work in languages like Java or C#. This enables type-safe reuse of model structures across different data types.",
    "metadata": {
      "chunk_id": "eb8bd7c305a1-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Generic Models"
      ],
      "heading_text": "Generic Models",
      "token_count": 51,
      "char_count": 273,
      "start_char": 0,
      "end_char": 273,
      "semantic_score": 0.4413186013698578,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5411627906976745,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:01:54.282829",
      "document_id": "eb8bd7c305a1",
      "document_name": "_pydantic_pydantic_3.4-generics-and-forward-references",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_filename": "_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_3.4-generics-and-forward-references.md",
      "hierarchy_path": "Generic Models",
      "chunk_hash": "8c931164a6382750",
      "content_digest": "8c931164a6382750",
      "chunk_length": 273,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "generic",
          "models",
          "model",
          "different",
          "types",
          "pydantic",
          "allow",
          "you",
          "create",
          "templates",
          "that",
          "can",
          "parameterized",
          "with",
          "similar",
          "how",
          "classes",
          "work",
          "languages",
          "like"
        ],
        "term_weights": [
          {
            "term": "generic",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "different",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "pydantic",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "allow",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "templates",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "parameterized",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "similar",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "classes",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "work",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "languages",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "like",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 29,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Generic Models",
        "allow",
        "create",
        "different",
        "generic",
        "model",
        "models",
        "pydantic",
        "templates",
        "types",
        "you"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.4413186013698578,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5411627906976745,
      "overall": 0.627493797355844
    }
  }
]