[
  {
    "text": "## Core Schema Generation\n\nThe core schema generation is handled by the `GenerateSchema` class, which converts Python types to pydantic-core schemas. It's a comprehensive system that supports a wide variety of Python types and provides the foundation for Pydantic's validation and serialization capabilities.\n\n```\n```\n\nSources: [pydantic/\\_internal/\\_generate\\_schema.py318-343](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L318-L343) [pydantic/\\_internal/\\_generate\\_schema.py679-702](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L679-L702)",
    "metadata": {
      "chunk_id": "6c6e259f17f1-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "filename": "_pydantic_pydantic_5-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Core Schema Generation"
      ],
      "heading_text": "Core Schema Generation",
      "token_count": 161,
      "char_count": 631,
      "start_char": 4190,
      "end_char": 4821,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5275,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.673097",
      "document_id": "6c6e259f17f1",
      "document_name": "_pydantic_pydantic_5-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "hierarchy_path": "Core Schema Generation",
      "chunk_hash": "c5c3dcf8873cc227",
      "content_digest": "c5c3dcf8873cc227",
      "chunk_length": 631,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "internal",
          "generate",
          "core",
          "the",
          "generation",
          "python",
          "types",
          "and",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "handled",
          "generateschema",
          "class",
          "which",
          "converts"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 10,
            "weight": 0.133333
          },
          {
            "term": "schema",
            "tf": 6,
            "weight": 0.08
          },
          {
            "term": "internal",
            "tf": 4,
            "weight": 0.053333
          },
          {
            "term": "generate",
            "tf": 4,
            "weight": 0.053333
          },
          {
            "term": "core",
            "tf": 3,
            "weight": 0.04
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.04
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "python",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.026667
          },
          {
            "term": "handled",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "generateschema",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "which",
            "tf": 1,
            "weight": 0.013333
          },
          {
            "term": "converts",
            "tf": 1,
            "weight": 0.013333
          }
        ],
        "unique_terms": 42,
        "total_terms": 75
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Core Schema Generation",
        "and",
        "core",
        "generate",
        "generation",
        "internal",
        "pydantic",
        "python",
        "schema",
        "the",
        "types"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5275,
      "overall": 0.6425
    }
  },
  {
    "text": "### Type Matching and Schema Mapping\n\nThe core schema generation uses a type matching system to map Python types to appropriate schema generation methods. The `match_type` method contains the primary mapping logic:\n\n```\n```\n\nSources: [pydantic/\\_internal/\\_generate\\_schema.py991-1042](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L991-L1042)",
    "metadata": {
      "chunk_id": "6c6e259f17f1-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "filename": "_pydantic_pydantic_5-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Type Matching and Schema Mapping"
      ],
      "heading_text": "Type Matching and Schema Mapping",
      "token_count": 95,
      "char_count": 387,
      "start_char": 4823,
      "end_char": 5210,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5066666666666666,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.673273",
      "document_id": "6c6e259f17f1",
      "document_name": "_pydantic_pydantic_5-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "hierarchy_path": "Type Matching and Schema Mapping",
      "chunk_hash": "c45c161415a966ee",
      "content_digest": "c45c161415a966ee",
      "chunk_length": 387,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "schema",
          "pydantic",
          "type",
          "the",
          "matching",
          "mapping",
          "generation",
          "internal",
          "generate",
          "and",
          "core",
          "uses",
          "system",
          "map",
          "python",
          "types",
          "appropriate",
          "methods",
          "match",
          "method"
        ],
        "term_weights": [
          {
            "term": "schema",
            "tf": 5,
            "weight": 0.102041
          },
          {
            "term": "pydantic",
            "tf": 4,
            "weight": 0.081633
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.061224
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.061224
          },
          {
            "term": "matching",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "mapping",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "map",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "appropriate",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "match",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.020408
          }
        ],
        "unique_terms": 33,
        "total_terms": 49
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Type Matching and Schema Mapping",
        "and",
        "generate",
        "generation",
        "internal",
        "mapping",
        "matching",
        "pydantic",
        "schema",
        "the",
        "type"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5066666666666666,
      "overall": 0.6355555555555555
    }
  },
  {
    "text": "### Schema Generation Process\n\nThe main entry point for generating a core schema is the `generate_schema` method. The process involves:\n\n1. Checking if the type implements `__get_pydantic_core_schema__` for custom handling\n2. Resolving forward references and type variables\n3. Mapping the type to an appropriate schema generation method\n4. Recursively processing nested types\n5. Adding metadata and customizations to the schema\n\nSources: [pydantic/\\_internal/\\_generate\\_schema.py679-716](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L679-L716)",
    "metadata": {
      "chunk_id": "6c6e259f17f1-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "filename": "_pydantic_pydantic_5-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Schema Generation Process"
      ],
      "heading_text": "Schema Generation Process",
      "token_count": 139,
      "char_count": 589,
      "start_char": 5212,
      "end_char": 5801,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5174193548387097,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.673559",
      "document_id": "6c6e259f17f1",
      "document_name": "_pydantic_pydantic_5-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "hierarchy_path": "Schema Generation Process",
      "chunk_hash": "6c95783875133964",
      "content_digest": "6c95783875133964",
      "chunk_length": 589,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "schema",
          "the",
          "pydantic",
          "generate",
          "type",
          "generation",
          "process",
          "for",
          "core",
          "method",
          "and",
          "internal",
          "main",
          "entry",
          "point",
          "generating",
          "involves",
          "checking",
          "implements",
          "get"
        ],
        "term_weights": [
          {
            "term": "schema",
            "tf": 8,
            "weight": 0.111111
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.083333
          },
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.069444
          },
          {
            "term": "generate",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "generation",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "core",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "method",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "main",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "entry",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "point",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "generating",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "involves",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "checking",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "implements",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "get",
            "tf": 1,
            "weight": 0.013889
          }
        ],
        "unique_terms": 45,
        "total_terms": 72
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Schema Generation Process",
        "core",
        "for",
        "generate",
        "generation",
        "method",
        "process",
        "pydantic",
        "schema",
        "the",
        "type"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5174193548387097,
      "overall": 0.6058064516129033
    }
  },
  {
    "text": "### Custom Core Schema Generation\n\nCustom types can define how they're converted to core schemas by implementing the `__get_pydantic_core_schema__` method:\n\n```\n```\n\nSources: [pydantic/\\_internal/\\_generate\\_schema.py850-890](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L850-L890)",
    "metadata": {
      "chunk_id": "6c6e259f17f1-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "filename": "_pydantic_pydantic_5-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Custom Core Schema Generation"
      ],
      "heading_text": "Custom Core Schema Generation",
      "token_count": 87,
      "char_count": 326,
      "start_char": 7164,
      "end_char": 7490,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.674269",
      "document_id": "6c6e259f17f1",
      "document_name": "_pydantic_pydantic_5-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "hierarchy_path": "Custom Core Schema Generation",
      "chunk_hash": "162e0b426ce5df71",
      "content_digest": "162e0b426ce5df71",
      "chunk_length": 326,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pydantic",
          "schema",
          "core",
          "custom",
          "internal",
          "generate",
          "generation",
          "types",
          "can",
          "define",
          "how",
          "they",
          "converted",
          "schemas",
          "implementing",
          "the",
          "get",
          "method",
          "sources",
          "py850"
        ],
        "term_weights": [
          {
            "term": "pydantic",
            "tf": 5,
            "weight": 0.125
          },
          {
            "term": "schema",
            "tf": 4,
            "weight": 0.1
          },
          {
            "term": "core",
            "tf": 3,
            "weight": 0.075
          },
          {
            "term": "custom",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.05
          },
          {
            "term": "generation",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "define",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "they",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "converted",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "schemas",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "implementing",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "get",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.025
          },
          {
            "term": "py850",
            "tf": 1,
            "weight": 0.025
          }
        ],
        "unique_terms": 28,
        "total_terms": 40
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Custom Core Schema Generation",
        "can",
        "core",
        "custom",
        "define",
        "generate",
        "generation",
        "internal",
        "pydantic",
        "schema",
        "types"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5525,
      "overall": 0.6508333333333333
    }
  },
  {
    "text": "## Schema Reference Handling\n\nBoth schema generation systems handle references to avoid duplicating schemas for the same types. The core schema uses a definition registry, while JSON Schema uses standard `$ref` references:\n\n```\n```\n\nThe reference handling ensures efficient schema representation and prevents circular references from causing infinite recursion.\n\nSources: [pydantic/\\_internal/\\_generate\\_schema.py723-736](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L723-L736) [pydantic/json\\_schema.py140-214](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/json_schema.py#L140-L214)",
    "metadata": {
      "chunk_id": "6c6e259f17f1-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "filename": "_pydantic_pydantic_5-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Schema Reference Handling"
      ],
      "heading_text": "Schema Reference Handling",
      "token_count": 151,
      "char_count": 643,
      "start_char": 7939,
      "end_char": 8582,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5265384615384615,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.674653",
      "document_id": "6c6e259f17f1",
      "document_name": "_pydantic_pydantic_5-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "hierarchy_path": "Schema Reference Handling",
      "chunk_hash": "a136631ab21193df",
      "content_digest": "a136631ab21193df",
      "chunk_length": 643,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "schema",
          "pydantic",
          "references",
          "the",
          "json",
          "reference",
          "handling",
          "uses",
          "internal",
          "generate",
          "https",
          "github",
          "com",
          "blob",
          "76ef0b08",
          "both",
          "generation",
          "systems",
          "handle",
          "avoid"
        ],
        "term_weights": [
          {
            "term": "schema",
            "tf": 9,
            "weight": 0.111111
          },
          {
            "term": "pydantic",
            "tf": 8,
            "weight": 0.098765
          },
          {
            "term": "references",
            "tf": 3,
            "weight": 0.037037
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.037037
          },
          {
            "term": "json",
            "tf": 3,
            "weight": 0.037037
          },
          {
            "term": "reference",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "handling",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "uses",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "generate",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "76ef0b08",
            "tf": 2,
            "weight": 0.024691
          },
          {
            "term": "both",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "generation",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "systems",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "handle",
            "tf": 1,
            "weight": 0.012346
          },
          {
            "term": "avoid",
            "tf": 1,
            "weight": 0.012346
          }
        ],
        "unique_terms": 50,
        "total_terms": 81
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Schema Reference Handling",
        "generate",
        "handling",
        "internal",
        "json",
        "pydantic",
        "reference",
        "references",
        "schema",
        "the",
        "uses"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5265384615384615,
      "overall": 0.6421794871794871
    }
  },
  {
    "text": "## Working with Schema Generation  Schema generation is typically handled automatically by Pydantic, but understanding its mechanisms helps when:  1. Implementing custom types with specific validation or serialization behavior 2. Creating advanced validation rules that combine multiple types 3. Working with tools that consume JSON Schema (like API documentation tools) 4. Debugging validation and serialization issues  To directly access the schema generation functionality:  - **Core Schema**: Use `model.__pydantic_core_schema__` to access the core schema of a model - **JSON Schema**: Use `model.model_json_schema()` to generate a JSON schema for a model  Sources: [pydantic/\\_internal/\\_generate\\_schema.py679-716](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/_internal/_generate_schema.py#L679-L716) [pydantic/json\\_schema.py378-425](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/json_schema.py#L378-L425)",
    "metadata": {
      "chunk_id": "6c6e259f17f1-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "filename": "_pydantic_pydantic_5-schema-generation.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Working with Schema Generation"
      ],
      "heading_text": "Working with Schema Generation",
      "token_count": 221,
      "char_count": 941,
      "start_char": 8584,
      "end_char": 9525,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5052173913043478,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:19.674953",
      "document_id": "6c6e259f17f1",
      "document_name": "_pydantic_pydantic_5-schema-generation",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "source_filename": "_pydantic_pydantic_5-schema-generation.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic",
      "relative_path": "Docs\\pydantic\\_pydantic_pydantic_5-schema-generation.md",
      "hierarchy_path": "Working with Schema Generation",
      "chunk_hash": "40887e10e7d7a767",
      "content_digest": "40887e10e7d7a767",
      "chunk_length": 941,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "schema",
          "pydantic",
          "json",
          "model",
          "with",
          "generation",
          "validation",
          "core",
          "generate",
          "working",
          "types",
          "serialization",
          "that",
          "tools",
          "access",
          "the",
          "use",
          "internal",
          "https",
          "github"
        ],
        "term_weights": [
          {
            "term": "schema",
            "tf": 14,
            "weight": 0.121739
          },
          {
            "term": "pydantic",
            "tf": 10,
            "weight": 0.086957
          },
          {
            "term": "json",
            "tf": 6,
            "weight": 0.052174
          },
          {
            "term": "model",
            "tf": 5,
            "weight": 0.043478
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.026087
          },
          {
            "term": "generation",
            "tf": 3,
            "weight": 0.026087
          },
          {
            "term": "validation",
            "tf": 3,
            "weight": 0.026087
          },
          {
            "term": "core",
            "tf": 3,
            "weight": 0.026087
          },
          {
            "term": "generate",
            "tf": 3,
            "weight": 0.026087
          },
          {
            "term": "working",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "serialization",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "that",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "tools",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "access",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "internal",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.017391
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.017391
          }
        ],
        "unique_terms": 60,
        "total_terms": 115
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Working with Schema Generation",
        "core",
        "generate",
        "generation",
        "json",
        "model",
        "pydantic",
        "schema",
        "validation",
        "with",
        "working"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5052173913043478,
      "overall": 0.7017391304347825
    }
  }
]