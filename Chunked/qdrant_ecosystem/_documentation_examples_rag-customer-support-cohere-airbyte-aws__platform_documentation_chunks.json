[
  {
    "text": "### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "632d9e6e1790-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 700,
      "end_char": 1373,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.610573",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "b49cc869c6854f5f",
      "content_digest": "b49cc869c6854f5f",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.6351282051282051
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "632d9e6e1790-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1375,
      "end_char": 7036,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.612387",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "632d9e6e1790-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 7038,
      "end_char": 9385,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.613874",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "632d9e6e1790-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9387,
      "end_char": 10060,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.614376",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "b49cc869c6854f5f",
      "content_digest": "b49cc869c6854f5f",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.6351282051282051
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "632d9e6e1790-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10062,
      "end_char": 15723,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.616211",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Examples](https://qdrant.tech/documentation/examples/) - - Question-Answering System for AI Customer Support",
    "metadata": {
      "chunk_id": "632d9e6e1790-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 614,
      "char_count": 2516,
      "start_char": 15725,
      "end_char": 18241,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.8961538461538463,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.617747",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "e4cce1b6123b6b98",
      "content_digest": "e4cce1b6123b6b98",
      "chunk_length": 2516,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "system",
          "send",
          "semantic",
          "and",
          "for",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "customer"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 32,
            "weight": 0.107744
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.080808
          },
          {
            "term": "https",
            "tf": 23,
            "weight": 0.077441
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.077441
          },
          {
            "term": "examples",
            "tf": 16,
            "weight": 0.053872
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.03367
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.030303
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.030303
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.023569
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020202
          },
          {
            "term": "system",
            "tf": 6,
            "weight": 0.020202
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.016835
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013468
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013468
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.013468
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013468
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010101
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010101
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010101
          },
          {
            "term": "customer",
            "tf": 3,
            "weight": 0.010101
          }
        ],
        "unique_terms": 96,
        "total_terms": 297
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.8961538461538463,
      "overall": 0.8320512820512821
    }
  },
  {
    "text": "# Question-Answering System for AI Customer Support  | Time: 120 min | Level: Advanced |   |   | | ------------- | --------------- | - | - |  Maintaining top-notch customer service is vital to business success. As your operation expands, so does the influx of customer queries. Many of these queries are repetitive, making automation a time-saving solution. Your support team’s expertise is typically kept private, but you can still use AI to automate responses securely. In this tutorial we will setup a private AI service that answers customer support queries with high accuracy and effectiveness. By leveraging Cohere’s powerful models (deployed to [AWS](https://cohere.com/deployment-options/aws)) with Qdrant Hybrid Cloud, you can create a fully private customer support system. Data synchronization, facilitated by [Airbyte](https://airbyte.com/), will complete the setup.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Question-Answering System for AI Customer Support"
      ],
      "heading_text": "Question-Answering System for AI Customer Support",
      "token_count": 180,
      "char_count": 878,
      "start_char": 18243,
      "end_char": 19121,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7060000000000001,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.618389",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Question-Answering System for AI Customer Support",
      "chunk_hash": "9ec5e9c4b11bacfa",
      "content_digest": "9ec5e9c4b11bacfa",
      "chunk_length": 878,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "customer",
          "support",
          "queries",
          "private",
          "system",
          "time",
          "service",
          "your",
          "the",
          "you",
          "can",
          "will",
          "setup",
          "with",
          "cohere",
          "aws",
          "https",
          "com",
          "airbyte",
          "question"
        ],
        "term_weights": [
          {
            "term": "customer",
            "tf": 5,
            "weight": 0.048544
          },
          {
            "term": "support",
            "tf": 4,
            "weight": 0.038835
          },
          {
            "term": "queries",
            "tf": 3,
            "weight": 0.029126
          },
          {
            "term": "private",
            "tf": 3,
            "weight": 0.029126
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "time",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "service",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "will",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "setup",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "cohere",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "aws",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.019417
          },
          {
            "term": "question",
            "tf": 1,
            "weight": 0.009709
          }
        ],
        "unique_terms": 77,
        "total_terms": 103
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Question-Answering System for AI Customer Support",
        "customer",
        "private",
        "queries",
        "service",
        "support",
        "system",
        "the",
        "time",
        "you",
        "your"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7060000000000001,
      "overall": 0.7686666666666667
    }
  },
  {
    "text": "## System design  The history of past interactions with your customers is not a static dataset. It is constantly evolving, as new questions are coming in. You probably have a ticketing system that stores all the interactions, or use a different way to communicate with your customers. No matter what is the communication channel, you need to bring the correct answers to the selected Large Language Model, and have an established way to do it in a continuous manner. Thus, we will build an ingestion pipeline and then a Retrieval Augmented Generation application that will use the data. - **Dataset:** a [set of Frequently Asked Questions from Qdrant users](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) as an incrementally updated Excel sheet - **Embedding model:** Cohere `embed-multilingual-v3.0`, to support different languages with the same pipeline - **Knowledge base:** Qdrant, running in Hybrid Cloud mode - **Ingestion pipeline:** [Airbyte](https://airbyte.com/), loading the data into Qdrant - **Large Language Model:** Cohere [Command-R](https://docs.cohere.com/docs/command-r) - **RAG:** Cohere [RAG](https://docs.cohere.com/docs/retrieval-augmented-generation-rag) using our knowledge base through a custom connector  All the selected components are compatible with the [AWS](https://aws.amazon.com/) infrastructure. Thanks to Cohere models’ availability, you can build a fully private customer support system completely isolates data within your infrastructure. Also, if you have AWS credits, you can now use them without spending additional money on the models or semantic search layer.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "System design"
      ],
      "heading_text": "System design",
      "token_count": 346,
      "char_count": 1615,
      "start_char": 19124,
      "end_char": 20739,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5038,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.619006",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "System design",
      "chunk_hash": "11b1440a36d13abf",
      "content_digest": "11b1440a36d13abf",
      "chunk_length": 1615,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "cohere",
          "you",
          "qdrant",
          "https",
          "with",
          "com",
          "docs",
          "system",
          "your",
          "have",
          "use",
          "model",
          "pipeline",
          "data",
          "rag",
          "aws",
          "interactions",
          "customers",
          "dataset"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 11,
            "weight": 0.054187
          },
          {
            "term": "cohere",
            "tf": 6,
            "weight": 0.029557
          },
          {
            "term": "you",
            "tf": 5,
            "weight": 0.024631
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.024631
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.024631
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.019704
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.019704
          },
          {
            "term": "docs",
            "tf": 4,
            "weight": 0.019704
          },
          {
            "term": "system",
            "tf": 3,
            "weight": 0.014778
          },
          {
            "term": "your",
            "tf": 3,
            "weight": 0.014778
          },
          {
            "term": "have",
            "tf": 3,
            "weight": 0.014778
          },
          {
            "term": "use",
            "tf": 3,
            "weight": 0.014778
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.014778
          },
          {
            "term": "pipeline",
            "tf": 3,
            "weight": 0.014778
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.014778
          },
          {
            "term": "rag",
            "tf": 3,
            "weight": 0.014778
          },
          {
            "term": "aws",
            "tf": 3,
            "weight": 0.014778
          },
          {
            "term": "interactions",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "customers",
            "tf": 2,
            "weight": 0.009852
          },
          {
            "term": "dataset",
            "tf": 2,
            "weight": 0.009852
          }
        ],
        "unique_terms": 122,
        "total_terms": 203
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "System design",
        "cohere",
        "com",
        "docs",
        "https",
        "qdrant",
        "system",
        "the",
        "with",
        "you",
        "your"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5038,
      "overall": 0.7012666666666666
    }
  },
  {
    "text": "### Data ingestion\n\nBuilding a RAG starts with a well-curated dataset. In your specific case you may prefer loading the data directly from a ticketing system, such as [Zendesk Support](https://airbyte.com/connectors/zendesk-support), [Freshdesk](https://airbyte.com/connectors/freshdesk), or maybe integrate it with a shared inbox. However, in case of customer questions quality over quantity is the key. There should be a conscious decision on what data to include in the knowledge base, so we do not confuse the model with possibly irrelevant information. We’ll assume there is an [Excel sheet](https://docs.airbyte.com/integrations/sources/file) available over HTTP/FTP that Airbyte can access and load into Qdrant in an incremental manner.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Data ingestion"
      ],
      "heading_text": "Data ingestion",
      "token_count": 161,
      "char_count": 743,
      "start_char": 20742,
      "end_char": 21485,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5324242424242424,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.619488",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Data ingestion",
      "chunk_hash": "3b8e1906fa9a5124",
      "content_digest": "3b8e1906fa9a5124",
      "chunk_length": 743,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "airbyte",
          "data",
          "with",
          "https",
          "com",
          "case",
          "zendesk",
          "support",
          "connectors",
          "freshdesk",
          "over",
          "there",
          "ingestion",
          "building",
          "rag",
          "starts",
          "well",
          "curated",
          "dataset"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.042553
          },
          {
            "term": "airbyte",
            "tf": 4,
            "weight": 0.042553
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.031915
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.031915
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.031915
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.031915
          },
          {
            "term": "case",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "zendesk",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "support",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "connectors",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "freshdesk",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "over",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "there",
            "tf": 2,
            "weight": 0.021277
          },
          {
            "term": "ingestion",
            "tf": 1,
            "weight": 0.010638
          },
          {
            "term": "building",
            "tf": 1,
            "weight": 0.010638
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.010638
          },
          {
            "term": "starts",
            "tf": 1,
            "weight": 0.010638
          },
          {
            "term": "well",
            "tf": 1,
            "weight": 0.010638
          },
          {
            "term": "curated",
            "tf": 1,
            "weight": 0.010638
          },
          {
            "term": "dataset",
            "tf": 1,
            "weight": 0.010638
          }
        ],
        "unique_terms": 73,
        "total_terms": 94
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Data ingestion",
        "airbyte",
        "case",
        "com",
        "connectors",
        "data",
        "https",
        "support",
        "the",
        "with",
        "zendesk"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5324242424242424,
      "overall": 0.7108080808080808
    }
  },
  {
    "text": "### Cohere <> Qdrant Connector for RAG\n\nCohere RAG relies on [connectors](https://docs.cohere.com/docs/connectors) which brings additional context to the model. The connector is a web service that implements a specific interface, and exposes its data through HTTP API. With that setup, the Large Language Model becomes responsible for communicating with the connectors, so building a prompt with the context is not needed anymore.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Cohere <> Qdrant Connector for RAG"
      ],
      "heading_text": "Cohere <> Qdrant Connector for RAG",
      "token_count": 90,
      "char_count": 430,
      "start_char": 21487,
      "end_char": 21917,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5174193548387097,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.619675",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Cohere <> Qdrant Connector for RAG",
      "chunk_hash": "36a503b6a90d9fe3",
      "content_digest": "36a503b6a90d9fe3",
      "chunk_length": 430,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "cohere",
          "connectors",
          "with",
          "connector",
          "for",
          "rag",
          "docs",
          "context",
          "model",
          "that",
          "qdrant",
          "relies",
          "https",
          "com",
          "which",
          "brings",
          "additional",
          "web",
          "service"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 5,
            "weight": 0.086207
          },
          {
            "term": "cohere",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "connectors",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.051724
          },
          {
            "term": "connector",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "rag",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "docs",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "context",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "that",
            "tf": 2,
            "weight": 0.034483
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "relies",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "which",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "brings",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "additional",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "web",
            "tf": 1,
            "weight": 0.017241
          },
          {
            "term": "service",
            "tf": 1,
            "weight": 0.017241
          }
        ],
        "unique_terms": 41,
        "total_terms": 58
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Cohere <> Qdrant Connector for RAG",
        "cohere",
        "connector",
        "connectors",
        "context",
        "docs",
        "for",
        "model",
        "rag",
        "the",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5174193548387097,
      "overall": 0.7058064516129031
    }
  },
  {
    "text": "### Answering bot\n\nFinally, we want to automate the responses and send them automatically when we are sure that the model is confident enough. Again, the way such an application should be created strongly depends on the system you are using within the customer support team. If it exposes a way to set up a webhook whenever a new question is coming in, you can create a web service and use it to automate the responses. In general, our bot should be created specifically for the platform you use, so we’ll just cover the general idea here and build a simple CLI tool.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Answering bot"
      ],
      "heading_text": "Answering bot",
      "token_count": 115,
      "char_count": 567,
      "start_char": 21919,
      "end_char": 22486,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5113592233009708,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.619891",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Answering bot",
      "chunk_hash": "36f909ce719d9ba9",
      "content_digest": "36f909ce719d9ba9",
      "chunk_length": 567,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "and",
          "you",
          "bot",
          "automate",
          "responses",
          "are",
          "way",
          "should",
          "created",
          "use",
          "general",
          "answering",
          "finally",
          "want",
          "send",
          "them",
          "automatically",
          "when",
          "sure"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 8,
            "weight": 0.102564
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "you",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "bot",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "responses",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "are",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "way",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "should",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "created",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "general",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "answering",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "finally",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "want",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "send",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "them",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "automatically",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "when",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "sure",
            "tf": 1,
            "weight": 0.012821
          }
        ],
        "unique_terms": 58,
        "total_terms": 78
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Answering bot",
        "and",
        "are",
        "automate",
        "bot",
        "created",
        "responses",
        "should",
        "the",
        "way",
        "you"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5113592233009708,
      "overall": 0.7371197411003235
    }
  },
  {
    "text": "### Cohere models on AWS\n\nOne of the possible ways to deploy Cohere models on AWS is to use AWS SageMaker. Cohere’s website has [a detailed guide on how to deploy the models in that way](https://docs.cohere.com/docs/amazon-sagemaker-setup-guide), so you can follow the steps described there to set up your own instance.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Cohere models on AWS"
      ],
      "heading_text": "Cohere models on AWS",
      "token_count": 76,
      "char_count": 319,
      "start_char": 22506,
      "end_char": 22825,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7120000000000001,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.620109",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Cohere models on AWS",
      "chunk_hash": "aa81d749ad24f8a0",
      "content_digest": "aa81d749ad24f8a0",
      "chunk_length": 319,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "cohere",
          "models",
          "aws",
          "the",
          "deploy",
          "sagemaker",
          "guide",
          "docs",
          "one",
          "possible",
          "ways",
          "use",
          "website",
          "has",
          "detailed",
          "how",
          "that",
          "way",
          "https",
          "com"
        ],
        "term_weights": [
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.088889
          },
          {
            "term": "models",
            "tf": 3,
            "weight": 0.066667
          },
          {
            "term": "aws",
            "tf": 3,
            "weight": 0.066667
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.066667
          },
          {
            "term": "deploy",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "sagemaker",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "guide",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "docs",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "one",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "possible",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "ways",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "website",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "has",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "detailed",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "way",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "https",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.022222
          }
        ],
        "unique_terms": 32,
        "total_terms": 45
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Cohere models on AWS",
        "aws",
        "cohere",
        "deploy",
        "docs",
        "guide",
        "models",
        "one",
        "possible",
        "sagemaker",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7120000000000001,
      "overall": 0.7706666666666666
    }
  },
  {
    "text": "### Qdrant Hybrid Cloud on AWS\n\nOur documentation covers the deployment of Qdrant on AWS as a Hybrid Cloud Environment, so you can follow the steps described there to set up your own instance. The deployment process is quite straightforward, and you can have your Qdrant cluster up and running in a few minutes.\n\nOnce you perform all the steps, your Qdrant cluster should be running on a specific URL. You will need this URL and the API key to interact with Qdrant, so let’s store them both in the environment variables:\n\n```shell\nexport QDRANT_URL=\"https://qdrant.example.com\"\nexport QDRANT_API_KEY=\"your-api-key\"\n```\n\n```python\nimport os\n\nos.environ[\"QDRANT_URL\"] = \"https://qdrant.example.com\"\nos.environ[\"QDRANT_API_KEY\"] = \"your-api-key\"\n```",
    "metadata": {
      "chunk_id": "632d9e6e1790-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Qdrant Hybrid Cloud on AWS"
      ],
      "heading_text": "Qdrant Hybrid Cloud on AWS",
      "token_count": 182,
      "char_count": 746,
      "start_char": 22827,
      "end_char": 23573,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.6983333333333334,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.620428",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Qdrant Hybrid Cloud on AWS",
      "chunk_hash": "803549e911d41a78",
      "content_digest": "803549e911d41a78",
      "chunk_length": 746,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "the",
          "your",
          "api",
          "key",
          "you",
          "url",
          "and",
          "hybrid",
          "cloud",
          "aws",
          "deployment",
          "environment",
          "can",
          "steps",
          "cluster",
          "running",
          "export",
          "https",
          "example"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 11,
            "weight": 0.105769
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.057692
          },
          {
            "term": "your",
            "tf": 5,
            "weight": 0.048077
          },
          {
            "term": "api",
            "tf": 5,
            "weight": 0.048077
          },
          {
            "term": "key",
            "tf": 5,
            "weight": 0.048077
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.038462
          },
          {
            "term": "url",
            "tf": 4,
            "weight": 0.038462
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "cloud",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "aws",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "deployment",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "environment",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "steps",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "cluster",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "running",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "export",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "example",
            "tf": 2,
            "weight": 0.019231
          }
        ],
        "unique_terms": 55,
        "total_terms": 104
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Qdrant Hybrid Cloud on AWS",
        "and",
        "api",
        "cloud",
        "hybrid",
        "key",
        "qdrant",
        "the",
        "url",
        "you",
        "your"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.6983333333333334,
      "overall": 0.6994444444444444
    }
  },
  {
    "text": "### Airbyte Open Source\n\nAirbyte is an open-source data integration platform that helps you replicate your data in your warehouses, lakes, and databases. You can install it on your infrastructure and use it to load the data into Qdrant. The installation process is described in the [official documentation](https://docs.airbyte.com/deploying-airbyte/). Please follow the instructions to set up your own instance.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Airbyte Open Source"
      ],
      "heading_text": "Airbyte Open Source",
      "token_count": 84,
      "char_count": 412,
      "start_char": 23575,
      "end_char": 23987,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5124137931034483,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.620595",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Airbyte Open Source",
      "chunk_hash": "c168f2eeb0aa28ba",
      "content_digest": "c168f2eeb0aa28ba",
      "chunk_length": 412,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "airbyte",
          "your",
          "the",
          "data",
          "open",
          "source",
          "you",
          "and",
          "integration",
          "platform",
          "that",
          "helps",
          "replicate",
          "warehouses",
          "lakes",
          "databases",
          "can",
          "install",
          "infrastructure",
          "use"
        ],
        "term_weights": [
          {
            "term": "airbyte",
            "tf": 4,
            "weight": 0.075472
          },
          {
            "term": "your",
            "tf": 4,
            "weight": 0.075472
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.075472
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.056604
          },
          {
            "term": "open",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "source",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.037736
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "platform",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "helps",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "replicate",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "warehouses",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "lakes",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "databases",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "can",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "install",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "infrastructure",
            "tf": 1,
            "weight": 0.018868
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.018868
          }
        ],
        "unique_terms": 38,
        "total_terms": 53
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Airbyte Open Source",
        "airbyte",
        "and",
        "data",
        "integration",
        "open",
        "platform",
        "source",
        "the",
        "you",
        "your"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5124137931034483,
      "overall": 0.7041379310344826
    }
  },
  {
    "text": "#### Setting up the connection  Once you have an Airbyte up and running, you can configure the connection to load the data from the respective source into Qdrant. The configuration will require setting up the source and destination connectors. In this tutorial we will use the following connectors:  - **Source:** [File](https://docs.airbyte.com/integrations/sources/file) to load the data from an Excel sheet - **Destination:** [Qdrant](https://docs.airbyte.com/integrations/destinations/qdrant) to load the data into Qdrant  Airbyte UI will guide you through the process of setting up the source and destination and connecting them. Here is how the configuration of the source might look like:  Qdrant is our target destination, so we need to set up the connection to it. We need to specify which fields should be included to generate the embeddings. In our case it makes complete sense to embed just the questions, as we are going to look for similar questions asked in the past and provide the answers. Once we have the destination set up, we can finally configure a connection. The connection will define the schedule of the data synchronization. Airbyte should now be ready to accept any data updates from the source and load them into Qdrant. You can monitor the progress of the synchronization in the UI.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Setting up the connection"
      ],
      "heading_text": "Setting up the connection",
      "token_count": 275,
      "char_count": 1312,
      "start_char": 23989,
      "end_char": 25301,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6429126213592232,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.620970",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Setting up the connection",
      "chunk_hash": "6535bcc8237136af",
      "content_digest": "6535bcc8237136af",
      "chunk_length": 1312,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "and",
          "source",
          "qdrant",
          "connection",
          "airbyte",
          "data",
          "destination",
          "you",
          "load",
          "will",
          "setting",
          "can",
          "from",
          "into",
          "once",
          "have",
          "configure",
          "configuration",
          "connectors"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 26,
            "weight": 0.149425
          },
          {
            "term": "and",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "source",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "qdrant",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "connection",
            "tf": 5,
            "weight": 0.028736
          },
          {
            "term": "airbyte",
            "tf": 5,
            "weight": 0.028736
          },
          {
            "term": "data",
            "tf": 5,
            "weight": 0.028736
          },
          {
            "term": "destination",
            "tf": 5,
            "weight": 0.028736
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "load",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "will",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "setting",
            "tf": 3,
            "weight": 0.017241
          },
          {
            "term": "can",
            "tf": 3,
            "weight": 0.017241
          },
          {
            "term": "from",
            "tf": 3,
            "weight": 0.017241
          },
          {
            "term": "into",
            "tf": 3,
            "weight": 0.017241
          },
          {
            "term": "once",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "have",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "configure",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "configuration",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "connectors",
            "tf": 2,
            "weight": 0.011494
          }
        ],
        "unique_terms": 83,
        "total_terms": 174
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Setting up the connection",
        "airbyte",
        "and",
        "connection",
        "data",
        "destination",
        "load",
        "qdrant",
        "source",
        "the",
        "you"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6429126213592232,
      "overall": 0.7476375404530744
    }
  },
  {
    "text": "## RAG connector\n\nOne of our previous tutorials, guides you step-by-step on [implementing custom connector for Cohere RAG](documentation/examples/cohere-rag-connector/.md) with Cohere Embed v3 and Qdrant. You can just point it to use your Hybrid Cloud Qdrant instance running on AWS. Created connector might be deployed to Amazon Web Services in various ways, even in a [Serverless](https://aws.amazon.com/serverless/) manner using [AWS Lambda](https://aws.amazon.com/lambda/?c=ser\\&sec=srv).\n\nIn general, RAG connector has to expose a single endpoint that will accept POST requests with `query` parameter and return the matching documents as JSON document with a specific structure. Our FastAPI implementation created [in the related tutorial](documentation/examples/cohere-rag-connector/.md) is a perfect fit for this task. The only difference is that you should point it to the Cohere models and Qdrant running on AWS infrastructure.\n\n> Our connector is a lightweight web service that exposes a single endpoint and glues the Cohere embedding model with our Qdrant Hybrid Cloud instance. Thus, it perfectly fits the serverless architecture, requiring no additional infrastructure to run.\n\nYou can also run the connector as another service within your [Kubernetes cluster running on AWS (EKS)](https://aws.amazon.com/eks/), or by launching an [EC2](https://aws.amazon.com/ec2/) compute instance. This step is dependent on the way you deploy your other services, so we’ll leave it to you to decide how to run the connector.\n\nEventually, the web service should be available under a specific URL, and it’s a good practice to store it in the environment variable, so the other services can easily access it.\n\n```shell\nexport RAG_CONNECTOR_URL=\"https://rag-connector.example.com/search\"\n```\n\n```python\nos.environ[\"RAG_CONNECTOR_URL\"] = \"https://rag-connector.example.com/search\"\n```",
    "metadata": {
      "chunk_id": "632d9e6e1790-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "RAG connector"
      ],
      "heading_text": "RAG connector",
      "token_count": 414,
      "char_count": 1878,
      "start_char": 25305,
      "end_char": 27183,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.7078,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.621727",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "RAG connector",
      "chunk_hash": "01584be6386bb83e",
      "content_digest": "01584be6386bb83e",
      "chunk_length": 1878,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "connector",
          "the",
          "rag",
          "aws",
          "you",
          "cohere",
          "https",
          "com",
          "and",
          "amazon",
          "our",
          "with",
          "qdrant",
          "step",
          "can",
          "your",
          "instance",
          "running",
          "web",
          "services"
        ],
        "term_weights": [
          {
            "term": "connector",
            "tf": 13,
            "weight": 0.053279
          },
          {
            "term": "the",
            "tf": 12,
            "weight": 0.04918
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.036885
          },
          {
            "term": "aws",
            "tf": 8,
            "weight": 0.032787
          },
          {
            "term": "you",
            "tf": 6,
            "weight": 0.02459
          },
          {
            "term": "cohere",
            "tf": 6,
            "weight": 0.02459
          },
          {
            "term": "https",
            "tf": 6,
            "weight": 0.02459
          },
          {
            "term": "com",
            "tf": 6,
            "weight": 0.02459
          },
          {
            "term": "and",
            "tf": 5,
            "weight": 0.020492
          },
          {
            "term": "amazon",
            "tf": 5,
            "weight": 0.020492
          },
          {
            "term": "our",
            "tf": 4,
            "weight": 0.016393
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.016393
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.016393
          },
          {
            "term": "step",
            "tf": 3,
            "weight": 0.012295
          },
          {
            "term": "can",
            "tf": 3,
            "weight": 0.012295
          },
          {
            "term": "your",
            "tf": 3,
            "weight": 0.012295
          },
          {
            "term": "instance",
            "tf": 3,
            "weight": 0.012295
          },
          {
            "term": "running",
            "tf": 3,
            "weight": 0.012295
          },
          {
            "term": "web",
            "tf": 3,
            "weight": 0.012295
          },
          {
            "term": "services",
            "tf": 3,
            "weight": 0.012295
          }
        ],
        "unique_terms": 126,
        "total_terms": 244
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "RAG connector",
        "amazon",
        "and",
        "aws",
        "cohere",
        "com",
        "connector",
        "https",
        "rag",
        "the",
        "you"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.7078,
      "overall": 0.7026
    }
  },
  {
    "text": "## Customer interface\n\nAt this part we have all the data loaded into Qdrant, and the RAG connector is ready to serve the relevant context. The last missing piece is the customer interface, that will call the Command model to create the answer. Such a system should be built specifically for the platform you use and integrated into its workflow, but we will build the strong foundation for it and show how to use it in a simple CLI tool.\n\n> Our application does not have to connect to Qdrant anymore, as the model will connect to the RAG connector directly.\n\nFirst of all, we have to create a connection to Cohere services through the Cohere SDK.\n\n```python\nimport cohere",
    "metadata": {
      "chunk_id": "632d9e6e1790-0017",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Customer interface"
      ],
      "heading_text": "Customer interface",
      "token_count": 142,
      "char_count": 671,
      "start_char": 27185,
      "end_char": 27856,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.6874999999999999,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.621989",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Customer interface",
      "chunk_hash": "1050a9929d0d350d",
      "content_digest": "1050a9929d0d350d",
      "chunk_length": 671,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "have",
          "and",
          "will",
          "cohere",
          "customer",
          "interface",
          "all",
          "into",
          "qdrant",
          "rag",
          "connector",
          "model",
          "create",
          "for",
          "use",
          "connect",
          "this",
          "part",
          "data"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 12,
            "weight": 0.126316
          },
          {
            "term": "have",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "will",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "cohere",
            "tf": 3,
            "weight": 0.031579
          },
          {
            "term": "customer",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "interface",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "all",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "into",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "rag",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "connector",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "create",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "connect",
            "tf": 2,
            "weight": 0.021053
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.010526
          },
          {
            "term": "part",
            "tf": 1,
            "weight": 0.010526
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.010526
          }
        ],
        "unique_terms": 64,
        "total_terms": 95
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Customer interface",
        "all",
        "and",
        "cohere",
        "customer",
        "have",
        "interface",
        "into",
        "qdrant",
        "the",
        "will"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.6874999999999999,
      "overall": 0.6958333333333333
    }
  },
  {
    "text": "# The id returned by the API should be stored for future use\nconnector_id = connector_response.connector.id\n```\n\nFinally, we can create a prompt and get the answer from the model. Additionally, we define which of the connectors should be used to provide the context, as we may have multiple connectors and want to use specific ones, depending on some conditions. Let’s start with asking a question.\n\n```python\nquery = \"Why Qdrant does not return my vectors?\"\n```\n\nNow we can send the query to the model, get the response, and possibly send it back to the customer.\n\n```python\nresponse = cohere_client.chat(\n    message=query,\n    connectors=[\n        cohere.ChatConnector(id=connector_id),\n    ],\n    model=\"command-r\",\n)\n\nprint(response.text)\n```\n\nThe output should be the answer to the question, generated by the model, for example:\n\n> Qdrant is set up by default to minimize network traffic and therefore doesn’t return vectors in search results. However, you can make Qdrant return your vectors by setting the ‘with\\_vector’ parameter of the Search/Scroll function to true.\n\nCustomer support should not be fully automated, as some completely new issues might require human intervention. We should play with prompt engineering and expect the model to provide the answer with a certain confidence level. If the confidence is too low, we should not send the answer automatically but present it to the support team for review.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0019",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "The id returned by the API should be stored for future use"
      ],
      "heading_text": "The id returned by the API should be stored for future use",
      "token_count": 296,
      "char_count": 1426,
      "start_char": 28305,
      "end_char": 29731,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6708219178082192,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.622658",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "The id returned by the API should be stored for future use",
      "chunk_hash": "f7bc7e2c70594c6a",
      "content_digest": "f7bc7e2c70594c6a",
      "chunk_length": 1426,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "should",
          "and",
          "model",
          "connector",
          "response",
          "answer",
          "with",
          "for",
          "can",
          "connectors",
          "query",
          "qdrant",
          "not",
          "return",
          "vectors",
          "send",
          "use",
          "prompt",
          "get"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 21,
            "weight": 0.116022
          },
          {
            "term": "should",
            "tf": 6,
            "weight": 0.033149
          },
          {
            "term": "and",
            "tf": 5,
            "weight": 0.027624
          },
          {
            "term": "model",
            "tf": 5,
            "weight": 0.027624
          },
          {
            "term": "connector",
            "tf": 4,
            "weight": 0.022099
          },
          {
            "term": "response",
            "tf": 4,
            "weight": 0.022099
          },
          {
            "term": "answer",
            "tf": 4,
            "weight": 0.022099
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.022099
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "can",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "connectors",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "query",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "not",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "return",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "vectors",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "send",
            "tf": 3,
            "weight": 0.016575
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "prompt",
            "tf": 2,
            "weight": 0.01105
          },
          {
            "term": "get",
            "tf": 2,
            "weight": 0.01105
          }
        ],
        "unique_terms": 106,
        "total_terms": 181
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "The id returned by the API should be stored for future use",
        "and",
        "answer",
        "can",
        "connector",
        "for",
        "model",
        "response",
        "should",
        "the",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6708219178082192,
      "overall": 0.7569406392694064
    }
  },
  {
    "text": "## Wrapping up\n\nThis tutorial shows how to build a fully private customer support system using Cohere models, Qdrant Hybrid Cloud, and Airbyte, which runs on AWS infrastructure. You can ensure your data does not leave your premises and focus on providing the best customer support experience without bothering your team with repetitive tasks.",
    "metadata": {
      "chunk_id": "632d9e6e1790-0020",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Wrapping up"
      ],
      "heading_text": "Wrapping up",
      "token_count": 65,
      "char_count": 342,
      "start_char": 29733,
      "end_char": 30075,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7566666666666667,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.622961",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Wrapping up",
      "chunk_hash": "93c510ad2bb5543b",
      "content_digest": "93c510ad2bb5543b",
      "chunk_length": 342,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "your",
          "customer",
          "support",
          "and",
          "wrapping",
          "this",
          "tutorial",
          "shows",
          "how",
          "build",
          "fully",
          "private",
          "system",
          "using",
          "cohere",
          "models",
          "qdrant",
          "hybrid",
          "cloud",
          "airbyte"
        ],
        "term_weights": [
          {
            "term": "your",
            "tf": 3,
            "weight": 0.0625
          },
          {
            "term": "customer",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "support",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "wrapping",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "tutorial",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "shows",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "build",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "fully",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "private",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "cohere",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "hybrid",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "cloud",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "airbyte",
            "tf": 1,
            "weight": 0.020833
          }
        ],
        "unique_terms": 43,
        "total_terms": 48
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Wrapping up",
        "and",
        "build",
        "customer",
        "how",
        "shows",
        "support",
        "this",
        "tutorial",
        "wrapping",
        "your"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7566666666666667,
      "overall": 0.8188888888888889
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/examples/rag-customer-support-cohere-airbyte-aws.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Question-Answering System for AI Customer Support](#question-answering-system-for-ai-customer-support.md)    - [System design](#system-design.md)      - [Data ingestion](#data-ingestion.md)     - [Cohere <> Qdrant Connector for RAG](#cohere--qdrant-connector-for-rag.md)     - [Answering bot](#answering-bot.md)    - [Prerequisites](#prerequisites.md)      - [Cohere models on AWS](#cohere-models-on-aws.md)     - [Qdrant Hybrid Cloud on AWS](#qdrant-hybrid-cloud-on-aws.md)     - [Airbyte Open Source](#airbyte-open-source.md)    - [RAG connector](#rag-connector.md)    - [Customer interface](#customer-interface.md)    - [Wrapping up](#wrapping-up.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/examples/rag-customer-support-cohere-airbyte-aws.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "632d9e6e1790-0021",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 359,
      "char_count": 1269,
      "start_char": 30077,
      "end_char": 31346,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7327,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:23.623839",
      "document_id": "632d9e6e1790",
      "document_name": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_filename": "_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_examples_rag-customer-support-cohere-airbyte-aws\\_documentation_examples_rag-customer-support-cohere-airbyte-aws_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "21d4a20c1eb1cd06",
      "content_digest": "21d4a20c1eb1cd06",
      "chunk_length": 1269,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "page",
          "github",
          "landing",
          "rag",
          "customer",
          "cohere",
          "aws",
          "for",
          "https",
          "com",
          "support",
          "airbyte",
          "answering",
          "system",
          "connector",
          "this",
          "you",
          "edit",
          "tree"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.066225
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.046358
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.046358
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.039735
          },
          {
            "term": "rag",
            "tf": 6,
            "weight": 0.039735
          },
          {
            "term": "customer",
            "tf": 6,
            "weight": 0.039735
          },
          {
            "term": "cohere",
            "tf": 6,
            "weight": 0.039735
          },
          {
            "term": "aws",
            "tf": 6,
            "weight": 0.039735
          },
          {
            "term": "for",
            "tf": 5,
            "weight": 0.033113
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.02649
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.02649
          },
          {
            "term": "support",
            "tf": 4,
            "weight": 0.02649
          },
          {
            "term": "airbyte",
            "tf": 4,
            "weight": 0.02649
          },
          {
            "term": "answering",
            "tf": 4,
            "weight": 0.02649
          },
          {
            "term": "system",
            "tf": 4,
            "weight": 0.02649
          },
          {
            "term": "connector",
            "tf": 4,
            "weight": 0.02649
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.013245
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.013245
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.013245
          }
        ],
        "unique_terms": 53,
        "total_terms": 151
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "aws",
        "cohere",
        "customer",
        "for",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "rag"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7327,
      "overall": 0.7442333333333333
    }
  }
]