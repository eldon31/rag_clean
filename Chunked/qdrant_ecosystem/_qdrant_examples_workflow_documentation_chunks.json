[
  {
    "text": "## Advanced AI Integrations  The repository includes advanced examples integrating Qdrant with modern AI frameworks:",
    "metadata": {
      "chunk_id": "a30ce8e87f9d-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "filename": "_qdrant_examples.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Advanced AI Integrations"
      ],
      "heading_text": "Advanced AI Integrations",
      "token_count": 20,
      "char_count": 116,
      "start_char": 0,
      "end_char": 116,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.55,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:30:35.980673",
      "document_id": "a30ce8e87f9d",
      "document_name": "_qdrant_examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "source_filename": "_qdrant_examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "hierarchy_path": "Advanced AI Integrations",
      "chunk_hash": "bdbf5f5432485832",
      "content_digest": "bdbf5f5432485832",
      "chunk_length": 116,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "advanced",
          "integrations",
          "the",
          "repository",
          "includes",
          "examples",
          "integrating",
          "qdrant",
          "with",
          "modern",
          "frameworks"
        ],
        "term_weights": [
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.166667
          },
          {
            "term": "integrations",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "repository",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "includes",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "examples",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "integrating",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "modern",
            "tf": 1,
            "weight": 0.083333
          },
          {
            "term": "frameworks",
            "tf": 1,
            "weight": 0.083333
          }
        ],
        "unique_terms": 11,
        "total_terms": 12
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Advanced AI Integrations",
        "advanced",
        "examples",
        "includes",
        "integrating",
        "integrations",
        "modern",
        "qdrant",
        "repository",
        "the",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.55,
      "overall": 0.75
    }
  },
  {
    "text": "## Vector Search Implementations  The repository demonstrates various vector search implementations across different data modalities:",
    "metadata": {
      "chunk_id": "a30ce8e87f9d-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "filename": "_qdrant_examples.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Vector Search Implementations"
      ],
      "heading_text": "Vector Search Implementations",
      "token_count": 19,
      "char_count": 133,
      "start_char": 0,
      "end_char": 133,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:30:35.977951",
      "document_id": "a30ce8e87f9d",
      "document_name": "_qdrant_examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "source_filename": "_qdrant_examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "hierarchy_path": "Vector Search Implementations",
      "chunk_hash": "3ceb058b016dfef6",
      "content_digest": "3ceb058b016dfef6",
      "chunk_length": 133,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "vector",
          "search",
          "implementations",
          "the",
          "repository",
          "demonstrates",
          "various",
          "across",
          "different",
          "data",
          "modalities"
        ],
        "term_weights": [
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "implementations",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "repository",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "demonstrates",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "various",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "across",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "different",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "modalities",
            "tf": 1,
            "weight": 0.071429
          }
        ],
        "unique_terms": 11,
        "total_terms": 14
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Vector Search Implementations",
        "across",
        "data",
        "demonstrates",
        "different",
        "implementations",
        "repository",
        "search",
        "the",
        "various",
        "vector"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53,
      "overall": 0.7433333333333333
    }
  },
  {
    "text": "### Image Data Applications  Image-based examples demonstrate how to build visual search systems across domains: ``` ``` Key image applications include:  - E-commerce reverse image search using CLIP embeddings - Medical image similarity search with vision transformers  Sources: [README.md12](https://github.com/qdrant/examples/blob/b3c4b28f/README.md#L12-L12) [README.md4](https://github.com/qdrant/examples/blob/b3c4b28f/README.md#L4-L4)",
    "metadata": {
      "chunk_id": "a30ce8e87f9d-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "filename": "_qdrant_examples.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Image Data Applications"
      ],
      "heading_text": "Image Data Applications",
      "token_count": 107,
      "char_count": 439,
      "start_char": 0,
      "end_char": 439,
      "semantic_score": 0.3482503294944763,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.73,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:30:35.979740",
      "document_id": "a30ce8e87f9d",
      "document_name": "_qdrant_examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "source_filename": "_qdrant_examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "hierarchy_path": "Image Data Applications",
      "chunk_hash": "a6aa6cd93c2a518e",
      "content_digest": "a6aa6cd93c2a518e",
      "chunk_length": 439,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "image",
          "readme",
          "examples",
          "search",
          "applications",
          "https",
          "github",
          "com",
          "qdrant",
          "blob",
          "b3c4b28f",
          "l12",
          "data",
          "based",
          "demonstrate",
          "how",
          "build",
          "visual",
          "systems",
          "across"
        ],
        "term_weights": [
          {
            "term": "image",
            "tf": 5,
            "weight": 0.090909
          },
          {
            "term": "readme",
            "tf": 4,
            "weight": 0.072727
          },
          {
            "term": "examples",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "applications",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "b3c4b28f",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "l12",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "demonstrate",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "build",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "visual",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "systems",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "across",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 36,
        "total_terms": 55
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Image Data Applications",
        "applications",
        "blob",
        "com",
        "examples",
        "github",
        "https",
        "image",
        "qdrant",
        "readme",
        "search"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3482503294944763,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.73,
      "overall": 0.6594167764981588
    }
  },
  {
    "text": "### Retrieval-Augmented Generation (RAG) Systems ``` ``` Key RAG examples include:  - Recency-aware RAG with LlamaIndex - Graph-enhanced RAG with Neo4j integration - Basic RAG pipelines with various LLM providers  Sources: [README.md8-9](https://github.com/qdrant/examples/blob/b3c4b28f/README.md#L8-L9) [README.md6](https://github.com/qdrant/examples/blob/b3c4b28f/README.md#L6-L6)",
    "metadata": {
      "chunk_id": "a30ce8e87f9d-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "filename": "_qdrant_examples.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Retrieval-Augmented Generation (RAG) Systems"
      ],
      "heading_text": "Retrieval-Augmented Generation (RAG) Systems",
      "token_count": 116,
      "char_count": 382,
      "start_char": 0,
      "end_char": 382,
      "semantic_score": 0.35221147537231445,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7172727272727272,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:30:35.981183",
      "document_id": "a30ce8e87f9d",
      "document_name": "_qdrant_examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "source_filename": "_qdrant_examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "hierarchy_path": "Retrieval-Augmented Generation (RAG) Systems",
      "chunk_hash": "d4ecee1853265174",
      "content_digest": "d4ecee1853265174",
      "chunk_length": 382,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "rag",
          "readme",
          "examples",
          "with",
          "https",
          "github",
          "com",
          "qdrant",
          "blob",
          "b3c4b28f",
          "retrieval",
          "augmented",
          "generation",
          "systems",
          "key",
          "include",
          "recency",
          "aware",
          "llamaindex",
          "graph"
        ],
        "term_weights": [
          {
            "term": "rag",
            "tf": 5,
            "weight": 0.104167
          },
          {
            "term": "readme",
            "tf": 4,
            "weight": 0.083333
          },
          {
            "term": "examples",
            "tf": 3,
            "weight": 0.0625
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.0625
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "b3c4b28f",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "retrieval",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "augmented",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "generation",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "systems",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "key",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "include",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "recency",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "aware",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "llamaindex",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "graph",
            "tf": 1,
            "weight": 0.020833
          }
        ],
        "unique_terms": 31,
        "total_terms": 48
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Retrieval-Augmented Generation (RAG) Systems",
        "b3c4b28f",
        "blob",
        "com",
        "examples",
        "github",
        "https",
        "qdrant",
        "rag",
        "readme",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.35221147537231445,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7172727272727272,
      "overall": 0.6564947342150139
    }
  },
  {
    "text": "# Overview  Relevant source files  - [.gitignore](https://github.com/qdrant/examples/blob/b3c4b28f/.gitignore) - [DSPy-medical-bot/medical\\_bot\\_DSPy\\_Qdrant.ipynb](https://github.com/qdrant/examples/blob/b3c4b28f/DSPy-medical-bot/medical_bot_DSPy_Qdrant.ipynb) - [README.md](https://github.com/qdrant/examples/blob/b3c4b28f/README.md) - [code-search/code-search.ipynb](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb) - [multivector-representation/multivector\\_representation\\_qdrant.ipynb](https://github.com/qdrant/examples/blob/b3c4b28f/multivector-representation/multivector_representation_qdrant.ipynb) - [sparse-vectors-movies-reco/recommend-movies.ipynb](https://github.com/qdrant/examples/blob/b3c4b28f/sparse-vectors-movies-reco/recommend-movies.ipynb)  This wiki provides documentation for the [Qdrant Examples](<https://github.com/qdrant/examples/blob/b3c4b28f/Qdrant Examples>) repository, a collection of tutorials, demos, and how-to guides demonstrating the use of Qdrant vector database and adjacent technologies for various applications. From basic similarity search to advanced retrieval-augmented generation (RAG) systems, these examples showcase real-world implementations across different data modalities (text, images, audio) and use cases. Sources: [README.md1-3](https://github.com/qdrant/examples/blob/b3c4b28f/README.md#L1-L3)",
    "metadata": {
      "chunk_id": "a30ce8e87f9d-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "filename": "_qdrant_examples.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Overview"
      ],
      "heading_text": "Overview",
      "token_count": 388,
      "char_count": 1383,
      "start_char": 0,
      "end_char": 1383,
      "semantic_score": 0.2828398048877716,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7724,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:30:35.973234",
      "document_id": "a30ce8e87f9d",
      "document_name": "_qdrant_examples",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "source_filename": "_qdrant_examples.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples.md",
      "hierarchy_path": "Overview",
      "chunk_hash": "3f19472979c836ad",
      "content_digest": "3f19472979c836ad",
      "chunk_length": 1383,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "examples",
          "https",
          "github",
          "com",
          "blob",
          "b3c4b28f",
          "ipynb",
          "search",
          "dspy",
          "medical",
          "bot",
          "readme",
          "code",
          "multivector",
          "representation",
          "movies",
          "and",
          "gitignore",
          "sparse"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 15,
            "weight": 0.085714
          },
          {
            "term": "examples",
            "tf": 11,
            "weight": 0.062857
          },
          {
            "term": "https",
            "tf": 8,
            "weight": 0.045714
          },
          {
            "term": "github",
            "tf": 8,
            "weight": 0.045714
          },
          {
            "term": "com",
            "tf": 8,
            "weight": 0.045714
          },
          {
            "term": "blob",
            "tf": 8,
            "weight": 0.045714
          },
          {
            "term": "b3c4b28f",
            "tf": 8,
            "weight": 0.045714
          },
          {
            "term": "ipynb",
            "tf": 8,
            "weight": 0.045714
          },
          {
            "term": "search",
            "tf": 5,
            "weight": 0.028571
          },
          {
            "term": "dspy",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "medical",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "bot",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "readme",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "code",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "multivector",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "representation",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "movies",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.017143
          },
          {
            "term": "gitignore",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "sparse",
            "tf": 2,
            "weight": 0.011429
          }
        ],
        "unique_terms": 71,
        "total_terms": 175
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Overview",
        "b3c4b28f",
        "blob",
        "com",
        "dspy",
        "examples",
        "github",
        "https",
        "ipynb",
        "qdrant",
        "search"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.2828398048877716,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7724,
      "overall": 0.6517466016292571
    }
  }
]