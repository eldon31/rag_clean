[
  {
    "text": "### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 657,
      "end_char": 1330,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.782657",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "b49cc869c6854f5f",
      "content_digest": "b49cc869c6854f5f",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.6351282051282051
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1332,
      "end_char": 6993,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.784510",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 6995,
      "end_char": 9342,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.785984",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9344,
      "end_char": 10017,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.786558",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "b49cc869c6854f5f",
      "content_digest": "b49cc869c6854f5f",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.6351282051282051
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10019,
      "end_char": 15680,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.788381",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - [Embeddings](https://qdrant.tech/documentation/embeddings/) - - Gemini  | Time: 10 min | Level: Beginner | [](https://githubtocolab.com/qdrant/examples/blob/gemini-getting-started/gemini-getting-started/gemini-getting-started.ipynb) | | ------------ | --------------- | ----------------------------------------------------------------------------------------------------------------------------- |",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 668,
      "char_count": 2804,
      "start_char": 15682,
      "end_char": 18486,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.8985915492957748,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.790159",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "985d54e1bf684c38",
      "content_digest": "985d54e1bf684c38",
      "chunk_length": 2804,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "documentation",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "gemini",
          "precision",
          "reranking",
          "dspy",
          "for"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 33,
            "weight": 0.105769
          },
          {
            "term": "https",
            "tf": 24,
            "weight": 0.076923
          },
          {
            "term": "documentation",
            "tf": 24,
            "weight": 0.076923
          },
          {
            "term": "tech",
            "tf": 23,
            "weight": 0.073718
          },
          {
            "term": "examples",
            "tf": 15,
            "weight": 0.048077
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.032051
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.028846
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.028846
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.022436
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.019231
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.016026
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.016026
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.012821
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.012821
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.012821
          },
          {
            "term": "gemini",
            "tf": 4,
            "weight": 0.012821
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.009615
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.009615
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.009615
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.009615
          }
        ],
        "unique_terms": 108,
        "total_terms": 312
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.8985915492957748,
      "overall": 0.8328638497652582
    }
  },
  {
    "text": "# Gemini\n\nQdrant is compatible with Gemini Embedding Model API and its official Python SDK that can be installed as any other package:\n\nGemini is a new family of Google PaLM models, released in December 2023. The new embedding models succeed the previous Gecko Embedding Model.\n\nIn the latest models, an additional parameter, `task_type`, can be passed to the API call. This parameter serves to designate the intended purpose for the embeddings utilized.\n\nThe Embedding Model API supports various task types, outlined as follows:\n\n1. `retrieval_query`: query in a search/retrieval setting\n2. `retrieval_document`: document from the corpus being searched\n3. `semantic_similarity`: semantic text similarity\n4. `classification`: embeddings to be used for text classification\n5. `clustering`: the generated embeddings will be used for clustering\n6. `task_type_unspecified`: Unset value, which will default to one of the other values.\n\nIf you’re building a semantic search application, such as RAG, you should use `task_type=\"retrieval_document\"` for the indexed documents and `task_type=\"retrieval_query\"` for the search queries.\n\nThe following example shows how to do this with Qdrant:",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Gemini"
      ],
      "heading_text": "Gemini",
      "token_count": 257,
      "char_count": 1182,
      "start_char": 18488,
      "end_char": 19670,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.6964705882352941,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.791145",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Gemini",
      "chunk_hash": "0814248a8f0306a7",
      "content_digest": "0814248a8f0306a7",
      "chunk_length": 1182,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "task",
          "for",
          "retrieval",
          "embedding",
          "type",
          "gemini",
          "model",
          "api",
          "models",
          "embeddings",
          "query",
          "search",
          "document",
          "semantic",
          "qdrant",
          "with",
          "and",
          "can",
          "other"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 13,
            "weight": 0.086093
          },
          {
            "term": "task",
            "tf": 5,
            "weight": 0.033113
          },
          {
            "term": "for",
            "tf": 5,
            "weight": 0.033113
          },
          {
            "term": "retrieval",
            "tf": 5,
            "weight": 0.033113
          },
          {
            "term": "embedding",
            "tf": 4,
            "weight": 0.02649
          },
          {
            "term": "type",
            "tf": 4,
            "weight": 0.02649
          },
          {
            "term": "gemini",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "api",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "models",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "embeddings",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "query",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "semantic",
            "tf": 3,
            "weight": 0.019868
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.013245
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.013245
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.013245
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.013245
          },
          {
            "term": "other",
            "tf": 2,
            "weight": 0.013245
          }
        ],
        "unique_terms": 88,
        "total_terms": 151
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Gemini",
        "api",
        "embedding",
        "for",
        "gemini",
        "model",
        "models",
        "retrieval",
        "task",
        "the",
        "type"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.6964705882352941,
      "overall": 0.6988235294117646
    }
  },
  {
    "text": "## Setup\n\n```bash\npip install google-generativeai\n```\n\nLet’s see how to use the Embedding Model API to embed a document for retrieval.\n\nThe following example shows how to embed a document with the `models/embedding-001` with the `retrieval_document` task type:",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Setup"
      ],
      "heading_text": "Setup",
      "token_count": 62,
      "char_count": 260,
      "start_char": 19672,
      "end_char": 19932,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.7,
      "retrieval_quality": 0.713076923076923,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.791301",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Setup",
      "chunk_hash": "d0826cfb1315d07e",
      "content_digest": "d0826cfb1315d07e",
      "chunk_length": 260,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "document",
          "how",
          "embedding",
          "embed",
          "retrieval",
          "with",
          "setup",
          "bash",
          "pip",
          "install",
          "google",
          "generativeai",
          "let",
          "see",
          "use",
          "model",
          "api",
          "for",
          "following"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.111111
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.083333
          },
          {
            "term": "how",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "embed",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "retrieval",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.055556
          },
          {
            "term": "setup",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "bash",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "pip",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "install",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "google",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "generativeai",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "let",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "see",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "api",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.027778
          },
          {
            "term": "following",
            "tf": 1,
            "weight": 0.027778
          }
        ],
        "unique_terms": 26,
        "total_terms": 36
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Setup",
        "bash",
        "document",
        "embed",
        "embedding",
        "how",
        "pip",
        "retrieval",
        "setup",
        "the",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.7,
      "retrieval_quality": 0.713076923076923,
      "overall": 0.7376923076923076
    }
  },
  {
    "text": "## Embedding a document\n\n```python\nimport google.generativeai as gemini_client\nfrom qdrant_client import QdrantClient\nfrom qdrant_client.models import Distance, PointStruct, VectorParams\n\ncollection_name = \"example_collection\"\n\nGEMINI_API_KEY = \"YOUR GEMINI API KEY\"  # add your key here\n\nclient = QdrantClient(url=\"http://localhost:6333\")\ngemini_client.configure(api_key=GEMINI_API_KEY)\ntexts = [\n    \"Qdrant is a vector database that is compatible with Gemini.\",\n    \"Gemini is a new family of Google PaLM models, released in December 2023.\",\n]\n\nresults = [\n    gemini_client.embed_content(\n        model=\"models/embedding-001\",\n        content=sentence,\n        task_type=\"retrieval_document\",\n        title=\"Qdrant x Gemini\",\n    )\n    for sentence in texts\n]\n```",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Embedding a document"
      ],
      "heading_text": "Embedding a document",
      "token_count": 192,
      "char_count": 767,
      "start_char": 19934,
      "end_char": 20701,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.7344444444444443,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.791731",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Embedding a document",
      "chunk_hash": "dcc0e307f2ee11a5",
      "content_digest": "dcc0e307f2ee11a5",
      "chunk_length": 767,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "gemini",
          "client",
          "key",
          "qdrant",
          "api",
          "import",
          "models",
          "embedding",
          "document",
          "google",
          "from",
          "qdrantclient",
          "collection",
          "your",
          "texts",
          "content",
          "sentence",
          "python",
          "generativeai",
          "distance"
        ],
        "term_weights": [
          {
            "term": "gemini",
            "tf": 9,
            "weight": 0.102273
          },
          {
            "term": "client",
            "tf": 6,
            "weight": 0.068182
          },
          {
            "term": "key",
            "tf": 5,
            "weight": 0.056818
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.045455
          },
          {
            "term": "api",
            "tf": 4,
            "weight": 0.045455
          },
          {
            "term": "import",
            "tf": 3,
            "weight": 0.034091
          },
          {
            "term": "models",
            "tf": 3,
            "weight": 0.034091
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "google",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "qdrantclient",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "texts",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "sentence",
            "tf": 2,
            "weight": 0.022727
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.011364
          },
          {
            "term": "generativeai",
            "tf": 1,
            "weight": 0.011364
          },
          {
            "term": "distance",
            "tf": 1,
            "weight": 0.011364
          }
        ],
        "unique_terms": 51,
        "total_terms": 88
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Embedding a document",
        "api",
        "client",
        "document",
        "embedding",
        "gemini",
        "google",
        "import",
        "key",
        "models",
        "qdrant"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.7344444444444443,
      "overall": 0.7114814814814814
    }
  },
  {
    "text": "## Searching for documents with Qdrant\n\nOnce the documents are indexed, you can search for the most relevant documents using the same model with the `retrieval_query` task type:\n\n```python\nclient.search(\n    collection_name=collection_name,\n    query_vector=gemini_client.embed_content(\n        model=\"models/embedding-001\",\n        content=\"Is Qdrant compatible with Gemini?\",\n        task_type=\"retrieval_query\",\n    )[\"embedding\"],\n)\n```",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Searching for documents with Qdrant"
      ],
      "heading_text": "Searching for documents with Qdrant",
      "token_count": 97,
      "char_count": 440,
      "start_char": 21257,
      "end_char": 21697,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.7,
      "retrieval_quality": 0.5257142857142857,
      "chunking_strategy": "hierarchical_context_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.792464",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Searching for documents with Qdrant",
      "chunk_hash": "66709d238cdb85d3",
      "content_digest": "66709d238cdb85d3",
      "chunk_length": 440,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "documents",
          "with",
          "query",
          "for",
          "qdrant",
          "search",
          "model",
          "retrieval",
          "task",
          "type",
          "client",
          "collection",
          "name",
          "gemini",
          "content",
          "embedding",
          "searching",
          "once",
          "are"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.072727
          },
          {
            "term": "documents",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "query",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "retrieval",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "task",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "client",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "collection",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "name",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "gemini",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "searching",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "once",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 33,
        "total_terms": 55
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Searching for documents with Qdrant",
        "documents",
        "for",
        "model",
        "qdrant",
        "query",
        "retrieval",
        "search",
        "task",
        "the",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.7,
      "retrieval_quality": 0.5257142857142857,
      "overall": 0.6752380952380953
    }
  },
  {
    "text": "##### Was this page useful? Yes No  Thank you for your feedback! 🙏  We are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/embeddings/gemini.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue. On this page:  - [Gemini](#gemini.md)    - [Setup](#setup.md)    - [Embedding a document](#embedding-a-document.md)    - [Creating Qdrant Points and Indexing documents with Qdrant](#creating-qdrant-points-and-indexing-documents-with-qdrant.md)      - [Creating Qdrant Points](#creating-qdrant-points.md)     - [Create Collection](#create-collection.md)     - [Add these into the collection](#add-these-into-the-collection.md)    - [Searching for documents with Qdrant](#searching-for-documents-with-qdrant.md)    - [Using Gemini Embedding Models with Binary Quantization](#using-gemini-embedding-models-with-binary-quantization.md)  * [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/embeddings/gemini.md) * [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "5a1bd1bbf980-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "filename": "_documentation_embeddings_gemini_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 312,
      "char_count": 1167,
      "start_char": 23163,
      "end_char": 24330,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5142896551724139,
      "chunking_strategy": "hierarchical_context_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:22.794059",
      "document_id": "5a1bd1bbf980",
      "document_name": "_documentation_embeddings_gemini_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "source_filename": "_documentation_embeddings_gemini_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_embeddings_gemini\\_documentation_embeddings_gemini_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "cc812f713ba3f30a",
      "content_digest": "cc812f713ba3f30a",
      "chunk_length": 1167,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "page",
          "github",
          "landing",
          "gemini",
          "with",
          "https",
          "com",
          "create",
          "embedding",
          "creating",
          "points",
          "documents",
          "collection",
          "this",
          "for",
          "you",
          "edit",
          "tree",
          "master"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 14,
            "weight": 0.097902
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.048951
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.048951
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.041958
          },
          {
            "term": "gemini",
            "tf": 6,
            "weight": 0.041958
          },
          {
            "term": "with",
            "tf": 6,
            "weight": 0.041958
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.027972
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.027972
          },
          {
            "term": "create",
            "tf": 4,
            "weight": 0.027972
          },
          {
            "term": "embedding",
            "tf": 4,
            "weight": 0.027972
          },
          {
            "term": "creating",
            "tf": 4,
            "weight": 0.027972
          },
          {
            "term": "points",
            "tf": 4,
            "weight": 0.027972
          },
          {
            "term": "documents",
            "tf": 4,
            "weight": 0.027972
          },
          {
            "term": "collection",
            "tf": 4,
            "weight": 0.027972
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.020979
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.020979
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.013986
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.013986
          },
          {
            "term": "tree",
            "tf": 2,
            "weight": 0.013986
          },
          {
            "term": "master",
            "tf": 2,
            "weight": 0.013986
          }
        ],
        "unique_terms": 51,
        "total_terms": 143
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "com",
        "create",
        "embedding",
        "gemini",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5142896551724139,
      "overall": 0.7047632183908045
    }
  }
]