[
  {
    "text": "## Integration Architecture  The implementation systems work together to provide comprehensive filtering and data access capabilities for the local vector database.",
    "metadata": {
      "chunk_id": "91d3708a0b72-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration Architecture"
      ],
      "heading_text": "Integration Architecture",
      "token_count": 23,
      "char_count": 164,
      "start_char": 0,
      "end_char": 164,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5757142857142857,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:48:24.673495",
      "document_id": "91d3708a0b72",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Integration Architecture",
      "chunk_hash": "51f4d5246886e1a2",
      "content_digest": "51f4d5246886e1a2",
      "chunk_length": 164,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "integration",
          "architecture",
          "implementation",
          "systems",
          "work",
          "together",
          "provide",
          "comprehensive",
          "filtering",
          "and",
          "data",
          "access",
          "capabilities",
          "for",
          "local",
          "vector",
          "database"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 2,
            "weight": 0.105263
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "systems",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "work",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "together",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "comprehensive",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "filtering",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "access",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "capabilities",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "local",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.052632
          },
          {
            "term": "database",
            "tf": 1,
            "weight": 0.052632
          }
        ],
        "unique_terms": 18,
        "total_terms": 19
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration Architecture",
        "architecture",
        "comprehensive",
        "filtering",
        "implementation",
        "integration",
        "provide",
        "systems",
        "the",
        "together",
        "work"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5757142857142857,
      "overall": 0.7585714285714286
    }
  },
  {
    "text": "## Geographic Operations  The geographic operations system provides distance calculations and spatial containment checks for location-based filtering.",
    "metadata": {
      "chunk_id": "91d3708a0b72-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Geographic Operations"
      ],
      "heading_text": "Geographic Operations",
      "token_count": 20,
      "char_count": 150,
      "start_char": 0,
      "end_char": 150,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:48:24.672977",
      "document_id": "91d3708a0b72",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Geographic Operations",
      "chunk_hash": "2d801606fcd7e995",
      "content_digest": "2d801606fcd7e995",
      "chunk_length": 150,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "geographic",
          "operations",
          "the",
          "system",
          "provides",
          "distance",
          "calculations",
          "and",
          "spatial",
          "containment",
          "checks",
          "for",
          "location",
          "based",
          "filtering"
        ],
        "term_weights": [
          {
            "term": "geographic",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "operations",
            "tf": 2,
            "weight": 0.117647
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "distance",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "calculations",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "spatial",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "containment",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "checks",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "location",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "filtering",
            "tf": 1,
            "weight": 0.058824
          }
        ],
        "unique_terms": 15,
        "total_terms": 17
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Geographic Operations",
        "and",
        "calculations",
        "containment",
        "distance",
        "geographic",
        "operations",
        "provides",
        "spatial",
        "system",
        "the"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5547058823529412,
      "overall": 0.7515686274509804
    }
  },
  {
    "text": "## Payload Filtering Architecture  The payload filtering system provides comprehensive condition evaluation for both local and remote operations. The system supports boolean logic, range queries, text matching, geographic constraints, and nested object filtering.",
    "metadata": {
      "chunk_id": "91d3708a0b72-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Payload Filtering Architecture"
      ],
      "heading_text": "Payload Filtering Architecture",
      "token_count": 40,
      "char_count": 263,
      "start_char": 0,
      "end_char": 263,
      "semantic_score": 0.44954097270965576,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5445454545454546,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:48:24.671766",
      "document_id": "91d3708a0b72",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Payload Filtering Architecture",
      "chunk_hash": "bdf3b6215214f9bb",
      "content_digest": "bdf3b6215214f9bb",
      "chunk_length": 263,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "filtering",
          "payload",
          "the",
          "system",
          "and",
          "architecture",
          "provides",
          "comprehensive",
          "condition",
          "evaluation",
          "for",
          "both",
          "local",
          "remote",
          "operations",
          "supports",
          "boolean",
          "logic",
          "range",
          "queries"
        ],
        "term_weights": [
          {
            "term": "filtering",
            "tf": 3,
            "weight": 0.09375
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.0625
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "comprehensive",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "condition",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "evaluation",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "both",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "local",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "remote",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "operations",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "boolean",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "logic",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "range",
            "tf": 1,
            "weight": 0.03125
          },
          {
            "term": "queries",
            "tf": 1,
            "weight": 0.03125
          }
        ],
        "unique_terms": 26,
        "total_terms": 32
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Payload Filtering Architecture",
        "and",
        "architecture",
        "comprehensive",
        "condition",
        "evaluation",
        "filtering",
        "payload",
        "provides",
        "system",
        "the"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.44954097270965576,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5445454545454546,
      "overall": 0.6313621424183701
    }
  },
  {
    "text": "## Value Extraction System  The value extraction system provides flexible access to nested payload data using JSON path expressions. It supports array indexing, wildcard operations, and deep object traversal.",
    "metadata": {
      "chunk_id": "91d3708a0b72-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Value Extraction System"
      ],
      "heading_text": "Value Extraction System",
      "token_count": 34,
      "char_count": 208,
      "start_char": 0,
      "end_char": 208,
      "semantic_score": 0.3380441665649414,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5589655172413793,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:48:24.672407",
      "document_id": "91d3708a0b72",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Value Extraction System",
      "chunk_hash": "5bbc876459dbdb27",
      "content_digest": "5bbc876459dbdb27",
      "chunk_length": 208,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "value",
          "extraction",
          "system",
          "the",
          "provides",
          "flexible",
          "access",
          "nested",
          "payload",
          "data",
          "using",
          "json",
          "path",
          "expressions",
          "supports",
          "array",
          "indexing",
          "wildcard",
          "operations",
          "and"
        ],
        "term_weights": [
          {
            "term": "value",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "extraction",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.076923
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "flexible",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "access",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "nested",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "payload",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "path",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "expressions",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "array",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "indexing",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "wildcard",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "operations",
            "tf": 1,
            "weight": 0.038462
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.038462
          }
        ],
        "unique_terms": 23,
        "total_terms": 26
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Value Extraction System",
        "access",
        "data",
        "extraction",
        "flexible",
        "nested",
        "payload",
        "provides",
        "system",
        "the",
        "value"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3380441665649414,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5589655172413793,
      "overall": 0.5990032279354401
    }
  },
  {
    "text": "### Distance Calculation ``` ``` The `geo_distance()` function implements the Haversine formula for calculating great-circle distances between two points on Earth's surface. **Sources:** [qdrant\\_client/local/geo.py7-29](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/geo.py#L7-L29)",
    "metadata": {
      "chunk_id": "91d3708a0b72-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Distance Calculation"
      ],
      "heading_text": "Distance Calculation",
      "token_count": 79,
      "char_count": 309,
      "start_char": 0,
      "end_char": 309,
      "semantic_score": 0.3115396499633789,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.565,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:48:24.673142",
      "document_id": "91d3708a0b72",
      "document_name": "_qdrant_qdrant-client_5-implementation-details",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "source_filename": "_qdrant_qdrant-client_5-implementation-details.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_5-implementation-details.md",
      "hierarchy_path": "Distance Calculation",
      "chunk_hash": "553a8f36983fa179",
      "content_digest": "553a8f36983fa179",
      "chunk_length": 309,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "geo",
          "client",
          "distance",
          "the",
          "local",
          "calculation",
          "function",
          "implements",
          "haversine",
          "formula",
          "for",
          "calculating",
          "great",
          "circle",
          "distances",
          "between",
          "two",
          "points",
          "earth"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.102564
          },
          {
            "term": "geo",
            "tf": 3,
            "weight": 0.076923
          },
          {
            "term": "client",
            "tf": 3,
            "weight": 0.076923
          },
          {
            "term": "distance",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "calculation",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "implements",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "haversine",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "formula",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "calculating",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "great",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "circle",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "distances",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "between",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "two",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "points",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "earth",
            "tf": 1,
            "weight": 0.025641
          }
        ],
        "unique_terms": 29,
        "total_terms": 39
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Distance Calculation",
        "calculation",
        "client",
        "distance",
        "function",
        "geo",
        "haversine",
        "implements",
        "local",
        "qdrant",
        "the"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3115396499633789,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.565,
      "overall": 0.5921798833211263
    }
  }
]