[
  {
    "text": "### On this page  - [Client Architecture](#client-architecture.md) - [Unified Client Interface](#unified-client-interface.md) - [Backend Selection Logic](#backend-selection-logic.md) - [Local Backend Implementation](#local-backend-implementation.md) - [Remote Backend Implementation](#remote-backend-implementation.md) - [Protocol Abstraction Layer](#protocol-abstraction-layer.md) - [Embedding Integration Architecture](#embedding-integration-architecture.md) - [Configuration and Initialization](#configuration-and-initialization.md)",
    "metadata": {
      "chunk_id": "7d61cdd979e5-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 110,
      "char_count": 535,
      "start_char": 0,
      "end_char": 535,
      "semantic_score": 0.40621981024742126,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5214285714285715,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:46:22.045412",
      "document_id": "7d61cdd979e5",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "62756063578097b6",
      "content_digest": "62756063578097b6",
      "chunk_length": 535,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "backend",
          "client",
          "architecture",
          "implementation",
          "unified",
          "interface",
          "selection",
          "logic",
          "local",
          "remote",
          "protocol",
          "abstraction",
          "layer",
          "embedding",
          "integration",
          "configuration",
          "and",
          "initialization",
          "this",
          "page"
        ],
        "term_weights": [
          {
            "term": "backend",
            "tf": 6,
            "weight": 0.125
          },
          {
            "term": "client",
            "tf": 4,
            "weight": 0.083333
          },
          {
            "term": "architecture",
            "tf": 4,
            "weight": 0.083333
          },
          {
            "term": "implementation",
            "tf": 4,
            "weight": 0.083333
          },
          {
            "term": "unified",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "interface",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "selection",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "logic",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "local",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "remote",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "protocol",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "abstraction",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "layer",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "configuration",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "initialization",
            "tf": 2,
            "weight": 0.041667
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.020833
          },
          {
            "term": "page",
            "tf": 1,
            "weight": 0.020833
          }
        ],
        "unique_terms": 20,
        "total_terms": 48
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "architecture",
        "backend",
        "client",
        "implementation",
        "interface",
        "local",
        "logic",
        "remote",
        "selection",
        "unified"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.40621981024742126,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5214285714285715,
      "overall": 0.6092161272253308
    }
  },
  {
    "text": "# Client Architecture  Relevant source files  - [qdrant\\_client/async\\_qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py) - [qdrant\\_client/qdrant\\_client.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py)  This document explains the overall architecture of the qdrant-client Python library, covering the unified client interface and dual backend implementation strategy. The architecture provides a consistent API surface while supporting both local in-process vector storage and remote network-based communication with Qdrant services. For information about specific search operations and query processing, see [Search Operations](qdrant/qdrant-client/3.1-search-operations.md). For details about FastEmbed integration and embedding workflows, see [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md).",
    "metadata": {
      "chunk_id": "7d61cdd979e5-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Client Architecture"
      ],
      "heading_text": "Client Architecture",
      "token_count": 214,
      "char_count": 924,
      "start_char": 0,
      "end_char": 924,
      "semantic_score": 0.3724185824394226,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.538,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:46:22.041365",
      "document_id": "7d61cdd979e5",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "Client Architecture",
      "chunk_hash": "9c316023c2ba2f90",
      "content_digest": "9c316023c2ba2f90",
      "chunk_length": 924,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "the",
          "and",
          "architecture",
          "search",
          "operations",
          "fastembed",
          "integration",
          "async",
          "https",
          "github",
          "com",
          "blob",
          "ac6f6cd2",
          "for",
          "about",
          "see",
          "relevant",
          "source"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 18,
            "weight": 0.157895
          },
          {
            "term": "client",
            "tf": 15,
            "weight": 0.131579
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "architecture",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "search",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "operations",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "fastembed",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "integration",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "async",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "ac6f6cd2",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "about",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "see",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "relevant",
            "tf": 1,
            "weight": 0.008772
          },
          {
            "term": "source",
            "tf": 1,
            "weight": 0.008772
          }
        ],
        "unique_terms": 58,
        "total_terms": 114
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Client Architecture",
        "and",
        "architecture",
        "async",
        "client",
        "fastembed",
        "integration",
        "operations",
        "qdrant",
        "search",
        "the"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3724185824394226,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.538,
      "overall": 0.6034728608131409
    }
  },
  {
    "text": "## Configuration and Initialization  The client architecture provides comprehensive configuration through initialization parameters:  | Parameter Category          | Parameters                                      | Purpose                        | | --------------------------- | ----------------------------------------------- | ------------------------------ | | **Backend Selection**       | `location`, `url`, `host`, `path`               | Choose local vs remote backend | | **Network Configuration**   | `port`, `grpc_port`, `https`, `timeout`         | Network connection settings    | | **Authentication**          | `api_key`, `auth_token_provider`                | Security credentials           | | **Protocol Settings**       | `prefer_grpc`, `prefix`                         | Protocol preferences           | | **Embedding Configuration** | `cloud_inference`, `local_inference_batch_size` | Embedding behavior             | | **Local Settings**          | `force_disable_check_same_thread`               | Local backend options          |  The initialization process validates parameter combinations and configures the appropriate backend with proper error handling for invalid configurations. **Sources:** [qdrant\\_client/qdrant\\_client.py80-161](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L80-L161) [qdrant\\_client/async\\_qdrant\\_client.py79-146](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_client.py#L79-L146)  Dismiss  Refresh this wiki  Enter email to refresh",
    "metadata": {
      "chunk_id": "7d61cdd979e5-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Configuration and Initialization"
      ],
      "heading_text": "Configuration and Initialization",
      "token_count": 318,
      "char_count": 1558,
      "start_char": 0,
      "end_char": 1558,
      "semantic_score": 0.38012629747390747,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.4889483870967742,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:46:22.044965",
      "document_id": "7d61cdd979e5",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "Configuration and Initialization",
      "chunk_hash": "fcb35acab97cc990",
      "content_digest": "fcb35acab97cc990",
      "chunk_length": 1558,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "configuration",
          "backend",
          "local",
          "initialization",
          "the",
          "https",
          "settings",
          "and",
          "parameters",
          "parameter",
          "network",
          "port",
          "grpc",
          "protocol",
          "embedding",
          "inference",
          "github",
          "com"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 12,
            "weight": 0.086331
          },
          {
            "term": "client",
            "tf": 11,
            "weight": 0.079137
          },
          {
            "term": "configuration",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "backend",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "local",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "initialization",
            "tf": 3,
            "weight": 0.021583
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.021583
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.021583
          },
          {
            "term": "settings",
            "tf": 3,
            "weight": 0.021583
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "parameters",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "parameter",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "network",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "port",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "grpc",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "protocol",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "inference",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.014388
          }
        ],
        "unique_terms": 86,
        "total_terms": 139
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Configuration and Initialization",
        "and",
        "backend",
        "client",
        "configuration",
        "https",
        "initialization",
        "local",
        "qdrant",
        "settings",
        "the"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.38012629747390747,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.4889483870967742,
      "overall": 0.5896915615235605
    }
  },
  {
    "text": "## Remote Backend Implementation  The remote backend handles network communication with external Qdrant services through the `QdrantRemote` class: ``` ``` The remote implementation provides:  - **Dual protocol support**: HTTP/REST (port 6333) and gRPC (port 6334) - **Protocol preference**: Configurable via `prefer_grpc` parameter - **Authentication**: API key support and token provider callbacks - **Connection management**: Timeout configuration and connection pooling - **Cloud integration**: Direct support for Qdrant Cloud services  **Sources:** [qdrant\\_client/qdrant\\_client.py139-153](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L139-L153) [qdrant\\_client/qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py)",
    "metadata": {
      "chunk_id": "7d61cdd979e5-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Remote Backend Implementation"
      ],
      "heading_text": "Remote Backend Implementation",
      "token_count": 201,
      "char_count": 811,
      "start_char": 0,
      "end_char": 811,
      "semantic_score": 0.3351917862892151,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.518169014084507,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:46:22.043343",
      "document_id": "7d61cdd979e5",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "Remote Backend Implementation",
      "chunk_hash": "14fe83590adaa463",
      "content_digest": "14fe83590adaa463",
      "chunk_length": 811,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "remote",
          "the",
          "support",
          "and",
          "backend",
          "implementation",
          "services",
          "protocol",
          "port",
          "grpc",
          "connection",
          "cloud",
          "https",
          "github",
          "com",
          "blob",
          "ac6f6cd2",
          "handles"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 14,
            "weight": 0.141414
          },
          {
            "term": "client",
            "tf": 8,
            "weight": 0.080808
          },
          {
            "term": "remote",
            "tf": 5,
            "weight": 0.050505
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.030303
          },
          {
            "term": "support",
            "tf": 3,
            "weight": 0.030303
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.030303
          },
          {
            "term": "backend",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "implementation",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "services",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "protocol",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "port",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "grpc",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "connection",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "cloud",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "ac6f6cd2",
            "tf": 2,
            "weight": 0.020202
          },
          {
            "term": "handles",
            "tf": 1,
            "weight": 0.010101
          }
        ],
        "unique_terms": 56,
        "total_terms": 99
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Remote Backend Implementation",
        "and",
        "backend",
        "client",
        "implementation",
        "protocol",
        "qdrant",
        "remote",
        "services",
        "support",
        "the"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3351917862892151,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.518169014084507,
      "overall": 0.584453600124574
    }
  },
  {
    "text": "## Local Backend Implementation  The local backend provides in-process vector storage and search capabilities through the `QdrantLocal` class: ``` ``` The local implementation enables:  - **In-memory mode**: Volatile storage for development and testing - **Persistent mode**: File-based storage for production deployments - **Full vector operations**: Search, CRUD operations, and filtering without network overhead - **Thread safety controls**: Configurable via `force_disable_check_same_thread`  **Sources:** [qdrant\\_client/qdrant\\_client.py126-135](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_client.py#L126-L135) [qdrant\\_client/local/qdrant\\_local.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/local/qdrant_local.py)",
    "metadata": {
      "chunk_id": "7d61cdd979e5-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Local Backend Implementation"
      ],
      "heading_text": "Local Backend Implementation",
      "token_count": 186,
      "char_count": 779,
      "start_char": 0,
      "end_char": 779,
      "semantic_score": 0.3384687304496765,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.509047619047619,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:46:22.042923",
      "document_id": "7d61cdd979e5",
      "document_name": "_qdrant_qdrant-client_2-client-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "source_filename": "_qdrant_qdrant-client_2-client-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_2-client-architecture.md",
      "hierarchy_path": "Local Backend Implementation",
      "chunk_hash": "c40d1398ea40168e",
      "content_digest": "c40d1398ea40168e",
      "chunk_length": 779,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "local",
          "the",
          "storage",
          "and",
          "backend",
          "implementation",
          "vector",
          "search",
          "mode",
          "for",
          "operations",
          "thread",
          "https",
          "github",
          "com",
          "blob",
          "ac6f6cd2",
          "provides"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 12,
            "weight": 0.123711
          },
          {
            "term": "client",
            "tf": 8,
            "weight": 0.082474
          },
          {
            "term": "local",
            "tf": 7,
            "weight": 0.072165
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "storage",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "backend",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "implementation",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "mode",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "operations",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "thread",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "ac6f6cd2",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.010309
          }
        ],
        "unique_terms": 54,
        "total_terms": 97
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Local Backend Implementation",
        "and",
        "backend",
        "client",
        "implementation",
        "local",
        "qdrant",
        "search",
        "storage",
        "the",
        "vector"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3384687304496765,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.509047619047619,
      "overall": 0.5825054498324318
    }
  }
]