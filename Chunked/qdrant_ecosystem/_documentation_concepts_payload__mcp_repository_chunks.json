[
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 1033,
      "end_char": 3001,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.677567",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 3683,
      "end_char": 5671,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.678595",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "### Support  [FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)  - [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/) - [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)  [Release Notes](https://github.com/qdrant/qdrant/releases)",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Support"
      ],
      "heading_text": "Support",
      "token_count": 83,
      "char_count": 311,
      "start_char": 5673,
      "end_char": 5984,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.679583",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Support",
      "chunk_hash": "f059a5deb61e367d",
      "content_digest": "f059a5deb61e367d",
      "chunk_length": 311,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "faq",
          "https",
          "tech",
          "documentation",
          "fundamentals",
          "database",
          "optimization",
          "support",
          "release",
          "notes",
          "github",
          "com",
          "releases"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 8,
            "weight": 0.228571
          },
          {
            "term": "faq",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.114286
          },
          {
            "term": "tech",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "documentation",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "fundamentals",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "database",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "optimization",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "support",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "release",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "notes",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "releases",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 14,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Support",
        "database",
        "documentation",
        "faq",
        "fundamentals",
        "https",
        "optimization",
        "qdrant",
        "release",
        "support",
        "tech"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.7209090909090908
    }
  },
  {
    "text": "### User Manual  [Concepts](https://qdrant.tech/documentation/concepts/)  - [Collections](https://qdrant.tech/documentation/concepts/collections/) - [Points](https://qdrant.tech/documentation/concepts/points/) - [Vectors](https://qdrant.tech/documentation/concepts/vectors/) - [Payload](https://qdrant.tech/documentation/concepts/payload/) - [Search](https://qdrant.tech/documentation/concepts/search/) - [Explore](https://qdrant.tech/documentation/concepts/explore/) - [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/) - [Filtering](https://qdrant.tech/documentation/concepts/filtering/) - [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/) - [Storage](https://qdrant.tech/documentation/concepts/storage/) - [Indexing](https://qdrant.tech/documentation/concepts/indexing/) - [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)  [Guides](https://qdrant.tech/documentation/guides/installation/)  - [Installation](https://qdrant.tech/documentation/guides/installation/) - [Administration](https://qdrant.tech/documentation/guides/administration/) - [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/) - [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/) - [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/) - [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/) - [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/) - [Quantization](https://qdrant.tech/documentation/guides/quantization/) - [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/) - [Configuration](https://qdrant.tech/documentation/guides/configuration/) - [Security](https://qdrant.tech/documentation/guides/security/) - [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/) - [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "User Manual"
      ],
      "heading_text": "User Manual",
      "token_count": 485,
      "char_count": 1968,
      "start_char": 6361,
      "end_char": 8329,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.680581",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "User Manual",
      "chunk_hash": "aa99483e94fddd20",
      "content_digest": "aa99483e94fddd20",
      "chunk_length": 1968,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "guides",
          "concepts",
          "installation",
          "collections",
          "points",
          "vectors",
          "payload",
          "search",
          "explore",
          "hybrid",
          "queries",
          "filtering",
          "optimizer",
          "storage",
          "indexing",
          "snapshots"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "qdrant",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "tech",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "documentation",
            "tf": 27,
            "weight": 0.131068
          },
          {
            "term": "guides",
            "tf": 15,
            "weight": 0.072816
          },
          {
            "term": "concepts",
            "tf": 14,
            "weight": 0.067961
          },
          {
            "term": "installation",
            "tf": 3,
            "weight": 0.014563
          },
          {
            "term": "collections",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "payload",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "explore",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "hybrid",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "queries",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "filtering",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "optimizer",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "indexing",
            "tf": 2,
            "weight": 0.009709
          },
          {
            "term": "snapshots",
            "tf": 2,
            "weight": 0.009709
          }
        ],
        "unique_terms": 45,
        "total_terms": 206
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "User Manual",
        "collections",
        "concepts",
        "documentation",
        "guides",
        "https",
        "installation",
        "points",
        "qdrant",
        "tech",
        "vectors"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.733,
      "overall": 0.7776666666666666
    }
  },
  {
    "text": "### Tutorials  [Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)  - [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/) - [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/) - [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/) - [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)  [Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)  - [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/) - [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/) - [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/) - [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/) - [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)  [Using the Database](https://qdrant.tech/documentation/database-tutorials/)  - [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/) - [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/) - [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/) - [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/) - [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/) - [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/) - [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tutorials"
      ],
      "heading_text": "Tutorials",
      "token_count": 459,
      "char_count": 1988,
      "start_char": 9011,
      "end_char": 10999,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.681581",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Tutorials",
      "chunk_hash": "f480f0283a04b78a",
      "content_digest": "f480f0283a04b78a",
      "chunk_length": 1988,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "tutorials",
          "https",
          "tech",
          "documentation",
          "search",
          "database",
          "advanced",
          "beginner",
          "with",
          "hybrid",
          "retrieval",
          "build",
          "scale",
          "neural",
          "fastembed",
          "quality",
          "multivector",
          "representations",
          "using"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 22,
            "weight": 0.098655
          },
          {
            "term": "tutorials",
            "tf": 20,
            "weight": 0.089686
          },
          {
            "term": "https",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "tech",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "documentation",
            "tf": 19,
            "weight": 0.085202
          },
          {
            "term": "search",
            "tf": 14,
            "weight": 0.06278
          },
          {
            "term": "database",
            "tf": 9,
            "weight": 0.040359
          },
          {
            "term": "advanced",
            "tf": 7,
            "weight": 0.03139
          },
          {
            "term": "beginner",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.022422
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "retrieval",
            "tf": 4,
            "weight": 0.017937
          },
          {
            "term": "build",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "scale",
            "tf": 3,
            "weight": 0.013453
          },
          {
            "term": "neural",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "fastembed",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "quality",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "multivector",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "representations",
            "tf": 2,
            "weight": 0.008969
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.008969
          }
        ],
        "unique_terms": 64,
        "total_terms": 223
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tutorials",
        "advanced",
        "beginner",
        "database",
        "documentation",
        "https",
        "qdrant",
        "search",
        "tech",
        "tutorials",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7480092783505154,
      "overall": 0.7826697594501718
    }
  },
  {
    "text": "# Payload\n\nOne of the significant features of Qdrant is the ability to store additional information along with vectors. This information is called `payload` in Qdrant terminology.\n\nQdrant allows you to store any information that can be represented using JSON.\n\nHere is an example of a typical payload:\n\n```json\n{\n    \"name\": \"jacket\",\n    \"colors\": [\"red\", \"blue\"],\n    \"count\": 10,\n    \"price\": 11.99,\n    \"locations\": [\n        {\n            \"lon\": 52.5200, \n            \"lat\": 13.4050\n        }\n    ],\n    \"reviews\": [\n        {\n            \"user\": \"alice\",\n            \"score\": 4\n        },\n        {\n            \"user\": \"bob\",\n            \"score\": 5\n        }\n    ]\n}\n```",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Payload"
      ],
      "heading_text": "Payload",
      "token_count": 176,
      "char_count": 676,
      "start_char": 11441,
      "end_char": 12117,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5229411764705882,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.683220",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Payload",
      "chunk_hash": "f56ede838d68d1b2",
      "content_digest": "f56ede838d68d1b2",
      "chunk_length": 676,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "payload",
          "qdrant",
          "information",
          "the",
          "store",
          "json",
          "user",
          "score",
          "one",
          "significant",
          "features",
          "ability",
          "additional",
          "along",
          "with",
          "vectors",
          "this",
          "called",
          "terminology",
          "allows"
        ],
        "term_weights": [
          {
            "term": "payload",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "information",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "store",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "user",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "score",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "one",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "significant",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "features",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "ability",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "additional",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "along",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "called",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "terminology",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "allows",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 44,
        "total_terms": 55
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Payload",
        "information",
        "json",
        "one",
        "payload",
        "qdrant",
        "score",
        "significant",
        "store",
        "the",
        "user"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5229411764705882,
      "overall": 0.6409803921568628
    }
  },
  {
    "text": "## Payload types\n\nIn addition to storing payloads, Qdrant also allows you search based on certain kinds of values. This feature is implemented as additional filters during the search and will enable you to incorporate custom logic on top of semantic similarity.\n\nDuring the filtering, Qdrant will check the conditions over those values that match the type of the filtering condition. If the stored value type does not fit the filtering condition - it will be considered not satisfied.\n\nFor example, you will get an empty output if you apply the [range condition](https://qdrant.tech/documentation/concepts/filtering/#range) on the string data.\n\nHowever, arrays (multiple values of the same type) are treated a little bit different. When we apply a filter to an array, it will succeed if at least one of the values inside the array meets the condition.\n\nThe filtering process is discussed in detail in the section [Filtering](https://qdrant.tech/documentation/concepts/filtering/).\n\nLet’s look at the data types that Qdrant supports for searching:",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Payload types"
      ],
      "heading_text": "Payload types",
      "token_count": 212,
      "char_count": 1046,
      "start_char": 12119,
      "end_char": 13165,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.6868152866242038,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.683220",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Payload types",
      "chunk_hash": "f19bc56c984f5675",
      "content_digest": "f19bc56c984f5675",
      "chunk_length": 1046,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "filtering",
          "qdrant",
          "will",
          "you",
          "values",
          "condition",
          "type",
          "types",
          "search",
          "during",
          "that",
          "not",
          "for",
          "apply",
          "range",
          "https",
          "tech",
          "documentation",
          "concepts"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 16,
            "weight": 0.115942
          },
          {
            "term": "filtering",
            "tf": 7,
            "weight": 0.050725
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.036232
          },
          {
            "term": "will",
            "tf": 5,
            "weight": 0.036232
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "values",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "condition",
            "tf": 4,
            "weight": 0.028986
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.021739
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "during",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "that",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "not",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "apply",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "range",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "tech",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "documentation",
            "tf": 2,
            "weight": 0.014493
          },
          {
            "term": "concepts",
            "tf": 2,
            "weight": 0.014493
          }
        ],
        "unique_terms": 84,
        "total_terms": 138
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Payload types",
        "condition",
        "filtering",
        "qdrant",
        "search",
        "the",
        "type",
        "types",
        "values",
        "will",
        "you"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.6868152866242038,
      "overall": 0.6956050955414012
    }
  },
  {
    "text": "### Integer\n\n`integer` - 64-bit integer in the range from `-9223372036854775808` to `9223372036854775807`.\n\nExample of single and multiple `integer` values:\n\n```json\n{\n    \"count\": 10,\n    \"sizes\": [35, 36, 38]\n}\n```",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integer"
      ],
      "heading_text": "Integer",
      "token_count": 70,
      "char_count": 216,
      "start_char": 13167,
      "end_char": 13383,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.57,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.683220",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Integer",
      "chunk_hash": "d1f14d0dc007f3c9",
      "content_digest": "d1f14d0dc007f3c9",
      "chunk_length": 216,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "integer",
          "bit",
          "the",
          "range",
          "from",
          "9223372036854775808",
          "9223372036854775807",
          "example",
          "single",
          "and",
          "multiple",
          "values",
          "json",
          "count",
          "sizes"
        ],
        "term_weights": [
          {
            "term": "integer",
            "tf": 4,
            "weight": 0.222222
          },
          {
            "term": "bit",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "range",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "9223372036854775808",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "9223372036854775807",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "count",
            "tf": 1,
            "weight": 0.055556
          },
          {
            "term": "sizes",
            "tf": 1,
            "weight": 0.055556
          }
        ],
        "unique_terms": 15,
        "total_terms": 18
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "9223372036854775807",
        "9223372036854775808",
        "Integer",
        "and",
        "bit",
        "example",
        "from",
        "integer",
        "range",
        "single",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.57,
      "overall": 0.6566666666666666
    }
  },
  {
    "text": "### Float\n\n`float` - 64-bit floating point number.\n\nExample of single and multiple `float` values:\n\n```json\n{\n    \"price\": 11.99,\n    \"ratings\": [9.1, 9.2, 9.4]\n}\n```",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Float"
      ],
      "heading_text": "Float",
      "token_count": 58,
      "char_count": 166,
      "start_char": 13385,
      "end_char": 13551,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.578,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.683220",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Float",
      "chunk_hash": "d1fc8097a78bfa85",
      "content_digest": "d1fc8097a78bfa85",
      "chunk_length": 166,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "float",
          "bit",
          "floating",
          "point",
          "number",
          "example",
          "single",
          "and",
          "multiple",
          "values",
          "json",
          "price",
          "ratings"
        ],
        "term_weights": [
          {
            "term": "float",
            "tf": 3,
            "weight": 0.2
          },
          {
            "term": "bit",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "floating",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "point",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "number",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "price",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "ratings",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 13,
        "total_terms": 15
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Float",
        "and",
        "bit",
        "example",
        "float",
        "floating",
        "multiple",
        "number",
        "point",
        "single",
        "values"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.578,
      "overall": 0.6259999999999999
    }
  },
  {
    "text": "### Bool\n\nBool - binary value. Equals to `true` or `false`.\n\nExample of single and multiple `bool` values:\n\n```json\n{\n    \"is_delivered\": true,\n    \"responses\": [false, false, true, false]\n}\n```",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Bool"
      ],
      "heading_text": "Bool",
      "token_count": 54,
      "char_count": 194,
      "start_char": 13553,
      "end_char": 13747,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5693103448275862,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.683220",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Bool",
      "chunk_hash": "471218feea57532c",
      "content_digest": "471218feea57532c",
      "chunk_length": 194,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "false",
          "bool",
          "true",
          "binary",
          "value",
          "equals",
          "example",
          "single",
          "and",
          "multiple",
          "values",
          "json",
          "delivered",
          "responses"
        ],
        "term_weights": [
          {
            "term": "false",
            "tf": 4,
            "weight": 0.190476
          },
          {
            "term": "bool",
            "tf": 3,
            "weight": 0.142857
          },
          {
            "term": "true",
            "tf": 3,
            "weight": 0.142857
          },
          {
            "term": "binary",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "value",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "equals",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "delivered",
            "tf": 1,
            "weight": 0.047619
          },
          {
            "term": "responses",
            "tf": 1,
            "weight": 0.047619
          }
        ],
        "unique_terms": 14,
        "total_terms": 21
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Bool",
        "and",
        "binary",
        "bool",
        "equals",
        "example",
        "false",
        "multiple",
        "single",
        "true",
        "value"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5693103448275862,
      "overall": 0.6564367816091954
    }
  },
  {
    "text": "### Keyword\n\n`keyword` - string value.\n\nExample of single and multiple `keyword` values:\n\n```json\n{\n    \"name\": \"Alice\",\n    \"friends\": [\n        \"bob\",\n        \"eva\",\n        \"jack\"\n    ]\n}\n```",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Keyword"
      ],
      "heading_text": "Keyword",
      "token_count": 52,
      "char_count": 194,
      "start_char": 13749,
      "end_char": 13943,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.578,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.683220",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Keyword",
      "chunk_hash": "41951234146a51eb",
      "content_digest": "41951234146a51eb",
      "chunk_length": 194,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "keyword",
          "string",
          "value",
          "example",
          "single",
          "and",
          "multiple",
          "values",
          "json",
          "name",
          "alice",
          "friends",
          "bob",
          "eva",
          "jack"
        ],
        "term_weights": [
          {
            "term": "keyword",
            "tf": 3,
            "weight": 0.176471
          },
          {
            "term": "string",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "value",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "name",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "alice",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "friends",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "bob",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "eva",
            "tf": 1,
            "weight": 0.058824
          },
          {
            "term": "jack",
            "tf": 1,
            "weight": 0.058824
          }
        ],
        "unique_terms": 15,
        "total_terms": 17
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Keyword",
        "and",
        "example",
        "json",
        "keyword",
        "multiple",
        "name",
        "single",
        "string",
        "value",
        "values"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.578,
      "overall": 0.6593333333333332
    }
  },
  {
    "text": "### Geo\n\n`geo` is used to represent geographical coordinates.\n\nExample of single and multiple `geo` values:\n\n```json\n{\n    \"location\": {\n        \"lon\": 52.5200,\n        \"lat\": 13.4050\n    },\n    \"cities\": [\n        {\n            \"lon\": 51.5072,\n            \"lat\": 0.1276\n        },\n        {\n            \"lon\": 40.7128,\n            \"lat\": 74.0060\n        }\n    ]\n}\n```\n\nCoordinate should be described as an object containing two fields: `lon` - for longitude, and `lat` - for latitude.",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Geo"
      ],
      "heading_text": "Geo",
      "token_count": 138,
      "char_count": 485,
      "start_char": 13945,
      "end_char": 14430,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5260655737704918,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.683220",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Geo",
      "chunk_hash": "5b55c66b52ae1f4b",
      "content_digest": "5b55c66b52ae1f4b",
      "chunk_length": 485,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "lon",
          "lat",
          "geo",
          "and",
          "for",
          "used",
          "represent",
          "geographical",
          "coordinates",
          "example",
          "single",
          "multiple",
          "values",
          "json",
          "location",
          "5200",
          "4050",
          "cities",
          "5072",
          "1276"
        ],
        "term_weights": [
          {
            "term": "lon",
            "tf": 4,
            "weight": 0.097561
          },
          {
            "term": "lat",
            "tf": 4,
            "weight": 0.097561
          },
          {
            "term": "geo",
            "tf": 3,
            "weight": 0.073171
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "used",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "represent",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "geographical",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "coordinates",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "single",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "values",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "json",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "location",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "5200",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "4050",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "cities",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "5072",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "1276",
            "tf": 1,
            "weight": 0.02439
          }
        ],
        "unique_terms": 31,
        "total_terms": 41
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Geo",
        "and",
        "coordinates",
        "example",
        "for",
        "geo",
        "geographical",
        "lat",
        "lon",
        "represent",
        "used"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5260655737704918,
      "overall": 0.6753551912568305
    }
  },
  {
    "text": "### Datetime\n\n*Available as of v1.8.0*\n\n`datetime` - date and time in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6) format.\n\nSee the following examples of single and multiple `datetime` values:\n\n```json\n{\n    \"created_at\": \"2023-02-08T10:49:00Z\",\n    \"updated_at\": [\n        \"2023-02-08T13:52:00Z\",\n        \"2023-02-21T21:23:00Z\"\n    ]\n}\n```\n\nThe following formats are supported:\n\n- `\"2023-02-08T10:49:00Z\"` ([RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), UTC)\n- `\"2023-02-08T11:49:00+01:00\"` ([RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6), with timezone)\n- `\"2023-02-08T10:49:00\"` (without timezone, UTC is assumed)\n- `\"2023-02-08T10:49\"` (without timezone and seconds)\n- `\"2023-02-08\"` (only date, midnight is assumed)\n\nNotes about the format:\n\n- `T` can be replaced with a space.\n- The `T` and `Z` symbols are case-insensitive.\n- UTC is always assumed when the timezone is not specified.\n- Timezone can have the following formats: `±HH:MM`, `±HHMM`, `±HH`, or `Z`.\n- Seconds can have up to 6 decimals, so the finest granularity for `datetime` is microseconds.",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0017",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Datetime"
      ],
      "heading_text": "Datetime",
      "token_count": 380,
      "char_count": 1134,
      "start_char": 14432,
      "end_char": 15566,
      "semantic_score": 0.7,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.5201068702290077,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.683220",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Datetime",
      "chunk_hash": "1fc19e18b7fb54d5",
      "content_digest": "1fc19e18b7fb54d5",
      "chunk_length": 1134,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "2023",
          "the",
          "timezone",
          "datetime",
          "and",
          "08t10",
          "00z",
          "rfc",
          "3339",
          "https",
          "datatracker",
          "ietf",
          "org",
          "doc",
          "html",
          "rfc3339",
          "section",
          "following",
          "utc",
          "assumed"
        ],
        "term_weights": [
          {
            "term": "2023",
            "tf": 8,
            "weight": 0.062992
          },
          {
            "term": "the",
            "tf": 7,
            "weight": 0.055118
          },
          {
            "term": "timezone",
            "tf": 5,
            "weight": 0.03937
          },
          {
            "term": "datetime",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "08t10",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "00z",
            "tf": 4,
            "weight": 0.031496
          },
          {
            "term": "rfc",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "3339",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "datatracker",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "ietf",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "org",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "doc",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "html",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "rfc3339",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "section",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "following",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "utc",
            "tf": 3,
            "weight": 0.023622
          },
          {
            "term": "assumed",
            "tf": 3,
            "weight": 0.023622
          }
        ],
        "unique_terms": 62,
        "total_terms": 127
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "00z",
        "08t10",
        "2023",
        "3339",
        "Datetime",
        "and",
        "datetime",
        "https",
        "rfc",
        "the",
        "timezone"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.5201068702290077,
      "overall": 0.7400356234096691
    }
  },
  {
    "text": "### UUID\n\n*Available as of v1.11.0*\n\nIn addition to the basic `keyword` type, Qdrant supports `uuid` type for storing UUID values. Functionally, it works the same as `keyword`, internally stores parsed UUID values.\n\n```json\n{\n    \"uuid\": \"550e8400-e29b-41d4-a716-446655440000\",\n    \"uuids\": [\n        \"550e8400-e29b-41d4-a716-446655440000\",\n        \"550e8400-e29b-41d4-a716-446655440001\"\n    ]\n}\n```\n\nString representation of UUID (e.g. `550e8400-e29b-41d4-a716-446655440000`) occupies 36 bytes. But when numeric representation is used, it is only 128 bits (16 bytes).\n\nUsage of `uuid` index type is recommended in payload-heavy collections to save RAM and improve search performance.",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "UUID"
      ],
      "heading_text": "UUID",
      "token_count": 206,
      "char_count": 684,
      "start_char": 15568,
      "end_char": 16252,
      "semantic_score": 0.7,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.5285542168674698,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.686758",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "UUID",
      "chunk_hash": "1da91d72c208549b",
      "content_digest": "1da91d72c208549b",
      "chunk_length": 684,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "uuid",
          "550e8400",
          "e29b",
          "41d4",
          "a716",
          "type",
          "446655440000",
          "the",
          "keyword",
          "values",
          "representation",
          "bytes",
          "available",
          "addition",
          "basic",
          "qdrant",
          "supports",
          "for",
          "storing",
          "functionally"
        ],
        "term_weights": [
          {
            "term": "uuid",
            "tf": 7,
            "weight": 0.092105
          },
          {
            "term": "550e8400",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "e29b",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "41d4",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "a716",
            "tf": 4,
            "weight": 0.052632
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "446655440000",
            "tf": 3,
            "weight": 0.039474
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "keyword",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "values",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "representation",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "bytes",
            "tf": 2,
            "weight": 0.026316
          },
          {
            "term": "available",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "addition",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "basic",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "storing",
            "tf": 1,
            "weight": 0.013158
          },
          {
            "term": "functionally",
            "tf": 1,
            "weight": 0.013158
          }
        ],
        "unique_terms": 49,
        "total_terms": 76
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "41d4",
        "446655440000",
        "550e8400",
        "UUID",
        "a716",
        "e29b",
        "keyword",
        "the",
        "type",
        "uuid",
        "values"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.5285542168674698,
      "overall": 0.7428514056224899
    }
  },
  {
    "text": "## Create point with payload\n\nREST API ([Schema](https://api.qdrant.tech/api-reference/points/upsert-points))\n\n```http\nPUT /collections/{collection_name}/points\n{\n    \"points\": [\n        {\n            \"id\": 1,\n            \"vector\": [0.05, 0.61, 0.76, 0.74],\n            \"payload\": {\"city\": \"Berlin\", \"price\": 1.99}\n        },\n        {\n            \"id\": 2,\n            \"vector\": [0.19, 0.81, 0.75, 0.11],\n            \"payload\": {\"city\": [\"Berlin\", \"London\"], \"price\": 1.99}\n        },\n        {\n            \"id\": 3,\n            \"vector\": [0.36, 0.55, 0.47, 0.94],\n            \"payload\": {\"city\": [\"Berlin\", \"Moscow\"], \"price\": [1.99, 2.99]}\n        }\n    ]\n}\n```\n\n```python\nfrom qdrant_client import QdrantClient, models\n\nclient = QdrantClient(url=\"http://localhost:6333\")\n\nclient.upsert(\n    collection_name=\"{collection_name}\",\n    points=[\n        models.PointStruct(\n            id=1,\n            vector=[0.05, 0.61, 0.76, 0.74],\n            payload={\n                \"city\": \"Berlin\",\n                \"price\": 1.99,\n            },\n        ),\n        models.PointStruct(\n            id=2,\n            vector=[0.19, 0.81, 0.75, 0.11],\n            payload={\n                \"city\": [\"Berlin\", \"London\"],\n                \"price\": 1.99,\n            },\n        ),\n        models.PointStruct(\n            id=3,\n            vector=[0.36, 0.55, 0.47, 0.94],\n            payload={\n                \"city\": [\"Berlin\", \"Moscow\"],\n                \"price\": [1.99, 2.99],\n            },\n        ),\n    ],\n)\n```\n\n```typescript\nimport { QdrantClient } from \"@qdrant/js-client-rest\";\n\nconst client = new QdrantClient({ host: \"localhost\", port: 6333 });\n\nclient.upsert(\"{collection_name}\", {\n  points: [\n    {\n      id: 1,\n      vector: [0.05, 0.61, 0.76, 0.74],\n      payload: {\n        city: \"Berlin\",\n        price: 1.99,\n      },\n    },\n    {\n      id: 2,\n      vector: [0.19, 0.81, 0.75, 0.11],\n      payload: {\n        city: [\"Berlin\", \"London\"],\n        price: 1.99,\n      },",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0019",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Create point with payload"
      ],
      "heading_text": "Create point with payload",
      "token_count": 605,
      "char_count": 1967,
      "start_char": 16254,
      "end_char": 18221,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.6552325581395348,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.693909",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Create point with payload",
      "chunk_hash": "c13efcc61146b93c",
      "content_digest": "c13efcc61146b93c",
      "chunk_length": 1967,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "payload",
          "vector",
          "city",
          "berlin",
          "price",
          "points",
          "client",
          "collection",
          "name",
          "qdrantclient",
          "models",
          "api",
          "qdrant",
          "upsert",
          "london",
          "pointstruct",
          "rest",
          "http",
          "moscow",
          "from"
        ],
        "term_weights": [
          {
            "term": "payload",
            "tf": 9,
            "weight": 0.078947
          },
          {
            "term": "vector",
            "tf": 8,
            "weight": 0.070175
          },
          {
            "term": "city",
            "tf": 8,
            "weight": 0.070175
          },
          {
            "term": "berlin",
            "tf": 8,
            "weight": 0.070175
          },
          {
            "term": "price",
            "tf": 8,
            "weight": 0.070175
          },
          {
            "term": "points",
            "tf": 6,
            "weight": 0.052632
          },
          {
            "term": "client",
            "tf": 6,
            "weight": 0.052632
          },
          {
            "term": "collection",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "name",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "qdrantclient",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "models",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "api",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "upsert",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "london",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "pointstruct",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "rest",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "http",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "moscow",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.017544
          }
        ],
        "unique_terms": 39,
        "total_terms": 114
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Create point with payload",
        "berlin",
        "city",
        "client",
        "collection",
        "name",
        "payload",
        "points",
        "price",
        "qdrantclient",
        "vector"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.6552325581395348,
      "overall": 0.685077519379845
    }
  },
  {
    "text": "## Update payload\n\nUpdating payloads in Qdrant offers flexible methods to manage vector metadata. The **set payload** method updates specific fields while keeping others unchanged, while the **overwrite** method replaces the entire payload. Developers can also use **clear payload** to remove all metadata or delete fields to remove specific keys without affecting the rest. These options provide precise control for adapting to dynamic datasets.",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0023",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Update payload"
      ],
      "heading_text": "Update payload",
      "token_count": 78,
      "char_count": 446,
      "start_char": 22788,
      "end_char": 23234,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.53375,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.696261",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Update payload",
      "chunk_hash": "23c3bb533441c577",
      "content_digest": "23c3bb533441c577",
      "chunk_length": 446,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "payload",
          "the",
          "metadata",
          "method",
          "specific",
          "fields",
          "while",
          "remove",
          "update",
          "updating",
          "payloads",
          "qdrant",
          "offers",
          "flexible",
          "methods",
          "manage",
          "vector",
          "set",
          "updates",
          "keeping"
        ],
        "term_weights": [
          {
            "term": "payload",
            "tf": 4,
            "weight": 0.070175
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.070175
          },
          {
            "term": "metadata",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "method",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "specific",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "fields",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "while",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "remove",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "update",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "updating",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "payloads",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "offers",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "flexible",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "manage",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "updates",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "keeping",
            "tf": 1,
            "weight": 0.017544
          }
        ],
        "unique_terms": 45,
        "total_terms": 57
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Update payload",
        "fields",
        "metadata",
        "method",
        "payload",
        "remove",
        "specific",
        "the",
        "update",
        "updating",
        "while"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.53375,
      "overall": 0.71125
    }
  },
  {
    "text": "### Clear payload\n\nThis method removes all payload keys from specified points\n\nREST API ([Schema](https://api.qdrant.tech/api-reference/points/clear-payload)):\n\n```http\nPOST /collections/{collection_name}/points/payload/clear\n{\n    \"points\": [0, 3, 100]\n}\n```\n\n```python\nclient.clear_payload(\n    collection_name=\"{collection_name}\",\n    points_selector=[0, 3, 100],\n)\n```\n\n```typescript\nclient.clearPayload(\"{collection_name}\", {\n  points: [0, 3, 100],\n});\n```\n\n```rust\nuse qdrant_client::qdrant::{ClearPayloadPointsBuilder, PointsIdsList};\n\nclient\n    .clear_payload(\n        ClearPayloadPointsBuilder::new(\"{collection_name}\")\n            .points(PointsIdsList {\n                ids: vec![0.into(), 3.into(), 10.into()],\n            })\n            .wait(true),\n    )\n    .await?;\n```\n\n```java\nimport java.util.List;\n\nimport static io.qdrant.client.PointIdFactory.id;\n\nclient\n    .clearPayloadAsync(\"{collection_name}\", List.of(id(0), id(3), id(100)), true, null, null)\n    .get();\n```\n\n```csharp\nusing Qdrant.Client;\n\nvar client = new QdrantClient(\"localhost\", 6334);\n\nawait client.ClearPayloadAsync(collectionName: \"{collection_name}\", ids: new ulong[] { 0, 3, 100 });\n```\n\n```go\nimport (\n    \"context\"\n\n    \"github.com/qdrant/go-client/qdrant\"\n)\n\nclient.ClearPayload(context.Background(), &qdrant.ClearPayloadPoints{\n    CollectionName: \"{collection_name}\",\n    Points: qdrant.NewPointsSelector(\n        qdrant.NewIDNum(0),\n        qdrant.NewIDNum(3)),\n})\n```\n\nYou can also use `models.FilterSelector` to remove the points matching given filter criteria, instead of providing the ids.",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0028",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 28,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Clear payload"
      ],
      "heading_text": "Clear payload",
      "token_count": 416,
      "char_count": 1589,
      "start_char": 31939,
      "end_char": 33528,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5560977099236641,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.703497",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Clear payload",
      "chunk_hash": "9abc25c6ea97c59d",
      "content_digest": "9abc25c6ea97c59d",
      "chunk_length": 1589,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "points",
          "collection",
          "name",
          "payload",
          "clear",
          "100",
          "api",
          "new",
          "ids",
          "into",
          "import",
          "clearpayload",
          "use",
          "clearpayloadpointsbuilder",
          "pointsidslist",
          "true",
          "await",
          "java"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 11,
            "weight": 0.070968
          },
          {
            "term": "client",
            "tf": 11,
            "weight": 0.070968
          },
          {
            "term": "points",
            "tf": 9,
            "weight": 0.058065
          },
          {
            "term": "collection",
            "tf": 8,
            "weight": 0.051613
          },
          {
            "term": "name",
            "tf": 8,
            "weight": 0.051613
          },
          {
            "term": "payload",
            "tf": 6,
            "weight": 0.03871
          },
          {
            "term": "clear",
            "tf": 5,
            "weight": 0.032258
          },
          {
            "term": "100",
            "tf": 5,
            "weight": 0.032258
          },
          {
            "term": "api",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "new",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "ids",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "into",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "import",
            "tf": 3,
            "weight": 0.019355
          },
          {
            "term": "clearpayload",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "clearpayloadpointsbuilder",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "pointsidslist",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "true",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "await",
            "tf": 2,
            "weight": 0.012903
          },
          {
            "term": "java",
            "tf": 2,
            "weight": 0.012903
          }
        ],
        "unique_terms": 76,
        "total_terms": 155
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "100",
        "Clear payload",
        "api",
        "clear",
        "client",
        "collection",
        "name",
        "new",
        "payload",
        "points",
        "qdrant"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5560977099236641,
      "overall": 0.685365903307888
    }
  },
  {
    "text": "### Delete payload keys\n\nDelete specific payload keys from points.\n\nREST API ([Schema](https://api.qdrant.tech/api-reference/points/delete-payload)):\n\n```http\nPOST /collections/{collection_name}/points/payload/delete\n{\n    \"keys\": [\"color\", \"price\"],\n    \"points\": [0, 3, 100]\n}\n```\n\n```python\nclient.delete_payload(\n    collection_name=\"{collection_name}\",\n    keys=[\"color\", \"price\"],\n    points=[0, 3, 100],\n)\n```\n\n```typescript\nclient.deletePayload(\"{collection_name}\", {\n  keys: [\"color\", \"price\"],\n  points: [0, 3, 100],\n});\n```\n\n```rust\nuse qdrant_client::qdrant::{DeletePayloadPointsBuilder, PointsIdsList};\n\nclient\n    .delete_payload(\n        DeletePayloadPointsBuilder::new(\n            \"{collection_name}\",\n            vec![\"color\".to_string(), \"price\".to_string()],\n        )\n        .points_selector(PointsIdsList {\n            ids: vec![0.into(), 3.into(), 10.into()],\n        })\n        .wait(true),\n    )\n    .await?;\n```\n\n```java\nimport java.util.List;\n\nimport static io.qdrant.client.PointIdFactory.id;\n\nclient\n    .deletePayloadAsync(\n        \"{collection_name}\",\n        List.of(\"color\", \"price\"),\n        List.of(id(0), id(3), id(100)),\n        true,\n        null,\n        null)\n    .get();\n```\n\n```csharp\nusing Qdrant.Client;\n\nvar client = new QdrantClient(\"localhost\", 6334);\n\nawait client.DeletePayloadAsync(\n    collectionName: \"{collection_name}\",\n    keys: [\"color\", \"price\"],\n    ids: new ulong[] { 0, 3, 100 }\n);\n```\n\n```go\nimport (\n    \"context\"\n\n    \"github.com/qdrant/go-client/qdrant\"\n)\n\nclient, err := qdrant.NewClient(&qdrant.Config{\n    Host: \"localhost\",\n    Port: 6334,\n})\n\nclient.DeletePayload(context.Background(), &qdrant.DeletePayloadPoints{\n    CollectionName: \"{collection_name}\",\n    Keys:           []string{\"color\", \"price\"},\n    PointsSelector: qdrant.NewPointsSelector(\n        qdrant.NewIDNum(0),\n        qdrant.NewIDNum(3)),\n})\n```\n\nAlternatively, you can use filters to delete payload keys from the points.\n\n```http\nPOST /collections/{collection_name}/points/payload/delete\n{\n    \"keys\": [\"color\", \"price\"],\n    \"filter\": {\n        \"must\": [\n            {\n                \"key\": \"color\",\n                \"match\": {\n                    \"value\": \"red\"\n                }\n            }\n        ]\n    }\n}\n```\n\n```python\nclient.delete_payload(\n    collection_name=\"{collection_name}\",\n    keys=[\"color\", \"price\"],\n    points=models.Filter(\n        must=[\n            models.FieldCondition(\n                key=\"color\",\n                match=models.MatchValue(value=\"red\"),\n            ),\n        ],\n    ),\n)\n```\n\n```typescript\nclient.deletePayload(\"{collection_name}\", {\n  keys: [\"color\", \"price\"],\n  filter: {\n    must: [\n      {\n        key: \"color\",\n        match: {\n          value: \"red\",\n        },\n      },\n    ],\n  },\n});\n```\n\n```rust\nuse qdrant_client::qdrant::{Condition, DeletePayloadPointsBuilder, Filter};\n\nclient\n    .delete_payload(\n        DeletePayloadPointsBuilder::new(\n            \"{collection_name}\",\n            vec![\"color\".to_string(), \"price\".to_string()],\n        )\n        .points_selector(Filter::must([Condition::matches(\n            \"color\",\n            \"red\".to_string(),\n        )]))\n        .wait(true),\n    )\n    .await?;\n```\n\n```java\nimport java.util.List;\n\nimport static io.qdrant.client.ConditionFactory.matchKeyword;",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0029",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 29,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Delete payload keys"
      ],
      "heading_text": "Delete payload keys",
      "token_count": 819,
      "char_count": 3301,
      "start_char": 33530,
      "end_char": 36831,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.671604938271605,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.703497",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Delete payload keys",
      "chunk_hash": "b199cb94861d424a",
      "content_digest": "b199cb94861d424a",
      "chunk_length": 3301,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "client",
          "qdrant",
          "color",
          "collection",
          "name",
          "keys",
          "points",
          "price",
          "delete",
          "payload",
          "string",
          "100",
          "import",
          "filter",
          "deletepayloadpointsbuilder",
          "new",
          "java",
          "list",
          "must",
          "red"
        ],
        "term_weights": [
          {
            "term": "client",
            "tf": 17,
            "weight": 0.060498
          },
          {
            "term": "qdrant",
            "tf": 16,
            "weight": 0.05694
          },
          {
            "term": "color",
            "tf": 15,
            "weight": 0.053381
          },
          {
            "term": "collection",
            "tf": 13,
            "weight": 0.046263
          },
          {
            "term": "name",
            "tf": 13,
            "weight": 0.046263
          },
          {
            "term": "keys",
            "tf": 11,
            "weight": 0.039146
          },
          {
            "term": "points",
            "tf": 11,
            "weight": 0.039146
          },
          {
            "term": "price",
            "tf": 11,
            "weight": 0.039146
          },
          {
            "term": "delete",
            "tf": 10,
            "weight": 0.035587
          },
          {
            "term": "payload",
            "tf": 10,
            "weight": 0.035587
          },
          {
            "term": "string",
            "tf": 6,
            "weight": 0.021352
          },
          {
            "term": "100",
            "tf": 5,
            "weight": 0.017794
          },
          {
            "term": "import",
            "tf": 5,
            "weight": 0.017794
          },
          {
            "term": "filter",
            "tf": 5,
            "weight": 0.017794
          },
          {
            "term": "deletepayloadpointsbuilder",
            "tf": 4,
            "weight": 0.014235
          },
          {
            "term": "new",
            "tf": 4,
            "weight": 0.014235
          },
          {
            "term": "java",
            "tf": 4,
            "weight": 0.014235
          },
          {
            "term": "list",
            "tf": 4,
            "weight": 0.014235
          },
          {
            "term": "must",
            "tf": 4,
            "weight": 0.014235
          },
          {
            "term": "red",
            "tf": 4,
            "weight": 0.014235
          }
        ],
        "unique_terms": 86,
        "total_terms": 281
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Delete payload keys",
        "client",
        "collection",
        "color",
        "delete",
        "keys",
        "name",
        "payload",
        "points",
        "price",
        "qdrant"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.671604938271605,
      "overall": 0.6905349794238683
    }
  },
  {
    "text": "## Payload indexing\n\nTo search more efficiently with filters, Qdrant allows you to create indexes for payload fields by specifying the name and type of field it is intended to be.\n\nThe indexed fields also affect the vector index. See [Indexing](https://qdrant.tech/documentation/concepts/indexing/) for details.\n\nIn practice, we recommend creating an index on those fields that could potentially constrain the results the most. For example, using an index for the object ID will be much more efficient, being unique for each record, than an index by its color, which has only a few possible values.\n\nIn compound queries involving multiple fields, Qdrant will attempt to use the most restrictive index first.\n\nTo create index for the field, you can use the following:\n\nREST API ([Schema](https://api.qdrant.tech/api-reference/indexes/create-field-index))\n\n```http\nPUT /collections/{collection_name}/index\n{\n    \"field_name\": \"name_of_the_field_to_index\",\n    \"field_schema\": \"keyword\"\n}\n```\n\n```python\nclient.create_payload_index(\n    collection_name=\"{collection_name}\",\n    field_name=\"name_of_the_field_to_index\",\n    field_schema=\"keyword\",\n)\n```\n\n```typescript\nclient.createPayloadIndex(\"{collection_name}\", {\n  field_name: \"name_of_the_field_to_index\",\n  field_schema: \"keyword\",\n});\n```\n\n```rust\nuse qdrant_client::qdrant::{CreateFieldIndexCollectionBuilder, FieldType};\n\nclient\n    .create_field_index(\n        CreateFieldIndexCollectionBuilder::new(\n            \"{collection_name}\",\n            \"name_of_the_field_to_index\",\n            FieldType::Keyword,\n        )\n        .wait(true),\n    )\n    .await?;\n```\n\n```java\nimport io.qdrant.client.grpc.Collections.PayloadSchemaType;\n\nclient.createPayloadIndexAsync(\n    \"{collection_name}\",\n    \"name_of_the_field_to_index\",\n    PayloadSchemaType.Keyword,\n    null,\n    true,\n    null,\n    null);\n```\n\n```csharp\nusing Qdrant.Client;\n\nvar client = new QdrantClient(\"localhost\", 6334);\n\nawait client.CreatePayloadIndexAsync(\n    collectionName: \"{collection_name}\",\n    fieldName: \"name_of_the_field_to_index\"\n);\n```\n\n```go\nimport (\n    \"context\"\n\n    \"github.com/qdrant/go-client/qdrant\"\n)\n\nclient, err := qdrant.NewClient(&qdrant.Config{\n    Host: \"localhost\",\n    Port: 6334,\n})\n\nclient.CreateFieldIndex(context.Background(), &qdrant.CreateFieldIndexCollection{\n    CollectionName: \"{collection_name}\",\n    FieldName:      \"name_of_the_field_to_index\",\n    FieldType:      qdrant.FieldType_FieldTypeKeyword.Enum(),\n})\n```\n\nThe index usage flag is displayed in the payload schema with the [collection info API](https://api.qdrant.tech/api-reference/collections/get-collection).\n\nPayload schema example:\n\n```json\n{\n    \"payload_schema\": {\n        \"property1\": {\n            \"data_type\": \"keyword\"\n        },\n        \"property2\": {\n            \"data_type\": \"integer\"\n        }\n    }\n}\n```",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0031",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 31,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Payload indexing"
      ],
      "heading_text": "Payload indexing",
      "token_count": 649,
      "char_count": 2841,
      "start_char": 37843,
      "end_char": 40684,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.7051383399209485,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.703497",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Payload indexing",
      "chunk_hash": "7ef7ce60907c8b40",
      "content_digest": "7ef7ce60907c8b40",
      "chunk_length": 2841,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "name",
          "index",
          "field",
          "qdrant",
          "client",
          "collection",
          "schema",
          "payload",
          "for",
          "api",
          "keyword",
          "create",
          "fields",
          "fieldtype",
          "indexing",
          "type",
          "https",
          "tech",
          "use"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 19,
            "weight": 0.062914
          },
          {
            "term": "name",
            "tf": 19,
            "weight": 0.062914
          },
          {
            "term": "index",
            "tf": 18,
            "weight": 0.059603
          },
          {
            "term": "field",
            "tf": 17,
            "weight": 0.056291
          },
          {
            "term": "qdrant",
            "tf": 15,
            "weight": 0.049669
          },
          {
            "term": "client",
            "tf": 12,
            "weight": 0.039735
          },
          {
            "term": "collection",
            "tf": 10,
            "weight": 0.033113
          },
          {
            "term": "schema",
            "tf": 7,
            "weight": 0.023179
          },
          {
            "term": "payload",
            "tf": 6,
            "weight": 0.019868
          },
          {
            "term": "for",
            "tf": 6,
            "weight": 0.019868
          },
          {
            "term": "api",
            "tf": 6,
            "weight": 0.019868
          },
          {
            "term": "keyword",
            "tf": 6,
            "weight": 0.019868
          },
          {
            "term": "create",
            "tf": 5,
            "weight": 0.016556
          },
          {
            "term": "fields",
            "tf": 4,
            "weight": 0.013245
          },
          {
            "term": "fieldtype",
            "tf": 4,
            "weight": 0.013245
          },
          {
            "term": "indexing",
            "tf": 3,
            "weight": 0.009934
          },
          {
            "term": "type",
            "tf": 3,
            "weight": 0.009934
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.009934
          },
          {
            "term": "tech",
            "tf": 3,
            "weight": 0.009934
          },
          {
            "term": "use",
            "tf": 3,
            "weight": 0.009934
          }
        ],
        "unique_terms": 127,
        "total_terms": 302
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Payload indexing",
        "client",
        "collection",
        "field",
        "for",
        "index",
        "name",
        "payload",
        "qdrant",
        "schema",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.7051383399209485,
      "overall": 0.7017127799736494
    }
  },
  {
    "text": "## Facet counts\n\n*Available as of v1.12.0*\n\nFaceting is a special counting technique that can be used for various purposes:\n\n- Know which unique values exist for a payload key.\n- Know the number of points that contain each unique value.\n- Know how restrictive a filter would become by matching a specific value.\n\nSpecifically, it is a counting aggregation for the values in a field, akin to a `GROUP BY` with `COUNT(*)` commands in SQL.\n\nThese results for a specific field is called a “facet”. For example, when you look at an e-commerce search results page, you might see a list of brands on the sidebar, showing the number of products for each brand. This would be a facet for a `\"brand\"` field.\n\nIn Qdrant you can facet on a field **only** if you have created a field index that supports `MatchValue` conditions for it, like a `keyword` index.\n\nTo get the facet counts for a field, you can use the following:\n\nBy default, the number of `hits` returned is limited to 10. To change this, use the `limit` parameter. Keep this in mind when checking the number of unique values a payload field contains.\n\nREST API ([Facet](https://api.qdrant.tech/v-1-13-x/api-reference/points/facet))\n\n```http\nPOST /collections/{collection_name}/facet\n{\n    \"key\": \"size\",\n    \"filter\": {\n      \"must\": {\n        \"key\": \"color\",\n        \"match\": { \"value\": \"red\" }\n      }\n    }\n}\n```\n\n```python\nfrom qdrant_client import QdrantClient, models\n\nclient = QdrantClient(url=\"http://localhost:6333\")\n\nclient.facet(\n    collection_name=\"{collection_name}\",\n    key=\"size\",\n    facet_filter=models.Filter(must=[models.Match(\"color\", \"red\")]),\n)\n```\n\n```typescript\nimport { QdrantClient } from \"@qdrant/js-client-rest\";\n\nconst client = new QdrantClient({ host: \"localhost\", port: 6333 });\n\nclient.facet(\"{collection_name}\", {\n    filter: {\n        must: [\n            {\n                key: \"color\",\n                match: {\n                    value: \"red\",\n                },\n            },\n        ],\n    },\n    key: \"size\",\n});\n```\n\n```rust\nuse qdrant_client::qdrant::{Condition, FacetCountsBuilder, Filter};\nuse qdrant_client::Qdrant;\n\nlet client = Qdrant::from_url(\"http://localhost:6334\").build()?;\n\nclient\n    .facet(\n         FacetCountsBuilder::new(\"{collection_name}\", \"size\")\n             .limit(10)\n             .filter(Filter::must(vec![Condition::matches(\n                 \"color\",\n                 \"red\".to_string(),\n             )])),\n     )\n     .await?;\n```\n\n```java\nimport io.qdrant.client.QdrantClient;\nimport io.qdrant.client.QdrantGrpcClient;\n\nimport static io.qdrant.client.ConditionFactory.matchKeyword;\nimport io.qdrant.client.grpc.Points;\nimport io.qdrant.client.grpc.Filter;\n\nQdrantClient client = new QdrantClient(\n                QdrantGrpcClient.newBuilder(\"localhost\", 6334, false).build());\n\nclient\n    .facetAsync(\n        Points.FacetCounts.newBuilder()\n            .setCollectionName(collection_name)\n            .setKey(\"size\")\n            .setFilter(Filter.newBuilder().addMust(matchKeyword(\"color\", \"red\")).build())\n            .build())\n        .get();\n```\n\n```csharp\nusing Qdrant.Client;\nusing static Qdrant.Client.Grpc.Conditions;",
    "metadata": {
      "chunk_id": "29401fc0d3cc-0032",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "filename": "_documentation_concepts_payload_.md",
      "file_extension": ".md",
      "chunk_index": 32,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Facet counts"
      ],
      "heading_text": "Facet counts",
      "token_count": 770,
      "char_count": 3146,
      "start_char": 40686,
      "end_char": 43832,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.8810810810810812,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:38.716897",
      "document_id": "29401fc0d3cc",
      "document_name": "_documentation_concepts_payload_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "source_filename": "_documentation_concepts_payload_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_concepts_payload\\_documentation_concepts_payload_.md",
      "hierarchy_path": "Facet counts",
      "chunk_hash": "48c7b8f22ad3ccda",
      "content_digest": "48c7b8f22ad3ccda",
      "chunk_length": 3146,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "client",
          "qdrant",
          "facet",
          "filter",
          "for",
          "the",
          "field",
          "import",
          "qdrantclient",
          "key",
          "collection",
          "name",
          "you",
          "size",
          "color",
          "red",
          "number",
          "points",
          "value",
          "use"
        ],
        "term_weights": [
          {
            "term": "client",
            "tf": 19,
            "weight": 0.057576
          },
          {
            "term": "qdrant",
            "tf": 16,
            "weight": 0.048485
          },
          {
            "term": "facet",
            "tf": 12,
            "weight": 0.036364
          },
          {
            "term": "filter",
            "tf": 10,
            "weight": 0.030303
          },
          {
            "term": "for",
            "tf": 9,
            "weight": 0.027273
          },
          {
            "term": "the",
            "tf": 9,
            "weight": 0.027273
          },
          {
            "term": "field",
            "tf": 7,
            "weight": 0.021212
          },
          {
            "term": "import",
            "tf": 7,
            "weight": 0.021212
          },
          {
            "term": "qdrantclient",
            "tf": 7,
            "weight": 0.021212
          },
          {
            "term": "key",
            "tf": 6,
            "weight": 0.018182
          },
          {
            "term": "collection",
            "tf": 6,
            "weight": 0.018182
          },
          {
            "term": "name",
            "tf": 6,
            "weight": 0.018182
          },
          {
            "term": "you",
            "tf": 5,
            "weight": 0.015152
          },
          {
            "term": "size",
            "tf": 5,
            "weight": 0.015152
          },
          {
            "term": "color",
            "tf": 5,
            "weight": 0.015152
          },
          {
            "term": "red",
            "tf": 5,
            "weight": 0.015152
          },
          {
            "term": "number",
            "tf": 4,
            "weight": 0.012121
          },
          {
            "term": "points",
            "tf": 4,
            "weight": 0.012121
          },
          {
            "term": "value",
            "tf": 4,
            "weight": 0.012121
          },
          {
            "term": "use",
            "tf": 4,
            "weight": 0.012121
          }
        ],
        "unique_terms": 140,
        "total_terms": 330
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Facet counts",
        "client",
        "facet",
        "field",
        "filter",
        "for",
        "import",
        "key",
        "qdrant",
        "qdrantclient",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.8810810810810812,
      "overall": 0.7936936936936937
    }
  }
]