[
  {
    "text": "# Additional Use Cases  Relevant source files  - [llama\\_index\\_recency/.gitignore](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/.gitignore) - [llama\\_index\\_recency/images/RankFocus.png](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/images/RankFocus.png) - [llama\\_index\\_recency/images/RerankFocus.png](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/images/RerankFocus.png) - [llama\\_index\\_recency/images/SetupFocus.png](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/images/SetupFocus.png) - [llama\\_index\\_recency/pyproject.toml](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/pyproject.toml) - [self-query/self-query.ipynb](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/self-query.ipynb) - [self-query/winemag-data-130k-v2.csv](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/winemag-data-130k-v2.csv)  This section covers specialized applications and advanced query patterns that extend beyond the core Qdrant functionality. These use cases demonstrate sophisticated query translation capabilities and development best practices for building production-ready vector search applications. For foundational Qdrant concepts and basic operations, see [Getting Started with Qdrant](qdrant/examples/2-getting-started-with-qdrant.md). For comprehensive text processing applications, see [Text Data Applications](qdrant/examples/3-text-data-applications.md). For advanced RAG implementations using multiple frameworks, see [Advanced RAG Systems](qdrant/examples/6-advanced-rag-systems.md).",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Additional Use Cases"
      ],
      "heading_text": "Additional Use Cases",
      "token_count": 427,
      "char_count": 1626,
      "start_char": 2071,
      "end_char": 3697,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7625827586206896,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.770411",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Additional Use Cases",
      "chunk_hash": "791abdae1e12baa3",
      "content_digest": "791abdae1e12baa3",
      "chunk_length": 1626,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "llama",
          "index",
          "recency",
          "examples",
          "query",
          "https",
          "github",
          "com",
          "blob",
          "b3c4b28f",
          "images",
          "png",
          "self",
          "applications",
          "data",
          "advanced",
          "for",
          "and",
          "see"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 14,
            "weight": 0.065421
          },
          {
            "term": "llama",
            "tf": 10,
            "weight": 0.046729
          },
          {
            "term": "index",
            "tf": 10,
            "weight": 0.046729
          },
          {
            "term": "recency",
            "tf": 10,
            "weight": 0.046729
          },
          {
            "term": "examples",
            "tf": 10,
            "weight": 0.046729
          },
          {
            "term": "query",
            "tf": 8,
            "weight": 0.037383
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "com",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "blob",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "b3c4b28f",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "images",
            "tf": 6,
            "weight": 0.028037
          },
          {
            "term": "png",
            "tf": 6,
            "weight": 0.028037
          },
          {
            "term": "self",
            "tf": 6,
            "weight": 0.028037
          },
          {
            "term": "applications",
            "tf": 5,
            "weight": 0.023364
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.018692
          },
          {
            "term": "advanced",
            "tf": 4,
            "weight": 0.018692
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.018692
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.014019
          },
          {
            "term": "see",
            "tf": 3,
            "weight": 0.014019
          }
        ],
        "unique_terms": 76,
        "total_terms": 214
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Additional Use Cases",
        "blob",
        "com",
        "examples",
        "github",
        "https",
        "index",
        "llama",
        "qdrant",
        "query",
        "recency"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7625827586206896,
      "overall": 0.7875275862068966
    }
  },
  {
    "text": "## Self-Query Systems with LangChain\n\nSelf-query systems enable natural language queries to be automatically translated into structured vector searches with metadata filters. This approach bridges the gap between user intent expressed in natural language and the precise filtering capabilities of vector databases.",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Self-Query Systems with LangChain"
      ],
      "heading_text": "Self-Query Systems with LangChain",
      "token_count": 49,
      "char_count": 314,
      "start_char": 3700,
      "end_char": 4014,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.770813",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Self-Query Systems with LangChain",
      "chunk_hash": "06883671a55f1171",
      "content_digest": "06883671a55f1171",
      "chunk_length": 314,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "self",
          "query",
          "systems",
          "with",
          "natural",
          "language",
          "vector",
          "the",
          "langchain",
          "enable",
          "queries",
          "automatically",
          "translated",
          "into",
          "structured",
          "searches",
          "metadata",
          "filters",
          "this",
          "approach"
        ],
        "term_weights": [
          {
            "term": "self",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "query",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "systems",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "natural",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "language",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "langchain",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "enable",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "queries",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "automatically",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "translated",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "structured",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "searches",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "metadata",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "filters",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "approach",
            "tf": 1,
            "weight": 0.025641
          }
        ],
        "unique_terms": 31,
        "total_terms": 39
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Self-Query Systems with LangChain",
        "enable",
        "langchain",
        "language",
        "natural",
        "query",
        "self",
        "systems",
        "the",
        "vector",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "overall": 0.7466666666666666
    }
  },
  {
    "text": "### Architecture Overview\n\nThe self-query pattern implements a translation layer that converts natural language queries into structured search operations. The system parses user intent to extract both semantic search terms and metadata constraints.\n\n```\n```\n\nSources: [self-query/self-query.ipynb392-455](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/self-query.ipynb#L392-L455)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Architecture Overview"
      ],
      "heading_text": "Architecture Overview",
      "token_count": 84,
      "char_count": 392,
      "start_char": 4016,
      "end_char": 4408,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.7656756756756756,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.770999",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Architecture Overview",
      "chunk_hash": "8067c83c2e86eed4",
      "content_digest": "8067c83c2e86eed4",
      "chunk_length": 392,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "self",
          "query",
          "the",
          "search",
          "architecture",
          "overview",
          "pattern",
          "implements",
          "translation",
          "layer",
          "that",
          "converts",
          "natural",
          "language",
          "queries",
          "into",
          "structured",
          "operations",
          "system",
          "parses"
        ],
        "term_weights": [
          {
            "term": "self",
            "tf": 5,
            "weight": 0.096154
          },
          {
            "term": "query",
            "tf": 5,
            "weight": 0.096154
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.038462
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "overview",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "pattern",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "implements",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "translation",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "layer",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "converts",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "natural",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "language",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "queries",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "structured",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "operations",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.019231
          },
          {
            "term": "parses",
            "tf": 1,
            "weight": 0.019231
          }
        ],
        "unique_terms": 42,
        "total_terms": 52
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Architecture Overview",
        "architecture",
        "implements",
        "layer",
        "overview",
        "pattern",
        "query",
        "search",
        "self",
        "the",
        "translation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.7656756756756756,
      "overall": 0.7218918918918918
    }
  },
  {
    "text": "### Data Structure and Ingestion\n\nThe wine reviews dataset demonstrates structured metadata alongside vector content. Each document contains both textual descriptions for semantic search and categorical/numerical attributes for filtering.\n\n```\n```\n\nSources: [self-query/self-query.ipynb237-295](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/self-query.ipynb#L237-L295)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Data Structure and Ingestion"
      ],
      "heading_text": "Data Structure and Ingestion",
      "token_count": 84,
      "char_count": 382,
      "start_char": 4410,
      "end_char": 4792,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.771178",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Data Structure and Ingestion",
      "chunk_hash": "e42313d908b60dd3",
      "content_digest": "e42313d908b60dd3",
      "chunk_length": 382,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "self",
          "query",
          "and",
          "for",
          "data",
          "structure",
          "ingestion",
          "the",
          "wine",
          "reviews",
          "dataset",
          "demonstrates",
          "structured",
          "metadata",
          "alongside",
          "vector",
          "content",
          "each",
          "document",
          "contains"
        ],
        "term_weights": [
          {
            "term": "self",
            "tf": 4,
            "weight": 0.08
          },
          {
            "term": "query",
            "tf": 4,
            "weight": 0.08
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "structure",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "ingestion",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "wine",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "reviews",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "dataset",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "demonstrates",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "structured",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "metadata",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "alongside",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "content",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "each",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "contains",
            "tf": 1,
            "weight": 0.02
          }
        ],
        "unique_terms": 42,
        "total_terms": 50
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Data Structure and Ingestion",
        "and",
        "data",
        "for",
        "ingestion",
        "query",
        "reviews",
        "self",
        "structure",
        "the",
        "wine"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.6542424242424242
    }
  },
  {
    "text": "### Query Translation Process\n\nThe system transforms natural language into structured filter expressions using a standardized syntax. The LLM receives structured prompts with examples and schema definitions to ensure consistent output format.\n\n```\n```\n\nSources: [self-query/self-query.ipynb525-627](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/self-query.ipynb#L525-L627)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Query Translation Process"
      ],
      "heading_text": "Query Translation Process",
      "token_count": 83,
      "char_count": 386,
      "start_char": 5904,
      "end_char": 6290,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.765,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.771953",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Query Translation Process",
      "chunk_hash": "f9dc0660ece23514",
      "content_digest": "f9dc0660ece23514",
      "chunk_length": 386,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "query",
          "self",
          "the",
          "structured",
          "examples",
          "translation",
          "process",
          "system",
          "transforms",
          "natural",
          "language",
          "into",
          "filter",
          "expressions",
          "using",
          "standardized",
          "syntax",
          "llm",
          "receives",
          "prompts"
        ],
        "term_weights": [
          {
            "term": "query",
            "tf": 5,
            "weight": 0.1
          },
          {
            "term": "self",
            "tf": 4,
            "weight": 0.08
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "structured",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "translation",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "transforms",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "natural",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "language",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "filter",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "expressions",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "standardized",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "syntax",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "llm",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "receives",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "prompts",
            "tf": 1,
            "weight": 0.02
          }
        ],
        "unique_terms": 40,
        "total_terms": 50
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Query Translation Process",
        "examples",
        "natural",
        "process",
        "query",
        "self",
        "structured",
        "system",
        "the",
        "transforms",
        "translation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.765,
      "overall": 0.7216666666666667
    }
  },
  {
    "text": "### Metadata Schema Definition\n\nThe `AttributeInfo` schema provides the LLM with context about available metadata fields, their types, and semantic meanings. This enables accurate query translation.\n\n```\n```\n\nSources: [self-query/self-query.ipynb424-445](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/self-query.ipynb#L424-L445)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Metadata Schema Definition"
      ],
      "heading_text": "Metadata Schema Definition",
      "token_count": 82,
      "char_count": 342,
      "start_char": 6292,
      "end_char": 6634,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.55,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.772097",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Metadata Schema Definition",
      "chunk_hash": "e7d449cc0b2946d5",
      "content_digest": "e7d449cc0b2946d5",
      "chunk_length": 342,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "query",
          "self",
          "metadata",
          "schema",
          "the",
          "definition",
          "attributeinfo",
          "provides",
          "llm",
          "with",
          "context",
          "about",
          "available",
          "fields",
          "their",
          "types",
          "and",
          "semantic",
          "meanings",
          "this"
        ],
        "term_weights": [
          {
            "term": "query",
            "tf": 5,
            "weight": 0.108696
          },
          {
            "term": "self",
            "tf": 4,
            "weight": 0.086957
          },
          {
            "term": "metadata",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "schema",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "definition",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "attributeinfo",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "llm",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "context",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "about",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "available",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "fields",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "their",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "semantic",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "meanings",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.021739
          }
        ],
        "unique_terms": 36,
        "total_terms": 46
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Metadata Schema Definition",
        "attributeinfo",
        "definition",
        "llm",
        "metadata",
        "provides",
        "query",
        "schema",
        "self",
        "the",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.55,
      "overall": 0.6166666666666666
    }
  },
  {
    "text": "### Filter Expression Syntax  The system uses a standardized filter syntax that supports logical operations and comparisons. Complex queries can combine multiple conditions using `and`, `or`, and `not` operators. | Operator                 | Purpose               | Example                                                        | | ------------------------ | --------------------- | -------------------------------------------------------------- | | `eq(field, value)`       | Equality              | `eq(\"country\", \"US\")`                                          | | `gt(field, value)`       | Greater than          | `gt(\"points\", 90)`                                             | | `gte(field, value)`      | Greater than or equal | `gte(\"price\", 15)`                                             | | `lt(field, value)`       | Less than             | `lt(\"price\", 100)`                                             | | `lte(field, value)`      | Less than or equal    | `lte(\"price\", 30)`                                             | | `and(expr1, expr2, ...)` | Logical AND           | `and(eq(\"country\", \"US\"), gt(\"points\", 90))`                   | | `or(expr1, expr2, ...)`  | Logical OR            | `or(eq(\"variety\", \"Pinot Noir\"), eq(\"variety\", \"Chardonnay\"))` |  Sources: [self-query/self-query.ipynb534-596](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/self-query.ipynb#L534-L596)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Filter Expression Syntax"
      ],
      "heading_text": "Filter Expression Syntax",
      "token_count": 297,
      "char_count": 1409,
      "start_char": 6636,
      "end_char": 8045,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.658,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.772673",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Filter Expression Syntax",
      "chunk_hash": "06688be0cca105d3",
      "content_digest": "06688be0cca105d3",
      "chunk_length": 1409,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "and",
          "field",
          "value",
          "than",
          "self",
          "query",
          "logical",
          "price",
          "filter",
          "syntax",
          "country",
          "greater",
          "points",
          "gte",
          "equal",
          "less",
          "lte",
          "expr1",
          "expr2",
          "variety"
        ],
        "term_weights": [
          {
            "term": "and",
            "tf": 6,
            "weight": 0.061856
          },
          {
            "term": "field",
            "tf": 5,
            "weight": 0.051546
          },
          {
            "term": "value",
            "tf": 5,
            "weight": 0.051546
          },
          {
            "term": "than",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "self",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "query",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "logical",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "price",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "filter",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "syntax",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "country",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "greater",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "gte",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "equal",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "less",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "lte",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "expr1",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "expr2",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "variety",
            "tf": 2,
            "weight": 0.020619
          }
        ],
        "unique_terms": 59,
        "total_terms": 97
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Filter Expression Syntax",
        "and",
        "field",
        "filter",
        "logical",
        "price",
        "query",
        "self",
        "syntax",
        "than",
        "value"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.658,
      "overall": 0.7859999999999999
    }
  },
  {
    "text": "## Development Environment Setup\n\nDevelopment environments for Qdrant applications require specific tooling configurations to ensure code quality, dependency management, and consistent development practices across team members.",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Development Environment Setup"
      ],
      "heading_text": "Development Environment Setup",
      "token_count": 33,
      "char_count": 227,
      "start_char": 8048,
      "end_char": 8275,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.566923076923077,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.773030",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Development Environment Setup",
      "chunk_hash": "360e72239b46fd4f",
      "content_digest": "360e72239b46fd4f",
      "chunk_length": 227,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "development",
          "environment",
          "setup",
          "environments",
          "for",
          "qdrant",
          "applications",
          "require",
          "specific",
          "tooling",
          "configurations",
          "ensure",
          "code",
          "quality",
          "dependency",
          "management",
          "and",
          "consistent",
          "practices",
          "across"
        ],
        "term_weights": [
          {
            "term": "development",
            "tf": 3,
            "weight": 0.125
          },
          {
            "term": "environment",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "setup",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "environments",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "applications",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "require",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "specific",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "tooling",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "configurations",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "ensure",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "quality",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "dependency",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "management",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "consistent",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "practices",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "across",
            "tf": 1,
            "weight": 0.041667
          }
        ],
        "unique_terms": 22,
        "total_terms": 24
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Development Environment Setup",
        "applications",
        "development",
        "environment",
        "environments",
        "for",
        "qdrant",
        "require",
        "setup",
        "specific",
        "tooling"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.566923076923077,
      "overall": 0.7556410256410256
    }
  },
  {
    "text": "### Project Configuration Structure\n\nThe development setup uses modern Python tooling for code formatting, linting, and dependency management. The configuration emphasizes consistency and maintainability.\n\n```\n```\n\nSources: [llama\\_index\\_recency/pyproject.toml1-6](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/pyproject.toml#L1-L6)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Project Configuration Structure"
      ],
      "heading_text": "Project Configuration Structure",
      "token_count": 86,
      "char_count": 356,
      "start_char": 8277,
      "end_char": 8633,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.7471428571428571,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.773229",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Project Configuration Structure",
      "chunk_hash": "3b10e3f85c499ed4",
      "content_digest": "3b10e3f85c499ed4",
      "chunk_length": 356,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "configuration",
          "the",
          "and",
          "llama",
          "index",
          "recency",
          "pyproject",
          "project",
          "structure",
          "development",
          "setup",
          "uses",
          "modern",
          "python",
          "tooling",
          "for",
          "code",
          "formatting",
          "linting",
          "dependency"
        ],
        "term_weights": [
          {
            "term": "configuration",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "llama",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "index",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "recency",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "project",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "structure",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "development",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "setup",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "modern",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "tooling",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "formatting",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "linting",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "dependency",
            "tf": 1,
            "weight": 0.02439
          }
        ],
        "unique_terms": 34,
        "total_terms": 41
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Project Configuration Structure",
        "and",
        "configuration",
        "development",
        "index",
        "llama",
        "project",
        "pyproject",
        "recency",
        "structure",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.7471428571428571,
      "overall": 0.6823809523809524
    }
  },
  {
    "text": "### Tool Configuration\n\nThe `pyproject.toml` configuration standardizes code formatting and linting rules across the development environment.\n\n```\n```\n\nThis configuration ensures:\n\n- Consistent line length limits for readability\n- Uniform code formatting across team members\n- Automated style enforcement in development workflows\n\nSources: [llama\\_index\\_recency/pyproject.toml1-6](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/pyproject.toml#L1-L6)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tool Configuration"
      ],
      "heading_text": "Tool Configuration",
      "token_count": 108,
      "char_count": 472,
      "start_char": 8635,
      "end_char": 9107,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.7218181818181818,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.773457",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Tool Configuration",
      "chunk_hash": "326d20c08e408e70",
      "content_digest": "326d20c08e408e70",
      "chunk_length": 472,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "configuration",
          "pyproject",
          "the",
          "toml",
          "code",
          "formatting",
          "across",
          "development",
          "llama",
          "index",
          "recency",
          "tool",
          "standardizes",
          "and",
          "linting",
          "rules",
          "environment",
          "this",
          "ensures",
          "consistent"
        ],
        "term_weights": [
          {
            "term": "configuration",
            "tf": 3,
            "weight": 0.055556
          },
          {
            "term": "pyproject",
            "tf": 3,
            "weight": 0.055556
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "toml",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "code",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "formatting",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "across",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "development",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "llama",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "index",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "recency",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "tool",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "standardizes",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "linting",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "rules",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "environment",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "ensures",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "consistent",
            "tf": 1,
            "weight": 0.018519
          }
        ],
        "unique_terms": 41,
        "total_terms": 54
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tool Configuration",
        "across",
        "code",
        "configuration",
        "development",
        "formatting",
        "index",
        "llama",
        "pyproject",
        "the",
        "toml"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.7218181818181818,
      "overall": 0.7406060606060606
    }
  },
  {
    "text": "### Best Practices  Development environments should include:  - Pre-commit hooks for automatic formatting - IDE integration for real-time linting - Consistent dependency versions across environments - Documentation generation from code comments - Testing frameworks for vector search validation  Sources: [llama\\_index\\_recency/pyproject.toml1-6](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/pyproject.toml#L1-L6)  Dismiss  Refresh this wiki  Enter email to refresh",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Best Practices"
      ],
      "heading_text": "Best Practices",
      "token_count": 108,
      "char_count": 489,
      "start_char": 9715,
      "end_char": 10204,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.773998",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Best Practices",
      "chunk_hash": "37d28fd81f339831",
      "content_digest": "37d28fd81f339831",
      "chunk_length": 489,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "for",
          "environments",
          "llama",
          "index",
          "recency",
          "pyproject",
          "refresh",
          "best",
          "practices",
          "development",
          "should",
          "include",
          "pre",
          "commit",
          "hooks",
          "automatic",
          "formatting",
          "ide",
          "integration",
          "real"
        ],
        "term_weights": [
          {
            "term": "for",
            "tf": 3,
            "weight": 0.050847
          },
          {
            "term": "environments",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "llama",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "index",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "recency",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.033898
          },
          {
            "term": "best",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "practices",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "development",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "should",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "include",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "pre",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "commit",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "hooks",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "automatic",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "formatting",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "ide",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.016949
          },
          {
            "term": "real",
            "tf": 1,
            "weight": 0.016949
          }
        ],
        "unique_terms": 51,
        "total_terms": 59
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Best Practices",
        "best",
        "development",
        "environments",
        "for",
        "index",
        "llama",
        "practices",
        "pyproject",
        "recency",
        "refresh"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "overall": 0.7466666666666666
    }
  },
  {
    "text": "### On this page  - [Additional Use Cases](#additional-use-cases.md) - [Self-Query Systems with LangChain](#self-query-systems-with-langchain.md) - [Architecture Overview](#architecture-overview.md) - [Data Structure and Ingestion](#data-structure-and-ingestion.md) - [LangChain Integration Components](#langchain-integration-components.md) - [Query Translation Process](#query-translation-process.md) - [Metadata Schema Definition](#metadata-schema-definition.md) - [Filter Expression Syntax](#filter-expression-syntax.md) - [Development Environment Setup](#development-environment-setup.md) - [Project Configuration Structure](#project-configuration-structure.md) - [Tool Configuration](#tool-configuration.md) - [Development Workflow Integration](#development-workflow-integration.md) - [Best Practices](#best-practices.md)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 182,
      "char_count": 826,
      "start_char": 10206,
      "end_char": 11032,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7190909090909091,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:14:12.774379",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "75cae745b541afd6",
      "content_digest": "75cae745b541afd6",
      "chunk_length": 826,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "query",
          "langchain",
          "structure",
          "integration",
          "development",
          "configuration",
          "additional",
          "use",
          "cases",
          "self",
          "systems",
          "with",
          "architecture",
          "overview",
          "data",
          "and",
          "ingestion",
          "components",
          "translation",
          "process"
        ],
        "term_weights": [
          {
            "term": "query",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "langchain",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "structure",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "integration",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "development",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "configuration",
            "tf": 4,
            "weight": 0.05
          },
          {
            "term": "additional",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "cases",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "self",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "systems",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "architecture",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "overview",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "components",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "translation",
            "tf": 2,
            "weight": 0.025
          },
          {
            "term": "process",
            "tf": 2,
            "weight": 0.025
          }
        ],
        "unique_terms": 35,
        "total_terms": 80
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "additional",
        "cases",
        "configuration",
        "development",
        "integration",
        "langchain",
        "query",
        "self",
        "structure",
        "use"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7190909090909091,
      "overall": 0.773030303030303
    }
  }
]