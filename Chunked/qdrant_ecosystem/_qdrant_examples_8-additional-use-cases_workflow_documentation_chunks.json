[
  {
    "text": "## Development Environment Setup  Development environments for Qdrant applications require specific tooling configurations to ensure code quality, dependency management, and consistent development practices across team members.",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Development Environment Setup"
      ],
      "heading_text": "Development Environment Setup",
      "token_count": 33,
      "char_count": 227,
      "start_char": 0,
      "end_char": 227,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.566923076923077,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:32:38.367247",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Development Environment Setup",
      "chunk_hash": "ee149b12744c5e3c",
      "content_digest": "ee149b12744c5e3c",
      "chunk_length": 227,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "development",
          "environment",
          "setup",
          "environments",
          "for",
          "qdrant",
          "applications",
          "require",
          "specific",
          "tooling",
          "configurations",
          "ensure",
          "code",
          "quality",
          "dependency",
          "management",
          "and",
          "consistent",
          "practices",
          "across"
        ],
        "term_weights": [
          {
            "term": "development",
            "tf": 3,
            "weight": 0.125
          },
          {
            "term": "environment",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "setup",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "environments",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "qdrant",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "applications",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "require",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "specific",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "tooling",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "configurations",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "ensure",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "quality",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "dependency",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "management",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "consistent",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "practices",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "across",
            "tf": 1,
            "weight": 0.041667
          }
        ],
        "unique_terms": 22,
        "total_terms": 24
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Development Environment Setup",
        "applications",
        "development",
        "environment",
        "environments",
        "for",
        "qdrant",
        "require",
        "setup",
        "specific",
        "tooling"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.566923076923077,
      "overall": 0.7556410256410256
    }
  },
  {
    "text": "# Additional Use Cases  Relevant source files  - [llama\\_index\\_recency/.gitignore](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/.gitignore) - [llama\\_index\\_recency/images/RankFocus.png](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/images/RankFocus.png) - [llama\\_index\\_recency/images/RerankFocus.png](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/images/RerankFocus.png) - [llama\\_index\\_recency/images/SetupFocus.png](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/images/SetupFocus.png) - [llama\\_index\\_recency/pyproject.toml](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/pyproject.toml) - [self-query/self-query.ipynb](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/self-query.ipynb) - [self-query/winemag-data-130k-v2.csv](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/winemag-data-130k-v2.csv)  This section covers specialized applications and advanced query patterns that extend beyond the core Qdrant functionality. These use cases demonstrate sophisticated query translation capabilities and development best practices for building production-ready vector search applications. For foundational Qdrant concepts and basic operations, see [Getting Started with Qdrant](qdrant/examples/2-getting-started-with-qdrant.md). For comprehensive text processing applications, see [Text Data Applications](qdrant/examples/3-text-data-applications.md). For advanced RAG implementations using multiple frameworks, see [Advanced RAG Systems](qdrant/examples/6-advanced-rag-systems.md).",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Additional Use Cases"
      ],
      "heading_text": "Additional Use Cases",
      "token_count": 427,
      "char_count": 1626,
      "start_char": 0,
      "end_char": 1626,
      "semantic_score": 0.3245029151439667,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7625827586206896,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:32:38.361604",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Additional Use Cases",
      "chunk_hash": "791abdae1e12baa3",
      "content_digest": "791abdae1e12baa3",
      "chunk_length": 1626,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "llama",
          "index",
          "recency",
          "examples",
          "query",
          "https",
          "github",
          "com",
          "blob",
          "b3c4b28f",
          "images",
          "png",
          "self",
          "applications",
          "data",
          "advanced",
          "for",
          "and",
          "see"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 14,
            "weight": 0.065421
          },
          {
            "term": "llama",
            "tf": 10,
            "weight": 0.046729
          },
          {
            "term": "index",
            "tf": 10,
            "weight": 0.046729
          },
          {
            "term": "recency",
            "tf": 10,
            "weight": 0.046729
          },
          {
            "term": "examples",
            "tf": 10,
            "weight": 0.046729
          },
          {
            "term": "query",
            "tf": 8,
            "weight": 0.037383
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "com",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "blob",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "b3c4b28f",
            "tf": 7,
            "weight": 0.03271
          },
          {
            "term": "images",
            "tf": 6,
            "weight": 0.028037
          },
          {
            "term": "png",
            "tf": 6,
            "weight": 0.028037
          },
          {
            "term": "self",
            "tf": 6,
            "weight": 0.028037
          },
          {
            "term": "applications",
            "tf": 5,
            "weight": 0.023364
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.018692
          },
          {
            "term": "advanced",
            "tf": 4,
            "weight": 0.018692
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.018692
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.014019
          },
          {
            "term": "see",
            "tf": 3,
            "weight": 0.014019
          }
        ],
        "unique_terms": 76,
        "total_terms": 214
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Additional Use Cases",
        "blob",
        "com",
        "examples",
        "github",
        "https",
        "index",
        "llama",
        "qdrant",
        "query",
        "recency"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3245029151439667,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7625827586206896,
      "overall": 0.6623618912548853
    }
  },
  {
    "text": "### Tool Configuration  The `pyproject.toml` configuration standardizes code formatting and linting rules across the development environment. ``` ``` This configuration ensures:  - Consistent line length limits for readability - Uniform code formatting across team members - Automated style enforcement in development workflows  Sources: [llama\\_index\\_recency/pyproject.toml1-6](https://github.com/qdrant/examples/blob/b3c4b28f/llama_index_recency/pyproject.toml#L1-L6)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Tool Configuration"
      ],
      "heading_text": "Tool Configuration",
      "token_count": 105,
      "char_count": 470,
      "start_char": 0,
      "end_char": 470,
      "semantic_score": 0.3175436556339264,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7218181818181818,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:32:38.368151",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Tool Configuration",
      "chunk_hash": "0d48ad215858926d",
      "content_digest": "0d48ad215858926d",
      "chunk_length": 470,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "configuration",
          "pyproject",
          "the",
          "toml",
          "code",
          "formatting",
          "across",
          "development",
          "llama",
          "index",
          "recency",
          "tool",
          "standardizes",
          "and",
          "linting",
          "rules",
          "environment",
          "this",
          "ensures",
          "consistent"
        ],
        "term_weights": [
          {
            "term": "configuration",
            "tf": 3,
            "weight": 0.055556
          },
          {
            "term": "pyproject",
            "tf": 3,
            "weight": 0.055556
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "toml",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "code",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "formatting",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "across",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "development",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "llama",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "index",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "recency",
            "tf": 2,
            "weight": 0.037037
          },
          {
            "term": "tool",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "standardizes",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "linting",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "rules",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "environment",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "ensures",
            "tf": 1,
            "weight": 0.018519
          },
          {
            "term": "consistent",
            "tf": 1,
            "weight": 0.018519
          }
        ],
        "unique_terms": 41,
        "total_terms": 54
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Tool Configuration",
        "across",
        "code",
        "configuration",
        "development",
        "formatting",
        "index",
        "llama",
        "pyproject",
        "the",
        "toml"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3175436556339264,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7218181818181818,
      "overall": 0.6464539458173694
    }
  },
  {
    "text": "## Self-Query Systems with LangChain  Self-query systems enable natural language queries to be automatically translated into structured vector searches with metadata filters. This approach bridges the gap between user intent expressed in natural language and the precise filtering capabilities of vector databases.",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Self-Query Systems with LangChain"
      ],
      "heading_text": "Self-Query Systems with LangChain",
      "token_count": 49,
      "char_count": 314,
      "start_char": 0,
      "end_char": 314,
      "semantic_score": 0.48373669385910034,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:32:38.362397",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Self-Query Systems with LangChain",
      "chunk_hash": "725b388e1abfaed8",
      "content_digest": "725b388e1abfaed8",
      "chunk_length": 314,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "self",
          "query",
          "systems",
          "with",
          "natural",
          "language",
          "vector",
          "the",
          "langchain",
          "enable",
          "queries",
          "automatically",
          "translated",
          "into",
          "structured",
          "searches",
          "metadata",
          "filters",
          "this",
          "approach"
        ],
        "term_weights": [
          {
            "term": "self",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "query",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "systems",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "natural",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "language",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "langchain",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "enable",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "queries",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "automatically",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "translated",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "structured",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "searches",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "metadata",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "filters",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "approach",
            "tf": 1,
            "weight": 0.025641
          }
        ],
        "unique_terms": 31,
        "total_terms": 39
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Self-Query Systems with LangChain",
        "enable",
        "langchain",
        "language",
        "natural",
        "query",
        "self",
        "systems",
        "the",
        "vector",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.48373669385910034,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "overall": 0.6412455646197001
    }
  },
  {
    "text": "### Filter Expression Syntax  The system uses a standardized filter syntax that supports logical operations and comparisons. Complex queries can combine multiple conditions using `and`, `or`, and `not` operators. | Operator                 | Purpose               | Example                                                        | | ------------------------ | --------------------- | -------------------------------------------------------------- | | `eq(field, value)`       | Equality              | `eq(\"country\", \"US\")`                                          | | `gt(field, value)`       | Greater than          | `gt(\"points\", 90)`                                             | | `gte(field, value)`      | Greater than or equal | `gte(\"price\", 15)`                                             | | `lt(field, value)`       | Less than             | `lt(\"price\", 100)`                                             | | `lte(field, value)`      | Less than or equal    | `lte(\"price\", 30)`                                             | | `and(expr1, expr2, ...)` | Logical AND           | `and(eq(\"country\", \"US\"), gt(\"points\", 90))`                   | | `or(expr1, expr2, ...)`  | Logical OR            | `or(eq(\"variety\", \"Pinot Noir\"), eq(\"variety\", \"Chardonnay\"))` |  Sources: [self-query/self-query.ipynb534-596](https://github.com/qdrant/examples/blob/b3c4b28f/self-query/self-query.ipynb#L534-L596)",
    "metadata": {
      "chunk_id": "1968ec9bdfa7-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "filename": "_qdrant_examples_8-additional-use-cases.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Filter Expression Syntax"
      ],
      "heading_text": "Filter Expression Syntax",
      "token_count": 297,
      "char_count": 1409,
      "start_char": 0,
      "end_char": 1409,
      "semantic_score": 0.3639826476573944,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.658,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T15:32:38.366593",
      "document_id": "1968ec9bdfa7",
      "document_name": "_qdrant_examples_8-additional-use-cases",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "source_filename": "_qdrant_examples_8-additional-use-cases.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_8-additional-use-cases.md",
      "hierarchy_path": "Filter Expression Syntax",
      "chunk_hash": "06688be0cca105d3",
      "content_digest": "06688be0cca105d3",
      "chunk_length": 1409,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "and",
          "field",
          "value",
          "than",
          "self",
          "query",
          "logical",
          "price",
          "filter",
          "syntax",
          "country",
          "greater",
          "points",
          "gte",
          "equal",
          "less",
          "lte",
          "expr1",
          "expr2",
          "variety"
        ],
        "term_weights": [
          {
            "term": "and",
            "tf": 6,
            "weight": 0.061856
          },
          {
            "term": "field",
            "tf": 5,
            "weight": 0.051546
          },
          {
            "term": "value",
            "tf": 5,
            "weight": 0.051546
          },
          {
            "term": "than",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "self",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "query",
            "tf": 4,
            "weight": 0.041237
          },
          {
            "term": "logical",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "price",
            "tf": 3,
            "weight": 0.030928
          },
          {
            "term": "filter",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "syntax",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "country",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "greater",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "points",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "gte",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "equal",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "less",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "lte",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "expr1",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "expr2",
            "tf": 2,
            "weight": 0.020619
          },
          {
            "term": "variety",
            "tf": 2,
            "weight": 0.020619
          }
        ],
        "unique_terms": 59,
        "total_terms": 97
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Filter Expression Syntax",
        "and",
        "field",
        "filter",
        "logical",
        "price",
        "query",
        "self",
        "syntax",
        "than",
        "value"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3639826476573944,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.658,
      "overall": 0.6406608825524648
    }
  }
]