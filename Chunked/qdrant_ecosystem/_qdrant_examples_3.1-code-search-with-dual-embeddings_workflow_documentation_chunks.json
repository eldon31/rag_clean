[
  {
    "text": "# Code Search with Dual Embeddings  Relevant source files  - [README.md](https://github.com/qdrant/examples/blob/b3c4b28f/README.md) - [code-search/code-search.ipynb](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb) - [sparse-vectors-movies-reco/recommend-movies.ipynb](https://github.com/qdrant/examples/blob/b3c4b28f/sparse-vectors-movies-reco/recommend-movies.ipynb)  This document describes the implementation of a semantic code search system that uses dual embedding approaches to enable both natural language and code-specific queries. The system leverages two different neural encoders to provide comprehensive search capabilities across a codebase. For information about basic text processing and embedding generation, see [Text Data Applications](qdrant/examples/3-text-data-applications.md). For advanced retrieval patterns and multivector approaches, see [Multivector RAG with DSPy](qdrant/examples/6.1-multivector-rag-with-dspy.md).",
    "metadata": {
      "chunk_id": "c10479469310-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Code Search with Dual Embeddings"
      ],
      "heading_text": "Code Search with Dual Embeddings",
      "token_count": 233,
      "char_count": 975,
      "start_char": 2083,
      "end_char": 3058,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.729240506329114,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.482879",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Code Search with Dual Embeddings",
      "chunk_hash": "03a6f3559bd8f842",
      "content_digest": "03a6f3559bd8f842",
      "chunk_length": 975,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "qdrant",
          "examples",
          "ipynb",
          "movies",
          "with",
          "https",
          "github",
          "com",
          "blob",
          "b3c4b28f",
          "and",
          "text",
          "multivector",
          "dual",
          "readme",
          "sparse",
          "vectors",
          "reco"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 7,
            "weight": 0.055556
          },
          {
            "term": "search",
            "tf": 7,
            "weight": 0.055556
          },
          {
            "term": "qdrant",
            "tf": 5,
            "weight": 0.039683
          },
          {
            "term": "examples",
            "tf": 5,
            "weight": 0.039683
          },
          {
            "term": "ipynb",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "movies",
            "tf": 4,
            "weight": 0.031746
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "b3c4b28f",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "text",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "multivector",
            "tf": 3,
            "weight": 0.02381
          },
          {
            "term": "dual",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "sparse",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "vectors",
            "tf": 2,
            "weight": 0.015873
          },
          {
            "term": "reco",
            "tf": 2,
            "weight": 0.015873
          }
        ],
        "unique_terms": 66,
        "total_terms": 126
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Code Search with Dual Embeddings",
        "code",
        "com",
        "examples",
        "github",
        "https",
        "ipynb",
        "movies",
        "qdrant",
        "search",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.729240506329114,
      "overall": 0.7764135021097046
    }
  },
  {
    "text": "## System Architecture\n\nThe code search system implements a dual embedding strategy using Qdrant's named vectors capability to store and query code structures using two different embedding models simultaneously.\n\n```\n```\n\nSources: [code-search/code-search.ipynb1-700](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L1-L700)",
    "metadata": {
      "chunk_id": "c10479469310-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "System Architecture"
      ],
      "heading_text": "System Architecture",
      "token_count": 81,
      "char_count": 355,
      "start_char": 3061,
      "end_char": 3416,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.7445454545454545,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.482879",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "System Architecture",
      "chunk_hash": "15cbc5b5b5acce40",
      "content_digest": "15cbc5b5b5acce40",
      "chunk_length": 355,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "system",
          "embedding",
          "using",
          "qdrant",
          "architecture",
          "the",
          "implements",
          "dual",
          "strategy",
          "named",
          "vectors",
          "capability",
          "store",
          "and",
          "query",
          "structures",
          "two",
          "different"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 6,
            "weight": 0.130435
          },
          {
            "term": "search",
            "tf": 5,
            "weight": 0.108696
          },
          {
            "term": "system",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "implements",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "dual",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "strategy",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "named",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "capability",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "store",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "query",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "structures",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "two",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "different",
            "tf": 1,
            "weight": 0.021739
          }
        ],
        "unique_terms": 33,
        "total_terms": 46
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "System Architecture",
        "architecture",
        "code",
        "dual",
        "embedding",
        "implements",
        "qdrant",
        "search",
        "system",
        "the",
        "using"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.7445454545454545,
      "overall": 0.7148484848484848
    }
  },
  {
    "text": "## Data Processing Pipeline\n\nThe system processes code structures through two parallel transformation pipelines to create embeddings suitable for different types of queries.",
    "metadata": {
      "chunk_id": "c10479469310-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Data Processing Pipeline"
      ],
      "heading_text": "Data Processing Pipeline",
      "token_count": 25,
      "char_count": 173,
      "start_char": 3418,
      "end_char": 3591,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.482879",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Data Processing Pipeline",
      "chunk_hash": "0540fbf1ab1385d4",
      "content_digest": "0540fbf1ab1385d4",
      "chunk_length": 173,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "data",
          "processing",
          "pipeline",
          "the",
          "system",
          "processes",
          "code",
          "structures",
          "through",
          "two",
          "parallel",
          "transformation",
          "pipelines",
          "create",
          "embeddings",
          "suitable",
          "for",
          "different",
          "types",
          "queries"
        ],
        "term_weights": [
          {
            "term": "data",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "processes",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "structures",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "two",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "parallel",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "transformation",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "pipelines",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "embeddings",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "suitable",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "different",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.05
          },
          {
            "term": "queries",
            "tf": 1,
            "weight": 0.05
          }
        ],
        "unique_terms": 20,
        "total_terms": 20
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Data Processing Pipeline",
        "code",
        "data",
        "pipeline",
        "processes",
        "processing",
        "structures",
        "system",
        "the",
        "through",
        "two"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### Code Structure Format  Each code structure contains comprehensive metadata about code entities:  | Field               | Description          | Example                                 | | ------------------- | -------------------- | --------------------------------------- | | `name`              | Entity identifier    | `\"InvertedIndexRam\"`                    | | `signature`         | Full code signature  | `\"pub struct InvertedIndexRam { ... }\"` | | `code_type`         | Entity type          | `\"Struct\"`, `\"Function\"`                | | `docstring`         | Documentation string | `\"Inverted flatten index...\"`           | | `context.module`    | Module location      | `\"inverted_index\"`                      | | `context.file_path` | Full file path       | `\"lib/sparse/src/index/...\"`            | | `context.snippet`   | Raw code snippet     | Actual code with syntax                 |  Sources: [code-search/code-search.ipynb77-105](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L77-L105)",
    "metadata": {
      "chunk_id": "c10479469310-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Code Structure Format"
      ],
      "heading_text": "Code Structure Format",
      "token_count": 219,
      "char_count": 1038,
      "start_char": 3593,
      "end_char": 4631,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6596969696969697,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.483915",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Code Structure Format",
      "chunk_hash": "52a54b94b5e0a3ab",
      "content_digest": "52a54b94b5e0a3ab",
      "chunk_length": 1038,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "index",
          "context",
          "structure",
          "entity",
          "invertedindexram",
          "signature",
          "full",
          "struct",
          "type",
          "inverted",
          "module",
          "file",
          "path",
          "snippet",
          "format",
          "each",
          "contains",
          "comprehensive"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 11,
            "weight": 0.130952
          },
          {
            "term": "search",
            "tf": 4,
            "weight": 0.047619
          },
          {
            "term": "index",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "context",
            "tf": 3,
            "weight": 0.035714
          },
          {
            "term": "structure",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "entity",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "invertedindexram",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "signature",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "full",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "struct",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "type",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "inverted",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "module",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "file",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "path",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "snippet",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "format",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "each",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "contains",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "comprehensive",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 55,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Code Structure Format",
        "code",
        "context",
        "entity",
        "full",
        "index",
        "invertedindexram",
        "search",
        "signature",
        "struct",
        "structure"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6596969696969697,
      "overall": 0.7532323232323233
    }
  },
  {
    "text": "### Text Normalization Process\n\nThe `textify()` function converts code structures into natural language representations for general purpose embedding models.\n\n```\n```\n\nSources: [code-search/code-search.ipynb130-191](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L130-L191)",
    "metadata": {
      "chunk_id": "c10479469310-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Text Normalization Process"
      ],
      "heading_text": "Text Normalization Process",
      "token_count": 72,
      "char_count": 305,
      "start_char": 4633,
      "end_char": 4938,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.7769565217391304,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.483915",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Text Normalization Process",
      "chunk_hash": "9b6fdbe0eecf143e",
      "content_digest": "9b6fdbe0eecf143e",
      "chunk_length": 305,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "text",
          "normalization",
          "process",
          "the",
          "textify",
          "function",
          "converts",
          "structures",
          "into",
          "natural",
          "language",
          "representations",
          "for",
          "general",
          "purpose",
          "embedding",
          "models",
          "sources"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 5,
            "weight": 0.128205
          },
          {
            "term": "search",
            "tf": 4,
            "weight": 0.102564
          },
          {
            "term": "text",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "normalization",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "textify",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "converts",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "structures",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "natural",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "language",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "representations",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "general",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "purpose",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "embedding",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.025641
          }
        ],
        "unique_terms": 32,
        "total_terms": 39
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Text Normalization Process",
        "code",
        "converts",
        "function",
        "normalization",
        "process",
        "search",
        "structures",
        "text",
        "textify",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.7769565217391304,
      "overall": 0.69231884057971
    }
  },
  {
    "text": "## Embedding Strategy Comparison  The dual embedding approach leverages the strengths of both general purpose and code-specific models:  | Aspect     | General Purpose Model                    | Code-Specific Model                   | | ---------- | ---------------------------------------- | ------------------------------------- | | Model      | `sentence-transformers/all-MiniLM-L6-v2` | `jinaai/jina-embeddings-v2-base-code` | | Input      | Normalized text via `textify()`          | Raw code snippets                     | | Dimension  | 384                                      | 768                                   | | Query Type | Natural language descriptions            | Code syntax patterns                  | | Use Case   | \"How do I count points?\"                 | Function signatures, structures       |  Sources: [code-search/code-search.ipynb114-191](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L114-L191) [code-search/code-search.ipynb282-287](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L282-L287)",
    "metadata": {
      "chunk_id": "c10479469310-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Embedding Strategy Comparison"
      ],
      "heading_text": "Embedding Strategy Comparison",
      "token_count": 231,
      "char_count": 1090,
      "start_char": 4940,
      "end_char": 6030,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6733333333333333,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.484905",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Embedding Strategy Comparison",
      "chunk_hash": "60ee520e1fc39050",
      "content_digest": "60ee520e1fc39050",
      "chunk_length": 1090,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "model",
          "embedding",
          "the",
          "general",
          "purpose",
          "specific",
          "https",
          "github",
          "com",
          "qdrant",
          "examples",
          "blob",
          "b3c4b28f",
          "ipynb",
          "strategy",
          "comparison",
          "dual",
          "approach"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 13,
            "weight": 0.127451
          },
          {
            "term": "search",
            "tf": 8,
            "weight": 0.078431
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.029412
          },
          {
            "term": "embedding",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "general",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "purpose",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "specific",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "b3c4b28f",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "ipynb",
            "tf": 2,
            "weight": 0.019608
          },
          {
            "term": "strategy",
            "tf": 1,
            "weight": 0.009804
          },
          {
            "term": "comparison",
            "tf": 1,
            "weight": 0.009804
          },
          {
            "term": "dual",
            "tf": 1,
            "weight": 0.009804
          },
          {
            "term": "approach",
            "tf": 1,
            "weight": 0.009804
          }
        ],
        "unique_terms": 68,
        "total_terms": 102
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Embedding Strategy Comparison",
        "code",
        "embedding",
        "general",
        "github",
        "https",
        "model",
        "purpose",
        "search",
        "specific",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6733333333333333,
      "overall": 0.791111111111111
    }
  },
  {
    "text": "## Collection Configuration\n\nThe Qdrant collection uses named vectors to store both embedding types in a single collection:\n\n```\n```\n\nSources: [code-search/code-search.ipynb336-348](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L336-L348) [code-search/code-search.ipynb387-399](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L387-L399)",
    "metadata": {
      "chunk_id": "c10479469310-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Collection Configuration"
      ],
      "heading_text": "Collection Configuration",
      "token_count": 110,
      "char_count": 400,
      "start_char": 6032,
      "end_char": 6432,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.7639130434782608,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.484905",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Collection Configuration",
      "chunk_hash": "04f5cdcebfa48378",
      "content_digest": "04f5cdcebfa48378",
      "chunk_length": 400,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "collection",
          "qdrant",
          "https",
          "github",
          "com",
          "examples",
          "blob",
          "b3c4b28f",
          "ipynb",
          "configuration",
          "the",
          "uses",
          "named",
          "vectors",
          "store",
          "both",
          "embedding",
          "types"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 8,
            "weight": 0.145455
          },
          {
            "term": "search",
            "tf": 8,
            "weight": 0.145455
          },
          {
            "term": "collection",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.054545
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "b3c4b28f",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "ipynb",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "named",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "vectors",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "store",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "both",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "embedding",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 30,
        "total_terms": 55
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Collection Configuration",
        "b3c4b28f",
        "blob",
        "code",
        "collection",
        "com",
        "examples",
        "github",
        "https",
        "qdrant",
        "search"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.7639130434782608,
      "overall": 0.6879710144927534
    }
  },
  {
    "text": "## Query Processing Methods\n\nThe system supports multiple query processing approaches to balance relevance and diversity:",
    "metadata": {
      "chunk_id": "c10479469310-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Query Processing Methods"
      ],
      "heading_text": "Query Processing Methods",
      "token_count": 18,
      "char_count": 121,
      "start_char": 6434,
      "end_char": 6555,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.484905",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Query Processing Methods",
      "chunk_hash": "ae05f69c0e2f818c",
      "content_digest": "ae05f69c0e2f818c",
      "chunk_length": 121,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "query",
          "processing",
          "methods",
          "the",
          "system",
          "supports",
          "multiple",
          "approaches",
          "balance",
          "relevance",
          "and",
          "diversity"
        ],
        "term_weights": [
          {
            "term": "query",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "processing",
            "tf": 2,
            "weight": 0.142857
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "supports",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "multiple",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "approaches",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "balance",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "relevance",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.071429
          },
          {
            "term": "diversity",
            "tf": 1,
            "weight": 0.071429
          }
        ],
        "unique_terms": 12,
        "total_terms": 14
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Query Processing Methods",
        "approaches",
        "balance",
        "methods",
        "multiple",
        "processing",
        "query",
        "relevance",
        "supports",
        "system",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.5525,
      "overall": 0.6841666666666667
    }
  },
  {
    "text": "### Single Model Query\n\n```\n```",
    "metadata": {
      "chunk_id": "c10479469310-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Single Model Query"
      ],
      "heading_text": "Single Model Query",
      "token_count": 8,
      "char_count": 31,
      "start_char": 6557,
      "end_char": 6588,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.484905",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Single Model Query",
      "chunk_hash": "3ce10a622a1271db",
      "content_digest": "3ce10a622a1271db",
      "chunk_length": 31,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "single",
          "model",
          "query"
        ],
        "term_weights": [
          {
            "term": "single",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "query",
            "tf": 1,
            "weight": 0.333333
          }
        ],
        "unique_terms": 3,
        "total_terms": 3
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Single Model Query",
        "model",
        "query",
        "single"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.54,
      "overall": 0.68
    }
  },
  {
    "text": "### Batch Query Processing\n\n```\n```",
    "metadata": {
      "chunk_id": "c10479469310-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Batch Query Processing"
      ],
      "heading_text": "Batch Query Processing",
      "token_count": 8,
      "char_count": 35,
      "start_char": 6590,
      "end_char": 6625,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.484905",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Batch Query Processing",
      "chunk_hash": "7fe4dcae68fdadcf",
      "content_digest": "7fe4dcae68fdadcf",
      "chunk_length": 35,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "batch",
          "query",
          "processing"
        ],
        "term_weights": [
          {
            "term": "batch",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "query",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.333333
          }
        ],
        "unique_terms": 3,
        "total_terms": 3
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Batch Query Processing",
        "batch",
        "processing",
        "query"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.54,
      "overall": 0.68
    }
  },
  {
    "text": "### Grouped Query for Diversity\n\n```\n```\n\nSources: [code-search/code-search.ipynb504-518](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L504-L518) [code-search/code-search.ipynb609-637](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L609-L637) [code-search/code-search.ipynb672-690](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L672-L690)",
    "metadata": {
      "chunk_id": "c10479469310-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Grouped Query for Diversity"
      ],
      "heading_text": "Grouped Query for Diversity",
      "token_count": 136,
      "char_count": 437,
      "start_char": 6627,
      "end_char": 7064,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.484905",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Grouped Query for Diversity",
      "chunk_hash": "084db2b0f58e3ed4",
      "content_digest": "084db2b0f58e3ed4",
      "chunk_length": 437,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "https",
          "github",
          "com",
          "qdrant",
          "examples",
          "blob",
          "b3c4b28f",
          "ipynb",
          "grouped",
          "query",
          "for",
          "diversity",
          "sources",
          "ipynb504",
          "518",
          "l504",
          "l518",
          "ipynb609"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 12,
            "weight": 0.184615
          },
          {
            "term": "search",
            "tf": 12,
            "weight": 0.184615
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "examples",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "b3c4b28f",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "ipynb",
            "tf": 3,
            "weight": 0.046154
          },
          {
            "term": "grouped",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "query",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "diversity",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "ipynb504",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "518",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "l504",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "l518",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "ipynb609",
            "tf": 1,
            "weight": 0.015385
          }
        ],
        "unique_terms": 27,
        "total_terms": 65
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Grouped Query for Diversity",
        "b3c4b28f",
        "blob",
        "code",
        "com",
        "examples",
        "github",
        "https",
        "ipynb",
        "qdrant",
        "search"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.6209090909090909
    }
  },
  {
    "text": "## Implementation Details",
    "metadata": {
      "chunk_id": "c10479469310-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Implementation Details"
      ],
      "heading_text": "Implementation Details",
      "token_count": 3,
      "char_count": 25,
      "start_char": 7066,
      "end_char": 7091,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.484905",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Implementation Details",
      "chunk_hash": "812a10c977ea5550",
      "content_digest": "812a10c977ea5550",
      "chunk_length": 25,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "implementation",
          "details"
        ],
        "term_weights": [
          {
            "term": "implementation",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "details",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Implementation Details",
        "details",
        "implementation"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### Data Upload Process\n\nThe system uses `models.PointStruct` to create indexed points with dual embeddings:\n\n```\n```\n\nSources: [code-search/code-search.ipynb387-399](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L387-L399) [code-search/code-search.ipynb409-414](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L409-L414)",
    "metadata": {
      "chunk_id": "c10479469310-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Data Upload Process"
      ],
      "heading_text": "Data Upload Process",
      "token_count": 109,
      "char_count": 385,
      "start_char": 7093,
      "end_char": 7478,
      "semantic_score": 0.6,
      "structural_score": 0.7,
      "retrieval_quality": 0.775,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.484905",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Data Upload Process",
      "chunk_hash": "9539af0423006d88",
      "content_digest": "9539af0423006d88",
      "chunk_length": 385,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "https",
          "github",
          "com",
          "qdrant",
          "examples",
          "blob",
          "b3c4b28f",
          "ipynb",
          "data",
          "upload",
          "process",
          "the",
          "system",
          "uses",
          "models",
          "pointstruct",
          "create",
          "indexed"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 8,
            "weight": 0.145455
          },
          {
            "term": "search",
            "tf": 8,
            "weight": 0.145455
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "b3c4b28f",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "ipynb",
            "tf": 2,
            "weight": 0.036364
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "upload",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "pointstruct",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.018182
          },
          {
            "term": "indexed",
            "tf": 1,
            "weight": 0.018182
          }
        ],
        "unique_terms": 33,
        "total_terms": 55
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Data Upload Process",
        "b3c4b28f",
        "blob",
        "code",
        "com",
        "examples",
        "github",
        "https",
        "ipynb",
        "qdrant",
        "search"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7,
      "retrieval_quality": 0.775,
      "overall": 0.6916666666666665
    }
  },
  {
    "text": "### Query Result Processing  Results from both embedding models are processed to extract relevant code entities:  | Result Field                          | Content          | Usage                      | | ------------------------------------- | ---------------- | -------------------------- | | `hit.score`                           | Similarity score | Ranking and filtering      | | `hit.payload[\"context\"][\"module\"]`    | Module name      | Grouping and organization  | | `hit.payload[\"context\"][\"file_name\"]` | File identifier  | Source location            | | `hit.payload[\"signature\"]`            | Code signature   | Display and identification |  Sources: [code-search/code-search.ipynb511-518](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L511-L518) [code-search/code-search.ipynb562-568](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L562-L568)",
    "metadata": {
      "chunk_id": "c10479469310-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Query Result Processing"
      ],
      "heading_text": "Query Result Processing",
      "token_count": 200,
      "char_count": 921,
      "start_char": 7480,
      "end_char": 8401,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6790410958904108,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.486538",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Query Result Processing",
      "chunk_hash": "d24885b0e23986aa",
      "content_digest": "d24885b0e23986aa",
      "chunk_length": 921,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "hit",
          "and",
          "payload",
          "result",
          "score",
          "context",
          "module",
          "name",
          "file",
          "signature",
          "https",
          "github",
          "com",
          "qdrant",
          "examples",
          "blob",
          "b3c4b28f",
          "ipynb"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 10,
            "weight": 0.108696
          },
          {
            "term": "search",
            "tf": 8,
            "weight": 0.086957
          },
          {
            "term": "hit",
            "tf": 4,
            "weight": 0.043478
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.032609
          },
          {
            "term": "payload",
            "tf": 3,
            "weight": 0.032609
          },
          {
            "term": "result",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "score",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "context",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "module",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "name",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "file",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "signature",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "b3c4b28f",
            "tf": 2,
            "weight": 0.021739
          },
          {
            "term": "ipynb",
            "tf": 2,
            "weight": 0.021739
          }
        ],
        "unique_terms": 54,
        "total_terms": 92
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Query Result Processing",
        "and",
        "code",
        "context",
        "hit",
        "module",
        "name",
        "payload",
        "result",
        "score",
        "search"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6790410958904108,
      "overall": 0.7596803652968035
    }
  },
  {
    "text": "## Search Performance Characteristics\n\nThe dual embedding approach provides different search behaviors:",
    "metadata": {
      "chunk_id": "c10479469310-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Search Performance Characteristics"
      ],
      "heading_text": "Search Performance Characteristics",
      "token_count": 14,
      "char_count": 103,
      "start_char": 8403,
      "end_char": 8506,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.565,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.486538",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Search Performance Characteristics",
      "chunk_hash": "deaee0b5be0245ba",
      "content_digest": "deaee0b5be0245ba",
      "chunk_length": 103,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "search",
          "performance",
          "characteristics",
          "the",
          "dual",
          "embedding",
          "approach",
          "provides",
          "different",
          "behaviors"
        ],
        "term_weights": [
          {
            "term": "search",
            "tf": 2,
            "weight": 0.181818
          },
          {
            "term": "performance",
            "tf": 1,
            "weight": 0.090909
          },
          {
            "term": "characteristics",
            "tf": 1,
            "weight": 0.090909
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.090909
          },
          {
            "term": "dual",
            "tf": 1,
            "weight": 0.090909
          },
          {
            "term": "embedding",
            "tf": 1,
            "weight": 0.090909
          },
          {
            "term": "approach",
            "tf": 1,
            "weight": 0.090909
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.090909
          },
          {
            "term": "different",
            "tf": 1,
            "weight": 0.090909
          },
          {
            "term": "behaviors",
            "tf": 1,
            "weight": 0.090909
          }
        ],
        "unique_terms": 10,
        "total_terms": 11
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Search Performance Characteristics",
        "approach",
        "behaviors",
        "characteristics",
        "different",
        "dual",
        "embedding",
        "performance",
        "provides",
        "search",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.565,
      "overall": 0.6883333333333334
    }
  },
  {
    "text": "### General Purpose Model Results  - Higher semantic understanding of natural language queries - Better handling of conceptual searches like \"count points in collection\" - Returns broader, more conceptually related results",
    "metadata": {
      "chunk_id": "c10479469310-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "General Purpose Model Results"
      ],
      "heading_text": "General Purpose Model Results",
      "token_count": 36,
      "char_count": 222,
      "start_char": 8508,
      "end_char": 8730,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5512903225806451,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.486538",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "General Purpose Model Results",
      "chunk_hash": "0a2d20bf287df381",
      "content_digest": "0a2d20bf287df381",
      "chunk_length": 222,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "results",
          "general",
          "purpose",
          "model",
          "higher",
          "semantic",
          "understanding",
          "natural",
          "language",
          "queries",
          "better",
          "handling",
          "conceptual",
          "searches",
          "like",
          "count",
          "points",
          "collection",
          "returns",
          "broader"
        ],
        "term_weights": [
          {
            "term": "results",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "general",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "purpose",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "higher",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "semantic",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "understanding",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "natural",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "language",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "queries",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "better",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "handling",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "conceptual",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "searches",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "like",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "count",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "points",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "collection",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "returns",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "broader",
            "tf": 1,
            "weight": 0.041667
          }
        ],
        "unique_terms": 23,
        "total_terms": 24
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "General Purpose Model Results",
        "general",
        "higher",
        "language",
        "model",
        "natural",
        "purpose",
        "queries",
        "results",
        "semantic",
        "understanding"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5512903225806451,
      "overall": 0.7504301075268817
    }
  },
  {
    "text": "### Code-Specific Model Results\n\n- More precise matching of code patterns and structures\n- Better for searching specific function signatures or implementations\n- Higher relevance for code syntax-based queries\n\nSources: [code-search/code-search.ipynb504-518](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L504-L518) [code-search/code-search.ipynb554-569](https://github.com/qdrant/examples/blob/b3c4b28f/code-search/code-search.ipynb#L554-L569)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh",
    "metadata": {
      "chunk_id": "c10479469310-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Code-Specific Model Results"
      ],
      "heading_text": "Code-Specific Model Results",
      "token_count": 130,
      "char_count": 528,
      "start_char": 8732,
      "end_char": 9260,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.7525000000000001,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:44.486538",
      "document_id": "c10479469310",
      "document_name": "_qdrant_examples_3.1-code-search-with-dual-embeddings",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_filename": "_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_examples",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_examples\\_qdrant_examples_3.1-code-search-with-dual-embeddings.md",
      "hierarchy_path": "Code-Specific Model Results",
      "chunk_hash": "aa73c68a7a6ea625",
      "content_digest": "aa73c68a7a6ea625",
      "chunk_length": 528,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "search",
          "specific",
          "for",
          "https",
          "github",
          "com",
          "qdrant",
          "examples",
          "blob",
          "b3c4b28f",
          "ipynb",
          "refresh",
          "model",
          "results",
          "more",
          "precise",
          "matching",
          "patterns",
          "and"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 11,
            "weight": 0.150685
          },
          {
            "term": "search",
            "tf": 8,
            "weight": 0.109589
          },
          {
            "term": "specific",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "examples",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "b3c4b28f",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "ipynb",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "results",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "more",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "precise",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "matching",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "patterns",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.013699
          }
        ],
        "unique_terms": 45,
        "total_terms": 73
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Code-Specific Model Results",
        "blob",
        "code",
        "com",
        "examples",
        "for",
        "github",
        "https",
        "qdrant",
        "search",
        "specific"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.7525000000000001,
      "overall": 0.7508333333333334
    }
  }
]