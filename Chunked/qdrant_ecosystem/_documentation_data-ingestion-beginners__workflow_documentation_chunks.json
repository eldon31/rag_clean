[
  {
    "text": "### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "d406241c3254-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 679,
      "end_char": 1352,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.120506",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "b49cc869c6854f5f",
      "content_digest": "b49cc869c6854f5f",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.6351282051282051
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "d406241c3254-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 1354,
      "end_char": 7015,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.127808",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)",
    "metadata": {
      "chunk_id": "d406241c3254-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 576,
      "char_count": 2347,
      "start_char": 7017,
      "end_char": 9364,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.131899",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "59078d11dd9c9931",
      "content_digest": "59078d11dd9c9931",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "https",
          "tech",
          "documentation",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "for",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 30,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "tech",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "documentation",
            "tf": 21,
            "weight": 0.075
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.05
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.035714
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.032143
          },
          {
            "term": "data",
            "tf": 7,
            "weight": 0.025
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.021429
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017857
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.014286
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.010714
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.007143
          }
        ],
        "unique_terms": 96,
        "total_terms": 280
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9076923076923078,
      "overall": 0.8358974358974359
    }
  },
  {
    "text": "### Essentials\n\n[Data Ingestion for Beginners](https://qdrant.tech/documentation/data-ingestion-beginners/)\n\n[Simple Agentic RAG System](https://qdrant.tech/documentation/agentic-rag-crewai-zoom/)\n\n[Agentic RAG With LangGraph](https://qdrant.tech/documentation/agentic-rag-langgraph/)\n\n[Agentic RAG Discord Bot with CAMEL-AI](https://qdrant.tech/documentation/agentic-rag-camelai-discord/)\n\n[Multilingual & Multimodal RAG with LlamaIndex](https://qdrant.tech/documentation/multimodal-search/)\n\n[5 Minute RAG with Qdrant and DeepSeek](https://qdrant.tech/documentation/rag-deepseek/)\n\n[Automating Processes with Qdrant and n8n](https://qdrant.tech/documentation/qdrant-n8n/)",
    "metadata": {
      "chunk_id": "d406241c3254-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Essentials"
      ],
      "heading_text": "Essentials",
      "token_count": 189,
      "char_count": 673,
      "start_char": 9366,
      "end_char": 10039,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.133192",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Essentials",
      "chunk_hash": "b49cc869c6854f5f",
      "content_digest": "b49cc869c6854f5f",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "rag",
          "https",
          "tech",
          "documentation",
          "agentic",
          "with",
          "data",
          "ingestion",
          "beginners",
          "langgraph",
          "discord",
          "multimodal",
          "and",
          "deepseek",
          "n8n",
          "essentials",
          "for",
          "simple",
          "system"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 10,
            "weight": 0.119048
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.107143
          },
          {
            "term": "https",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "tech",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "documentation",
            "tf": 7,
            "weight": 0.083333
          },
          {
            "term": "agentic",
            "tf": 6,
            "weight": 0.071429
          },
          {
            "term": "with",
            "tf": 5,
            "weight": 0.059524
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "beginners",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "langgraph",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "discord",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "multimodal",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "deepseek",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "n8n",
            "tf": 2,
            "weight": 0.02381
          },
          {
            "term": "essentials",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "simple",
            "tf": 1,
            "weight": 0.011905
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.011905
          }
        ],
        "unique_terms": 31,
        "total_terms": 84
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Essentials",
        "agentic",
        "beginners",
        "data",
        "documentation",
        "https",
        "ingestion",
        "qdrant",
        "rag",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5053846153846153,
      "overall": 0.6351282051282051
    }
  },
  {
    "text": "### Integrations  [Data Management](https://qdrant.tech/documentation/data-management/)  - [Airbyte](https://qdrant.tech/documentation/data-management/airbyte/) - [Apache Airflow](https://qdrant.tech/documentation/data-management/airflow/) - [Apache Spark](https://qdrant.tech/documentation/data-management/spark/) - [CocoIndex](https://qdrant.tech/documentation/data-management/cocoindex/) - [cognee](https://qdrant.tech/documentation/data-management/cognee/) - [Confluent Kafka](https://qdrant.tech/documentation/data-management/confluent/) - [DLT](https://qdrant.tech/documentation/data-management/dlt/) - [InfinyOn Fluvio](https://qdrant.tech/documentation/data-management/fluvio/) - [Redpanda Connect](https://qdrant.tech/documentation/data-management/redpanda/) - [Unstructured](https://qdrant.tech/documentation/data-management/unstructured/)  [Embeddings](https://qdrant.tech/documentation/embeddings/)  - [Aleph Alpha](https://qdrant.tech/documentation/embeddings/aleph-alpha/) - [AWS Bedrock](https://qdrant.tech/documentation/embeddings/bedrock/) - [Cohere](https://qdrant.tech/documentation/embeddings/cohere/) - [Gemini](https://qdrant.tech/documentation/embeddings/gemini/) - [Jina Embeddings](https://qdrant.tech/documentation/embeddings/jina-embeddings/) - [Mistral](https://qdrant.tech/documentation/embeddings/mistral/) - [MixedBread](https://qdrant.tech/documentation/embeddings/mixedbread/) - [Mixpeek](https://qdrant.tech/documentation/embeddings/mixpeek/) - [Nomic](https://qdrant.tech/documentation/embeddings/nomic/) - [Nvidia](https://qdrant.tech/documentation/embeddings/nvidia/) - [Ollama](https://qdrant.tech/documentation/embeddings/ollama/) - [OpenAI](https://qdrant.tech/documentation/embeddings/openai/) - [Prem AI](https://qdrant.tech/documentation/embeddings/premai/) - [Snowflake Models](https://qdrant.tech/documentation/embeddings/snowflake/) - [Twelve Labs](https://qdrant.tech/documentation/embeddings/twelvelabs/) - [Upstage](https://qdrant.tech/documentation/embeddings/upstage/) - [Voyage AI](https://qdrant.tech/documentation/embeddings/voyage/)  [Frameworks](https://qdrant.tech/documentation/frameworks/)  - [Autogen](https://qdrant.tech/documentation/frameworks/autogen/) - [AWS Lakechain](https://qdrant.tech/documentation/frameworks/lakechain/) - [CamelAI](https://qdrant.tech/documentation/frameworks/camel/) - [Cheshire Cat](https://qdrant.tech/documentation/frameworks/cheshire-cat/) - [CrewAI](https://qdrant.tech/documentation/frameworks/crewai/) - [Dagster](https://qdrant.tech/documentation/frameworks/dagster/) - [DeepEval](https://qdrant.tech/documentation/frameworks/deepeval/) - [Dynamiq](https://qdrant.tech/documentation/frameworks/dynamiq/) - [Feast](https://qdrant.tech/documentation/frameworks/feast/) - [FiftyOne](https://qdrant.tech/documentation/frameworks/fifty-one/) - [Firebase Genkit](https://qdrant.tech/documentation/frameworks/genkit/) - [Haystack](https://qdrant.tech/documentation/frameworks/haystack/) - [HoneyHive](https://qdrant.tech/documentation/frameworks/honeyhive/) - [Langchain](https://qdrant.tech/documentation/frameworks/langchain/) - [Langchain4J](https://qdrant.tech/documentation/frameworks/langchain4j/) - [LangGraph](https://qdrant.tech/documentation/frameworks/langgraph/) - [LlamaIndex](https://qdrant.tech/documentation/frameworks/llama-index/) - [Mastra](https://qdrant.tech/documentation/frameworks/mastra/) - [Mem0](https://qdrant.tech/documentation/frameworks/mem0/) - [Microsoft NLWeb](https://qdrant.tech/documentation/frameworks/nlweb/) - [Neo4j GraphRAG](https://qdrant.tech/documentation/frameworks/neo4j-graphrag/) - [Rig-rs](https://qdrant.tech/documentation/frameworks/rig-rs/) - [Semantic-Router](https://qdrant.tech/documentation/frameworks/semantic-router/) - [SmolAgents](https://qdrant.tech/documentation/frameworks/smolagents/) - [Spring AI](https://qdrant.tech/documentation/frameworks/spring-ai/) - [Stanford DSPy](https://qdrant.tech/documentation/frameworks/dspy/) - [Swiftide](https://qdrant.tech/documentation/frameworks/swiftide/) - [Sycamore](https://qdrant.tech/documentation/frameworks/sycamore/) - [Testcontainers](https://qdrant.tech/documentation/frameworks/testcontainers/) - [txtai](https://qdrant.tech/documentation/frameworks/txtai/) - [Vanna.AI](https://qdrant.tech/documentation/frameworks/vanna-ai/) - [VectaX - Mirror Security](https://qdrant.tech/documentation/frameworks/mirror-security/) - [VoltAgent](https://qdrant.tech/documentation/frameworks/voltagent/)  [Observability](https://qdrant.tech/documentation/observability/)  - [OpenLLMetry](https://qdrant.tech/documentation/observability/openllmetry/) - [OpenLIT](https://qdrant.tech/documentation/observability/openlit/) - [Datadog](https://qdrant.tech/documentation/observability/datadog/)  [Platforms](https://qdrant.tech/documentation/platforms/)  - [Apify](https://qdrant.tech/documentation/platforms/apify/) - [BuildShip](https://qdrant.tech/documentation/platforms/buildship/) - [Keboola](https://qdrant.tech/documentation/platforms/keboola/) - [Kotaemon](https://qdrant.tech/documentation/platforms/kotaemon/) - [Make.com](https://qdrant.tech/documentation/platforms/make/) - [N8N](https://qdrant.tech/documentation/platforms/n8n/) - [Pipedream](https://qdrant.tech/documentation/platforms/pipedream/) - [Power Apps](https://qdrant.tech/documentation/platforms/powerapps/) - [PrivateGPT](https://qdrant.tech/documentation/platforms/privategpt/) - [Salesforce Mulesoft](https://qdrant.tech/documentation/platforms/mulesoft/) - [ToolJet](https://qdrant.tech/documentation/platforms/tooljet/) - [Vectorize.io](https://qdrant.tech/documentation/platforms/vectorize/)",
    "metadata": {
      "chunk_id": "d406241c3254-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integrations"
      ],
      "heading_text": "Integrations",
      "token_count": 1498,
      "char_count": 5661,
      "start_char": 10041,
      "end_char": 15702,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.139327",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Integrations",
      "chunk_hash": "8a3f2e84e2a75ae9",
      "content_digest": "8a3f2e84e2a75ae9",
      "chunk_length": 5661,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "https",
          "qdrant",
          "tech",
          "documentation",
          "frameworks",
          "embeddings",
          "platforms",
          "data",
          "management",
          "observability",
          "airbyte",
          "apache",
          "airflow",
          "spark",
          "cocoindex",
          "cognee",
          "confluent",
          "dlt",
          "fluvio",
          "redpanda"
        ],
        "term_weights": [
          {
            "term": "https",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "qdrant",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "tech",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "documentation",
            "tf": 80,
            "weight": 0.133779
          },
          {
            "term": "frameworks",
            "tf": 35,
            "weight": 0.058528
          },
          {
            "term": "embeddings",
            "tf": 21,
            "weight": 0.035117
          },
          {
            "term": "platforms",
            "tf": 14,
            "weight": 0.023411
          },
          {
            "term": "data",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "management",
            "tf": 12,
            "weight": 0.020067
          },
          {
            "term": "observability",
            "tf": 5,
            "weight": 0.008361
          },
          {
            "term": "airbyte",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "apache",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "airflow",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "spark",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cocoindex",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "cognee",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "confluent",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "dlt",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "fluvio",
            "tf": 2,
            "weight": 0.003344
          },
          {
            "term": "redpanda",
            "tf": 2,
            "weight": 0.003344
          }
        ],
        "unique_terms": 113,
        "total_terms": 598
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integrations",
        "data",
        "documentation",
        "embeddings",
        "frameworks",
        "https",
        "management",
        "observability",
        "platforms",
        "qdrant",
        "tech"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6730769230769231,
      "overall": 0.7576923076923077
    }
  },
  {
    "text": "### Examples  [Search Enhancement](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/)  - [Reranking in Semantic Search](https://qdrant.tech/documentation/search-precision/reranking-semantic-search/) - [Automate filtering with LLMs](https://qdrant.tech/documentation/search-precision/automate-filtering-with-llms/)  [Send Data to Qdrant](https://qdrant.tech/documentation/send-data/)  - [Qdrant on Databricks](https://qdrant.tech/documentation/send-data/databricks/) - [Semantic Querying with Airflow and Astronomer](https://qdrant.tech/documentation/send-data/qdrant-airflow-astronomer/) - [How to Setup Seamless Data Streaming with Kafka and Qdrant](https://qdrant.tech/documentation/send-data/data-streaming-kafka-qdrant/)  [Build Prototypes](https://qdrant.tech/documentation/examples/)  - [GraphRAG with Qdrant and Neo4j](https://qdrant.tech/documentation/examples/graphrag-qdrant-neo4j/) - [Building a Chain-of-Thought Medical Chatbot with Qdrant and DSPy](https://qdrant.tech/documentation/examples/qdrant-dspy-medicalbot/) - [Multitenancy with LlamaIndex](https://qdrant.tech/documentation/examples/llama-index-multitenancy/) - [Private Chatbot for Interactive Learning](https://qdrant.tech/documentation/examples/rag-chatbot-red-hat-openshift-haystack/) - [Implement Cohere RAG connector](https://qdrant.tech/documentation/examples/cohere-rag-connector/) - [Question-Answering System for AI Customer Support](https://qdrant.tech/documentation/examples/rag-customer-support-cohere-airbyte-aws/) - [Chat With Product PDF Manuals Using Hybrid Search](https://qdrant.tech/documentation/examples/hybrid-search-llamaindex-jinaai/) - [Region-Specific Contract Management System](https://qdrant.tech/documentation/examples/rag-contract-management-stackit-aleph-alpha/) - [RAG System for Employee Onboarding](https://qdrant.tech/documentation/examples/natural-language-search-oracle-cloud-infrastructure-cohere-langchain/) - [Private RAG Information Extraction Engine](https://qdrant.tech/documentation/examples/rag-chatbot-vultr-dspy-ollama/) - [Movie Recommendation System](https://qdrant.tech/documentation/examples/recommendation-system-ovhcloud/) - [Blog-Reading Chatbot with GPT-4o](https://qdrant.tech/documentation/examples/rag-chatbot-scaleway/)  [Practice Datasets](https://qdrant.tech/documentation/datasets/)  - [Documentation](https://qdrant.tech/documentation/) - - Data Ingestion for Beginners",
    "metadata": {
      "chunk_id": "d406241c3254-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Examples"
      ],
      "heading_text": "Examples",
      "token_count": 597,
      "char_count": 2435,
      "start_char": 15704,
      "end_char": 18139,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.145348",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Examples",
      "chunk_hash": "4a310d56ecf3b431",
      "content_digest": "4a310d56ecf3b431",
      "chunk_length": 2435,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "documentation",
          "https",
          "tech",
          "examples",
          "search",
          "with",
          "rag",
          "data",
          "chatbot",
          "send",
          "system",
          "semantic",
          "and",
          "for",
          "cohere",
          "precision",
          "reranking",
          "dspy",
          "automate"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 31,
            "weight": 0.107266
          },
          {
            "term": "documentation",
            "tf": 23,
            "weight": 0.079585
          },
          {
            "term": "https",
            "tf": 22,
            "weight": 0.076125
          },
          {
            "term": "tech",
            "tf": 22,
            "weight": 0.076125
          },
          {
            "term": "examples",
            "tf": 14,
            "weight": 0.048443
          },
          {
            "term": "search",
            "tf": 10,
            "weight": 0.034602
          },
          {
            "term": "with",
            "tf": 9,
            "weight": 0.031142
          },
          {
            "term": "rag",
            "tf": 9,
            "weight": 0.031142
          },
          {
            "term": "data",
            "tf": 8,
            "weight": 0.027682
          },
          {
            "term": "chatbot",
            "tf": 6,
            "weight": 0.020761
          },
          {
            "term": "send",
            "tf": 5,
            "weight": 0.017301
          },
          {
            "term": "system",
            "tf": 5,
            "weight": 0.017301
          },
          {
            "term": "semantic",
            "tf": 4,
            "weight": 0.013841
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.013841
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.013841
          },
          {
            "term": "cohere",
            "tf": 4,
            "weight": 0.013841
          },
          {
            "term": "precision",
            "tf": 3,
            "weight": 0.010381
          },
          {
            "term": "reranking",
            "tf": 3,
            "weight": 0.010381
          },
          {
            "term": "dspy",
            "tf": 3,
            "weight": 0.010381
          },
          {
            "term": "automate",
            "tf": 2,
            "weight": 0.00692
          }
        ],
        "unique_terms": 98,
        "total_terms": 289
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Examples",
        "chatbot",
        "data",
        "documentation",
        "examples",
        "https",
        "qdrant",
        "rag",
        "search",
        "tech",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9016,
      "overall": 0.8338666666666666
    }
  },
  {
    "text": "# Send S3 Data to Qdrant Vector Store with LangChain  | Time: 30 min | Level: Beginner |   |   | | ------------ | --------------- | - | - |  **Data ingestion into a vector store** is essential for building effective search and retrieval algorithms, especially since nearly 80% of data is unstructured, lacking any predefined format. In this tutorial, we’ll create a streamlined data ingestion pipeline, pulling data directly from **AWS S3** and feeding it into Qdrant. We’ll dive into vector embeddings, transforming unstructured data into a format that allows you to search documents semantically. Prepare to discover new ways to uncover insights hidden within unstructured data!",
    "metadata": {
      "chunk_id": "d406241c3254-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Send S3 Data to Qdrant Vector Store with LangChain"
      ],
      "heading_text": "Send S3 Data to Qdrant Vector Store with LangChain",
      "token_count": 143,
      "char_count": 680,
      "start_char": 18141,
      "end_char": 18821,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7058878504672897,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.147732",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Send S3 Data to Qdrant Vector Store with LangChain",
      "chunk_hash": "2e36227d8d6da6a1",
      "content_digest": "2e36227d8d6da6a1",
      "chunk_length": 680,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "data",
          "into",
          "vector",
          "unstructured",
          "qdrant",
          "store",
          "ingestion",
          "search",
          "and",
          "format",
          "send",
          "with",
          "langchain",
          "time",
          "min",
          "level",
          "beginner",
          "essential",
          "for",
          "building"
        ],
        "term_weights": [
          {
            "term": "data",
            "tf": 7,
            "weight": 0.094595
          },
          {
            "term": "into",
            "tf": 4,
            "weight": 0.054054
          },
          {
            "term": "vector",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "unstructured",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "store",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "ingestion",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "format",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "send",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "langchain",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "time",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "min",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "level",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "beginner",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "essential",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "building",
            "tf": 1,
            "weight": 0.013514
          }
        ],
        "unique_terms": 55,
        "total_terms": 74
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Send S3 Data to Qdrant Vector Store with LangChain",
        "and",
        "data",
        "format",
        "ingestion",
        "into",
        "qdrant",
        "search",
        "store",
        "unstructured",
        "vector"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7058878504672897,
      "overall": 0.8019626168224298
    }
  },
  {
    "text": "## Ingestion Workflow Architecture  We’ll set up a powerful document ingestion and analysis pipeline in this workflow using cloud storage, natural language processing (NLP) tools, and embedding technologies. Starting with raw data in an S3 bucket, we’ll preprocess it with LangChain, apply embedding APIs for both text and images and store the results in Qdrant – a vector database optimized for similarity search. **Figure 1: Data Ingestion Workflow Architecture**  Let’s break down each component of this workflow:  - **S3 Bucket:** This is our starting point—a centralized, scalable storage solution for various file types like PDFs, images, and text. - **LangChain:** Acting as the pipeline’s orchestrator, LangChain handles extraction, preprocessing, and manages data flow for embedding generation. It simplifies processing PDFs, so you won’t need to worry about applying OCR (Optical Character Recognition) here. - **Qdrant:** As your vector database, Qdrant stores embeddings and their [payloads](https://qdrant.tech/documentation/concepts/payload/), enabling efficient similarity search and retrieval across all content types.",
    "metadata": {
      "chunk_id": "d406241c3254-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Ingestion Workflow Architecture"
      ],
      "heading_text": "Ingestion Workflow Architecture",
      "token_count": 234,
      "char_count": 1134,
      "start_char": 18824,
      "end_char": 19958,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5203225806451612,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.149212",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Ingestion Workflow Architecture",
      "chunk_hash": "6e8888ebbeeff8b0",
      "content_digest": "6e8888ebbeeff8b0",
      "chunk_length": 1134,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "and",
          "workflow",
          "for",
          "qdrant",
          "ingestion",
          "this",
          "embedding",
          "data",
          "langchain",
          "architecture",
          "pipeline",
          "storage",
          "processing",
          "starting",
          "with",
          "bucket",
          "text",
          "images",
          "the",
          "vector"
        ],
        "term_weights": [
          {
            "term": "and",
            "tf": 8,
            "weight": 0.058824
          },
          {
            "term": "workflow",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.029412
          },
          {
            "term": "ingestion",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "embedding",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "data",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "langchain",
            "tf": 3,
            "weight": 0.022059
          },
          {
            "term": "architecture",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "pipeline",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "storage",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "processing",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "starting",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "bucket",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "images",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.014706
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.014706
          }
        ],
        "unique_terms": 94,
        "total_terms": 136
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Ingestion Workflow Architecture",
        "and",
        "architecture",
        "data",
        "embedding",
        "for",
        "ingestion",
        "langchain",
        "qdrant",
        "this",
        "workflow"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5203225806451612,
      "overall": 0.7401075268817202
    }
  },
  {
    "text": "#### Python Environment\n\nEnsure you have a Python environment (Python 3.9 or higher) with these libraries installed:\n\n```python\nboto3\nlangchain-community\nlangchain\npython-dotenv\nunstructured\nunstructured[pdf]\nqdrant_client\nfastembed\n```\n\n---\n\n**Access Keys:** Store your AWS access key, S3 secret key, and Qdrant API key in a .env file for easy access. Here’s a sample `.env` file.\n\n```text\nACCESS_KEY = \"\"\nSECRET_ACCESS_KEY = \"\"\nQDRANT_KEY = \"\"\n```\n\n---\n\nAlthough the code includes support for processing PDFs, the sample data currently has no PDF files included.",
    "metadata": {
      "chunk_id": "d406241c3254-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Python Environment"
      ],
      "heading_text": "Python Environment",
      "token_count": 141,
      "char_count": 564,
      "start_char": 21235,
      "end_char": 21799,
      "semantic_score": 0.7,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.5393975903614457,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.152959",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Python Environment",
      "chunk_hash": "d870a2bfbf999fef",
      "content_digest": "d870a2bfbf999fef",
      "chunk_length": 564,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "key",
          "python",
          "access",
          "qdrant",
          "environment",
          "langchain",
          "unstructured",
          "pdf",
          "secret",
          "env",
          "file",
          "for",
          "sample",
          "the",
          "ensure",
          "you",
          "have",
          "higher",
          "with",
          "these"
        ],
        "term_weights": [
          {
            "term": "key",
            "tf": 6,
            "weight": 0.083333
          },
          {
            "term": "python",
            "tf": 5,
            "weight": 0.069444
          },
          {
            "term": "access",
            "tf": 5,
            "weight": 0.069444
          },
          {
            "term": "qdrant",
            "tf": 3,
            "weight": 0.041667
          },
          {
            "term": "environment",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "langchain",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "unstructured",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "pdf",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "secret",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "env",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "file",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "sample",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.027778
          },
          {
            "term": "ensure",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "you",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "have",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "higher",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.013889
          },
          {
            "term": "these",
            "tf": 1,
            "weight": 0.013889
          }
        ],
        "unique_terms": 47,
        "total_terms": 72
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Python Environment",
        "access",
        "env",
        "environment",
        "key",
        "langchain",
        "pdf",
        "python",
        "qdrant",
        "secret",
        "unstructured"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.5393975903614457,
      "overall": 0.7464658634538152
    }
  },
  {
    "text": "### Example: Configuring LangChain to Load Files from S3\n\nHere’s how to set up LangChain to ingest data from an S3 bucket:\n\n```python\nfrom langchain_community.document_loaders import S3DirectoryLoader",
    "metadata": {
      "chunk_id": "d406241c3254-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Example: Configuring LangChain to Load Files from S3"
      ],
      "heading_text": "Example: Configuring LangChain to Load Files from S3",
      "token_count": 46,
      "char_count": 200,
      "start_char": 22165,
      "end_char": 22365,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.5233333333333333,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.153945",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Example: Configuring LangChain to Load Files from S3",
      "chunk_hash": "826f46031e98088b",
      "content_digest": "826f46031e98088b",
      "chunk_length": 200,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "langchain",
          "from",
          "example",
          "configuring",
          "load",
          "files",
          "here",
          "how",
          "set",
          "ingest",
          "data",
          "bucket",
          "python",
          "community",
          "document",
          "loaders",
          "import",
          "s3directoryloader"
        ],
        "term_weights": [
          {
            "term": "langchain",
            "tf": 3,
            "weight": 0.136364
          },
          {
            "term": "from",
            "tf": 3,
            "weight": 0.136364
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "configuring",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "load",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "files",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "here",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "ingest",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "bucket",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "community",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "loaders",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "import",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "s3directoryloader",
            "tf": 1,
            "weight": 0.045455
          }
        ],
        "unique_terms": 18,
        "total_terms": 22
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Example: Configuring LangChain to Load Files from S3",
        "configuring",
        "example",
        "files",
        "from",
        "here",
        "how",
        "ingest",
        "langchain",
        "load",
        "set"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.5233333333333333,
      "overall": 0.6411111111111111
    }
  },
  {
    "text": "### Models We’ll Use for Generating Embeddings\n\nTo get things rolling, we’ll use two powerful models:\n\n1. **`sentence-transformers/all-MiniLM-L6-v2` Embeddings** for transforming text data.\n2. **`CLIP` (Contrastive Language-Image Pretraining)** for image data.\n\n---",
    "metadata": {
      "chunk_id": "d406241c3254-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Models We’ll Use for Generating Embeddings"
      ],
      "heading_text": "Models We’ll Use for Generating Embeddings",
      "token_count": 68,
      "char_count": 265,
      "start_char": 23243,
      "end_char": 23508,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.543125,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.156252",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Models We’ll Use for Generating Embeddings",
      "chunk_hash": "af2b5f912737d820",
      "content_digest": "af2b5f912737d820",
      "chunk_length": 265,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "for",
          "models",
          "use",
          "embeddings",
          "data",
          "image",
          "generating",
          "get",
          "things",
          "rolling",
          "two",
          "powerful",
          "sentence",
          "transformers",
          "all",
          "minilm",
          "transforming",
          "text",
          "clip",
          "contrastive"
        ],
        "term_weights": [
          {
            "term": "for",
            "tf": 3,
            "weight": 0.103448
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "use",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "embeddings",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "image",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "generating",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "get",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "things",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "rolling",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "two",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "powerful",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "sentence",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "transformers",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "minilm",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "transforming",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "text",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "clip",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "contrastive",
            "tf": 1,
            "weight": 0.034483
          }
        ],
        "unique_terms": 22,
        "total_terms": 29
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Models We’ll Use for Generating Embeddings",
        "data",
        "embeddings",
        "for",
        "generating",
        "get",
        "image",
        "models",
        "rolling",
        "things",
        "use"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.543125,
      "overall": 0.6810416666666667
    }
  },
  {
    "text": "### Helper Functions for Document Processing\n\nTo retrieve images from S3, a helper function `parse_s3_url` breaks down the S3 URL into its bucket and critical components. This is essential for fetching the image from S3 storage.\n\n```python\ndef parse_s3_url(s3_url):\n    parts = s3_url.replace(\"s3://\", \"\").split(\"/\", 1)\n    bucket_name = parts[0]\n    object_key = parts[1]\n    return bucket_name, object_key\n```\n\n---",
    "metadata": {
      "chunk_id": "d406241c3254-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Helper Functions for Document Processing"
      ],
      "heading_text": "Helper Functions for Document Processing",
      "token_count": 105,
      "char_count": 416,
      "start_char": 24544,
      "end_char": 24960,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5463636363636364,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.158689",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Helper Functions for Document Processing",
      "chunk_hash": "4f6b2b38af50e63d",
      "content_digest": "4f6b2b38af50e63d",
      "chunk_length": 416,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "url",
          "bucket",
          "parts",
          "helper",
          "for",
          "from",
          "parse",
          "the",
          "name",
          "object",
          "key",
          "functions",
          "document",
          "processing",
          "retrieve",
          "images",
          "function",
          "breaks",
          "down",
          "into"
        ],
        "term_weights": [
          {
            "term": "url",
            "tf": 5,
            "weight": 0.1
          },
          {
            "term": "bucket",
            "tf": 3,
            "weight": 0.06
          },
          {
            "term": "parts",
            "tf": 3,
            "weight": 0.06
          },
          {
            "term": "helper",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "parse",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "name",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "object",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.04
          },
          {
            "term": "functions",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "retrieve",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "images",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "function",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "breaks",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "down",
            "tf": 1,
            "weight": 0.02
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.02
          }
        ],
        "unique_terms": 34,
        "total_terms": 50
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Helper Functions for Document Processing",
        "bucket",
        "for",
        "from",
        "helper",
        "name",
        "object",
        "parse",
        "parts",
        "the",
        "url"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5463636363636364,
      "overall": 0.682121212121212
    }
  },
  {
    "text": "## Step 3: Loading Embeddings into Qdrant\n\nNow that your documents have been processed and converted into embeddings, the next step is to load these embeddings into Qdrant.",
    "metadata": {
      "chunk_id": "d406241c3254-0019",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Step 3: Loading Embeddings into Qdrant"
      ],
      "heading_text": "Step 3: Loading Embeddings into Qdrant",
      "token_count": 38,
      "char_count": 172,
      "start_char": 24962,
      "end_char": 25134,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.159290",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Step 3: Loading Embeddings into Qdrant",
      "chunk_hash": "2c2bc617ede45a7c",
      "content_digest": "2c2bc617ede45a7c",
      "chunk_length": 172,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "embeddings",
          "into",
          "step",
          "qdrant",
          "loading",
          "now",
          "that",
          "your",
          "documents",
          "have",
          "been",
          "processed",
          "and",
          "converted",
          "the",
          "next",
          "load",
          "these"
        ],
        "term_weights": [
          {
            "term": "embeddings",
            "tf": 3,
            "weight": 0.125
          },
          {
            "term": "into",
            "tf": 3,
            "weight": 0.125
          },
          {
            "term": "step",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "qdrant",
            "tf": 2,
            "weight": 0.083333
          },
          {
            "term": "loading",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "now",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "your",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "documents",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "have",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "been",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "processed",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "converted",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "next",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "load",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "these",
            "tf": 1,
            "weight": 0.041667
          }
        ],
        "unique_terms": 18,
        "total_terms": 24
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Step 3: Loading Embeddings into Qdrant",
        "documents",
        "embeddings",
        "have",
        "into",
        "loading",
        "now",
        "qdrant",
        "step",
        "that",
        "your"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5471428571428572,
      "overall": 0.7490476190476191
    }
  },
  {
    "text": "### Creating a Collection in Qdrant\n\nIn Qdrant, data is organized in collections, each representing a set of embeddings (or points) and their associated metadata (payload). To store the embeddings generated earlier, you’ll first need to create a collection.\n\nHere’s how to create a collection in Qdrant to store both text and image embeddings:\n\n```python\ndef create_collection(collection_name):\n    qdrant_client.create_collection(\n        collection_name,\n        vectors_config={\n            \"text_embedding\": models.VectorParams(\n                size=384,  # Dimension of text embeddings\n                distance=models.Distance.COSINE,  # Cosine similarity is used for comparison\n            ),\n            \"image_embedding\": models.VectorParams(\n                size=512,  # Dimension of image embeddings\n                distance=models.Distance.COSINE,  # Cosine similarity is used for comparison\n            ),\n        },\n    )\n\ncreate_collection(\"products-data\")\n```\n\n---\n\nThis function creates a collection for storing text (384 dimensions) and image (512 dimensions) embeddings, using cosine similarity to compare embeddings within the collection.\n\nOnce the collection is set up, you can load the embeddings into Qdrant. This involves inserting (or updating) the embeddings and their associated metadata (payload) into the specified collection.\n\nHere’s the code for loading embeddings into Qdrant:\n\n```python\ndef ingest_data(points):\n    operation_info = qdrant_client.upsert(\n        collection_name=\"products-data\",  # Collection where data is being inserted\n        points=points\n    )\n    return operation_info\n```\n\n---\n\n**Explanation of Ingestion**\n\n1. **Upserting the Data Point:** The upsert method on the `qdrant_client` inserts each PointStruct into the specified collection. If a point with the same ID already exists, it will be updated with the new values.\n2. **Operation Info:** The function returns `operation_info`, which contains details about the upsert operation, such as success status or any potential errors.\n\n**Running the Ingestion Code**\n\nHere’s how to call the function and ingest data:\n\n```python\nfrom qdrant_client import models\n\nif __name__ == \"__main__\":\n    collection_name = \"products-data\"\n    create_collection(collection_name)\n    for i in range(1,6): # Five documents\n        folder = f\"p_{i}\"\n        loader = S3DirectoryLoader(\n            \"product-dataset\",\n            folder,\n            aws_access_key_id=aws_access_key_id,\n            aws_secret_access_key=aws_secret_access_key\n        )\n        docs = loader.load()\n        points, text_review, product_image = [], \"\", \"\"\n        for idx, doc in enumerate(docs):\n            source = doc.metadata['source']\n            if source.endswith(\".txt\") or source.endswith(\".pdf\"):\n                _text_review_source, text_review = process_text(doc)\n            elif source.endswith(\".png\"):\n                product_image_source, product_image = process_image(doc)\n        if text_review:\n            point = models.PointStruct(\n                id=idx,  # Unique identifier for each point\n                vector={\n                    \"text_embedding\": models.Document(\n                        text=text_review, model=\"sentence-transformers/all-MiniLM-L6-v2\"\n                    ),\n                    \"image_embedding\": models.Image(\n                        image=product_image, model=\"Qdrant/clip-ViT-B-32-vision\"\n                    ),\n                },\n                payload={\"review\": text_review, \"product_image\": product_image_source},\n            )\n            points.append(point)\n    operation_info = ingest_data(points)\n    print(operation_info)\n```\n\nThe `PointStruct` is instantiated with these key parameters:\n\n- **id:** A unique identifier for each embedding, typically an incremental index.\n\n- **vector:** A dictionary holding the text and image inputs to be embedded. `qdrant-client` uses [FastEmbed](https://github.com/qdrant/fastembed) under the hood to automatically generate vector representations from these inputs locally.\n\n- **payload:** A dictionary storing additional metadata, like product reviews and image references, which is invaluable for retrieval and context during searches.\n\nThe code dynamically loads folders from an S3 bucket, processes text and image files separately, and stores their embeddings and associated data in dedicated lists. It then creates a `PointStruct` for each data entry and calls the ingestion function to load it into Qdrant.",
    "metadata": {
      "chunk_id": "d406241c3254-0020",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Creating a Collection in Qdrant"
      ],
      "heading_text": "Creating a Collection in Qdrant",
      "token_count": 893,
      "char_count": 4482,
      "start_char": 25136,
      "end_char": 29618,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.8696774193548387,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.162536",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Creating a Collection in Qdrant",
      "chunk_hash": "98a507d450211df8",
      "content_digest": "98a507d450211df8",
      "chunk_length": 4482,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "collection",
          "image",
          "text",
          "qdrant",
          "and",
          "data",
          "embeddings",
          "for",
          "models",
          "product",
          "source",
          "points",
          "operation",
          "review",
          "create",
          "name",
          "info",
          "each",
          "client"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 22,
            "weight": 0.046414
          },
          {
            "term": "collection",
            "tf": 18,
            "weight": 0.037975
          },
          {
            "term": "image",
            "tf": 17,
            "weight": 0.035865
          },
          {
            "term": "text",
            "tf": 15,
            "weight": 0.031646
          },
          {
            "term": "qdrant",
            "tf": 13,
            "weight": 0.027426
          },
          {
            "term": "and",
            "tf": 12,
            "weight": 0.025316
          },
          {
            "term": "data",
            "tf": 11,
            "weight": 0.023207
          },
          {
            "term": "embeddings",
            "tf": 11,
            "weight": 0.023207
          },
          {
            "term": "for",
            "tf": 10,
            "weight": 0.021097
          },
          {
            "term": "models",
            "tf": 8,
            "weight": 0.016878
          },
          {
            "term": "product",
            "tf": 8,
            "weight": 0.016878
          },
          {
            "term": "source",
            "tf": 8,
            "weight": 0.016878
          },
          {
            "term": "points",
            "tf": 7,
            "weight": 0.014768
          },
          {
            "term": "operation",
            "tf": 7,
            "weight": 0.014768
          },
          {
            "term": "review",
            "tf": 7,
            "weight": 0.014768
          },
          {
            "term": "create",
            "tf": 6,
            "weight": 0.012658
          },
          {
            "term": "name",
            "tf": 6,
            "weight": 0.012658
          },
          {
            "term": "info",
            "tf": 6,
            "weight": 0.012658
          },
          {
            "term": "each",
            "tf": 5,
            "weight": 0.010549
          },
          {
            "term": "client",
            "tf": 5,
            "weight": 0.010549
          }
        ],
        "unique_terms": 187,
        "total_terms": 474
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Creating a Collection in Qdrant",
        "and",
        "collection",
        "data",
        "embeddings",
        "for",
        "image",
        "models",
        "qdrant",
        "text",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.8696774193548387,
      "overall": 0.8898924731182795
    }
  },
  {
    "text": "## Step 4: Visualizing Data in Qdrant WebUI\n\nTo start visualizing your data in the Qdrant WebUI, head to the **Overview** section and select **Access the database**.\n\n**Figure 2: Accessing the Database from the Qdrant UI**\n\nWhen prompted, enter your API key. Once inside, you’ll be able to view your collections and the corresponding data points. You should see your collection displayed like this:\n\n**Figure 3: The product-data Collection in Qdrant**\n\nHere’s a look at the most recent point ingested into Qdrant:\n\n**Figure 4: The Latest Point Added to the product-data Collection**\n\nThe Qdrant WebUI’s search functionality allows you to perform vector searches across your collections. With options to apply filters and parameters, retrieving relevant embeddings and exploring relationships within your data becomes easy. To start, head over to the **Console** in the left panel, where you can create queries:\n\n**Figure 5: Overview of Console in Qdrant**\n\nThe first query retrieves all collections, the second fetches points from the product-data collection, and the third performs a sample query. This demonstrates how straightforward it is to interact with your data in the Qdrant UI.\n\nNow, let’s retrieve some documents from the database using a query!.\n\n**Figure 6: Querying the Qdrant Client to Retrieve Relevant Documents**\n\nIn this example, we queried **Phones with improved design**. Then, we converted the text to vectors using OpenAI and retrieved a relevant phone review highlighting design improvements.",
    "metadata": {
      "chunk_id": "d406241c3254-0022",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Step 4: Visualizing Data in Qdrant WebUI"
      ],
      "heading_text": "Step 4: Visualizing Data in Qdrant WebUI",
      "token_count": 321,
      "char_count": 1516,
      "start_char": 29920,
      "end_char": 31436,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.6872090909090908,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.163688",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Step 4: Visualizing Data in Qdrant WebUI",
      "chunk_hash": "29ea4b3c13805a15",
      "content_digest": "29ea4b3c13805a15",
      "chunk_length": 1516,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "qdrant",
          "data",
          "your",
          "and",
          "figure",
          "you",
          "collection",
          "webui",
          "database",
          "from",
          "collections",
          "this",
          "product",
          "with",
          "relevant",
          "query",
          "visualizing",
          "start",
          "head"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 21,
            "weight": 0.107143
          },
          {
            "term": "qdrant",
            "tf": 9,
            "weight": 0.045918
          },
          {
            "term": "data",
            "tf": 8,
            "weight": 0.040816
          },
          {
            "term": "your",
            "tf": 7,
            "weight": 0.035714
          },
          {
            "term": "and",
            "tf": 6,
            "weight": 0.030612
          },
          {
            "term": "figure",
            "tf": 5,
            "weight": 0.02551
          },
          {
            "term": "you",
            "tf": 4,
            "weight": 0.020408
          },
          {
            "term": "collection",
            "tf": 4,
            "weight": 0.020408
          },
          {
            "term": "webui",
            "tf": 3,
            "weight": 0.015306
          },
          {
            "term": "database",
            "tf": 3,
            "weight": 0.015306
          },
          {
            "term": "from",
            "tf": 3,
            "weight": 0.015306
          },
          {
            "term": "collections",
            "tf": 3,
            "weight": 0.015306
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.015306
          },
          {
            "term": "product",
            "tf": 3,
            "weight": 0.015306
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.015306
          },
          {
            "term": "relevant",
            "tf": 3,
            "weight": 0.015306
          },
          {
            "term": "query",
            "tf": 3,
            "weight": 0.015306
          },
          {
            "term": "visualizing",
            "tf": 2,
            "weight": 0.010204
          },
          {
            "term": "start",
            "tf": 2,
            "weight": 0.010204
          },
          {
            "term": "head",
            "tf": 2,
            "weight": 0.010204
          }
        ],
        "unique_terms": 111,
        "total_terms": 196
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Step 4: Visualizing Data in Qdrant WebUI",
        "and",
        "collection",
        "data",
        "database",
        "figure",
        "qdrant",
        "the",
        "webui",
        "you",
        "your"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.6872090909090908,
      "overall": 0.8290696969696968
    }
  },
  {
    "text": "## Conclusion\n\nIn this guide, we set up an S3 bucket, ingested various data types, and stored embeddings in Qdrant. Using LangChain, we dynamically processed text and image files, making it easy to work with each file type.\n\nNow, it’s your turn. Try experimenting with different data types, such as videos, and explore Qdrant’s advanced features to enhance your applications. To get started, [sign up](https://cloud.qdrant.io/signup) for Qdrant today.",
    "metadata": {
      "chunk_id": "d406241c3254-0023",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 23,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Conclusion"
      ],
      "heading_text": "Conclusion",
      "token_count": 105,
      "char_count": 451,
      "start_char": 31438,
      "end_char": 31889,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7458823529411764,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.164038",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Conclusion",
      "chunk_hash": "454f8f5aae1e7e6a",
      "content_digest": "454f8f5aae1e7e6a",
      "chunk_length": 451,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "and",
          "data",
          "types",
          "with",
          "your",
          "conclusion",
          "this",
          "guide",
          "set",
          "bucket",
          "ingested",
          "various",
          "stored",
          "embeddings",
          "using",
          "langchain",
          "dynamically",
          "processed",
          "text"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 4,
            "weight": 0.070175
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.052632
          },
          {
            "term": "data",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "types",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "your",
            "tf": 2,
            "weight": 0.035088
          },
          {
            "term": "conclusion",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "guide",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "set",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "bucket",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "ingested",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "various",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "stored",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "embeddings",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "langchain",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "dynamically",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "processed",
            "tf": 1,
            "weight": 0.017544
          },
          {
            "term": "text",
            "tf": 1,
            "weight": 0.017544
          }
        ],
        "unique_terms": 48,
        "total_terms": 57
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Conclusion",
        "and",
        "conclusion",
        "data",
        "guide",
        "qdrant",
        "set",
        "this",
        "types",
        "with",
        "your"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7458823529411764,
      "overall": 0.7819607843137254
    }
  },
  {
    "text": "##### Was this page useful?\n\nYes No\n\nThank you for your feedback! 🙏\n\nWe are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/data-ingestion-beginners.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue.\n\nOn this page:\n\n- [Send S3 Data to Qdrant Vector Store with LangChain](#send-s3-data-to-qdrant-vector-store-with-langchain.md)\n\n  - [Ingestion Workflow Architecture](#ingestion-workflow-architecture.md)\n\n  - [Prerequisites](#prerequisites.md)\n    -\n\n  - [Step 1: Ingesting Data from S3](#step-1-ingesting-data-from-s3.md)\n    - [Example: Configuring LangChain to Load Files from S3](#example-configuring-langchain-to-load-files-from-s3.md)\n\n  - [Step 2. Turning Documents into Embeddings](#step-2-turning-documents-into-embeddings.md)\n\n    - [Models We’ll Use for Generating Embeddings](#models-well-use-for-generating-embeddings.md)\n    - [Document Processing Function](#document-processing-function.md)\n    - [Helper Functions for Document Processing](#helper-functions-for-document-processing.md)\n\n  - [Step 3: Loading Embeddings into Qdrant](#step-3-loading-embeddings-into-qdrant.md)\n\n    - [Creating a Collection in Qdrant](#creating-a-collection-in-qdrant.md)\n    - [Exploring the Qdrant WebUI Dashboard](#exploring-the-qdrant-webui-dashboard.md)\n\n  - [Step 4: Visualizing Data in Qdrant WebUI](#step-4-visualizing-data-in-qdrant-webui.md)\n\n  - [Conclusion](#conclusion.md)\n\n* [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/data-ingestion-beginners.md)\n* [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)",
    "metadata": {
      "chunk_id": "d406241c3254-0024",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "filename": "_documentation_data-ingestion-beginners_.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Was this page useful?"
      ],
      "heading_text": "Was this page useful?",
      "token_count": 466,
      "char_count": 1731,
      "start_char": 31891,
      "end_char": 33622,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.7560790697674418,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:59.165186",
      "document_id": "d406241c3254",
      "document_name": "_documentation_data-ingestion-beginners_",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "source_filename": "_documentation_data-ingestion-beginners_.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_documentation\\documentation_data-ingestion-beginners\\_documentation_data-ingestion-beginners_.md",
      "hierarchy_path": "Was this page useful?",
      "chunk_hash": "c0d5d7374cdf241f",
      "content_digest": "c0d5d7374cdf241f",
      "chunk_length": 1731,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "data",
          "step",
          "page",
          "github",
          "landing",
          "embeddings",
          "for",
          "https",
          "com",
          "ingestion",
          "langchain",
          "from",
          "into",
          "document",
          "processing",
          "webui",
          "this",
          "you",
          "edit"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 16,
            "weight": 0.082474
          },
          {
            "term": "data",
            "tf": 8,
            "weight": 0.041237
          },
          {
            "term": "step",
            "tf": 8,
            "weight": 0.041237
          },
          {
            "term": "page",
            "tf": 7,
            "weight": 0.036082
          },
          {
            "term": "github",
            "tf": 7,
            "weight": 0.036082
          },
          {
            "term": "landing",
            "tf": 6,
            "weight": 0.030928
          },
          {
            "term": "embeddings",
            "tf": 6,
            "weight": 0.030928
          },
          {
            "term": "for",
            "tf": 5,
            "weight": 0.025773
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.020619
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.020619
          },
          {
            "term": "ingestion",
            "tf": 4,
            "weight": 0.020619
          },
          {
            "term": "langchain",
            "tf": 4,
            "weight": 0.020619
          },
          {
            "term": "from",
            "tf": 4,
            "weight": 0.020619
          },
          {
            "term": "into",
            "tf": 4,
            "weight": 0.020619
          },
          {
            "term": "document",
            "tf": 4,
            "weight": 0.020619
          },
          {
            "term": "processing",
            "tf": 4,
            "weight": 0.020619
          },
          {
            "term": "webui",
            "tf": 4,
            "weight": 0.020619
          },
          {
            "term": "this",
            "tf": 3,
            "weight": 0.015464
          },
          {
            "term": "you",
            "tf": 2,
            "weight": 0.010309
          },
          {
            "term": "edit",
            "tf": 2,
            "weight": 0.010309
          }
        ],
        "unique_terms": 70,
        "total_terms": 194
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Was this page useful?",
        "com",
        "data",
        "embeddings",
        "for",
        "github",
        "https",
        "landing",
        "page",
        "qdrant",
        "step"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.7560790697674418,
      "overall": 0.7520263565891471
    }
  }
]