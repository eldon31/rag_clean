[
  {
    "text": "# Advanced Features  Relevant source files  - [qdrant\\_client/async\\_qdrant\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_fastembed.py) - [qdrant\\_client/qdrant\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py) - [tests/test\\_fastembed.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tests/test_fastembed.py) - [tools/async\\_client\\_generator/fastembed\\_generator.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/tools/async_client_generator/fastembed_generator.py)  This document covers the advanced functionality of the qdrant-client Python library, including embedding integration, batch processing, and specialized search capabilities. These features extend the basic client operations to provide higher-level abstractions for common vector database workflows. For basic client operations and collection management, see [Core Operations](qdrant/qdrant-client/3-core-operations.md). For implementation details of filtering and type inspection systems, see [Implementation Details](qdrant/qdrant-client/5-implementation-details.md).",
    "metadata": {
      "chunk_id": "867818eb001c-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
      "filename": "_qdrant_qdrant-client_4-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Advanced Features"
      ],
      "heading_text": "Advanced Features",
      "token_count": 280,
      "char_count": 1157,
      "start_char": 1974,
      "end_char": 3131,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5233333333333333,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:46.681173",
      "document_id": "867818eb001c",
      "document_name": "_qdrant_qdrant-client_4-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
      "source_filename": "_qdrant_qdrant-client_4-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
      "hierarchy_path": "Advanced Features",
      "chunk_hash": "7446146436054a8f",
      "content_digest": "7446146436054a8f",
      "chunk_length": 1157,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "fastembed",
          "async",
          "https",
          "github",
          "com",
          "blob",
          "ac6f6cd2",
          "generator",
          "operations",
          "the",
          "and",
          "for",
          "implementation",
          "details",
          "advanced",
          "features",
          "tests",
          "test"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 21,
            "weight": 0.15
          },
          {
            "term": "client",
            "tf": 15,
            "weight": 0.107143
          },
          {
            "term": "fastembed",
            "tf": 8,
            "weight": 0.057143
          },
          {
            "term": "async",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "blob",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "ac6f6cd2",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "generator",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "operations",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "implementation",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "details",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "advanced",
            "tf": 2,
            "weight": 0.014286
          },
          {
            "term": "features",
            "tf": 2,
            "weight": 0.014286
          },
          {
            "term": "tests",
            "tf": 2,
            "weight": 0.014286
          },
          {
            "term": "test",
            "tf": 2,
            "weight": 0.014286
          }
        ],
        "unique_terms": 57,
        "total_terms": 140
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Advanced Features",
        "ac6f6cd2",
        "async",
        "blob",
        "client",
        "com",
        "fastembed",
        "generator",
        "github",
        "https",
        "qdrant"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5233333333333333,
      "overall": 0.6744444444444445
    }
  },
  {
    "text": "## Hybrid Search\n\nThe client supports hybrid search combining dense and sparse vectors through reciprocal rank fusion (RRF). This is implemented in the `query()` and `query_batch()` methods.\n\n```\n```\n\nThe hybrid search process involves:\n\n1. **Dual Embedding**: Query text is embedded using both dense and sparse models\n2. **Parallel Search**: Both dense and sparse searches are executed via `search_batch()`\n3. **Result Fusion**: Results are combined using `reciprocal_rank_fusion()` from the `qdrant_client.hybrid.fusion` module\n4. **Response Formatting**: Results are converted to `QueryResponse` objects\n\nVector field naming follows a consistent pattern:\n\n- Dense vectors: `\"fast-{model_name}\"` (e.g., `\"fast-bge-small-en\"`)\n- Sparse vectors: `\"fast-sparse-{model_name}\"` (e.g., `\"fast-sparse-splade_pp_en_v1\"`)\n\n**Sources:** [qdrant\\_client/qdrant\\_fastembed.py612-696](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L612-L696) [qdrant\\_client/qdrant\\_fastembed.py18](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L18-L18)",
    "metadata": {
      "chunk_id": "867818eb001c-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
      "filename": "_qdrant_qdrant-client_4-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Hybrid Search"
      ],
      "heading_text": "Hybrid Search",
      "token_count": 296,
      "char_count": 1109,
      "start_char": 6068,
      "end_char": 7177,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5135294117647059,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:46.683560",
      "document_id": "867818eb001c",
      "document_name": "_qdrant_qdrant-client_4-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
      "source_filename": "_qdrant_qdrant-client_4-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
      "hierarchy_path": "Hybrid Search",
      "chunk_hash": "69d3a2a6013364e5",
      "content_digest": "69d3a2a6013364e5",
      "chunk_length": 1109,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "client",
          "sparse",
          "search",
          "hybrid",
          "the",
          "dense",
          "and",
          "fusion",
          "fast",
          "fastembed",
          "vectors",
          "query",
          "are",
          "reciprocal",
          "rank",
          "batch",
          "using",
          "both",
          "results"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 13,
            "weight": 0.093525
          },
          {
            "term": "client",
            "tf": 8,
            "weight": 0.057554
          },
          {
            "term": "sparse",
            "tf": 6,
            "weight": 0.043165
          },
          {
            "term": "search",
            "tf": 5,
            "weight": 0.035971
          },
          {
            "term": "hybrid",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "dense",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "fusion",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "fast",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "fastembed",
            "tf": 4,
            "weight": 0.028777
          },
          {
            "term": "vectors",
            "tf": 3,
            "weight": 0.021583
          },
          {
            "term": "query",
            "tf": 3,
            "weight": 0.021583
          },
          {
            "term": "are",
            "tf": 3,
            "weight": 0.021583
          },
          {
            "term": "reciprocal",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "rank",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "batch",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "using",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "both",
            "tf": 2,
            "weight": 0.014388
          },
          {
            "term": "results",
            "tf": 2,
            "weight": 0.014388
          }
        ],
        "unique_terms": 70,
        "total_terms": 139
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Hybrid Search",
        "and",
        "client",
        "dense",
        "fast",
        "fusion",
        "hybrid",
        "qdrant",
        "search",
        "sparse",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5135294117647059,
      "overall": 0.6711764705882352
    }
  },
  {
    "text": "## Local Inference\n\nThe client provides local inference capabilities through the `ModelEmbedder` class and related inference object detection systems.\n\n```\n```\n\nThe local inference system provides several key capabilities:\n\n1. **Query Resolution**: The `_resolve_query()` method handles various query types including inference objects\n2. **Model Embedding**: The `_embed_models()` and `_embed_models_strict()` methods process Pydantic models with embedded inference objects\n3. **Type Detection**: The system uses `INFERENCE_OBJECT_TYPES` to identify objects requiring inference\n4. **Schema Parsing**: The `ModelSchemaParser` analyzes model schemas to identify inference fields\n\nSupported inference object types include:\n\n- `models.Document` - Text documents for embedding\n- `models.Image` - Images for vision model embedding\n- `models.InferenceObject` - Generic inference objects\n\nThe system integrates with both synchronous and asynchronous workflows, with the `AsyncQdrantFastembedMixin` providing the same interface for async operations.\n\n**Sources:** [qdrant\\_client/qdrant\\_fastembed.py789-892](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L789-L892) [qdrant\\_client/qdrant\\_fastembed.py16](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L16-L16) [qdrant\\_client/qdrant\\_fastembed.py36-40](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_fastembed.py#L36-L40)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh",
    "metadata": {
      "chunk_id": "867818eb001c-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
      "filename": "_qdrant_qdrant-client_4-advanced-features.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Local Inference"
      ],
      "heading_text": "Local Inference",
      "token_count": 364,
      "char_count": 1527,
      "start_char": 7179,
      "end_char": 8706,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5092,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "processing_timestamp": "2025-10-20T04:38:46.683560",
      "document_id": "867818eb001c",
      "document_name": "_qdrant_qdrant-client_4-advanced-features",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
      "source_filename": "_qdrant_qdrant-client_4-advanced-features.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\qdrant_ecosystem\\qdrant_qdrant-client",
      "relative_path": "Docs\\qdrant_ecosystem\\qdrant_qdrant-client\\_qdrant_qdrant-client_4-advanced-features.md",
      "hierarchy_path": "Local Inference",
      "chunk_hash": "a8135c9a6fa04cab",
      "content_digest": "a8135c9a6fa04cab",
      "chunk_length": 1527,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "qdrant",
          "inference",
          "the",
          "client",
          "models",
          "fastembed",
          "objects",
          "local",
          "and",
          "object",
          "system",
          "query",
          "types",
          "model",
          "embedding",
          "with",
          "for",
          "https",
          "github",
          "com"
        ],
        "term_weights": [
          {
            "term": "qdrant",
            "tf": 18,
            "weight": 0.096774
          },
          {
            "term": "inference",
            "tf": 11,
            "weight": 0.05914
          },
          {
            "term": "the",
            "tf": 10,
            "weight": 0.053763
          },
          {
            "term": "client",
            "tf": 10,
            "weight": 0.053763
          },
          {
            "term": "models",
            "tf": 6,
            "weight": 0.032258
          },
          {
            "term": "fastembed",
            "tf": 6,
            "weight": 0.032258
          },
          {
            "term": "objects",
            "tf": 4,
            "weight": 0.021505
          },
          {
            "term": "local",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "object",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "system",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "query",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "types",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "embedding",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.016129
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.016129
          }
        ],
        "unique_terms": 91,
        "total_terms": 186
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Local Inference",
        "and",
        "client",
        "fastembed",
        "inference",
        "local",
        "models",
        "object",
        "objects",
        "qdrant",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5092,
      "overall": 0.6697333333333333
    }
  }
]