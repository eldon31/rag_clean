[
  {
    "text": "## Overview  Format detection and routing is the critical orchestration layer that connects user inputs to the correct processing strategy. The system performs three main operations:  1. **Format Detection**: Analyzes input files using MIME types, file extensions, and content inspection to determine the `InputFormat` 2. **Backend Selection**: Maps the detected format to a document backend class that can parse that format 3. **Pipeline Selection**: Routes the format to a processing pipeline with appropriate configuration options  These operations ensure that each document type receives optimal processing with format-specific parsing and model application strategies.",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0001",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Overview"
      ],
      "heading_text": "Overview",
      "token_count": 118,
      "char_count": 673,
      "start_char": 5989,
      "end_char": 6662,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5182608695652174,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.933342",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 118,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Overview",
      "chunk_hash": "5fb38143527f44c3",
      "content_digest": "5fb38143527f44c3",
      "chunk_length": 673,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "format",
          "the",
          "that",
          "and",
          "processing",
          "detection",
          "operations",
          "backend",
          "selection",
          "document",
          "pipeline",
          "with",
          "overview",
          "routing",
          "critical",
          "orchestration",
          "layer",
          "connects",
          "user",
          "inputs"
        ],
        "term_weights": [
          {
            "term": "format",
            "tf": 6,
            "weight": 0.073171
          },
          {
            "term": "the",
            "tf": 6,
            "weight": 0.073171
          },
          {
            "term": "that",
            "tf": 4,
            "weight": 0.04878
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.036585
          },
          {
            "term": "processing",
            "tf": 3,
            "weight": 0.036585
          },
          {
            "term": "detection",
            "tf": 2,
            "weight": 0.02439
          },
          {
            "term": "operations",
            "tf": 2,
            "weight": 0.02439
          },
          {
            "term": "backend",
            "tf": 2,
            "weight": 0.02439
          },
          {
            "term": "selection",
            "tf": 2,
            "weight": 0.02439
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.02439
          },
          {
            "term": "pipeline",
            "tf": 2,
            "weight": 0.02439
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.02439
          },
          {
            "term": "overview",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "routing",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "critical",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "orchestration",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "layer",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "connects",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "user",
            "tf": 1,
            "weight": 0.012195
          },
          {
            "term": "inputs",
            "tf": 1,
            "weight": 0.012195
          }
        ],
        "unique_terms": 58,
        "total_terms": 82
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Overview",
        "and",
        "backend",
        "detection",
        "document",
        "format",
        "operations",
        "processing",
        "selection",
        "that",
        "the"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5182608695652174,
      "overall": 0.7394202898550724
    }
  },
  {
    "text": "## Format Detection Architecture  The format detection system uses a multi-strategy approach to reliably identify document types, even when file extensions are missing or misleading. ``` ``` **Sources:** [docling/datamodel/document.py280-490](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L280-L490) [docling/datamodel/base\\_models.py83-139](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py#L83-L139)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0002",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Format Detection Architecture"
      ],
      "heading_text": "Format Detection Architecture",
      "token_count": 114,
      "char_count": 482,
      "start_char": 6664,
      "end_char": 7146,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.935179",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 114,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Format Detection Architecture",
      "chunk_hash": "3fe1b5fa06593fc4",
      "content_digest": "3fe1b5fa06593fc4",
      "chunk_length": 482,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "datamodel",
          "document",
          "format",
          "detection",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "base",
          "models",
          "architecture",
          "the",
          "system",
          "uses",
          "multi",
          "strategy",
          "approach"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 8,
            "weight": 0.131148
          },
          {
            "term": "datamodel",
            "tf": 4,
            "weight": 0.065574
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.04918
          },
          {
            "term": "format",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "detection",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "base",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.032787
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.016393
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.016393
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.016393
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.016393
          },
          {
            "term": "multi",
            "tf": 1,
            "weight": 0.016393
          },
          {
            "term": "strategy",
            "tf": 1,
            "weight": 0.016393
          },
          {
            "term": "approach",
            "tf": 1,
            "weight": 0.016393
          }
        ],
        "unique_terms": 39,
        "total_terms": 61
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Format Detection Architecture",
        "blob",
        "com",
        "datamodel",
        "detection",
        "docling",
        "document",
        "format",
        "github",
        "https",
        "project"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "overall": 0.6866666666666666
    }
  },
  {
    "text": "### Detection Strategy Priority  The `_guess_format()` method implements a waterfall detection strategy:  1. **Primary MIME detection**: Uses `filetype` library to guess MIME type from file magic bytes 2. **Extension fallback**: If MIME detection fails, derives MIME from file extension using `_mime_from_extension()` 3. **Content-based refinement**: For ambiguous formats (e.g., `application/zip` could be DOCX/XLSX/PPTX), reads file content to disambiguate 4. **Specialized detectors**: Applies format-specific detection for complex types like METS archives, USPTO patents, JATS articles  **Key Code Locations:**  - Main detection entry point: [docling/datamodel/document.py280-338](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L280-L338) - MIME-to-format mapping: [docling/datamodel/base\\_models.py135-139](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py#L135-L139) - Extension-to-format mapping: [docling/datamodel/base\\_models.py83-99](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py#L83-L99)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0003",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Detection Strategy Priority"
      ],
      "heading_text": "Detection Strategy Priority",
      "token_count": 275,
      "char_count": 1123,
      "start_char": 7150,
      "end_char": 8273,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.936826",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 275,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Detection Strategy Priority",
      "chunk_hash": "9ff36657686dd82b",
      "content_digest": "9ff36657686dd82b",
      "chunk_length": 1123,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "detection",
          "mime",
          "datamodel",
          "format",
          "extension",
          "base",
          "models",
          "from",
          "file",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "strategy",
          "guess",
          "content",
          "for"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 12,
            "weight": 0.085714
          },
          {
            "term": "detection",
            "tf": 6,
            "weight": 0.042857
          },
          {
            "term": "mime",
            "tf": 6,
            "weight": 0.042857
          },
          {
            "term": "datamodel",
            "tf": 6,
            "weight": 0.042857
          },
          {
            "term": "format",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "extension",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "base",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "models",
            "tf": 4,
            "weight": 0.028571
          },
          {
            "term": "from",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "file",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "project",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "f7244a43",
            "tf": 3,
            "weight": 0.021429
          },
          {
            "term": "strategy",
            "tf": 2,
            "weight": 0.014286
          },
          {
            "term": "guess",
            "tf": 2,
            "weight": 0.014286
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.014286
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.014286
          }
        ],
        "unique_terms": 80,
        "total_terms": 140
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Detection Strategy Priority",
        "base",
        "datamodel",
        "detection",
        "docling",
        "extension",
        "file",
        "format",
        "from",
        "mime",
        "models"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.54,
      "overall": 0.7133333333333333
    }
  },
  {
    "text": "## Format Routing System  Once a format is detected, the `DocumentConverter` uses the `FormatOption` model to route documents to the correct backend and pipeline combination. ``` ``` **Sources:** [docling/document\\_converter.py184-433](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L184-L433)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0004",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Format Routing System"
      ],
      "heading_text": "Format Routing System",
      "token_count": 76,
      "char_count": 333,
      "start_char": 8275,
      "end_char": 8608,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5382758620689655,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.940919",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 76,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Format Routing System",
      "chunk_hash": "e75b459b000bbc8f",
      "content_digest": "e75b459b000bbc8f",
      "chunk_length": 333,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "the",
          "format",
          "document",
          "converter",
          "routing",
          "system",
          "once",
          "detected",
          "documentconverter",
          "uses",
          "formatoption",
          "model",
          "route",
          "documents",
          "correct",
          "backend",
          "and",
          "pipeline",
          "combination"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.102564
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.076923
          },
          {
            "term": "format",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "converter",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "routing",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "once",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "detected",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "documentconverter",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "formatoption",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "route",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "documents",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "correct",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "backend",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "combination",
            "tf": 1,
            "weight": 0.025641
          }
        ],
        "unique_terms": 31,
        "total_terms": 39
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Format Routing System",
        "converter",
        "detected",
        "docling",
        "document",
        "documentconverter",
        "format",
        "once",
        "routing",
        "system",
        "the"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5382758620689655,
      "overall": 0.7127586206896551
    }
  },
  {
    "text": "### Default Routing Table  The `_get_default_option()` function defines the default backend-pipeline pairing for each format:  | InputFormat    | Backend                         | Pipeline              | Notes                                 | | -------------- | ------------------------------- | --------------------- | ------------------------------------- | | `PDF`          | `DoclingParseV4DocumentBackend` | `StandardPdfPipeline` | Default PDF processing with v4 parser | | `IMAGE`        | `DoclingParseV4DocumentBackend` | `StandardPdfPipeline` | Images treated as single-page PDFs    | | `DOCX`         | `MsWordDocumentBackend`         | `SimplePipeline`      | Office Open XML documents             | | `XLSX`         | `MsExcelDocumentBackend`        | `SimplePipeline`      | Excel spreadsheets                    | | `PPTX`         | `MsPowerpointDocumentBackend`   | `SimplePipeline`      | PowerPoint presentations              | | `HTML`         | `HTMLDocumentBackend`           | `SimplePipeline`      | Web content                           | | `MD`           | `MarkdownDocumentBackend`       | `SimplePipeline`      | Markdown documents                    | | `ASCIIDOC`     | `AsciiDocBackend`               | `SimplePipeline`      | AsciiDoc format                       | | `CSV`          | `CsvDocumentBackend`            | `SimplePipeline`      | Comma-separated values                | | `METS_GBS`     | `MetsGbsDocumentBackend`        | `StandardPdfPipeline` | Google Books METS archives            | | `XML_JATS`     | `JatsDocumentBackend`           | `SimplePipeline`      | Scientific article format             | | `XML_USPTO`    | `PatentUsptoDocumentBackend`    | `SimplePipeline`      | USPTO patent format                   | | `JSON_DOCLING` | `DoclingJSONBackend`            | `SimplePipeline`      | Native DoclingDocument JSON           | | `AUDIO`        | `NoOpBackend`                   | `AsrPipeline`         | Audio transcription                   | | `VTT`          | `WebVTTDocumentBackend`         | `SimplePipeline`      | Subtitle format                       |  **Sources:** [docling/document\\_converter.py132-182](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L132-L182)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0006",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Default Routing Table"
      ],
      "heading_text": "Default Routing Table",
      "token_count": 504,
      "char_count": 2267,
      "start_char": 9689,
      "end_char": 11956,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6432160804020101,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.946914",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 504,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Default Routing Table",
      "chunk_hash": "17f5a93d50b68830",
      "content_digest": "17f5a93d50b68830",
      "chunk_length": 2267,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "simplepipeline",
          "format",
          "docling",
          "default",
          "standardpdfpipeline",
          "xml",
          "the",
          "backend",
          "pipeline",
          "pdf",
          "doclingparsev4documentbackend",
          "documents",
          "asciidoc",
          "mets",
          "uspto",
          "json",
          "audio",
          "document",
          "converter",
          "routing"
        ],
        "term_weights": [
          {
            "term": "simplepipeline",
            "tf": 11,
            "weight": 0.083333
          },
          {
            "term": "format",
            "tf": 5,
            "weight": 0.037879
          },
          {
            "term": "docling",
            "tf": 5,
            "weight": 0.037879
          },
          {
            "term": "default",
            "tf": 4,
            "weight": 0.030303
          },
          {
            "term": "standardpdfpipeline",
            "tf": 3,
            "weight": 0.022727
          },
          {
            "term": "xml",
            "tf": 3,
            "weight": 0.022727
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "backend",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "pipeline",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "pdf",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "doclingparsev4documentbackend",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "documents",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "asciidoc",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "mets",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "uspto",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "audio",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "converter",
            "tf": 2,
            "weight": 0.015152
          },
          {
            "term": "routing",
            "tf": 1,
            "weight": 0.007576
          }
        ],
        "unique_terms": 94,
        "total_terms": 132
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Default Routing Table",
        "backend",
        "default",
        "docling",
        "format",
        "pdf",
        "pipeline",
        "simplepipeline",
        "standardpdfpipeline",
        "the",
        "xml"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6432160804020101,
      "overall": 0.78107202680067
    }
  },
  {
    "text": "### Pipeline Caching Mechanism  To avoid redundant model loading, `DocumentConverter` caches pipeline instances based on a composite key: ``` ``` **Caching Logic:**  1. Hash the serialized `pipeline_options` to create a stable fingerprint 2. Use `(pipeline_class, options_hash)` as the cache key 3. Thread-safe access using `_PIPELINE_CACHE_LOCK` 4. Pipelines with identical configurations share the same instance across all documents  This approach is critical for performance when processing batches of documents with the same pipeline configuration, as it avoids reloading models (OCR engines, layout models, table models, etc.) for each document. **Sources:** [docling/document\\_converter.py212-218](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L212-L218) [docling/document\\_converter.py351-378](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L351-L378)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0007",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Pipeline Caching Mechanism"
      ],
      "heading_text": "Pipeline Caching Mechanism",
      "token_count": 208,
      "char_count": 939,
      "start_char": 11958,
      "end_char": 12897,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5438461538461539,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.953253",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 208,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Pipeline Caching Mechanism",
      "chunk_hash": "cf74df9d2d98a857",
      "content_digest": "cf74df9d2d98a857",
      "chunk_length": 939,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "pipeline",
          "document",
          "the",
          "converter",
          "models",
          "caching",
          "key",
          "hash",
          "options",
          "cache",
          "with",
          "same",
          "documents",
          "for",
          "https",
          "github",
          "com",
          "project",
          "blob"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 8,
            "weight": 0.070175
          },
          {
            "term": "pipeline",
            "tf": 6,
            "weight": 0.052632
          },
          {
            "term": "document",
            "tf": 5,
            "weight": 0.04386
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "converter",
            "tf": 4,
            "weight": 0.035088
          },
          {
            "term": "models",
            "tf": 3,
            "weight": 0.026316
          },
          {
            "term": "caching",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "hash",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "options",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "cache",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "same",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "documents",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.017544
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.017544
          }
        ],
        "unique_terms": 75,
        "total_terms": 114
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Pipeline Caching Mechanism",
        "caching",
        "converter",
        "docling",
        "document",
        "hash",
        "key",
        "models",
        "options",
        "pipeline",
        "the"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5438461538461539,
      "overall": 0.7146153846153845
    }
  },
  {
    "text": "### Office Document Disambiguation  Office Open XML formats (DOCX, XLSX, PPTX) all use `application/zip` as their MIME type, requiring special handling: ``` ``` **Implementation:** [docling/datamodel/document.py292-318](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L292-L318)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0010",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Office Document Disambiguation"
      ],
      "heading_text": "Office Document Disambiguation",
      "token_count": 83,
      "char_count": 317,
      "start_char": 13780,
      "end_char": 14097,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5660000000000001,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.967329",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 83,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Office Document Disambiguation",
      "chunk_hash": "d5cb736aeac26143",
      "content_digest": "d5cb736aeac26143",
      "chunk_length": 317,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "document",
          "office",
          "datamodel",
          "disambiguation",
          "open",
          "xml",
          "formats",
          "docx",
          "xlsx",
          "pptx",
          "all",
          "use",
          "application",
          "zip",
          "their",
          "mime",
          "type",
          "requiring",
          "special"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.102564
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.076923
          },
          {
            "term": "office",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "datamodel",
            "tf": 2,
            "weight": 0.051282
          },
          {
            "term": "disambiguation",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "open",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "xml",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "formats",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "docx",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "xlsx",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "pptx",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "use",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "application",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "zip",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "their",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "mime",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "type",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "requiring",
            "tf": 1,
            "weight": 0.025641
          },
          {
            "term": "special",
            "tf": 1,
            "weight": 0.025641
          }
        ],
        "unique_terms": 32,
        "total_terms": 39
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Office Document Disambiguation",
        "datamodel",
        "disambiguation",
        "docling",
        "document",
        "docx",
        "formats",
        "office",
        "open",
        "xlsx",
        "xml"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5660000000000001,
      "overall": 0.722
    }
  },
  {
    "text": "### Specialized Content-Based Detection\n\nFor formats that cannot be reliably detected by MIME or extension alone, the system reads file content and applies pattern matching.",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0011",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Specialized Content-Based Detection"
      ],
      "heading_text": "Specialized Content-Based Detection",
      "token_count": 30,
      "char_count": 173,
      "start_char": 14101,
      "end_char": 14274,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.968210",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 30,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Specialized Content-Based Detection",
      "chunk_hash": "32ca07bbc0298ffa",
      "content_digest": "32ca07bbc0298ffa",
      "chunk_length": 173,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "content",
          "specialized",
          "based",
          "detection",
          "for",
          "formats",
          "that",
          "cannot",
          "reliably",
          "detected",
          "mime",
          "extension",
          "alone",
          "the",
          "system",
          "reads",
          "file",
          "and",
          "applies",
          "pattern"
        ],
        "term_weights": [
          {
            "term": "content",
            "tf": 2,
            "weight": 0.090909
          },
          {
            "term": "specialized",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "detection",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "formats",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "cannot",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "reliably",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "detected",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "mime",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "extension",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "alone",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "reads",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "file",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "applies",
            "tf": 1,
            "weight": 0.045455
          },
          {
            "term": "pattern",
            "tf": 1,
            "weight": 0.045455
          }
        ],
        "unique_terms": 21,
        "total_terms": 22
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Specialized Content-Based Detection",
        "based",
        "cannot",
        "content",
        "detected",
        "detection",
        "for",
        "formats",
        "reliably",
        "specialized",
        "that"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "#### METS Archive Detection\n\nMETS (Metadata Encoding and Transmission Standard) archives from Google Books use `.tar.gz` extension but need special handling:\n\n**Detection Process:**\n\n1. Detect `application/gzip` MIME type\n2. Open tarball and scan member files\n3. Look for XML files containing `http://www.loc.gov/METS/` namespace\n4. If found, classify as `InputFormat.METS_GBS`\n\n**Sources:** [docling/datamodel/document.py320-322](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L320-L322) [docling/datamodel/document.py471-489](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L471-L489)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0012",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "METS Archive Detection"
      ],
      "heading_text": "METS Archive Detection",
      "token_count": 169,
      "char_count": 665,
      "start_char": 14276,
      "end_char": 14941,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5726923076923077,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.969021",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 169,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "METS Archive Detection",
      "chunk_hash": "da2d5590facf6fb9",
      "content_digest": "da2d5590facf6fb9",
      "chunk_length": 665,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "mets",
          "datamodel",
          "document",
          "detection",
          "and",
          "files",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "archive",
          "metadata",
          "encoding",
          "transmission",
          "standard",
          "archives",
          "from"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 8,
            "weight": 0.093023
          },
          {
            "term": "mets",
            "tf": 4,
            "weight": 0.046512
          },
          {
            "term": "datamodel",
            "tf": 4,
            "weight": 0.046512
          },
          {
            "term": "document",
            "tf": 4,
            "weight": 0.046512
          },
          {
            "term": "detection",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "files",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.023256
          },
          {
            "term": "archive",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "metadata",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "encoding",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "transmission",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "standard",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "archives",
            "tf": 1,
            "weight": 0.011628
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.011628
          }
        ],
        "unique_terms": 61,
        "total_terms": 86
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "METS Archive Detection",
        "and",
        "com",
        "datamodel",
        "detection",
        "docling",
        "document",
        "files",
        "github",
        "https",
        "mets"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5726923076923077,
      "overall": 0.6575641025641025
    }
  },
  {
    "text": "#### HTML/XHTML/XML Detection  The `_detect_html_xhtml()` method analyzes document preambles to distinguish between similar markup formats:  **Detection Rules:**  1. Remove XML comments from content  2. Check for XML declaration (`<?xml`)     - If contains \"xhtml\": `application/xhtml+xml`    - Otherwise: `application/xml`  3. Check for HTML5/4 markers: `<!doctype html>`, `<html>`, `<head>`, `<body>`  4. Check for XML doctype with matching root element  **Sources:** [docling/datamodel/document.py402-439](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L402-L439)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0013",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "HTML/XHTML/XML Detection"
      ],
      "heading_text": "HTML/XHTML/XML Detection",
      "token_count": 158,
      "char_count": 606,
      "start_char": 14943,
      "end_char": 15549,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5537931034482758,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.969408",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 158,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "HTML/XHTML/XML Detection",
      "chunk_hash": "e60b1fd4f20f304f",
      "content_digest": "e60b1fd4f20f304f",
      "chunk_length": 606,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "xml",
          "html",
          "xhtml",
          "docling",
          "document",
          "check",
          "for",
          "detection",
          "application",
          "doctype",
          "datamodel",
          "the",
          "detect",
          "method",
          "analyzes",
          "preambles",
          "distinguish",
          "between",
          "similar",
          "markup"
        ],
        "term_weights": [
          {
            "term": "xml",
            "tf": 7,
            "weight": 0.09589
          },
          {
            "term": "html",
            "tf": 4,
            "weight": 0.054795
          },
          {
            "term": "xhtml",
            "tf": 4,
            "weight": 0.054795
          },
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.054795
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "check",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.041096
          },
          {
            "term": "detection",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "application",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "doctype",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "datamodel",
            "tf": 2,
            "weight": 0.027397
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "detect",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "analyzes",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "preambles",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "distinguish",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "between",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "similar",
            "tf": 1,
            "weight": 0.013699
          },
          {
            "term": "markup",
            "tf": 1,
            "weight": 0.013699
          }
        ],
        "unique_terms": 48,
        "total_terms": 73
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "HTML/XHTML/XML Detection",
        "application",
        "check",
        "detection",
        "docling",
        "doctype",
        "document",
        "for",
        "html",
        "xhtml",
        "xml"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5537931034482758,
      "overall": 0.7179310344827585
    }
  },
  {
    "text": "#### CSV Detection  Uses Python's `csv.Sniffer` to detect CSV characteristics:  **Detection Rules:**  1. Check for newline presence (multi-line requirement) 2. Apply `csv.Sniffer().sniff()` to detect dialect 3. Verify delimiter is common (`,`, `;`, `\\t`, `|`)  **Sources:** [docling/datamodel/document.py441-468](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L441-L468)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0014",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "CSV Detection"
      ],
      "heading_text": "CSV Detection",
      "token_count": 111,
      "char_count": 410,
      "start_char": 15551,
      "end_char": 15961,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.565,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.970690",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 111,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "CSV Detection",
      "chunk_hash": "29b0a7a859c7c9e3",
      "content_digest": "29b0a7a859c7c9e3",
      "chunk_length": 410,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "csv",
          "docling",
          "detection",
          "sniffer",
          "detect",
          "datamodel",
          "document",
          "uses",
          "python",
          "characteristics",
          "rules",
          "check",
          "for",
          "newline",
          "presence",
          "multi",
          "line",
          "requirement",
          "apply",
          "sniff"
        ],
        "term_weights": [
          {
            "term": "csv",
            "tf": 4,
            "weight": 0.086957
          },
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.086957
          },
          {
            "term": "detection",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "sniffer",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "detect",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "datamodel",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "python",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "characteristics",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "rules",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "check",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "newline",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "presence",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "multi",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "line",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "requirement",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "apply",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "sniff",
            "tf": 1,
            "weight": 0.021739
          }
        ],
        "unique_terms": 35,
        "total_terms": 46
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "CSV Detection",
        "characteristics",
        "csv",
        "datamodel",
        "detect",
        "detection",
        "docling",
        "document",
        "python",
        "sniffer",
        "uses"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.565,
      "overall": 0.6883333333333334
    }
  },
  {
    "text": "#### Scientific Format Detection  For XML-based scientific formats, the system inspects DOCTYPE declarations:  **USPTO Patent Detection:**  - Checks for DOCTYPE containing: `us-patent-application-v4`, `us-patent-grant-v4`, `us-grant-025`, `patent-application-publication` - Also detects plain text format starting with `PATN\\r\\n`  **JATS Article Detection:**  - Checks for DOCTYPE containing: `JATS-journalpublishing`, `JATS-archive`  **Sources:** [docling/datamodel/document.py340-374](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L340-L374)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0015",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Scientific Format Detection"
      ],
      "heading_text": "Scientific Format Detection",
      "token_count": 152,
      "char_count": 584,
      "start_char": 15963,
      "end_char": 16547,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5182608695652174,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.971148",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 152,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Scientific Format Detection",
      "chunk_hash": "c28235f563c567e6",
      "content_digest": "c28235f563c567e6",
      "chunk_length": 584,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "patent",
          "docling",
          "detection",
          "for",
          "doctype",
          "jats",
          "scientific",
          "format",
          "checks",
          "containing",
          "application",
          "grant",
          "datamodel",
          "document",
          "xml",
          "based",
          "formats",
          "the",
          "system",
          "inspects"
        ],
        "term_weights": [
          {
            "term": "patent",
            "tf": 4,
            "weight": 0.059701
          },
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.059701
          },
          {
            "term": "detection",
            "tf": 3,
            "weight": 0.044776
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.044776
          },
          {
            "term": "doctype",
            "tf": 3,
            "weight": 0.044776
          },
          {
            "term": "jats",
            "tf": 3,
            "weight": 0.044776
          },
          {
            "term": "scientific",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "format",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "checks",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "containing",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "application",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "grant",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "datamodel",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "xml",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "based",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "formats",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "system",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "inspects",
            "tf": 1,
            "weight": 0.014925
          }
        ],
        "unique_terms": 45,
        "total_terms": 67
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Scientific Format Detection",
        "checks",
        "containing",
        "detection",
        "docling",
        "doctype",
        "for",
        "format",
        "jats",
        "patent",
        "scientific"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5182608695652174,
      "overall": 0.7394202898550724
    }
  },
  {
    "text": "## CLI Format Configuration  The CLI provides extensive control over format routing through command-line arguments: ``` ``` **Key CLI Options:**  | Option          | Purpose                      | Example                      | | --------------- | ---------------------------- | ---------------------------- | | `--from`        | Filter allowed input formats | `--from pdf --from docx`     | | `--pipeline`    | Select processing pipeline   | `--pipeline vlm`             | | `--pdf-backend` | Choose PDF backend           | `--pdf-backend dlparse_v4`   | | `--ocr-engine`  | Select OCR engine            | `--ocr-engine tesseract`     | | `--vlm-model`   | Choose VLM model             | `--vlm-model granitedocling` |  **Sources:** [docling/cli/main.py308-697](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L308-L697)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0016",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "CLI Format Configuration"
      ],
      "heading_text": "CLI Format Configuration",
      "token_count": 200,
      "char_count": 850,
      "start_char": 16549,
      "end_char": 17399,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6720224719101123,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.973376",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 200,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "CLI Format Configuration",
      "chunk_hash": "2f8928e7475f15d3",
      "content_digest": "2f8928e7475f15d3",
      "chunk_length": 850,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "cli",
          "pdf",
          "vlm",
          "docling",
          "from",
          "pipeline",
          "backend",
          "ocr",
          "engine",
          "model",
          "format",
          "select",
          "choose",
          "main",
          "configuration",
          "the",
          "provides",
          "extensive",
          "control",
          "over"
        ],
        "term_weights": [
          {
            "term": "cli",
            "tf": 5,
            "weight": 0.063291
          },
          {
            "term": "pdf",
            "tf": 4,
            "weight": 0.050633
          },
          {
            "term": "vlm",
            "tf": 4,
            "weight": 0.050633
          },
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.050633
          },
          {
            "term": "from",
            "tf": 3,
            "weight": 0.037975
          },
          {
            "term": "pipeline",
            "tf": 3,
            "weight": 0.037975
          },
          {
            "term": "backend",
            "tf": 3,
            "weight": 0.037975
          },
          {
            "term": "ocr",
            "tf": 3,
            "weight": 0.037975
          },
          {
            "term": "engine",
            "tf": 3,
            "weight": 0.037975
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.037975
          },
          {
            "term": "format",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "select",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "choose",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "main",
            "tf": 2,
            "weight": 0.025316
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.012658
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.012658
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.012658
          },
          {
            "term": "extensive",
            "tf": 1,
            "weight": 0.012658
          },
          {
            "term": "control",
            "tf": 1,
            "weight": 0.012658
          },
          {
            "term": "over",
            "tf": 1,
            "weight": 0.012658
          }
        ],
        "unique_terms": 50,
        "total_terms": 79
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "CLI Format Configuration",
        "backend",
        "cli",
        "docling",
        "engine",
        "from",
        "model",
        "ocr",
        "pdf",
        "pipeline",
        "vlm"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6720224719101123,
      "overall": 0.7906741573033708
    }
  },
  {
    "text": "### Pipeline-Specific Routing  The CLI constructs different `FormatOption` configurations based on the `--pipeline` argument:  **Standard Pipeline** ([docling/cli/main.py619-697](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L619-L697)):  - Creates `PdfPipelineOptions` with OCR, table, and enrichment settings - Instantiates `PdfFormatOption` with selected backend - Creates `ConvertPipelineOptions` for simple formats (DOCX, HTML, etc.)  **VLM Pipeline** ([docling/cli/main.py699-748](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L699-L748)):  - Creates `VlmPipelineOptions` with selected VLM model - Routes only PDF and IMAGE formats - Automatically selects MLX backend on Darwin platform if available  **ASR Pipeline** ([docling/cli/main.py750-781](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L750-L781)):  - Creates `AsrPipelineOptions` with selected Whisper model - Routes only AUDIO format - Uses `NoOpBackend` since audio parsing happens in pipeline",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0017",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Pipeline-Specific Routing"
      ],
      "heading_text": "Pipeline-Specific Routing",
      "token_count": 257,
      "char_count": 1053,
      "start_char": 17403,
      "end_char": 18456,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5019565217391304,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.974166",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 257,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Pipeline-Specific Routing",
      "chunk_hash": "dbb85fef7cc83539",
      "content_digest": "dbb85fef7cc83539",
      "chunk_length": 1053,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "cli",
          "pipeline",
          "main",
          "creates",
          "with",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "selected",
          "the",
          "and",
          "backend",
          "formats",
          "vlm",
          "model",
          "routes"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 12,
            "weight": 0.092308
          },
          {
            "term": "cli",
            "tf": 7,
            "weight": 0.053846
          },
          {
            "term": "pipeline",
            "tf": 6,
            "weight": 0.046154
          },
          {
            "term": "main",
            "tf": 6,
            "weight": 0.046154
          },
          {
            "term": "creates",
            "tf": 4,
            "weight": 0.030769
          },
          {
            "term": "with",
            "tf": 4,
            "weight": 0.030769
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.023077
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.023077
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.023077
          },
          {
            "term": "project",
            "tf": 3,
            "weight": 0.023077
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.023077
          },
          {
            "term": "f7244a43",
            "tf": 3,
            "weight": 0.023077
          },
          {
            "term": "selected",
            "tf": 3,
            "weight": 0.023077
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.015385
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.015385
          },
          {
            "term": "backend",
            "tf": 2,
            "weight": 0.015385
          },
          {
            "term": "formats",
            "tf": 2,
            "weight": 0.015385
          },
          {
            "term": "vlm",
            "tf": 2,
            "weight": 0.015385
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.015385
          },
          {
            "term": "routes",
            "tf": 2,
            "weight": 0.015385
          }
        ],
        "unique_terms": 74,
        "total_terms": 130
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Pipeline-Specific Routing",
        "cli",
        "com",
        "creates",
        "docling",
        "github",
        "https",
        "main",
        "pipeline",
        "project",
        "with"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5019565217391304,
      "overall": 0.7006521739130435
    }
  },
  {
    "text": "## Complete Detection and Routing Flow ``` ``` **Sources:** [docling/document\\_converter.py313-350](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L313-L350) [docling/datamodel/document.py241-279](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L241-L279)",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0018",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Complete Detection and Routing Flow"
      ],
      "heading_text": "Complete Detection and Routing Flow",
      "token_count": 86,
      "char_count": 334,
      "start_char": 18458,
      "end_char": 18792,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "code_block",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.974932",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 86,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Complete Detection and Routing Flow",
      "chunk_hash": "58fe0b3c72d32291",
      "content_digest": "58fe0b3c72d32291",
      "chunk_length": 334,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "document",
          "converter",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "datamodel",
          "complete",
          "detection",
          "and",
          "routing",
          "flow",
          "sources",
          "py313",
          "350",
          "l313",
          "l350"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 8,
            "weight": 0.190476
          },
          {
            "term": "document",
            "tf": 4,
            "weight": 0.095238
          },
          {
            "term": "converter",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "datamodel",
            "tf": 2,
            "weight": 0.047619
          },
          {
            "term": "complete",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "detection",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "routing",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "flow",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "py313",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "350",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "l313",
            "tf": 1,
            "weight": 0.02381
          },
          {
            "term": "l350",
            "tf": 1,
            "weight": 0.02381
          }
        ],
        "unique_terms": 24,
        "total_terms": 42
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Complete Detection and Routing Flow",
        "blob",
        "com",
        "converter",
        "datamodel",
        "docling",
        "document",
        "f7244a43",
        "github",
        "https",
        "project"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5627272727272727,
      "overall": 0.6875757575757575
    }
  },
  {
    "text": "## Error Handling and Validation  The format detection system includes robust error handling:  **Invalid Format Handling:**  - If detected format is not in `allowed_formats`, creates `ConversionResult` with status `SKIPPED` - If no backend can be selected, uses `_DummyBackend` to mark document as invalid - Logs error messages with detected format and allowed formats for debugging  **Backend Validation:**  - Each backend implements `is_valid()` to verify successful initialization - If backend initialization fails, `InputDocument.valid` is set to `False` - Invalid documents are caught before pipeline execution  **Sources:** [docling/datamodel/document.py251-278](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L251-L278) [docling/document\\_converter.py380-432](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L380-L432)  Dismiss  Refresh this wiki  This wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "8f7a17e76b4d-0019",
      "source_file": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "file_extension": ".md",
      "chunk_index": 19,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Error Handling and Validation"
      ],
      "heading_text": "Error Handling and Validation",
      "token_count": 220,
      "char_count": 1004,
      "start_char": 18796,
      "end_char": 19800,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5142718446601942,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T16:07:05.975498",
      "model_aware_chunking": true,
      "within_token_limit": true,
      "estimated_tokens": 220,
      "document_id": "8f7a17e76b4d",
      "document_name": "_docling-project_docling_2.4-format-detection-and-routing",
      "source_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_filename": "_docling-project_docling_2.4-format-detection-and-routing.md",
      "source_directory": "Docs\\Docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_2.4-format-detection-and-routing.md",
      "hierarchy_path": "Error Handling and Validation",
      "chunk_hash": "8640a050032fd2e0",
      "content_digest": "8640a050032fd2e0",
      "chunk_length": 1004,
      "payload_version": "1.3",
      "collection_hints": [
        "docling"
      ],
      "target_model": "jina-code-embeddings-1.5b",
      "chunker_version": "v5_unified",
      "chunk_size_tokens": 26214,
      "chunk_overlap_tokens": 2621,
      "chunk_size_chars": 104856,
      "chunk_overlap_chars": 10484,
      "safety_margin": 0.8,
      "model_hf_id": "jinaai/jina-code-embeddings-1.5b",
      "model_max_tokens": 32768,
      "model_vector_dim": 1536,
      "matryoshka_dimension": 1536,
      "recommended_batch_size": 16,
      "backend": "pytorch",
      "memory_efficient": true,
      "query_prefix": "Encode this code snippet for semantic retrieval: ",
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "document",
          "format",
          "backend",
          "error",
          "handling",
          "invalid",
          "and",
          "validation",
          "detected",
          "allowed",
          "formats",
          "with",
          "valid",
          "initialization",
          "datamodel",
          "https",
          "github",
          "com",
          "project"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 8,
            "weight": 0.067797
          },
          {
            "term": "document",
            "tf": 5,
            "weight": 0.042373
          },
          {
            "term": "format",
            "tf": 4,
            "weight": 0.033898
          },
          {
            "term": "backend",
            "tf": 4,
            "weight": 0.033898
          },
          {
            "term": "error",
            "tf": 3,
            "weight": 0.025424
          },
          {
            "term": "handling",
            "tf": 3,
            "weight": 0.025424
          },
          {
            "term": "invalid",
            "tf": 3,
            "weight": 0.025424
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "validation",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "detected",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "allowed",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "formats",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "valid",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "initialization",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "datamodel",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.016949
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.016949
          }
        ],
        "unique_terms": 76,
        "total_terms": 118
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Error Handling and Validation",
        "and",
        "backend",
        "detected",
        "docling",
        "document",
        "error",
        "format",
        "handling",
        "invalid",
        "validation"
      ],
      "collection_name": "Docling"
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5142718446601942,
      "overall": 0.7047572815533979
    }
  }
]