[
  {
    "text": "## Purpose and Scope\n\nThis page documents how Docling integrates with AI development frameworks, vector databases, data processing pipelines, and agentic systems. It covers the architectural patterns, export formats, and protocols that enable seamless integration with the broader GenAI ecosystem.\n\nFor information about export format options and serialization, see [Export Formats](docling-project/docling/8.1-export-formats.md). For chunking strategies used in retrieval pipelines, see [Document Chunking](docling-project/docling/8.2-document-chunking.md).\n\n---",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Purpose and Scope"
      ],
      "heading_text": "Purpose and Scope",
      "token_count": 110,
      "char_count": 563,
      "start_char": 5012,
      "end_char": 5575,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5464516129032259,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.778622",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Purpose and Scope",
      "chunk_hash": "c44197b206ce922d",
      "content_digest": "c44197b206ce922d",
      "chunk_length": 563,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "and",
          "export",
          "formats",
          "chunking",
          "with",
          "pipelines",
          "the",
          "for",
          "see",
          "project",
          "document",
          "purpose",
          "scope",
          "this",
          "page",
          "documents",
          "how",
          "integrates",
          "development"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 5,
            "weight": 0.074627
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.059701
          },
          {
            "term": "export",
            "tf": 4,
            "weight": 0.059701
          },
          {
            "term": "formats",
            "tf": 3,
            "weight": 0.044776
          },
          {
            "term": "chunking",
            "tf": 3,
            "weight": 0.044776
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "pipelines",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "see",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.029851
          },
          {
            "term": "purpose",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "scope",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "page",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "documents",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "how",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "integrates",
            "tf": 1,
            "weight": 0.014925
          },
          {
            "term": "development",
            "tf": 1,
            "weight": 0.014925
          }
        ],
        "unique_terms": 46,
        "total_terms": 67
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Purpose and Scope",
        "and",
        "chunking",
        "docling",
        "export",
        "for",
        "formats",
        "pipelines",
        "see",
        "the",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5464516129032259,
      "overall": 0.6821505376344086
    }
  },
  {
    "text": "## Integration Architecture Overview\n\nDocling's integration strategy is built on three foundational principles:\n\n1. **Unified Representation**: The `DoclingDocument` class provides a consistent document model that all downstream systems consume\n2. **Multiple Export Formats**: Support for Markdown, JSON, HTML, and DocTags enables compatibility with diverse framework requirements\n3. **Standardized Protocols**: MCP (Model Context Protocol) support for agentic AI systems\n\n```\n```\n\n**Diagram: Docling Integration Architecture**\n\nSources: [pyproject.toml1-280](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L1-L280) [README.md109-113](https://github.com/docling-project/docling/blob/f7244a43/README.md#L109-L113) [mkdocs.yml128-155](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L128-L155)\n\n---",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration Architecture Overview"
      ],
      "heading_text": "Integration Architecture Overview",
      "token_count": 200,
      "char_count": 841,
      "start_char": 5577,
      "end_char": 6418,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5639130434782609,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.779786",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Integration Architecture Overview",
      "chunk_hash": "a9cd03f97ff3c651",
      "content_digest": "a9cd03f97ff3c651",
      "chunk_length": 841,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "integration",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "architecture",
          "model",
          "systems",
          "support",
          "for",
          "pyproject",
          "readme",
          "mkdocs",
          "overview",
          "strategy",
          "built",
          "three"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 8,
            "weight": 0.081633
          },
          {
            "term": "integration",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "project",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "f7244a43",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "architecture",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "systems",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "support",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "mkdocs",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "overview",
            "tf": 1,
            "weight": 0.010204
          },
          {
            "term": "strategy",
            "tf": 1,
            "weight": 0.010204
          },
          {
            "term": "built",
            "tf": 1,
            "weight": 0.010204
          },
          {
            "term": "three",
            "tf": 1,
            "weight": 0.010204
          }
        ],
        "unique_terms": 69,
        "total_terms": 98
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration Architecture Overview",
        "architecture",
        "blob",
        "com",
        "docling",
        "f7244a43",
        "github",
        "https",
        "integration",
        "model",
        "project"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5639130434782609,
      "overall": 0.6879710144927534
    }
  },
  {
    "text": "## Model Context Protocol (MCP) Integration\n\nThe Model Context Protocol (MCP) is an emerging standard for connecting AI applications to external tools and data sources. Docling provides a dedicated MCP server that enables agentic AI systems to access document processing capabilities.",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Context Protocol (MCP) Integration"
      ],
      "heading_text": "Model Context Protocol (MCP) Integration",
      "token_count": 52,
      "char_count": 284,
      "start_char": 8016,
      "end_char": 8300,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5460975609756098,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.783336",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Model Context Protocol (MCP) Integration",
      "chunk_hash": "834028b3184ad1cc",
      "content_digest": "834028b3184ad1cc",
      "chunk_length": 284,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "mcp",
          "model",
          "context",
          "protocol",
          "integration",
          "the",
          "emerging",
          "standard",
          "for",
          "connecting",
          "applications",
          "external",
          "tools",
          "and",
          "data",
          "sources",
          "docling",
          "provides",
          "dedicated",
          "server"
        ],
        "term_weights": [
          {
            "term": "mcp",
            "tf": 3,
            "weight": 0.090909
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "context",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "protocol",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "emerging",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "standard",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "connecting",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "applications",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "external",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "tools",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "data",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "docling",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "dedicated",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "server",
            "tf": 1,
            "weight": 0.030303
          }
        ],
        "unique_terms": 28,
        "total_terms": 33
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Context Protocol (MCP) Integration",
        "connecting",
        "context",
        "emerging",
        "for",
        "integration",
        "mcp",
        "model",
        "protocol",
        "standard",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5460975609756098,
      "overall": 0.7486991869918699
    }
  },
  {
    "text": "### Configuration Example\n\nMCP clients connect to the Docling server through a configuration file specifying the command and arguments:\n\n```\n```\n\nThis configuration is used in:\n\n- **Claude Desktop**: `claude_desktop_config.json`\n- **LM Studio**: `mcp.json`\n- **Custom clients**: Any MCP-compatible client\n\nThe MCP server exposes Docling's document conversion and extraction capabilities as tools that AI agents can invoke autonomously. This enables use cases such as:\n\n- Document Q\\&A with automatic parsing\n- Multi-document synthesis workflows\n- Automated data extraction from forms and tables\n- Document-based reasoning chains\n\nSources: [docs/usage/mcp.md1-31](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/mcp.md#L1-L31) [README.md41-42](https://github.com/docling-project/docling/blob/f7244a43/README.md#L41-L42)\n\n---",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Configuration Example"
      ],
      "heading_text": "Configuration Example",
      "token_count": 199,
      "char_count": 843,
      "start_char": 8382,
      "end_char": 9225,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.73,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.784434",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Configuration Example",
      "chunk_hash": "723b0f396fb52b59",
      "content_digest": "723b0f396fb52b59",
      "chunk_length": 843,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "mcp",
          "docling",
          "document",
          "configuration",
          "the",
          "and",
          "clients",
          "server",
          "this",
          "claude",
          "desktop",
          "json",
          "extraction",
          "docs",
          "usage",
          "https",
          "github",
          "com",
          "project",
          "blob"
        ],
        "term_weights": [
          {
            "term": "mcp",
            "tf": 6,
            "weight": 0.057692
          },
          {
            "term": "docling",
            "tf": 6,
            "weight": 0.057692
          },
          {
            "term": "document",
            "tf": 4,
            "weight": 0.038462
          },
          {
            "term": "configuration",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.028846
          },
          {
            "term": "clients",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "server",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "claude",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "desktop",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "extraction",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "docs",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "usage",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.019231
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.019231
          }
        ],
        "unique_terms": 69,
        "total_terms": 104
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Configuration Example",
        "and",
        "claude",
        "clients",
        "configuration",
        "docling",
        "document",
        "mcp",
        "server",
        "the",
        "this"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.73,
      "overall": 0.7433333333333332
    }
  },
  {
    "text": "### LangChain Integration\n\nLangChain integration leverages Docling's Markdown export and chunking capabilities for RAG (Retrieval-Augmented Generation) pipelines.\n\n**Integration Pattern:**\n\n1. Convert documents using `DocumentConverter`\n2. Export to Markdown with `export_to_markdown()`\n3. Apply chunking via `HybridChunker` from `docling-core`\n4. Create LangChain `Document` objects\n5. Index in vector store (Milvus, Qdrant, etc.)\n\n```\n```\n\n**Diagram: LangChain RAG Pipeline with Docling**\n\n**Key Dependencies:**\n\n- `langchain-huggingface>=0.0.3` - Embedding models\n- `langchain-milvus~=0.1` - Milvus vector store\n- `langchain-text-splitters~=0.2` - Text splitting utilities\n\nSources: [pyproject.toml144-146](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L144-L146) [mkdocs.yml134](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L134-L134)\n\n---",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "LangChain Integration"
      ],
      "heading_text": "LangChain Integration",
      "token_count": 250,
      "char_count": 892,
      "start_char": 9257,
      "end_char": 10149,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.527037037037037,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.785701",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "LangChain Integration",
      "chunk_hash": "99f1f647080a35be",
      "content_digest": "99f1f647080a35be",
      "chunk_length": 892,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "langchain",
          "docling",
          "integration",
          "markdown",
          "export",
          "milvus",
          "chunking",
          "rag",
          "with",
          "vector",
          "store",
          "text",
          "pyproject",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "mkdocs"
        ],
        "term_weights": [
          {
            "term": "langchain",
            "tf": 7,
            "weight": 0.071429
          },
          {
            "term": "docling",
            "tf": 7,
            "weight": 0.071429
          },
          {
            "term": "integration",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "markdown",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "export",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "milvus",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "chunking",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "rag",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "vector",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "store",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "mkdocs",
            "tf": 2,
            "weight": 0.020408
          }
        ],
        "unique_terms": 63,
        "total_terms": 98
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "LangChain Integration",
        "chunking",
        "docling",
        "export",
        "integration",
        "langchain",
        "markdown",
        "milvus",
        "rag",
        "vector",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.527037037037037,
      "overall": 0.6423456790123456
    }
  },
  {
    "text": "### Haystack Integration  Haystack integration uses Docling as a document converter within Haystack pipelines, enabling preprocessing before RAG or search operations. **Typical Haystack Pipeline:**  1. `DocumentConverter` as preprocessing step 2. Export to structured format 3. Pass to Haystack `Pipeline` 4. Route to retriever or generator components  **Supported Vector Stores:**  - OpenSearch - Azure Cognitive Search  Sources: [mkdocs.yml133](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L133-L133) [mkdocs.yml123](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L123-L123)  ---",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Haystack Integration"
      ],
      "heading_text": "Haystack Integration",
      "token_count": 155,
      "char_count": 625,
      "start_char": 11044,
      "end_char": 11669,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5289830508474576,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.787546",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Haystack Integration",
      "chunk_hash": "683d06371bd514ad",
      "content_digest": "683d06371bd514ad",
      "chunk_length": 625,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "haystack",
          "docling",
          "mkdocs",
          "integration",
          "preprocessing",
          "search",
          "pipeline",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "yml",
          "l133",
          "l123",
          "uses",
          "document",
          "converter",
          "within"
        ],
        "term_weights": [
          {
            "term": "haystack",
            "tf": 5,
            "weight": 0.072464
          },
          {
            "term": "docling",
            "tf": 5,
            "weight": 0.072464
          },
          {
            "term": "mkdocs",
            "tf": 4,
            "weight": 0.057971
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "preprocessing",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "search",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "pipeline",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "yml",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "l133",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "l123",
            "tf": 2,
            "weight": 0.028986
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "converter",
            "tf": 1,
            "weight": 0.014493
          },
          {
            "term": "within",
            "tf": 1,
            "weight": 0.014493
          }
        ],
        "unique_terms": 45,
        "total_terms": 69
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Haystack Integration",
        "com",
        "docling",
        "github",
        "haystack",
        "https",
        "integration",
        "mkdocs",
        "pipeline",
        "preprocessing",
        "search"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5289830508474576,
      "overall": 0.6763276836158192
    }
  },
  {
    "text": "## Data Processing Framework Integrations\n\nBeyond real-time RAG, Docling integrates with data processing frameworks for batch document processing, training data preparation, and enterprise workflows.",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Data Processing Framework Integrations"
      ],
      "heading_text": "Data Processing Framework Integrations",
      "token_count": 33,
      "char_count": 199,
      "start_char": 13898,
      "end_char": 14097,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.791019",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Data Processing Framework Integrations",
      "chunk_hash": "2bf8ca538e49e2da",
      "content_digest": "2bf8ca538e49e2da",
      "chunk_length": 199,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "data",
          "processing",
          "framework",
          "integrations",
          "beyond",
          "real",
          "time",
          "rag",
          "docling",
          "integrates",
          "with",
          "frameworks",
          "for",
          "batch",
          "document",
          "training",
          "preparation",
          "and",
          "enterprise",
          "workflows"
        ],
        "term_weights": [
          {
            "term": "data",
            "tf": 3,
            "weight": 0.125
          },
          {
            "term": "processing",
            "tf": 3,
            "weight": 0.125
          },
          {
            "term": "framework",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "integrations",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "beyond",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "real",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "time",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "docling",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "integrates",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "frameworks",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "batch",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "training",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "preparation",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "enterprise",
            "tf": 1,
            "weight": 0.041667
          },
          {
            "term": "workflows",
            "tf": 1,
            "weight": 0.041667
          }
        ],
        "unique_terms": 20,
        "total_terms": 24
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Data Processing Framework Integrations",
        "beyond",
        "data",
        "docling",
        "framework",
        "integrates",
        "integrations",
        "processing",
        "rag",
        "real",
        "time"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5525,
      "overall": 0.7508333333333334
    }
  },
  {
    "text": "### Data Prep Kit (DPK)\n\nData Prep Kit is a framework for large-scale data preparation pipelines. Docling integration enables:\n\n- **Batch Processing**: Convert thousands of documents in parallel\n- **Transform Pipelines**: Clean, chunk, and tokenize documents\n- **Training Data Generation**: Prepare datasets for model fine-tuning\n\n**Example Pipeline:**\n\n```\nIngest → Docling Convert → DPK Transform → Chunk → Tokenize → Store\n```\n\nSources: [mkdocs.yml140](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L140-L140) [mkdocs.yml119](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L119-L119)\n\n---",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Data Prep Kit (DPK)"
      ],
      "heading_text": "Data Prep Kit (DPK)",
      "token_count": 158,
      "char_count": 634,
      "start_char": 14099,
      "end_char": 14733,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.7127272727272728,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.791857",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Data Prep Kit (DPK)",
      "chunk_hash": "3c4ff6bd8fb96a5f",
      "content_digest": "3c4ff6bd8fb96a5f",
      "chunk_length": 634,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "data",
          "mkdocs",
          "prep",
          "kit",
          "dpk",
          "for",
          "pipelines",
          "convert",
          "documents",
          "transform",
          "chunk",
          "tokenize",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "yml"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 6,
            "weight": 0.076923
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.051282
          },
          {
            "term": "mkdocs",
            "tf": 4,
            "weight": 0.051282
          },
          {
            "term": "prep",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "kit",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "dpk",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "pipelines",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "convert",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "documents",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "transform",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "chunk",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "tokenize",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "yml",
            "tf": 2,
            "weight": 0.025641
          }
        ],
        "unique_terms": 48,
        "total_terms": 78
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": true,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Data Prep Kit (DPK)",
        "convert",
        "data",
        "docling",
        "documents",
        "dpk",
        "for",
        "kit",
        "mkdocs",
        "pipelines",
        "prep"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.7127272727272728,
      "overall": 0.7375757575757574
    }
  },
  {
    "text": "### Common Integration Pattern\n\nMost integrations follow this general structure:\n\n1. **Initialization**: Create `DocumentConverter` with appropriate options\n2. **Conversion**: Call `convert()` or `convert_all()` for batch processing\n3. **Export**: Use `export_to_markdown()`, `export_to_json()`, or iterate over elements\n4. **Transform**: Apply framework-specific transformations (chunking, embedding, etc.)\n5. **Downstream Processing**: Pass to framework-specific components",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0020",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 20,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Common Integration Pattern"
      ],
      "heading_text": "Common Integration Pattern",
      "token_count": 98,
      "char_count": 475,
      "start_char": 16159,
      "end_char": 16634,
      "semantic_score": 0.7,
      "structural_score": 0.7,
      "retrieval_quality": 0.578,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.794759",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Common Integration Pattern",
      "chunk_hash": "196fd428036afcb2",
      "content_digest": "196fd428036afcb2",
      "chunk_length": 475,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "export",
          "convert",
          "processing",
          "framework",
          "specific",
          "common",
          "integration",
          "pattern",
          "most",
          "integrations",
          "follow",
          "this",
          "general",
          "structure",
          "initialization",
          "create",
          "documentconverter",
          "with",
          "appropriate",
          "options"
        ],
        "term_weights": [
          {
            "term": "export",
            "tf": 3,
            "weight": 0.065217
          },
          {
            "term": "convert",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "processing",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "framework",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "specific",
            "tf": 2,
            "weight": 0.043478
          },
          {
            "term": "common",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "pattern",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "most",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "integrations",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "follow",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "general",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "structure",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "initialization",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "create",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "documentconverter",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "appropriate",
            "tf": 1,
            "weight": 0.021739
          },
          {
            "term": "options",
            "tf": 1,
            "weight": 0.021739
          }
        ],
        "unique_terms": 40,
        "total_terms": 46
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Common Integration Pattern",
        "common",
        "convert",
        "export",
        "framework",
        "integration",
        "integrations",
        "most",
        "pattern",
        "processing",
        "specific"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7,
      "retrieval_quality": 0.578,
      "overall": 0.6593333333333332
    }
  },
  {
    "text": "### Code Structure Example\n\n```\n```",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0021",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 21,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Code Structure Example"
      ],
      "heading_text": "Code Structure Example",
      "token_count": 8,
      "char_count": 35,
      "start_char": 16636,
      "end_char": 16671,
      "semantic_score": 0.8,
      "structural_score": 0.7,
      "retrieval_quality": 0.54,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.794980",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Code Structure Example",
      "chunk_hash": "a034f77b454d9008",
      "content_digest": "a034f77b454d9008",
      "chunk_length": 35,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "code",
          "structure",
          "example"
        ],
        "term_weights": [
          {
            "term": "code",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "structure",
            "tf": 1,
            "weight": 0.333333
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.333333
          }
        ],
        "unique_terms": 3,
        "total_terms": 3
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Code Structure Example",
        "code",
        "example",
        "structure"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.7,
      "retrieval_quality": 0.54,
      "overall": 0.68
    }
  },
  {
    "text": "## Installation for Integrations  To use Docling with specific integrations, install with appropriate extras:  | Extra         | Frameworks Enabled                      | Install Command                  | | ------------- | --------------------------------------- | -------------------------------- | | `[vlm]`       | Vision models (Transformers, MLX, vLLM) | `pip install docling[vlm]`       | | `[easyocr]`   | EasyOCR engine                          | `pip install docling[easyocr]`   | | `[tesserocr]` | Tesseract OCR                           | `pip install docling[tesserocr]` | | `[asr]`       | Audio transcription (Whisper)           | `pip install docling[asr]`       |  **Example Dependencies in `pyproject.toml`:**  - VLM support: `transformers>=4.46.0`, `accelerate>=1.2.1`, `mlx-vlm>=0.3.0`, `vllm>=0.10.0` - Chunking: `docling-core[chunking]>=2.48.2`  Sources: [pyproject.toml91-111](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L91-L111) [README.md56-65](https://github.com/docling-project/docling/blob/f7244a43/README.md#L56-L65)  ---",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0024",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Installation for Integrations"
      ],
      "heading_text": "Installation for Integrations",
      "token_count": 301,
      "char_count": 1079,
      "start_char": 18267,
      "end_char": 19346,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6826913043478262,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "table_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.798970",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Installation for Integrations",
      "chunk_hash": "262b4cac56e958d0",
      "content_digest": "262b4cac56e958d0",
      "chunk_length": 1079,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "install",
          "vlm",
          "pip",
          "easyocr",
          "pyproject",
          "integrations",
          "with",
          "transformers",
          "mlx",
          "vllm",
          "tesserocr",
          "asr",
          "toml",
          "chunking",
          "https",
          "github",
          "com",
          "project",
          "blob"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 10,
            "weight": 0.107527
          },
          {
            "term": "install",
            "tf": 6,
            "weight": 0.064516
          },
          {
            "term": "vlm",
            "tf": 4,
            "weight": 0.043011
          },
          {
            "term": "pip",
            "tf": 4,
            "weight": 0.043011
          },
          {
            "term": "easyocr",
            "tf": 3,
            "weight": 0.032258
          },
          {
            "term": "pyproject",
            "tf": 3,
            "weight": 0.032258
          },
          {
            "term": "integrations",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "transformers",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "mlx",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "vllm",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "tesserocr",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "asr",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "toml",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "chunking",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.021505
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.021505
          }
        ],
        "unique_terms": 53,
        "total_terms": 93
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Installation for Integrations",
        "docling",
        "easyocr",
        "install",
        "integrations",
        "mlx",
        "pip",
        "pyproject",
        "transformers",
        "vlm",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6826913043478262,
      "overall": 0.7608971014492752
    }
  },
  {
    "text": "## Summary\n\nDocling's integration ecosystem is built on:\n\n1. **DoclingDocument**: Universal document representation\n2. **Flexible Export**: Multiple formats for different use cases\n3. **MCP Protocol**: Standard interface for agentic AI\n4. **Framework Adapters**: Native support for LangChain, LlamaIndex, Haystack\n5. **Chunking API**: Semantic document segmentation via `docling-core`\n6. **Batch Processing**: Efficient handling of document collections\n\nThe integration architecture prioritizes **modularity** (components can be mixed and matched), **extensibility** (new integrations follow established patterns), and **interoperability** (standard formats and protocols).\n\nFor specific integration examples, see the [Examples](docling-project/docling/7.3-usage-examples.md) section. For details on export format options, see [Export Formats](docling-project/docling/8.1-export-formats.md). For chunking strategies, see [Document Chunking](docling-project/docling/8.2-document-chunking.md).\n\nSources: [README.md1-161](https://github.com/docling-project/docling/blob/f7244a43/README.md#L1-L161) [docs/index.md1-70](https://github.com/docling-project/docling/blob/f7244a43/docs/index.md#L1-L70) [mkdocs.yml128-162](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L128-L162) [pyproject.toml1-280](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L1-L280)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0025",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 25,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Summary"
      ],
      "heading_text": "Summary",
      "token_count": 372,
      "char_count": 1495,
      "start_char": 19348,
      "end_char": 20843,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7673377049180329,
      "chunking_strategy": "hierarchical_balanced_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.801143",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "Summary",
      "chunk_hash": "7c3fd63a8659f3ba",
      "content_digest": "7c3fd63a8659f3ba",
      "chunk_length": 1495,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "project",
          "for",
          "document",
          "export",
          "formats",
          "chunking",
          "https",
          "github",
          "com",
          "blob",
          "f7244a43",
          "integration",
          "and",
          "examples",
          "see",
          "standard",
          "the",
          "readme",
          "md1"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 16,
            "weight": 0.091429
          },
          {
            "term": "project",
            "tf": 7,
            "weight": 0.04
          },
          {
            "term": "for",
            "tf": 6,
            "weight": 0.034286
          },
          {
            "term": "document",
            "tf": 5,
            "weight": 0.028571
          },
          {
            "term": "export",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "formats",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "chunking",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "https",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "github",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "com",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "blob",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "f7244a43",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "integration",
            "tf": 3,
            "weight": 0.017143
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.017143
          },
          {
            "term": "examples",
            "tf": 3,
            "weight": 0.017143
          },
          {
            "term": "see",
            "tf": 3,
            "weight": 0.017143
          },
          {
            "term": "standard",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "md1",
            "tf": 2,
            "weight": 0.011429
          }
        ],
        "unique_terms": 102,
        "total_terms": 175
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Summary",
        "chunking",
        "com",
        "docling",
        "document",
        "export",
        "for",
        "formats",
        "github",
        "https",
        "project"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7673377049180329,
      "overall": 0.7557792349726776
    }
  },
  {
    "text": "### On this page  - [Framework Integrations](#framework-integrations.md) - [Purpose and Scope](#purpose-and-scope.md) - [Integration Architecture Overview](#integration-architecture-overview.md) - [DoclingDocument as Integration Foundation](#doclingdocument-as-integration-foundation.md) - [Key Export Methods](#key-export-methods.md) - [Model Context Protocol (MCP) Integration](#model-context-protocol-mcp-integration.md) - [MCP Server Architecture](#mcp-server-architecture.md) - [Configuration Example](#configuration-example.md) - [AI Framework Integrations](#ai-framework-integrations.md) - [LangChain Integration](#langchain-integration.md) - [LlamaIndex Integration](#llamaindex-integration.md) - [Haystack Integration](#haystack-integration.md) - [Agentic AI Frameworks](#agentic-ai-frameworks.md) - [Vector Database Integrations](#vector-database-integrations.md) - [Supported Vector Databases](#supported-vector-databases.md) - [Data Processing Framework Integrations](#data-processing-framework-integrations.md) - [Data Prep Kit (DPK)](#data-prep-kit-dpk.md) - [InstructLab Integration](#instructlab-integration.md) - [Enterprise & Production Integrations](#enterprise-production-integrations.md) - [Integration Development Patterns](#integration-development-patterns.md) - [Common Integration Pattern](#common-integration-pattern.md) - [Code Structure Example](#code-structure-example.md) - [Export Format Selection](#export-format-selection.md) - [Environment Variables and Configuration](#environment-variables-and-configuration.md) - [Installation for Integrations](#installation-for-integrations.md) - [Summary](#summary.md)",
    "metadata": {
      "chunk_id": "dec6e5db51fc-0026",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "filename": "_docling-project_docling_8.3-framework-integrations.md",
      "file_extension": ".md",
      "chunk_index": 26,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 385,
      "char_count": 1641,
      "start_char": 20845,
      "end_char": 22486,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7313878504672897,
      "chunking_strategy": "hierarchical_balanced_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T09:13:46.802593",
      "document_id": "dec6e5db51fc",
      "document_name": "_docling-project_docling_8.3-framework-integrations",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8.3-framework-integrations.md",
      "source_filename": "_docling-project_docling_8.3-framework-integrations.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8.3-framework-integrations.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "687a509d44c5d0b5",
      "content_digest": "687a509d44c5d0b5",
      "chunk_length": 1641,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "integration",
          "integrations",
          "framework",
          "and",
          "architecture",
          "export",
          "mcp",
          "configuration",
          "example",
          "vector",
          "data",
          "purpose",
          "scope",
          "overview",
          "doclingdocument",
          "foundation",
          "key",
          "methods",
          "model",
          "context"
        ],
        "term_weights": [
          {
            "term": "integration",
            "tf": 18,
            "weight": 0.121622
          },
          {
            "term": "integrations",
            "tf": 12,
            "weight": 0.081081
          },
          {
            "term": "framework",
            "tf": 6,
            "weight": 0.040541
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.027027
          },
          {
            "term": "architecture",
            "tf": 4,
            "weight": 0.027027
          },
          {
            "term": "export",
            "tf": 4,
            "weight": 0.027027
          },
          {
            "term": "mcp",
            "tf": 4,
            "weight": 0.027027
          },
          {
            "term": "configuration",
            "tf": 4,
            "weight": 0.027027
          },
          {
            "term": "example",
            "tf": 4,
            "weight": 0.027027
          },
          {
            "term": "vector",
            "tf": 4,
            "weight": 0.027027
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.027027
          },
          {
            "term": "purpose",
            "tf": 2,
            "weight": 0.013514
          },
          {
            "term": "scope",
            "tf": 2,
            "weight": 0.013514
          },
          {
            "term": "overview",
            "tf": 2,
            "weight": 0.013514
          },
          {
            "term": "doclingdocument",
            "tf": 2,
            "weight": 0.013514
          },
          {
            "term": "foundation",
            "tf": 2,
            "weight": 0.013514
          },
          {
            "term": "key",
            "tf": 2,
            "weight": 0.013514
          },
          {
            "term": "methods",
            "tf": 2,
            "weight": 0.013514
          },
          {
            "term": "model",
            "tf": 2,
            "weight": 0.013514
          },
          {
            "term": "context",
            "tf": 2,
            "weight": 0.013514
          }
        ],
        "unique_terms": 52,
        "total_terms": 148
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "and",
        "architecture",
        "configuration",
        "example",
        "export",
        "framework",
        "integration",
        "integrations",
        "mcp",
        "vector"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7313878504672897,
      "overall": 0.7771292834890966
    }
  }
]