[
  {
    "text": "# Python SDK  Relevant source files  - [README.md](https://github.com/docling-project/docling/blob/f7244a43/README.md) - [docling/cli/main.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py) - [docling/datamodel/base\\_models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py) - [docling/datamodel/document.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py) - [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py) - [docling/document\\_converter.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py) - [docs/examples/minimal\\_vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docs/examples/minimal_vlm_pipeline.py) - [docs/index.md](https://github.com/docling-project/docling/blob/f7244a43/docs/index.md) - [docs/usage/index.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/index.md) - [docs/usage/mcp.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/mcp.md) - [docs/usage/vision\\_models.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/vision_models.md) - [mkdocs.yml](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml)  The Python SDK provides programmatic interfaces for document processing through Docling's document AI capabilities. The SDK exposes two primary classes for different use cases:  - **`DocumentConverter`**: Converts documents to the unified `DoclingDocument` format with comprehensive structure and content extraction - **`DocumentExtractor`**: Performs structured data extraction from documents using schema-based templates  This page provides an overview of both APIs and common integration patterns. For detailed documentation, see:  - [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md) - Full conversion API reference - [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md) - Structured extraction API reference - [Usage Examples](docling-project/docling/7.3-usage-examples.md) - Code examples and integration patterns  For command-line usage, see [Command Line Interface](docling-project/docling/6-command-line-interface.md).",
    "metadata": {
      "chunk_id": "f11b4365433a-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "filename": "_docling-project_docling_7-python-sdk.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Python SDK"
      ],
      "heading_text": "Python SDK",
      "token_count": 569,
      "char_count": 2347,
      "start_char": 0,
      "end_char": 2347,
      "semantic_score": 0.3904570937156677,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.9109375,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:40.425023",
      "document_id": "f11b4365433a",
      "document_name": "_docling-project_docling_7-python-sdk",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "source_filename": "_docling-project_docling_7-python-sdk.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "hierarchy_path": "Python SDK",
      "chunk_hash": "24731dc8380a91e4",
      "content_digest": "24731dc8380a91e4",
      "chunk_length": 2347,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "project",
          "https",
          "github",
          "com",
          "blob",
          "f7244a43",
          "docs",
          "usage",
          "datamodel",
          "document",
          "api",
          "examples",
          "models",
          "pipeline",
          "index",
          "for",
          "sdk",
          "the",
          "documentconverter"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 43,
            "weight": 0.151408
          },
          {
            "term": "project",
            "tf": 16,
            "weight": 0.056338
          },
          {
            "term": "https",
            "tf": 12,
            "weight": 0.042254
          },
          {
            "term": "github",
            "tf": 12,
            "weight": 0.042254
          },
          {
            "term": "com",
            "tf": 12,
            "weight": 0.042254
          },
          {
            "term": "blob",
            "tf": 12,
            "weight": 0.042254
          },
          {
            "term": "f7244a43",
            "tf": 12,
            "weight": 0.042254
          },
          {
            "term": "docs",
            "tf": 10,
            "weight": 0.035211
          },
          {
            "term": "usage",
            "tf": 9,
            "weight": 0.03169
          },
          {
            "term": "datamodel",
            "tf": 6,
            "weight": 0.021127
          },
          {
            "term": "document",
            "tf": 6,
            "weight": 0.021127
          },
          {
            "term": "api",
            "tf": 6,
            "weight": 0.021127
          },
          {
            "term": "examples",
            "tf": 5,
            "weight": 0.017606
          },
          {
            "term": "models",
            "tf": 4,
            "weight": 0.014085
          },
          {
            "term": "pipeline",
            "tf": 4,
            "weight": 0.014085
          },
          {
            "term": "index",
            "tf": 4,
            "weight": 0.014085
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.014085
          },
          {
            "term": "sdk",
            "tf": 3,
            "weight": 0.010563
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.010563
          },
          {
            "term": "documentconverter",
            "tf": 3,
            "weight": 0.010563
          }
        ],
        "unique_terms": 87,
        "total_terms": 284
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Python SDK",
        "blob",
        "com",
        "datamodel",
        "docling",
        "docs",
        "f7244a43",
        "github",
        "https",
        "project",
        "usage"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3904570937156677,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.9109375,
      "overall": 0.7337981979052225
    }
  },
  {
    "text": "## Integration with AI Frameworks  The SDK's `DoclingDocument` output integrates seamlessly with popular AI frameworks and RAG pipelines. **Framework Integration Pattern:** ``` ``` **LangChain Integration:** ``` ``` **LlamaIndex Integration:** ``` ``` **Document Chunking:**  Docling provides specialized chunkers for optimal RAG performance:  - `HybridChunker`: Combines semantic and structural chunking - `MetaChunker`: Preserves metadata and hierarchical structure - `DocChunks`: Native chunk representation with provenance  See [Chunking](docling-project/docling/8.2-document-chunking.md) for detailed chunking strategies and [Framework Integrations](docling-project/docling/8.3-framework-integrations.md) for specific framework examples. Sources: [docling\\_core.transforms.chunker](https://github.com/docling-project/docling/blob/f7244a43/docling_core.transforms.chunker) [examples/rag\\_langchain.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_langchain.ipynb) [examples/rag\\_llamaindex.ipynb](https://github.com/docling-project/docling/blob/f7244a43/examples/rag_llamaindex.ipynb)",
    "metadata": {
      "chunk_id": "f11b4365433a-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "filename": "_docling-project_docling_7-python-sdk.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration with AI Frameworks"
      ],
      "heading_text": "Integration with AI Frameworks",
      "token_count": 264,
      "char_count": 1116,
      "start_char": 0,
      "end_char": 1116,
      "semantic_score": 0.3932596445083618,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7140506329113924,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:40.428578",
      "document_id": "f11b4365433a",
      "document_name": "_docling-project_docling_7-python-sdk",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "source_filename": "_docling-project_docling_7-python-sdk.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "hierarchy_path": "Integration with AI Frameworks",
      "chunk_hash": "87ad66d64eee1c7c",
      "content_digest": "87ad66d64eee1c7c",
      "chunk_length": 1116,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "rag",
          "chunking",
          "project",
          "examples",
          "integration",
          "and",
          "framework",
          "ipynb",
          "with",
          "langchain",
          "llamaindex",
          "for",
          "https",
          "github",
          "com",
          "blob",
          "f7244a43",
          "frameworks",
          "document"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 13,
            "weight": 0.106557
          },
          {
            "term": "rag",
            "tf": 6,
            "weight": 0.04918
          },
          {
            "term": "chunking",
            "tf": 5,
            "weight": 0.040984
          },
          {
            "term": "project",
            "tf": 5,
            "weight": 0.040984
          },
          {
            "term": "examples",
            "tf": 5,
            "weight": 0.040984
          },
          {
            "term": "integration",
            "tf": 4,
            "weight": 0.032787
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.032787
          },
          {
            "term": "framework",
            "tf": 4,
            "weight": 0.032787
          },
          {
            "term": "ipynb",
            "tf": 4,
            "weight": 0.032787
          },
          {
            "term": "with",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "langchain",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "llamaindex",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "f7244a43",
            "tf": 3,
            "weight": 0.02459
          },
          {
            "term": "frameworks",
            "tf": 2,
            "weight": 0.016393
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.016393
          }
        ],
        "unique_terms": 57,
        "total_terms": 122
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration with AI Frameworks",
        "and",
        "chunking",
        "docling",
        "examples",
        "framework",
        "integration",
        "ipynb",
        "project",
        "rag",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3932596445083618,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7140506329113924,
      "overall": 0.6691034258065848
    }
  },
  {
    "text": "## DocumentConverter Overview  The `DocumentConverter` class is the primary interface for converting documents into the unified `DoclingDocument` format. It handles format detection, backend initialization, and pipeline orchestration automatically. **Basic Usage:** ``` ``` **Key Capabilities:** ``` ``` **Core Methods:**  | Method                            | Purpose                                           | Returns                      | | --------------------------------- | ------------------------------------------------- | ---------------------------- | | `convert(source)`                 | Convert single document from path, URL, or stream | `ConversionResult`           | | `convert_all(sources)`            | Convert multiple documents with streaming results | `Iterator[ConversionResult]` | | `convert_string(content, format)` | Convert in-memory string content (HTML, Markdown) | `ConversionResult`           | | `initialize_pipeline(format)`     | Pre-load pipeline for specified format            | None                         |  The `ConversionResult` object contains:  - `document`: The converted `DoclingDocument` - `status`: Success/failure status (`ConversionStatus`) - `errors`: List of errors if any occurred (`List[ErrorItem]`) - `pages`: Raw page-level data (`List[Page]`) - `timings`: Performance profiling data  See [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md) for detailed documentation of configuration options, error handling, and advanced usage patterns. Sources: [docling/document\\_converter.py184-433](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L184-L433)",
    "metadata": {
      "chunk_id": "f11b4365433a-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "filename": "_docling-project_docling_7-python-sdk.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "DocumentConverter Overview"
      ],
      "heading_text": "DocumentConverter Overview",
      "token_count": 320,
      "char_count": 1669,
      "start_char": 0,
      "end_char": 1669,
      "semantic_score": 0.39545655250549316,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5038431372549019,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:40.426073",
      "document_id": "f11b4365433a",
      "document_name": "_docling-project_docling_7-python-sdk",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "source_filename": "_docling-project_docling_7-python-sdk.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "hierarchy_path": "DocumentConverter Overview",
      "chunk_hash": "04d1a23aabbd8f19",
      "content_digest": "04d1a23aabbd8f19",
      "chunk_length": 1669,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "convert",
          "docling",
          "the",
          "format",
          "documentconverter",
          "document",
          "conversionresult",
          "for",
          "pipeline",
          "list",
          "documents",
          "doclingdocument",
          "and",
          "usage",
          "sources",
          "string",
          "content",
          "status",
          "errors",
          "page"
        ],
        "term_weights": [
          {
            "term": "convert",
            "tf": 6,
            "weight": 0.041379
          },
          {
            "term": "docling",
            "tf": 6,
            "weight": 0.041379
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.034483
          },
          {
            "term": "format",
            "tf": 5,
            "weight": 0.034483
          },
          {
            "term": "documentconverter",
            "tf": 4,
            "weight": 0.027586
          },
          {
            "term": "document",
            "tf": 4,
            "weight": 0.027586
          },
          {
            "term": "conversionresult",
            "tf": 4,
            "weight": 0.027586
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.02069
          },
          {
            "term": "pipeline",
            "tf": 3,
            "weight": 0.02069
          },
          {
            "term": "list",
            "tf": 3,
            "weight": 0.02069
          },
          {
            "term": "documents",
            "tf": 2,
            "weight": 0.013793
          },
          {
            "term": "doclingdocument",
            "tf": 2,
            "weight": 0.013793
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.013793
          },
          {
            "term": "usage",
            "tf": 2,
            "weight": 0.013793
          },
          {
            "term": "sources",
            "tf": 2,
            "weight": 0.013793
          },
          {
            "term": "string",
            "tf": 2,
            "weight": 0.013793
          },
          {
            "term": "content",
            "tf": 2,
            "weight": 0.013793
          },
          {
            "term": "status",
            "tf": 2,
            "weight": 0.013793
          },
          {
            "term": "errors",
            "tf": 2,
            "weight": 0.013793
          },
          {
            "term": "page",
            "tf": 2,
            "weight": 0.013793
          }
        ],
        "unique_terms": 98,
        "total_terms": 145
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "DocumentConverter Overview",
        "conversionresult",
        "convert",
        "docling",
        "document",
        "documentconverter",
        "for",
        "format",
        "list",
        "pipeline",
        "the"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.39545655250549316,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5038431372549019,
      "overall": 0.599766563253465
    }
  },
  {
    "text": "## Configuration Validation and Limits  The SDK provides comprehensive validation through `DocumentLimits` to prevent resource exhaustion and ensure predictable processing behavior. **DocumentLimits Configuration:**  - `max_file_size`: Maximum file size in bytes - `max_num_pages`: Maximum pages for paginated documents - `page_range`: Tuple specifying page range to process  **Validation Points:**  1. **File size check**: Before document parsing 2. **Page count check**: After backend initialization 3. **Page range validation**: Ensures valid range specification 4. **Format validation**: Against allowed formats list ``` ``` Sources: [docling/datamodel/settings.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/settings.py#LNaN-LNaN) [docling/datamodel/document.py108-168](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L108-L168)  Dismiss  Refresh this wiki  This wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "f11b4365433a-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "filename": "_docling-project_docling_7-python-sdk.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Configuration Validation and Limits"
      ],
      "heading_text": "Configuration Validation and Limits",
      "token_count": 218,
      "char_count": 1004,
      "start_char": 0,
      "end_char": 1004,
      "semantic_score": 0.3393898904323578,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5374226804123711,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:40.430106",
      "document_id": "f11b4365433a",
      "document_name": "_docling-project_docling_7-python-sdk",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "source_filename": "_docling-project_docling_7-python-sdk.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "hierarchy_path": "Configuration Validation and Limits",
      "chunk_hash": "b502f9061ca9edd8",
      "content_digest": "b502f9061ca9edd8",
      "chunk_length": 1004,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "validation",
          "page",
          "range",
          "datamodel",
          "file",
          "size",
          "document",
          "configuration",
          "and",
          "documentlimits",
          "max",
          "maximum",
          "pages",
          "check",
          "settings",
          "https",
          "github",
          "com",
          "project"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 8,
            "weight": 0.067227
          },
          {
            "term": "validation",
            "tf": 5,
            "weight": 0.042017
          },
          {
            "term": "page",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "range",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "datamodel",
            "tf": 4,
            "weight": 0.033613
          },
          {
            "term": "file",
            "tf": 3,
            "weight": 0.02521
          },
          {
            "term": "size",
            "tf": 3,
            "weight": 0.02521
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.02521
          },
          {
            "term": "configuration",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "documentlimits",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "max",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "maximum",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "pages",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "check",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "settings",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.016807
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.016807
          }
        ],
        "unique_terms": 75,
        "total_terms": 119
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Configuration Validation and Limits",
        "and",
        "configuration",
        "datamodel",
        "docling",
        "document",
        "file",
        "page",
        "range",
        "size",
        "validation"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3393898904323578,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5374226804123711,
      "overall": 0.592270856948243
    }
  },
  {
    "text": "## DocumentExtractor Overview  The `DocumentExtractor` class provides structured data extraction from documents using schema-based templates. It uses vision-language models (VLMs) to extract specific fields according to user-defined schemas. **Basic Usage:** ``` ``` **Template Types:**  The extractor supports three template formats: ``` ``` 1. **String Template**: Natural language description of desired extraction 2. **Dictionary Template**: Key-value pairs with field names and descriptions 3. **Pydantic Model**: Strongly-typed schema with validation  **Extraction Result:**  The `ExtractionResult` contains:  - `data`: Extracted structured data matching the template schema - `confidence`: Model confidence score for the extraction - `source`: Original source document information  **Use Cases:**  - Metadata extraction (titles, authors, dates) - Form data extraction - Invoice/receipt parsing - Scientific paper metadata - Custom field extraction from any document type  See [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md) for detailed documentation including template design, model configuration, and advanced extraction patterns. Sources: [docling/pipeline/extraction\\_vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py) [docling/datamodel/pipeline\\_options.py328-332](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py#L328-L332)",
    "metadata": {
      "chunk_id": "f11b4365433a-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "filename": "_docling-project_docling_7-python-sdk.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "DocumentExtractor Overview"
      ],
      "heading_text": "DocumentExtractor Overview",
      "token_count": 311,
      "char_count": 1482,
      "start_char": 0,
      "end_char": 1482,
      "semantic_score": 0.34911859035491943,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.516704255319149,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:40.426888",
      "document_id": "f11b4365433a",
      "document_name": "_docling-project_docling_7-python-sdk",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "source_filename": "_docling-project_docling_7-python-sdk.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_7-python-sdk.md",
      "hierarchy_path": "DocumentExtractor Overview",
      "chunk_hash": "d702d91364673d13",
      "content_digest": "d702d91364673d13",
      "chunk_length": 1482,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "extraction",
          "docling",
          "template",
          "pipeline",
          "the",
          "documentextractor",
          "data",
          "schema",
          "model",
          "project",
          "structured",
          "from",
          "language",
          "with",
          "field",
          "and",
          "confidence",
          "for",
          "source",
          "document"
        ],
        "term_weights": [
          {
            "term": "extraction",
            "tf": 10,
            "weight": 0.059524
          },
          {
            "term": "docling",
            "tf": 10,
            "weight": 0.059524
          },
          {
            "term": "template",
            "tf": 6,
            "weight": 0.035714
          },
          {
            "term": "pipeline",
            "tf": 6,
            "weight": 0.035714
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.029762
          },
          {
            "term": "documentextractor",
            "tf": 4,
            "weight": 0.02381
          },
          {
            "term": "data",
            "tf": 4,
            "weight": 0.02381
          },
          {
            "term": "schema",
            "tf": 3,
            "weight": 0.017857
          },
          {
            "term": "model",
            "tf": 3,
            "weight": 0.017857
          },
          {
            "term": "project",
            "tf": 3,
            "weight": 0.017857
          },
          {
            "term": "structured",
            "tf": 2,
            "weight": 0.011905
          },
          {
            "term": "from",
            "tf": 2,
            "weight": 0.011905
          },
          {
            "term": "language",
            "tf": 2,
            "weight": 0.011905
          },
          {
            "term": "with",
            "tf": 2,
            "weight": 0.011905
          },
          {
            "term": "field",
            "tf": 2,
            "weight": 0.011905
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.011905
          },
          {
            "term": "confidence",
            "tf": 2,
            "weight": 0.011905
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.011905
          },
          {
            "term": "source",
            "tf": 2,
            "weight": 0.011905
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.011905
          }
        ],
        "unique_terms": 104,
        "total_terms": 168
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "DocumentExtractor Overview",
        "data",
        "docling",
        "documentextractor",
        "extraction",
        "model",
        "pipeline",
        "project",
        "schema",
        "template",
        "the"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.34911859035491943,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.516704255319149,
      "overall": 0.5886076152246894
    }
  }
]