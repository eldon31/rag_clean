[
  {
    "text": "## Framework Integration Architecture  Docling provides native integrations with popular AI development frameworks, enabling seamless incorporation into RAG pipelines, agentic workflows, and document processing applications.",
    "metadata": {
      "chunk_id": "e45a849636d1-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Framework Integration Architecture"
      ],
      "heading_text": "Framework Integration Architecture",
      "token_count": 34,
      "char_count": 224,
      "start_char": 0,
      "end_char": 224,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:48:33.846776",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Framework Integration Architecture",
      "chunk_hash": "fb8e126fff639d2a",
      "content_digest": "fb8e126fff639d2a",
      "chunk_length": 224,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "framework",
          "integration",
          "architecture",
          "docling",
          "provides",
          "native",
          "integrations",
          "with",
          "popular",
          "development",
          "frameworks",
          "enabling",
          "seamless",
          "incorporation",
          "into",
          "rag",
          "pipelines",
          "agentic",
          "workflows",
          "and"
        ],
        "term_weights": [
          {
            "term": "framework",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "docling",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "native",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "integrations",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "popular",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "development",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "frameworks",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "enabling",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "seamless",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "incorporation",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "pipelines",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "agentic",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "workflows",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.043478
          }
        ],
        "unique_terms": 23,
        "total_terms": 23
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Framework Integration Architecture",
        "architecture",
        "development",
        "docling",
        "framework",
        "integration",
        "integrations",
        "native",
        "popular",
        "provides",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "## Export Formats Overview  Docling provides four primary export formats, each accessed through methods on the `DoclingDocument` instance:  | Format       | Method                 | Primary Use Case                            | Output Type | | ------------ | ---------------------- | ------------------------------------------- | ----------- | | **Markdown** | `export_to_markdown()` | Human-readable text, LLM input              | `str`       | | **JSON**     | `export_to_json()`     | Lossless serialization, programmatic access | `str`       | | **HTML**     | `export_to_html()`     | Web display, visual rendering               | `str`       | | **DOCTAGS**  | `export_to_doctags()`  | Structured markup, VLM training             | `str`       |",
    "metadata": {
      "chunk_id": "e45a849636d1-0004",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 4,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Export Formats Overview"
      ],
      "heading_text": "Export Formats Overview",
      "token_count": 162,
      "char_count": 751,
      "start_char": 0,
      "end_char": 751,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.47275862068965513,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:48:33.845410",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Export Formats Overview",
      "chunk_hash": "5443f04ff9280ab8",
      "content_digest": "5443f04ff9280ab8",
      "chunk_length": 751,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "export",
          "str",
          "formats",
          "primary",
          "markdown",
          "json",
          "html",
          "doctags",
          "overview",
          "docling",
          "provides",
          "four",
          "each",
          "accessed",
          "through",
          "methods",
          "the",
          "doclingdocument",
          "instance",
          "format"
        ],
        "term_weights": [
          {
            "term": "export",
            "tf": 6,
            "weight": 0.107143
          },
          {
            "term": "str",
            "tf": 4,
            "weight": 0.071429
          },
          {
            "term": "formats",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "primary",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "markdown",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "html",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "doctags",
            "tf": 2,
            "weight": 0.035714
          },
          {
            "term": "overview",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "docling",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "four",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "each",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "accessed",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "doclingdocument",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "instance",
            "tf": 1,
            "weight": 0.017857
          },
          {
            "term": "format",
            "tf": 1,
            "weight": 0.017857
          }
        ],
        "unique_terms": 42,
        "total_terms": 56
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Export Formats Overview",
        "docling",
        "doctags",
        "export",
        "formats",
        "html",
        "json",
        "markdown",
        "overview",
        "primary",
        "str"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.47275862068965513,
      "overall": 0.7242528735632184
    }
  },
  {
    "text": "## Chunking Configuration  The chunking subsystem uses `HybridChunker` from `docling-core`, configurable through initialization parameters:  | Parameter                   | Type   | Default        | Description                       | | --------------------------- | ------ | -------------- | --------------------------------- | | `max_tokens`                | `int`  | 512            | Maximum tokens per chunk          | | `tokenizer`                 | `str`  | \"cl100k\\_base\" | Tokenizer for counting (tiktoken) | | `include_heading_hierarchy` | `bool` | `True`         | Add heading context to chunks     | | `overlap`                   | `int`  | 0              | Token overlap between chunks      |",
    "metadata": {
      "chunk_id": "e45a849636d1-0017",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 17,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Chunking Configuration"
      ],
      "heading_text": "Chunking Configuration",
      "token_count": 148,
      "char_count": 704,
      "start_char": 0,
      "end_char": 704,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.4714814814814815,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:48:33.848601",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Chunking Configuration",
      "chunk_hash": "4c48ec29472342ca",
      "content_digest": "4c48ec29472342ca",
      "chunk_length": 704,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "chunking",
          "tokens",
          "int",
          "tokenizer",
          "heading",
          "chunks",
          "overlap",
          "configuration",
          "the",
          "subsystem",
          "uses",
          "hybridchunker",
          "from",
          "docling",
          "core",
          "configurable",
          "through",
          "initialization",
          "parameters",
          "parameter"
        ],
        "term_weights": [
          {
            "term": "chunking",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "tokens",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "int",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "tokenizer",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "heading",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "chunks",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "overlap",
            "tf": 2,
            "weight": 0.040816
          },
          {
            "term": "configuration",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "subsystem",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "uses",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "hybridchunker",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "from",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "docling",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "core",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "configurable",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "through",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "initialization",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "parameters",
            "tf": 1,
            "weight": 0.020408
          },
          {
            "term": "parameter",
            "tf": 1,
            "weight": 0.020408
          }
        ],
        "unique_terms": 42,
        "total_terms": 49
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Chunking Configuration",
        "chunking",
        "chunks",
        "configuration",
        "heading",
        "int",
        "overlap",
        "subsystem",
        "the",
        "tokenizer",
        "tokens"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.4714814814814815,
      "overall": 0.7238271604938271
    }
  },
  {
    "text": "## Integration Patterns",
    "metadata": {
      "chunk_id": "e45a849636d1-0011",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 11,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration Patterns"
      ],
      "heading_text": "Integration Patterns",
      "token_count": 3,
      "char_count": 23,
      "start_char": 0,
      "end_char": 23,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:48:33.847136",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Integration Patterns",
      "chunk_hash": "d4d919d8a3daa76f",
      "content_digest": "d4d919d8a3daa76f",
      "chunk_length": 23,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "integration",
          "patterns"
        ],
        "term_weights": [
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.5
          },
          {
            "term": "patterns",
            "tf": 1,
            "weight": 0.5
          }
        ],
        "unique_terms": 2,
        "total_terms": 2
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration Patterns",
        "integration",
        "patterns"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.39,
      "overall": 0.6966666666666667
    }
  },
  {
    "text": "### Pattern 1: Direct Framework Integration  Frameworks like LangChain and LlamaIndex provide native loaders/readers that accept `DoclingDocument` objects: ``` ``` These loaders handle the conversion from `DoclingDocument` (or `DocChunk`) to framework-native document representations.",
    "metadata": {
      "chunk_id": "e45a849636d1-0012",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 12,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Pattern 1: Direct Framework Integration"
      ],
      "heading_text": "Pattern 1: Direct Framework Integration",
      "token_count": 57,
      "char_count": 284,
      "start_char": 0,
      "end_char": 284,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.3718181818181818,
      "chunking_strategy": "hybrid_adaptive",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:48:33.847249",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Pattern 1: Direct Framework Integration",
      "chunk_hash": "38b145debc681af1",
      "content_digest": "38b145debc681af1",
      "chunk_length": 284,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "framework",
          "native",
          "loaders",
          "doclingdocument",
          "pattern",
          "direct",
          "integration",
          "frameworks",
          "like",
          "langchain",
          "and",
          "llamaindex",
          "provide",
          "readers",
          "that",
          "accept",
          "objects",
          "these",
          "handle",
          "the"
        ],
        "term_weights": [
          {
            "term": "framework",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "native",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "loaders",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "doclingdocument",
            "tf": 2,
            "weight": 0.068966
          },
          {
            "term": "pattern",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "direct",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "frameworks",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "like",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "langchain",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "llamaindex",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "provide",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "readers",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "that",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "accept",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "objects",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "these",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "handle",
            "tf": 1,
            "weight": 0.034483
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.034483
          }
        ],
        "unique_terms": 25,
        "total_terms": 29
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Pattern 1: Direct Framework Integration",
        "direct",
        "doclingdocument",
        "framework",
        "frameworks",
        "integration",
        "langchain",
        "like",
        "loaders",
        "native",
        "pattern"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.3718181818181818,
      "overall": 0.6906060606060606
    }
  }
]