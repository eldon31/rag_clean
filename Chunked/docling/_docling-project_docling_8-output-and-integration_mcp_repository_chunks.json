[
  {
    "text": "## Purpose and Scope\n\nThis document provides an overview of Docling's output capabilities and integration ecosystem. After documents are processed through pipelines and assembled into a `DoclingDocument` (see [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md)), they can be exported to multiple formats and integrated with downstream tools. This page covers:\n\n1. **Export formats**: Markdown, JSON, HTML, and DOCTAGS serialization from `DoclingDocument`\n2. **Document chunking**: Breaking documents into smaller segments for retrieval systems\n3. **Framework integrations**: Connecting with LangChain, LlamaIndex, Haystack, vector databases, and AI agents via MCP\n\nFor detailed information on specific export format options and methods, see [Export Formats](docling-project/docling/8.1-export-formats.md). For chunking strategies and configuration, see [Document Chunking](docling-project/docling/8.2-document-chunking.md). For framework-specific integration patterns, see [Framework Integrations](docling-project/docling/8.3-framework-integrations.md).\n\nSources: [pyproject.toml1-280](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L1-L280) [README.md1-161](https://github.com/docling-project/docling/blob/f7244a43/README.md#L1-L161) [mkdocs.yml54-162](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L54-L162)\n\n---",
    "metadata": {
      "chunk_id": "e45a849636d1-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Purpose and Scope"
      ],
      "heading_text": "Purpose and Scope",
      "token_count": 331,
      "char_count": 1397,
      "start_char": 5012,
      "end_char": 6409,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.552748275862069,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.745625",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Purpose and Scope",
      "chunk_hash": "9e54471d7dbc1f05",
      "content_digest": "9e54471d7dbc1f05",
      "chunk_length": 1397,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "and",
          "project",
          "document",
          "doclingdocument",
          "see",
          "formats",
          "export",
          "chunking",
          "for",
          "framework",
          "integrations",
          "https",
          "github",
          "com",
          "blob",
          "f7244a43",
          "this",
          "integration",
          "documents"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 15,
            "weight": 0.090909
          },
          {
            "term": "and",
            "tf": 8,
            "weight": 0.048485
          },
          {
            "term": "project",
            "tf": 7,
            "weight": 0.042424
          },
          {
            "term": "document",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "doclingdocument",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "see",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "formats",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "export",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "chunking",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "framework",
            "tf": 4,
            "weight": 0.024242
          },
          {
            "term": "integrations",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "f7244a43",
            "tf": 3,
            "weight": 0.018182
          },
          {
            "term": "this",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "integration",
            "tf": 2,
            "weight": 0.012121
          },
          {
            "term": "documents",
            "tf": 2,
            "weight": 0.012121
          }
        ],
        "unique_terms": 91,
        "total_terms": 165
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Purpose and Scope",
        "and",
        "chunking",
        "docling",
        "doclingdocument",
        "document",
        "export",
        "for",
        "formats",
        "project",
        "see"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.552748275862069,
      "overall": 0.650916091954023
    }
  },
  {
    "text": "## Output Architecture\n\nThe output subsystem is organized around the `DoclingDocument` as the central unified representation. All processed documents, regardless of their input format or processing pipeline, converge to this common structure before being exported or integrated with external systems.",
    "metadata": {
      "chunk_id": "e45a849636d1-0002",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 2,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Output Architecture"
      ],
      "heading_text": "Output Architecture",
      "token_count": 49,
      "char_count": 300,
      "start_char": 6411,
      "end_char": 6711,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.745784",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Output Architecture",
      "chunk_hash": "75800656789b390a",
      "content_digest": "75800656789b390a",
      "chunk_length": 300,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "output",
          "architecture",
          "subsystem",
          "organized",
          "around",
          "doclingdocument",
          "central",
          "unified",
          "representation",
          "all",
          "processed",
          "documents",
          "regardless",
          "their",
          "input",
          "format",
          "processing",
          "pipeline",
          "converge"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 3,
            "weight": 0.090909
          },
          {
            "term": "output",
            "tf": 2,
            "weight": 0.060606
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "subsystem",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "organized",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "around",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "doclingdocument",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "central",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "unified",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "representation",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "processed",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "documents",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "regardless",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "their",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "input",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "format",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.030303
          },
          {
            "term": "converge",
            "tf": 1,
            "weight": 0.030303
          }
        ],
        "unique_terms": 30,
        "total_terms": 33
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Output Architecture",
        "architecture",
        "around",
        "central",
        "doclingdocument",
        "organized",
        "output",
        "representation",
        "subsystem",
        "the",
        "unified"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.56,
      "overall": 0.7533333333333333
    }
  },
  {
    "text": "### Export Flow Diagram\n\n```\n```\n\n**Description**: This diagram illustrates how all processing pipelines converge on `DoclingDocument`, which serves as the single source for exports, chunking, and framework integrations. The export methods are direct serialization functions on the document object, while chunking produces `DocChunk` objects that can be fed into AI frameworks. Framework integrations can consume either the full `DoclingDocument` or chunked segments depending on the use case.\n\nSources: [README.md34-43](https://github.com/docling-project/docling/blob/f7244a43/README.md#L34-L43) [mkdocs.yml100-128](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L100-L128) [pyproject.toml47](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L47-L47)\n\n---",
    "metadata": {
      "chunk_id": "e45a849636d1-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Export Flow Diagram"
      ],
      "heading_text": "Export Flow Diagram",
      "token_count": 194,
      "char_count": 800,
      "start_char": 6713,
      "end_char": 7513,
      "semantic_score": 0.7,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5447945205479452,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.746147",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Export Flow Diagram",
      "chunk_hash": "df1e99576244a7f8",
      "content_digest": "df1e99576244a7f8",
      "chunk_length": 800,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "the",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "export",
          "diagram",
          "doclingdocument",
          "chunking",
          "framework",
          "integrations",
          "can",
          "readme",
          "mkdocs",
          "pyproject",
          "l47",
          "flow"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 6,
            "weight": 0.059406
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.049505
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.029703
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.029703
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.029703
          },
          {
            "term": "project",
            "tf": 3,
            "weight": 0.029703
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.029703
          },
          {
            "term": "f7244a43",
            "tf": 3,
            "weight": 0.029703
          },
          {
            "term": "export",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "diagram",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "doclingdocument",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "chunking",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "framework",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "integrations",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "can",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "mkdocs",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "l47",
            "tf": 2,
            "weight": 0.019802
          },
          {
            "term": "flow",
            "tf": 1,
            "weight": 0.009901
          }
        ],
        "unique_terms": 69,
        "total_terms": 101
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Export Flow Diagram",
        "blob",
        "com",
        "diagram",
        "docling",
        "export",
        "f7244a43",
        "github",
        "https",
        "project",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5447945205479452,
      "overall": 0.6815981735159816
    }
  },
  {
    "text": "### Basic Export Example\n\n```\n```\n\nEach export method supports format-specific options for controlling output behavior. For example, `export_to_markdown()` supports `image_mode` to control embedded image handling, and `export_to_json()` supports `indent` for pretty-printing.\n\n**DOCTAGS Format**: A specialized structured markup format designed for vision-language model training and structured document representation. DOCTAGS uses XML-like tags to encode document structure hierarchically (e.g., `<document>`, `<page>`, `<section>`, `<table>`). This format is the preferred output for VLM pipelines that generate structured representations directly.\n\nSources: [README.md35](https://github.com/docling-project/docling/blob/f7244a43/README.md#L35-L35) [docs/index.md27](https://github.com/docling-project/docling/blob/f7244a43/docs/index.md#L27-L27) [docs/usage/index.md10-20](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/index.md#L10-L20)\n\n---",
    "metadata": {
      "chunk_id": "e45a849636d1-0005",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 5,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Basic Export Example"
      ],
      "heading_text": "Basic Export Example",
      "token_count": 228,
      "char_count": 967,
      "start_char": 8268,
      "end_char": 9235,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.7344444444444443,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.747084",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Basic Export Example",
      "chunk_hash": "c07ea1cd9d1e32f7",
      "content_digest": "c07ea1cd9d1e32f7",
      "chunk_length": 967,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "for",
          "export",
          "format",
          "docs",
          "index",
          "supports",
          "structured",
          "document",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "example",
          "output",
          "image",
          "and",
          "doctags"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 6,
            "weight": 0.049587
          },
          {
            "term": "for",
            "tf": 5,
            "weight": 0.041322
          },
          {
            "term": "export",
            "tf": 4,
            "weight": 0.033058
          },
          {
            "term": "format",
            "tf": 4,
            "weight": 0.033058
          },
          {
            "term": "docs",
            "tf": 4,
            "weight": 0.033058
          },
          {
            "term": "index",
            "tf": 4,
            "weight": 0.033058
          },
          {
            "term": "supports",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "structured",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "project",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "f7244a43",
            "tf": 3,
            "weight": 0.024793
          },
          {
            "term": "example",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "output",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "image",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.016529
          },
          {
            "term": "doctags",
            "tf": 2,
            "weight": 0.016529
          }
        ],
        "unique_terms": 73,
        "total_terms": 121
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Basic Export Example",
        "docling",
        "docs",
        "document",
        "export",
        "for",
        "format",
        "https",
        "index",
        "structured",
        "supports"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.7344444444444443,
      "overall": 0.7114814814814814
    }
  },
  {
    "text": "## Document Chunking Overview\n\nChunking breaks `DoclingDocument` instances into smaller `DocChunk` segments suitable for retrieval-augmented generation (RAG) systems and vector databases. Docling leverages the `docling-core` library's `HybridChunker`, which implements hierarchical and hybrid chunking strategies.",
    "metadata": {
      "chunk_id": "e45a849636d1-0006",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 6,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Document Chunking Overview"
      ],
      "heading_text": "Document Chunking Overview",
      "token_count": 65,
      "char_count": 313,
      "start_char": 9237,
      "end_char": 9550,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5635294117647058,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.747259",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Document Chunking Overview",
      "chunk_hash": "43fad767ee53ac02",
      "content_digest": "43fad767ee53ac02",
      "chunk_length": 313,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "chunking",
          "and",
          "docling",
          "document",
          "overview",
          "breaks",
          "doclingdocument",
          "instances",
          "into",
          "smaller",
          "docchunk",
          "segments",
          "suitable",
          "for",
          "retrieval",
          "augmented",
          "generation",
          "rag",
          "systems",
          "vector"
        ],
        "term_weights": [
          {
            "term": "chunking",
            "tf": 3,
            "weight": 0.085714
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "docling",
            "tf": 2,
            "weight": 0.057143
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "overview",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "breaks",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "doclingdocument",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "instances",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "smaller",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "docchunk",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "segments",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "suitable",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "retrieval",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "augmented",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "generation",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "systems",
            "tf": 1,
            "weight": 0.028571
          },
          {
            "term": "vector",
            "tf": 1,
            "weight": 0.028571
          }
        ],
        "unique_terms": 31,
        "total_terms": 35
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Document Chunking Overview",
        "and",
        "breaks",
        "chunking",
        "docling",
        "doclingdocument",
        "document",
        "instances",
        "into",
        "overview",
        "smaller"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5635294117647058,
      "overall": 0.7545098039215685
    }
  },
  {
    "text": "### Chunking Workflow\n\n```\n```\n\n**Description**: The chunking process transforms a `DoclingDocument` into a list of `DocChunk` objects. Each chunk contains the text content, metadata about the source document items (paragraphs, tables, etc.), and hierarchical path information (headings leading to the chunk). This metadata enables context-aware retrieval.",
    "metadata": {
      "chunk_id": "e45a849636d1-0007",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 7,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Chunking Workflow"
      ],
      "heading_text": "Chunking Workflow",
      "token_count": 73,
      "char_count": 356,
      "start_char": 9552,
      "end_char": 9908,
      "semantic_score": 0.7,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.5453191489361702,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.747421",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Chunking Workflow",
      "chunk_hash": "591c55b05596a9b5",
      "content_digest": "591c55b05596a9b5",
      "chunk_length": 356,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "chunking",
          "chunk",
          "metadata",
          "workflow",
          "description",
          "process",
          "transforms",
          "doclingdocument",
          "into",
          "list",
          "docchunk",
          "objects",
          "each",
          "contains",
          "text",
          "content",
          "about",
          "source",
          "document"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.097561
          },
          {
            "term": "chunking",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "chunk",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "metadata",
            "tf": 2,
            "weight": 0.04878
          },
          {
            "term": "workflow",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "description",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "process",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "transforms",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "doclingdocument",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "list",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "docchunk",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "objects",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "each",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "contains",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "text",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "content",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "about",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "source",
            "tf": 1,
            "weight": 0.02439
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.02439
          }
        ],
        "unique_terms": 35,
        "total_terms": 41
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Chunking Workflow",
        "chunk",
        "chunking",
        "description",
        "doclingdocument",
        "into",
        "metadata",
        "process",
        "the",
        "transforms",
        "workflow"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.5453191489361702,
      "overall": 0.7484397163120566
    }
  },
  {
    "text": "### Chunking Strategies  1. **Hierarchical Chunking**: Respects document structure (sections, subsections) and preserves heading context 2. **Hybrid Chunking**: Combines hierarchical structure with token/character limits to ensure chunks fit within model context windows 3. **Token-Based Splitting**: Uses tokenizers to enforce maximum chunk sizes while respecting document boundaries  The chunker configuration allows control over:  - Maximum chunk size (tokens or characters) - Overlap between consecutive chunks - Heading level depth for context preservation - Tokenizer selection (for transformer models)  Sources: [pyproject.toml47](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L47-L47) [mkdocs.yml100-103](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L100-L103)  ---",
    "metadata": {
      "chunk_id": "e45a849636d1-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Chunking Strategies"
      ],
      "heading_text": "Chunking Strategies",
      "token_count": 186,
      "char_count": 822,
      "start_char": 9910,
      "end_char": 10732,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5418518518518518,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.747763",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Chunking Strategies",
      "chunk_hash": "7ab8c86d11da63cd",
      "content_digest": "7ab8c86d11da63cd",
      "chunk_length": 822,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "chunking",
          "context",
          "hierarchical",
          "document",
          "structure",
          "heading",
          "token",
          "chunks",
          "maximum",
          "chunk",
          "for",
          "pyproject",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "l47"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.040816
          },
          {
            "term": "chunking",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "context",
            "tf": 3,
            "weight": 0.030612
          },
          {
            "term": "hierarchical",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "structure",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "heading",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "token",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "chunks",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "maximum",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "chunk",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.020408
          },
          {
            "term": "l47",
            "tf": 2,
            "weight": 0.020408
          }
        ],
        "unique_terms": 73,
        "total_terms": 98
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Chunking Strategies",
        "chunking",
        "chunks",
        "context",
        "docling",
        "document",
        "heading",
        "hierarchical",
        "maximum",
        "structure",
        "token"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5418518518518518,
      "overall": 0.7139506172839506
    }
  },
  {
    "text": "## Framework Integration Architecture\n\nDocling provides native integrations with popular AI development frameworks, enabling seamless incorporation into RAG pipelines, agentic workflows, and document processing applications.",
    "metadata": {
      "chunk_id": "e45a849636d1-0009",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 9,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Framework Integration Architecture"
      ],
      "heading_text": "Framework Integration Architecture",
      "token_count": 34,
      "char_count": 224,
      "start_char": 10734,
      "end_char": 10958,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.748032",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Framework Integration Architecture",
      "chunk_hash": "c987f89ef9523f99",
      "content_digest": "c987f89ef9523f99",
      "chunk_length": 224,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "framework",
          "integration",
          "architecture",
          "docling",
          "provides",
          "native",
          "integrations",
          "with",
          "popular",
          "development",
          "frameworks",
          "enabling",
          "seamless",
          "incorporation",
          "into",
          "rag",
          "pipelines",
          "agentic",
          "workflows",
          "and"
        ],
        "term_weights": [
          {
            "term": "framework",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "docling",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "native",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "integrations",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "popular",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "development",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "frameworks",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "enabling",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "seamless",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "incorporation",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "into",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "rag",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "pipelines",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "agentic",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "workflows",
            "tf": 1,
            "weight": 0.043478
          },
          {
            "term": "and",
            "tf": 1,
            "weight": 0.043478
          }
        ],
        "unique_terms": 23,
        "total_terms": 23
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Framework Integration Architecture",
        "architecture",
        "development",
        "docling",
        "framework",
        "integration",
        "integrations",
        "native",
        "popular",
        "provides",
        "with"
      ]
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "### Integration Landscape Diagram\n\n```\n```\n\n**Description**: Docling integrates with the AI ecosystem at multiple levels. Document loaders/readers provide framework-specific adapters for LangChain, LlamaIndex, and Haystack. These frameworks then connect to vector databases for retrieval. Separately, agentic frameworks like MCP, CrewAI, and Bee Agent consume `DoclingDocument` directly for agent-based workflows.\n\nSources: [mkdocs.yml130-155](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L130-L155) [README.md109-113](https://github.com/docling-project/docling/blob/f7244a43/README.md#L109-L113)\n\n---",
    "metadata": {
      "chunk_id": "e45a849636d1-0010",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 10,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Integration Landscape Diagram"
      ],
      "heading_text": "Integration Landscape Diagram",
      "token_count": 147,
      "char_count": 624,
      "start_char": 10960,
      "end_char": 11584,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5622222222222222,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.748390",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Integration Landscape Diagram",
      "chunk_hash": "a1215877ce271a49",
      "content_digest": "a1215877ce271a49",
      "chunk_length": 624,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "for",
          "and",
          "frameworks",
          "agent",
          "mkdocs",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "readme",
          "integration",
          "landscape",
          "diagram",
          "description",
          "integrates",
          "with",
          "the"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 5,
            "weight": 0.064935
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.038961
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "frameworks",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "agent",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "mkdocs",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.025974
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "landscape",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "diagram",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "description",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "integrates",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.012987
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.012987
          }
        ],
        "unique_terms": 60,
        "total_terms": 77
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Integration Landscape Diagram",
        "agent",
        "and",
        "com",
        "docling",
        "for",
        "frameworks",
        "github",
        "https",
        "mkdocs",
        "project"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5622222222222222,
      "overall": 0.654074074074074
    }
  },
  {
    "text": "### Pattern 2: MCP Server for Agents\n\nThe Model Context Protocol (MCP) integration enables any MCP-compatible agent to access Docling's document processing capabilities as a service:\n\n```\n```\n\nThis configuration (placed in `claude_desktop_config.json` or `mcp.json` for LM Studio) exposes Docling as an MCP tool that agents can invoke for document conversion tasks.",
    "metadata": {
      "chunk_id": "e45a849636d1-0013",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 13,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Pattern 2: MCP Server for Agents"
      ],
      "heading_text": "Pattern 2: MCP Server for Agents",
      "token_count": 79,
      "char_count": 365,
      "start_char": 11899,
      "end_char": 12264,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5496153846153846,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.748789",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Pattern 2: MCP Server for Agents",
      "chunk_hash": "bea7abaa5c2bb71c",
      "content_digest": "bea7abaa5c2bb71c",
      "chunk_length": 365,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "mcp",
          "for",
          "agents",
          "docling",
          "document",
          "json",
          "pattern",
          "server",
          "the",
          "model",
          "context",
          "protocol",
          "integration",
          "enables",
          "any",
          "compatible",
          "agent",
          "access",
          "processing",
          "capabilities"
        ],
        "term_weights": [
          {
            "term": "mcp",
            "tf": 5,
            "weight": 0.111111
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.066667
          },
          {
            "term": "agents",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "docling",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "json",
            "tf": 2,
            "weight": 0.044444
          },
          {
            "term": "pattern",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "server",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "context",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "protocol",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "enables",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "any",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "compatible",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "agent",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "access",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "processing",
            "tf": 1,
            "weight": 0.022222
          },
          {
            "term": "capabilities",
            "tf": 1,
            "weight": 0.022222
          }
        ],
        "unique_terms": 35,
        "total_terms": 45
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Pattern 2: MCP Server for Agents",
        "agents",
        "docling",
        "document",
        "for",
        "json",
        "mcp",
        "model",
        "pattern",
        "server",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5496153846153846,
      "overall": 0.7498717948717948
    }
  },
  {
    "text": "## Export Method Reference\n\nAll export methods are instance methods on the `DoclingDocument` class. They serialize the unified document representation into format-specific string outputs:\n\n```\n```\n\n**Description**: The `DoclingDocument` Pydantic model provides four export methods, each with format-specific options. Common options include `image_mode` for controlling image handling (placeholders, embedded data, or references), `strict_text` for enforcing plain text output, and `indent` for JSON pretty-printing.",
    "metadata": {
      "chunk_id": "e45a849636d1-0015",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 15,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Export Method Reference"
      ],
      "heading_text": "Export Method Reference",
      "token_count": 100,
      "char_count": 515,
      "start_char": 12718,
      "end_char": 13233,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.5423809523809524,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.749300",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Export Method Reference",
      "chunk_hash": "9763d4c6bd1c6ae8",
      "content_digest": "9763d4c6bd1c6ae8",
      "chunk_length": 515,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "export",
          "methods",
          "the",
          "for",
          "doclingdocument",
          "format",
          "specific",
          "options",
          "image",
          "text",
          "method",
          "reference",
          "all",
          "are",
          "instance",
          "class",
          "they",
          "serialize",
          "unified",
          "document"
        ],
        "term_weights": [
          {
            "term": "export",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "methods",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.047619
          },
          {
            "term": "doclingdocument",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "format",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "specific",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "options",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "image",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "text",
            "tf": 2,
            "weight": 0.031746
          },
          {
            "term": "method",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "reference",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "all",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "instance",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "class",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "they",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "serialize",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "unified",
            "tf": 1,
            "weight": 0.015873
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.015873
          }
        ],
        "unique_terms": 49,
        "total_terms": 63
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Export Method Reference",
        "doclingdocument",
        "export",
        "for",
        "format",
        "image",
        "methods",
        "options",
        "specific",
        "text",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.5423809523809524,
      "overall": 0.7807936507936507
    }
  },
  {
    "text": "### Export Method Signatures\n\n```\n```\n\nThese methods are implemented in the `docling-core` library, which `DoclingDocument` inherits from. The actual method implementations handle traversal of the document's hierarchical structure and serialization to each format.\n\nSources: [docs/usage/index.md10-20](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/index.md#L10-L20) [README.md77](https://github.com/docling-project/docling/blob/f7244a43/README.md#L77-L77)\n\n---",
    "metadata": {
      "chunk_id": "e45a849636d1-0016",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 16,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Export Method Signatures"
      ],
      "heading_text": "Export Method Signatures",
      "token_count": 118,
      "char_count": 482,
      "start_char": 13235,
      "end_char": 13717,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.5584210526315789,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.749544",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Export Method Signatures",
      "chunk_hash": "eb0a92a8e2dba35b",
      "content_digest": "eb0a92a8e2dba35b",
      "chunk_length": 482,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "the",
          "method",
          "docs",
          "usage",
          "index",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "readme",
          "l77",
          "export",
          "signatures",
          "these",
          "methods",
          "are",
          "implemented"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 5,
            "weight": 0.083333
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.05
          },
          {
            "term": "method",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "docs",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "usage",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "index",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "l77",
            "tf": 2,
            "weight": 0.033333
          },
          {
            "term": "export",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "signatures",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "these",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "methods",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.016667
          },
          {
            "term": "implemented",
            "tf": 1,
            "weight": 0.016667
          }
        ],
        "unique_terms": 42,
        "total_terms": 60
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Export Method Signatures",
        "com",
        "docling",
        "docs",
        "github",
        "https",
        "index",
        "method",
        "project",
        "the",
        "usage"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.5584210526315789,
      "overall": 0.6528070175438596
    }
  },
  {
    "text": "### Chunking Method Flow\n\n```\n```\n\n**Description**: The `HybridChunker.chunk()` method traverses the `DoclingDocument.body` items (paragraphs, tables, lists, etc.) and segments them into chunks respecting token limits. Each chunk is enriched with metadata including the hierarchical path (sequence of headings leading to the chunk) and references to source document items.\n\nSources: [pyproject.toml47](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L47-L47) [mkdocs.yml100-103](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L100-L103)\n\n---",
    "metadata": {
      "chunk_id": "e45a849636d1-0018",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 18,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Chunking Method Flow"
      ],
      "heading_text": "Chunking Method Flow",
      "token_count": 145,
      "char_count": 586,
      "start_char": 14425,
      "end_char": 15011,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.550377358490566,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.750348",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Chunking Method Flow",
      "chunk_hash": "31e1bfa11ab0fd14",
      "content_digest": "31e1bfa11ab0fd14",
      "chunk_length": 586,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "the",
          "docling",
          "chunk",
          "method",
          "items",
          "and",
          "pyproject",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "l47",
          "mkdocs",
          "chunking",
          "flow",
          "description",
          "hybridchunker",
          "traverses"
        ],
        "term_weights": [
          {
            "term": "the",
            "tf": 4,
            "weight": 0.054054
          },
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.054054
          },
          {
            "term": "chunk",
            "tf": 3,
            "weight": 0.040541
          },
          {
            "term": "method",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "items",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "l47",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "mkdocs",
            "tf": 2,
            "weight": 0.027027
          },
          {
            "term": "chunking",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "flow",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "description",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "hybridchunker",
            "tf": 1,
            "weight": 0.013514
          },
          {
            "term": "traverses",
            "tf": 1,
            "weight": 0.013514
          }
        ],
        "unique_terms": 54,
        "total_terms": 74
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Chunking Method Flow",
        "and",
        "chunk",
        "com",
        "docling",
        "github",
        "https",
        "items",
        "method",
        "pyproject",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.550377358490566,
      "overall": 0.650125786163522
    }
  },
  {
    "text": "### Framework Integration Packages  The integrations are maintained as separate packages:  - **LangChain**: `langchain-docling` package provides `DoclingLoader` and `DoclingPDFLoader` - **LlamaIndex**: `llama-index-readers-docling` provides `DoclingReader` - **Haystack**: `haystack-docling` provides `DoclingConverter` - **MCP**: `docling-mcp` provides the MCP server implementation  This separation allows framework integrations to evolve independently from Docling core. Sources: [pyproject.toml45-148](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L45-L148) [mkdocs.yml130-155](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L130-L155)  ---",
    "metadata": {
      "chunk_id": "e45a849636d1-0022",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 22,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Framework Integration Packages"
      ],
      "heading_text": "Framework Integration Packages",
      "token_count": 180,
      "char_count": 691,
      "start_char": 15229,
      "end_char": 15920,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.538076923076923,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.750930",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Framework Integration Packages",
      "chunk_hash": "5f9e8918a5d920df",
      "content_digest": "5f9e8918a5d920df",
      "chunk_length": 691,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "provides",
          "mcp",
          "framework",
          "packages",
          "the",
          "integrations",
          "langchain",
          "haystack",
          "pyproject",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "mkdocs",
          "integration",
          "are",
          "maintained"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 9,
            "weight": 0.115385
          },
          {
            "term": "provides",
            "tf": 4,
            "weight": 0.051282
          },
          {
            "term": "mcp",
            "tf": 3,
            "weight": 0.038462
          },
          {
            "term": "framework",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "packages",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "integrations",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "langchain",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "haystack",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "mkdocs",
            "tf": 2,
            "weight": 0.025641
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "are",
            "tf": 1,
            "weight": 0.012821
          },
          {
            "term": "maintained",
            "tf": 1,
            "weight": 0.012821
          }
        ],
        "unique_terms": 51,
        "total_terms": 78
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Framework Integration Packages",
        "docling",
        "framework",
        "haystack",
        "integrations",
        "langchain",
        "mcp",
        "packages",
        "provides",
        "pyproject",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.538076923076923,
      "overall": 0.7126923076923076
    }
  },
  {
    "text": "### Code Example Structure\n\n```\n```\n\nSources: [mkdocs.yml106-127](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L106-L127) [pyproject.toml144-148](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L144-L148)\n\n---",
    "metadata": {
      "chunk_id": "e45a849636d1-0024",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 24,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Code Example Structure"
      ],
      "heading_text": "Code Example Structure",
      "token_count": 79,
      "char_count": 256,
      "start_char": 16340,
      "end_char": 16596,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.56,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.751447",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Code Example Structure",
      "chunk_hash": "f942717f461e07bc",
      "content_digest": "f942717f461e07bc",
      "chunk_length": 256,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "mkdocs",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "pyproject",
          "code",
          "example",
          "structure",
          "sources",
          "yml106",
          "127",
          "yml",
          "l106",
          "l127",
          "toml144",
          "148"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.117647
          },
          {
            "term": "mkdocs",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.058824
          },
          {
            "term": "code",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "structure",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "sources",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "yml106",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "127",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "yml",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "l106",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "l127",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "toml144",
            "tf": 1,
            "weight": 0.029412
          },
          {
            "term": "148",
            "tf": 1,
            "weight": 0.029412
          }
        ],
        "unique_terms": 23,
        "total_terms": 34
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Code Example Structure",
        "blob",
        "code",
        "com",
        "docling",
        "f7244a43",
        "github",
        "https",
        "mkdocs",
        "project",
        "pyproject"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.56,
      "overall": 0.6533333333333333
    }
  },
  {
    "text": "## MCP Server Architecture\n\nThe MCP (Model Context Protocol) server provides a standardized interface for AI agents to access Docling's document conversion capabilities:\n\n```\n```\n\n**Description**: The MCP server (`docling-mcp-server`) runs as a separate process and communicates with MCP clients via JSON-RPC over standard input/output. Clients (like Claude Desktop or LM Studio) can invoke Docling document conversion as a tool, passing document paths or URLs and receiving structured `DoclingDocument` representations in response.",
    "metadata": {
      "chunk_id": "e45a849636d1-0025",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 25,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "MCP Server Architecture"
      ],
      "heading_text": "MCP Server Architecture",
      "token_count": 101,
      "char_count": 532,
      "start_char": 16598,
      "end_char": 17130,
      "semantic_score": 0.7999999999999999,
      "structural_score": 0.9999999999999999,
      "retrieval_quality": 0.5233333333333333,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.751638",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "MCP Server Architecture",
      "chunk_hash": "b2157c5e50c5e985",
      "content_digest": "b2157c5e50c5e985",
      "chunk_length": 532,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "mcp",
          "server",
          "docling",
          "document",
          "the",
          "conversion",
          "and",
          "clients",
          "architecture",
          "model",
          "context",
          "protocol",
          "provides",
          "standardized",
          "interface",
          "for",
          "agents",
          "access",
          "capabilities",
          "description"
        ],
        "term_weights": [
          {
            "term": "mcp",
            "tf": 5,
            "weight": 0.080645
          },
          {
            "term": "server",
            "tf": 4,
            "weight": 0.064516
          },
          {
            "term": "docling",
            "tf": 3,
            "weight": 0.048387
          },
          {
            "term": "document",
            "tf": 3,
            "weight": 0.048387
          },
          {
            "term": "the",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "conversion",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "clients",
            "tf": 2,
            "weight": 0.032258
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "context",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "protocol",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "standardized",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "interface",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "for",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "agents",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "access",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "capabilities",
            "tf": 1,
            "weight": 0.016129
          },
          {
            "term": "description",
            "tf": 1,
            "weight": 0.016129
          }
        ],
        "unique_terms": 47,
        "total_terms": 62
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "MCP Server Architecture",
        "and",
        "architecture",
        "clients",
        "conversion",
        "docling",
        "document",
        "mcp",
        "model",
        "server",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7999999999999999,
      "structural": 0.9999999999999999,
      "retrieval_quality": 0.5233333333333333,
      "overall": 0.7744444444444444
    }
  },
  {
    "text": "### MCP Configuration Example\n\n```\n```\n\nThis configuration launches the MCP server using `uvx` (the uv package runner), which handles dependency installation and execution. The server then registers itself with the MCP client, making Docling tools available to the agent.\n\nSources: [docs/usage/mcp.md1-31](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/mcp.md#L1-L31) [README.md41](https://github.com/docling-project/docling/blob/f7244a43/README.md#L41-L41)\n\n---",
    "metadata": {
      "chunk_id": "e45a849636d1-0026",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 26,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "MCP Configuration Example"
      ],
      "heading_text": "MCP Configuration Example",
      "token_count": 122,
      "char_count": 483,
      "start_char": 17132,
      "end_char": 17615,
      "semantic_score": 0.6,
      "structural_score": 0.7999999999999998,
      "retrieval_quality": 0.7354545454545455,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.751877",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "MCP Configuration Example",
      "chunk_hash": "887ae906d8b84ee0",
      "content_digest": "887ae906d8b84ee0",
      "chunk_length": 483,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "mcp",
          "the",
          "docling",
          "configuration",
          "server",
          "docs",
          "usage",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "readme",
          "l41",
          "example",
          "this",
          "launches",
          "using",
          "uvx"
        ],
        "term_weights": [
          {
            "term": "mcp",
            "tf": 5,
            "weight": 0.076923
          },
          {
            "term": "the",
            "tf": 5,
            "weight": 0.076923
          },
          {
            "term": "docling",
            "tf": 5,
            "weight": 0.076923
          },
          {
            "term": "configuration",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "server",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "docs",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "usage",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "l41",
            "tf": 2,
            "weight": 0.030769
          },
          {
            "term": "example",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "this",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "launches",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "using",
            "tf": 1,
            "weight": 0.015385
          },
          {
            "term": "uvx",
            "tf": 1,
            "weight": 0.015385
          }
        ],
        "unique_terms": 41,
        "total_terms": 65
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "MCP Configuration Example",
        "com",
        "configuration",
        "docling",
        "docs",
        "github",
        "https",
        "mcp",
        "server",
        "the",
        "usage"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.7999999999999998,
      "retrieval_quality": 0.7354545454545455,
      "overall": 0.7118181818181818
    }
  },
  {
    "text": "### Format Selection Guide  **Use Markdown when:**  - Providing context to language models - Creating human-readable documentation - Generating static websites or wikis  **Use JSON when:**  - Preserving complete document structure for later processing - Building document databases or archives - Implementing document version control  **Use HTML when:**  - Rendering documents in web applications - Creating interactive document viewers - Generating print-ready outputs  **Use DOCTAGS when:**  - Training or fine-tuning vision-language models - Creating structured datasets for ML - Preserving semantic document structure with minimal tokens  Sources: [README.md35](https://github.com/docling-project/docling/blob/f7244a43/README.md#L35-L35) [docs/index.md27](https://github.com/docling-project/docling/blob/f7244a43/docs/index.md#L27-L27)  ---",
    "metadata": {
      "chunk_id": "e45a849636d1-0028",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 28,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Format Selection Guide"
      ],
      "heading_text": "Format Selection Guide",
      "token_count": 178,
      "char_count": 844,
      "start_char": 18461,
      "end_char": 19305,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6900000000000001,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.752791",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Format Selection Guide",
      "chunk_hash": "84e30cd522ab4318",
      "content_digest": "84e30cd522ab4318",
      "chunk_length": 844,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "document",
          "use",
          "when",
          "docling",
          "creating",
          "language",
          "models",
          "generating",
          "preserving",
          "structure",
          "for",
          "readme",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "l35",
          "docs"
        ],
        "term_weights": [
          {
            "term": "document",
            "tf": 5,
            "weight": 0.05
          },
          {
            "term": "use",
            "tf": 4,
            "weight": 0.04
          },
          {
            "term": "when",
            "tf": 4,
            "weight": 0.04
          },
          {
            "term": "docling",
            "tf": 4,
            "weight": 0.04
          },
          {
            "term": "creating",
            "tf": 3,
            "weight": 0.03
          },
          {
            "term": "language",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "models",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "generating",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "preserving",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "structure",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "for",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "https",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "github",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "com",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "project",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "blob",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "f7244a43",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "l35",
            "tf": 2,
            "weight": 0.02
          },
          {
            "term": "docs",
            "tf": 2,
            "weight": 0.02
          }
        ],
        "unique_terms": 68,
        "total_terms": 100
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Format Selection Guide",
        "creating",
        "docling",
        "document",
        "generating",
        "language",
        "models",
        "preserving",
        "structure",
        "use",
        "when"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6900000000000001,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "## Summary\n\nDocling's output and integration capabilities center around the `DoclingDocument` unified representation:\n\n1. **Export**: Four serialization formats (`export_to_markdown()`, `export_to_json()`, `export_to_html()`, `export_to_doctags()`) provide format-specific outputs for different use cases\n\n2. **Chunking**: The `HybridChunker` from `docling-core` segments documents into `DocChunk` objects with preserved hierarchical context for RAG systems\n\n3. **Integration**: Native support for LangChain, LlamaIndex, Haystack via dedicated loader packages, plus MCP server for agent frameworks\n\nAll export and integration paths preserve the document's hierarchical structure and provenance metadata, enabling downstream systems to leverage Docling's advanced document understanding capabilities.\n\nSources: [README.md28-43](https://github.com/docling-project/docling/blob/f7244a43/README.md#L28-L43) [pyproject.toml45-148](https://github.com/docling-project/docling/blob/f7244a43/pyproject.toml#L45-L148) [mkdocs.yml54-162](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml#L54-L162)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "e45a849636d1-0029",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 29,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Summary"
      ],
      "heading_text": "Summary",
      "token_count": 280,
      "char_count": 1204,
      "start_char": 19307,
      "end_char": 20511,
      "semantic_score": 0.7,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5483333333333333,
      "chunking_strategy": "hybrid_adaptive_semchunk",
      "content_type": "prose_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.753453",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "Summary",
      "chunk_hash": "89abb2dc5031b763",
      "content_digest": "89abb2dc5031b763",
      "chunk_length": 1204,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "export",
          "for",
          "and",
          "integration",
          "the",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "capabilities",
          "hierarchical",
          "systems",
          "document",
          "readme",
          "pyproject",
          "mkdocs",
          "refresh"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 9,
            "weight": 0.061224
          },
          {
            "term": "export",
            "tf": 6,
            "weight": 0.040816
          },
          {
            "term": "for",
            "tf": 4,
            "weight": 0.027211
          },
          {
            "term": "and",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "integration",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "the",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "https",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "github",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "com",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "project",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "blob",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "f7244a43",
            "tf": 3,
            "weight": 0.020408
          },
          {
            "term": "capabilities",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "hierarchical",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "systems",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "document",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "readme",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "pyproject",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "mkdocs",
            "tf": 2,
            "weight": 0.013605
          },
          {
            "term": "refresh",
            "tf": 2,
            "weight": 0.013605
          }
        ],
        "unique_terms": 103,
        "total_terms": 147
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Summary",
        "and",
        "com",
        "docling",
        "export",
        "for",
        "github",
        "https",
        "integration",
        "project",
        "the"
      ]
    },
    "advanced_scores": {
      "semantic": 0.7,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5483333333333333,
      "overall": 0.7161111111111111
    }
  },
  {
    "text": "### On this page  - [Output and Integration](#output-and-integration.md) - [Purpose and Scope](#purpose-and-scope.md) - [Output Architecture](#output-architecture.md) - [Export Flow Diagram](#export-flow-diagram.md) - [Export Formats Overview](#export-formats-overview.md) - [Basic Export Example](#basic-export-example.md) - [Document Chunking Overview](#document-chunking-overview.md) - [Chunking Workflow](#chunking-workflow.md) - [Chunking Strategies](#chunking-strategies.md) - [Framework Integration Architecture](#framework-integration-architecture.md) - [Integration Landscape Diagram](#integration-landscape-diagram.md) - [Integration Patterns](#integration-patterns.md) - [Pattern 1: Direct Framework Integration](#pattern-1-direct-framework-integration.md) - [Pattern 2: MCP Server for Agents](#pattern-2-mcp-server-for-agents.md) - [Pattern 3: Vector Database Ingestion](#pattern-3-vector-database-ingestion.md) - [Export Method Reference](#export-method-reference.md) - [Export Method Signatures](#export-method-signatures.md) - [Chunking Configuration](#chunking-configuration.md) - [Chunking Method Flow](#chunking-method-flow.md) - [Integration Dependencies](#integration-dependencies.md) - [Core Dependencies](#core-dependencies.md) - [Optional Integration Dependencies](#optional-integration-dependencies.md) - [Framework Integration Packages](#framework-integration-packages.md) - [Use Case: RAG Pipeline](#use-case-rag-pipeline.md) - [Code Example Structure](#code-example-structure.md) - [MCP Server Architecture](#mcp-server-architecture.md) - [MCP Configuration Example](#mcp-configuration-example.md) - [Export Format Comparison](#export-format-comparison.md) - [Format Selection Guide](#format-selection-guide.md) - [Summary](#summary.md)",
    "metadata": {
      "chunk_id": "e45a849636d1-0030",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "filename": "_docling-project_docling_8-output-and-integration.md",
      "file_extension": ".md",
      "chunk_index": 30,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "On this page"
      ],
      "heading_text": "On this page",
      "token_count": 424,
      "char_count": 1763,
      "start_char": 20513,
      "end_char": 22276,
      "semantic_score": 0.6,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.7076878048780488,
      "chunking_strategy": "hybrid_adaptive_structural",
      "content_type": "list_section",
      "embedding_model": "jina-code-embeddings-1.5b",
      "embedding_dimension": 1536,
      "processing_timestamp": "2025-10-20T07:48:17.754129",
      "document_id": "e45a849636d1",
      "document_name": "_docling-project_docling_8-output-and-integration",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_8-output-and-integration.md",
      "source_filename": "_docling-project_docling_8-output-and-integration.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\Docling\\_docling-project_docling_8-output-and-integration.md",
      "hierarchy_path": "On this page",
      "chunk_hash": "7853f990b5ed5a87",
      "content_digest": "7853f990b5ed5a87",
      "chunk_length": 1763,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "integration",
          "export",
          "chunking",
          "architecture",
          "example",
          "framework",
          "pattern",
          "mcp",
          "method",
          "dependencies",
          "output",
          "and",
          "flow",
          "diagram",
          "overview",
          "server",
          "configuration",
          "format",
          "purpose",
          "scope"
        ],
        "term_weights": [
          {
            "term": "integration",
            "tf": 16,
            "weight": 0.091954
          },
          {
            "term": "export",
            "tf": 12,
            "weight": 0.068966
          },
          {
            "term": "chunking",
            "tf": 10,
            "weight": 0.057471
          },
          {
            "term": "architecture",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "example",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "framework",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "pattern",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "mcp",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "method",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "dependencies",
            "tf": 6,
            "weight": 0.034483
          },
          {
            "term": "output",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "and",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "flow",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "diagram",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "overview",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "server",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "configuration",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "format",
            "tf": 4,
            "weight": 0.022989
          },
          {
            "term": "purpose",
            "tf": 2,
            "weight": 0.011494
          },
          {
            "term": "scope",
            "tf": 2,
            "weight": 0.011494
          }
        ],
        "unique_terms": 50,
        "total_terms": 174
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "On this page",
        "architecture",
        "chunking",
        "dependencies",
        "example",
        "export",
        "framework",
        "integration",
        "mcp",
        "method",
        "pattern"
      ]
    },
    "advanced_scores": {
      "semantic": 0.6,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.7076878048780488,
      "overall": 0.7358959349593496
    }
  }
]