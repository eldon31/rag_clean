[
  {
    "text": "## Pipeline Processing Phases  The three-phase execution model provides clear separation of concerns during document processing:",
    "metadata": {
      "chunk_id": "60a2a103a180-0003",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "file_extension": ".md",
      "chunk_index": 3,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Pipeline Processing Phases"
      ],
      "heading_text": "Pipeline Processing Phases",
      "token_count": 20,
      "char_count": 128,
      "start_char": 0,
      "end_char": 128,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:05.220810",
      "document_id": "60a2a103a180",
      "document_name": "_docling-project_docling_5.6-base-pipeline-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "hierarchy_path": "Pipeline Processing Phases",
      "chunk_hash": "d167f62844debd5f",
      "content_digest": "d167f62844debd5f",
      "chunk_length": 128,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "processing",
          "pipeline",
          "phases",
          "the",
          "three",
          "phase",
          "execution",
          "model",
          "provides",
          "clear",
          "separation",
          "concerns",
          "during",
          "document"
        ],
        "term_weights": [
          {
            "term": "processing",
            "tf": 2,
            "weight": 0.133333
          },
          {
            "term": "pipeline",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "phases",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "three",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "phase",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "execution",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "model",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "provides",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "clear",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "separation",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "concerns",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "during",
            "tf": 1,
            "weight": 0.066667
          },
          {
            "term": "document",
            "tf": 1,
            "weight": 0.066667
          }
        ],
        "unique_terms": 14,
        "total_terms": 15
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Pipeline Processing Phases",
        "clear",
        "execution",
        "model",
        "phase",
        "phases",
        "pipeline",
        "processing",
        "provides",
        "the",
        "three"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "## Model Integration Architecture  Pipelines integrate with two main types of models:",
    "metadata": {
      "chunk_id": "60a2a103a180-0008",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "file_extension": ".md",
      "chunk_index": 8,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Model Integration Architecture"
      ],
      "heading_text": "Model Integration Architecture",
      "token_count": 15,
      "char_count": 85,
      "start_char": 0,
      "end_char": 85,
      "semantic_score": 0.8,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:05.226546",
      "document_id": "60a2a103a180",
      "document_name": "_docling-project_docling_5.6-base-pipeline-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "hierarchy_path": "Model Integration Architecture",
      "chunk_hash": "f468b0c2a5eef0b2",
      "content_digest": "f468b0c2a5eef0b2",
      "chunk_length": 85,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "model",
          "integration",
          "architecture",
          "pipelines",
          "integrate",
          "with",
          "two",
          "main",
          "types",
          "models"
        ],
        "term_weights": [
          {
            "term": "model",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "integration",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "pipelines",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "integrate",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "with",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "two",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "main",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "types",
            "tf": 1,
            "weight": 0.1
          },
          {
            "term": "models",
            "tf": 1,
            "weight": 0.1
          }
        ],
        "unique_terms": 10,
        "total_terms": 10
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Model Integration Architecture",
        "architecture",
        "integrate",
        "integration",
        "main",
        "model",
        "models",
        "pipelines",
        "two",
        "types",
        "with"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.8,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.59,
      "overall": 0.7633333333333333
    }
  },
  {
    "text": "# Base Pipeline Architecture  Relevant source files  - [docling/cli/main.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py) - [docling/datamodel/base\\_models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py) - [docling/datamodel/document.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py) - [docling/datamodel/extraction.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/extraction.py) - [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py) - [docling/document\\_converter.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py) - [docling/document\\_extractor.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py) - [docling/models/vlm\\_models\\_inline/nuextract\\_transformers\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/vlm_models_inline/nuextract_transformers_model.py) - [docling/pipeline/asr\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/asr_pipeline.py) - [docling/pipeline/base\\_extraction\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_extraction_pipeline.py) - [docling/pipeline/base\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py) - [docling/pipeline/extraction\\_vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py) - [docling/pipeline/simple\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/simple_pipeline.py) - [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py) - [docling/pipeline/vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py)  This document covers the foundational pipeline framework in Docling that enables extensible document processing workflows. The base pipeline architecture defines abstract interfaces, execution patterns, model integration points, and caching mechanisms that allow different processing strategies to be implemented consistently. The key architectural components include:  - `BasePipeline`: Abstract base class defining the three-phase execution model (build, assemble, enrich) - `ConvertPipeline`: Specialization that adds enrichment model support - `PaginatedPipeline`: Specialization that adds page-by-page processing for paginated formats - Pipeline caching: Instance reuse based on pipeline class and options hash to avoid redundant model loading  For information about specific pipeline implementations like PDF processing, see page 5.1 (Standard PDF Pipeline) and page 5.3 (VLM Pipeline). For document backends that pipelines operate on, see page 3 (Document Backends).",
    "metadata": {
      "chunk_id": "60a2a103a180-0000",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "file_extension": ".md",
      "chunk_index": 0,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Base Pipeline Architecture"
      ],
      "heading_text": "Base Pipeline Architecture",
      "token_count": 719,
      "char_count": 3084,
      "start_char": 0,
      "end_char": 3084,
      "semantic_score": 0.3640137314796448,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.6993788819875777,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:05.216351",
      "document_id": "60a2a103a180",
      "document_name": "_docling-project_docling_5.6-base-pipeline-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "hierarchy_path": "Base Pipeline Architecture",
      "chunk_hash": "fc3f522183607a21",
      "content_digest": "fc3f522183607a21",
      "chunk_length": 3084,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "pipeline",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "document",
          "base",
          "datamodel",
          "vlm",
          "models",
          "extraction",
          "model",
          "that",
          "page",
          "pdf",
          "the",
          "processing"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 61,
            "weight": 0.167123
          },
          {
            "term": "pipeline",
            "tf": 38,
            "weight": 0.10411
          },
          {
            "term": "https",
            "tf": 15,
            "weight": 0.041096
          },
          {
            "term": "github",
            "tf": 15,
            "weight": 0.041096
          },
          {
            "term": "com",
            "tf": 15,
            "weight": 0.041096
          },
          {
            "term": "project",
            "tf": 15,
            "weight": 0.041096
          },
          {
            "term": "blob",
            "tf": 15,
            "weight": 0.041096
          },
          {
            "term": "f7244a43",
            "tf": 15,
            "weight": 0.041096
          },
          {
            "term": "document",
            "tf": 10,
            "weight": 0.027397
          },
          {
            "term": "base",
            "tf": 9,
            "weight": 0.024658
          },
          {
            "term": "datamodel",
            "tf": 8,
            "weight": 0.021918
          },
          {
            "term": "vlm",
            "tf": 7,
            "weight": 0.019178
          },
          {
            "term": "models",
            "tf": 6,
            "weight": 0.016438
          },
          {
            "term": "extraction",
            "tf": 6,
            "weight": 0.016438
          },
          {
            "term": "model",
            "tf": 6,
            "weight": 0.016438
          },
          {
            "term": "that",
            "tf": 5,
            "weight": 0.013699
          },
          {
            "term": "page",
            "tf": 5,
            "weight": 0.013699
          },
          {
            "term": "pdf",
            "tf": 4,
            "weight": 0.010959
          },
          {
            "term": "the",
            "tf": 4,
            "weight": 0.010959
          },
          {
            "term": "processing",
            "tf": 4,
            "weight": 0.010959
          }
        ],
        "unique_terms": 95,
        "total_terms": 365
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Base Pipeline Architecture",
        "base",
        "blob",
        "com",
        "docling",
        "document",
        "f7244a43",
        "github",
        "https",
        "pipeline",
        "project"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.3640137314796448,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.6993788819875777,
      "overall": 0.6544642044890742
    }
  },
  {
    "text": "## Pipeline Hierarchy  The Docling pipeline architecture is built around a hierarchy of abstract base classes that define different processing paradigms: ``` ``` **Sources:** [docling/pipeline/base\\_pipeline.py43-133](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L43-L133) [docling/pipeline/base\\_pipeline.py135-182](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L135-L182) [docling/pipeline/base\\_pipeline.py184-319](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L184-L319) [docling/pipeline/simple\\_pipeline.py16-56](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/simple_pipeline.py#L16-L56) [docling/pipeline/vlm\\_pipeline.py50-389](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py#L50-L389) [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py296-648](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L296-L648) [docling/pipeline/asr\\_pipeline.py204-242](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/asr_pipeline.py#L204-L242) [docling/pipeline/extraction\\_vlm\\_pipeline.py32-198](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L32-L198) [docling/pipeline/base\\_extraction\\_pipeline.py15-73](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_extraction_pipeline.py#L15-L73)",
    "metadata": {
      "chunk_id": "60a2a103a180-0001",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "file_extension": ".md",
      "chunk_index": 1,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Pipeline Hierarchy"
      ],
      "heading_text": "Pipeline Hierarchy",
      "token_count": 424,
      "char_count": 1554,
      "start_char": 0,
      "end_char": 1554,
      "semantic_score": 0.41916805505752563,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5999272727272728,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:05.219245",
      "document_id": "60a2a103a180",
      "document_name": "_docling-project_docling_5.6-base-pipeline-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "hierarchy_path": "Pipeline Hierarchy",
      "chunk_hash": "7ae16f6c20686020",
      "content_digest": "7ae16f6c20686020",
      "chunk_length": 1554,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "pipeline",
          "docling",
          "base",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "vlm",
          "extraction",
          "hierarchy",
          "simple",
          "threaded",
          "standard",
          "pdf",
          "asr",
          "the",
          "architecture",
          "built"
        ],
        "term_weights": [
          {
            "term": "pipeline",
            "tf": 38,
            "weight": 0.186275
          },
          {
            "term": "docling",
            "tf": 37,
            "weight": 0.181373
          },
          {
            "term": "base",
            "tf": 9,
            "weight": 0.044118
          },
          {
            "term": "https",
            "tf": 9,
            "weight": 0.044118
          },
          {
            "term": "github",
            "tf": 9,
            "weight": 0.044118
          },
          {
            "term": "com",
            "tf": 9,
            "weight": 0.044118
          },
          {
            "term": "project",
            "tf": 9,
            "weight": 0.044118
          },
          {
            "term": "blob",
            "tf": 9,
            "weight": 0.044118
          },
          {
            "term": "f7244a43",
            "tf": 9,
            "weight": 0.044118
          },
          {
            "term": "vlm",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "extraction",
            "tf": 4,
            "weight": 0.019608
          },
          {
            "term": "hierarchy",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "simple",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "threaded",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "standard",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "pdf",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "asr",
            "tf": 2,
            "weight": 0.009804
          },
          {
            "term": "the",
            "tf": 1,
            "weight": 0.004902
          },
          {
            "term": "architecture",
            "tf": 1,
            "weight": 0.004902
          },
          {
            "term": "built",
            "tf": 1,
            "weight": 0.004902
          }
        ],
        "unique_terms": 63,
        "total_terms": 204
      },
      "modal_hint": "code",
      "content_flags": {
        "has_code_block": true,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Pipeline Hierarchy",
        "base",
        "blob",
        "com",
        "docling",
        "f7244a43",
        "github",
        "https",
        "pipeline",
        "project",
        "vlm"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.41916805505752563,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5999272727272728,
      "overall": 0.6396984425949328
    }
  },
  {
    "text": "## Error Handling and Status Determination  Pipelines implement different strategies for determining conversion status:  - **SimplePipeline**: Always returns `SUCCESS` if no exceptions occur - **VlmPipeline**: Checks for valid pages and backend status - **ThreadedStandardPdfPipeline**: Preserves status from threaded processing - **AsrPipeline**: Always returns `SUCCESS` for valid transcription  All pipelines support graceful error handling through the `raises_on_error` parameter in `execute()`, allowing partial results to be returned instead of exceptions. **Sources:** [docling/pipeline/simple\\_pipeline.py43-47](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/simple_pipeline.py#L43-L47) [docling/pipeline/base\\_pipeline.py295-314](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L295-L314) [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py639-640](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py#L639-L640) [docling/pipeline/asr\\_pipeline.py224-226](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/asr_pipeline.py#L224-L226) [docling/pipeline/base\\_pipeline.py77-81](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py#L77-L81)  Dismiss  Refresh this wiki  This wiki was recently refreshed. Please wait 4 days to refresh again.",
    "metadata": {
      "chunk_id": "60a2a103a180-0014",
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "file_extension": ".md",
      "chunk_index": 14,
      "document_level": 1,
      "parent_chunk_id": null,
      "child_chunk_ids": [],
      "section_path": [
        "Error Handling and Status Determination"
      ],
      "heading_text": "Error Handling and Status Determination",
      "token_count": 345,
      "char_count": 1435,
      "start_char": 0,
      "end_char": 1435,
      "semantic_score": 0.40912288427352905,
      "structural_score": 0.8999999999999999,
      "retrieval_quality": 0.5401666666666667,
      "chunking_strategy": "hierarchical_balanced",
      "content_type": "hierarchical_section",
      "embedding_model": "nomic-ai/CodeRankEmbed",
      "processing_timestamp": "2025-10-19T14:47:05.235990",
      "document_id": "60a2a103a180",
      "document_name": "_docling-project_docling_5.6-base-pipeline-architecture",
      "source_path": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_filename": "_docling-project_docling_5.6-base-pipeline-architecture.md",
      "source_directory": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\docling",
      "relative_path": "Docs\\docling\\_docling-project_docling_5.6-base-pipeline-architecture.md",
      "hierarchy_path": "Error Handling and Status Determination",
      "chunk_hash": "a9a9b433e28175e7",
      "content_digest": "a9a9b433e28175e7",
      "chunk_length": 1435,
      "payload_version": "1.3",
      "collection_hints": [
        "qdrant_ecosystem"
      ],
      "sparse_features": {
        "version": "1.0",
        "weighting": "tf-normalized",
        "top_terms": [
          "docling",
          "pipeline",
          "https",
          "github",
          "com",
          "project",
          "blob",
          "f7244a43",
          "status",
          "base",
          "error",
          "for",
          "threaded",
          "handling",
          "and",
          "pipelines",
          "always",
          "returns",
          "success",
          "exceptions"
        ],
        "term_weights": [
          {
            "term": "docling",
            "tf": 20,
            "weight": 0.114286
          },
          {
            "term": "pipeline",
            "tf": 20,
            "weight": 0.114286
          },
          {
            "term": "https",
            "tf": 5,
            "weight": 0.028571
          },
          {
            "term": "github",
            "tf": 5,
            "weight": 0.028571
          },
          {
            "term": "com",
            "tf": 5,
            "weight": 0.028571
          },
          {
            "term": "project",
            "tf": 5,
            "weight": 0.028571
          },
          {
            "term": "blob",
            "tf": 5,
            "weight": 0.028571
          },
          {
            "term": "f7244a43",
            "tf": 5,
            "weight": 0.028571
          },
          {
            "term": "status",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "base",
            "tf": 4,
            "weight": 0.022857
          },
          {
            "term": "error",
            "tf": 3,
            "weight": 0.017143
          },
          {
            "term": "for",
            "tf": 3,
            "weight": 0.017143
          },
          {
            "term": "threaded",
            "tf": 3,
            "weight": 0.017143
          },
          {
            "term": "handling",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "and",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "pipelines",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "always",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "returns",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "success",
            "tf": 2,
            "weight": 0.011429
          },
          {
            "term": "exceptions",
            "tf": 2,
            "weight": 0.011429
          }
        ],
        "unique_terms": 86,
        "total_terms": 175
      },
      "modal_hint": "prose",
      "content_flags": {
        "has_code_block": false,
        "has_table": false,
        "has_list": false,
        "has_json": false,
        "has_formula": false
      },
      "search_keywords": [
        "Error Handling and Status Determination",
        "base",
        "blob",
        "com",
        "docling",
        "f7244a43",
        "github",
        "https",
        "pipeline",
        "project",
        "status"
      ],
      "quality_fallback": true,
      "quality_notes": "Promoted via relaxed thresholds"
    },
    "advanced_scores": {
      "semantic": 0.40912288427352905,
      "structural": 0.8999999999999999,
      "retrieval_quality": 0.5401666666666667,
      "overall": 0.6164298503133986
    }
  }
]