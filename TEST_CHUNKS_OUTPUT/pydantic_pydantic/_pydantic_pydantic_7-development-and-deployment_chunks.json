[
  {
    "text": "Development and Deployment | pydantic/pydantic | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[pydantic/pydantic](https://github.com/pydantic/pydantic \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 11 October 2025 ([76ef0b](https://github.com/pydantic/pydantic/commits/76ef0b08))\n\n- [Overview](pydantic/pydantic/1-overview.md)\n- [Core Model System](pydantic/pydantic/2-core-model-system.md)\n- [BaseModel](pydantic/pydantic/2.1-basemodel.md)\n- [Field System](pydantic/pydantic/2.2-field-system.md)\n- [Model Configuration](pydantic/pydantic/2.3-model-configuration.md)\n- [Type System](pydantic/pydantic/3-type-system.md)\n- [Constrained Types](pydantic/pydantic/3.1-constrained-types.md)\n- [Network Types](pydantic/pydantic/3.2-network-types.md)\n- [TypeAdapter](pydantic/pydantic/3.3-typeadapter.md)\n- [Generics and Forward References](pydantic/pydantic/3.4-generics-and-forward-references.md)\n- [Validation and Serialization](pydantic/pydantic/4-validation-and-serialization.md)\n- [Validators](pydantic/pydantic/4.1-validators.md)\n- [Serializers](pydantic/pydantic/4.2-serializers.md)\n- [JSON Conversion](pydantic/pydantic/4.3-json-conversion.md)\n- [Schema Generation](pydantic/pydantic/5-schema-generation.md)\n- [Core Schema Generation](pydantic/pydantic/5.1-core-schema-generation.md)\n- [JSON Schema Generation](pydantic/pydantic/5.2-json-schema-generation.md)\n- [Advanced Features](pydantic/pydantic/6-advanced-features.md)\n- [Dataclass Support](pydantic/pydantic/6.1-dataclass-support.md)\n- [Function Validation](pydantic/pydantic/6.2-function-validation.md)\n- [RootModel and Computed Fields](pydantic/pydantic/6.3-rootmodel-and-computed-fields.md)\n- [Plugin System](pydantic/pydantic/6.4-plugin-system.md)\n- [Development and Deployment](pydantic/pydantic/7-development-and-deployment.md)\n- [Testing Framework](pydantic/pydantic/7.1-testing-framework.md)\n- [CI/CD Pipeline](pydantic/pydantic/7.2-cicd-pipeline.md)\n- [Documentation System](pydantic/pydantic/7.3-documentation-system.md)\n- [Versioning and Dependencies](pydantic/pydantic/7.4-versioning-and-dependencies.md)\n- [Migration and Compatibility](pydantic/pydantic/8-migration-and-compatibility.md)\n- [V1 to V2 Migration](pydantic/pydantic/8.1-v1-to-v2-migration.md)\n- [Backported Modules](pydantic/pydantic/8.2-backported-modules.md)\n\nMenu\n\n# Development and Deployment\n\nRelevant source files",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "input_type": "pydantic_pydantic",
      "chunking_strategy": "programming_language_documentation",
      "token_count": 747,
      "character_count": 2476,
      "created_at": "2025-10-16T17:41:46.228882",
      "parent_context": null,
      "semantic_type": "pydantic_pydantic",
      "collection_name": "pydantic_pydantic",
      "subfolder_name": null,
      "collection_strategy": "programming_language_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "collection_context": "pydantic_pydantic"
    }
  },
  {
    "text": "- [.github/labels/default\\_pass.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/labels/default_pass.yml)\n- [.github/labels/first\\_pass.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/labels/first_pass.yml)\n- [.github/workflows/ci.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml)\n- [.github/workflows/codspeed.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/codspeed.yml)\n- [.github/workflows/dependencies-check.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/dependencies-check.yml)\n- [.github/workflows/docs-update.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/docs-update.yml)\n- [.github/workflows/integration.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/integration.yml)\n- [.github/workflows/labeler.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/labeler.yml)\n- [.github/workflows/third-party.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/third-party.yml)\n- [.github/workflows/update-pydantic-people.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/update-pydantic-people.yml)\n- [.github/workflows/upload-previews.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/upload-previews.yml)\n- [CITATION.cff](https://github.com/pydantic/pydantic/blob/76ef0b08/CITATION.cff)\n- [HISTORY.md](https://github.com/pydantic/pydantic/blob/76ef0b08/HISTORY.md)\n- [README.md](https://github.com/pydantic/pydantic/blob/76ef0b08/README.md)\n- [build-docs.sh](https://github.com/pydantic/pydantic/blob/76ef0b08/build-docs.sh)\n- [docs/extra/tweaks.css](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/extra/tweaks.css)\n- [docs/index.md](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/index.md)\n- [docs/install.md](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/install.md)\n- [docs/theme/main.html](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/theme/main.html)\n- [docs/why.md](https://github.com/pydantic/pydantic/blob/76ef0b08/docs/why.md)\n- [mkdocs.yml](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml)\n- [pydantic/version.py](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py)\n- [tests/conftest.py](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py)\n- [uv.lock](https://github.com/pydantic/pydantic/blob/76ef0b08/uv.lock)\n\nThis document describes the development infrastructure, testing framework, continuous integration/deployment pipeline, and release processes for Pydantic. It covers how the codebase is tested, versioned, documented, and deployed to users.\n\nFor information about the core model system and validation logic, see [Core Model System](pydantic/pydantic/2-core-model-system.md). For schema generation internals, see [Schema Generation](pydantic/pydantic/5-schema-generation.md).\n\n## Overview\n\nPydantic's development and deployment infrastructure encompasses:\n\n- **Version Management**: Strict version compatibility checks between `pydantic` and `pydantic-core`\n- **Testing Framework**: Comprehensive test suite with pytest fixtures and utilities\n- **CI/CD Pipeline**: GitHub Actions workflows for linting, testing, and deployment\n- **Documentation System**: MkDocs-based documentation with versioning via mike\n- **Release Process**: Automated PyPI publishing with trusted publishing and changelog generation\n\nThe infrastructure ensures quality through multi-platform testing, third-party integration testing, and automated version compatibility validation.\n\n## Version Management and Compatibility\n\n### Version Constants and Checking",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "input_type": "pydantic_pydantic",
      "chunking_strategy": "programming_language_documentation",
      "token_count": 998,
      "character_count": 3702,
      "created_at": "2025-10-16T17:41:46.232182",
      "parent_context": null,
      "semantic_type": "pydantic_pydantic",
      "collection_name": "pydantic_pydantic",
      "subfolder_name": null,
      "collection_strategy": "programming_language_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "collection_context": "pydantic_pydantic"
    }
  },
  {
    "text": "Pydantic maintains strict version compatibility between the pure Python package (`pydantic`) and the Rust-based validation core (`pydantic-core`).\n\n```\n```\n\n**Sources**: [pydantic/version.py11](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L11-L11) [pydantic/version.py22](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L22-L22) [pydantic/version.py77-99](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L77-L99)\n\n| Component                           | Description                          | Location                                                                                                   |\n| ----------------------------------- | ------------------------------------ | ---------------------------------------------------------------------------------------------------------- |\n| `VERSION`                           | Current Pydantic version string      | [pydantic/version.py11](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L11-L11)    |\n| `_COMPATIBLE_PYDANTIC_CORE_VERSION` | Required pydantic-core version       | [pydantic/version.py22](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L22-L22)    |\n| `check_pydantic_core_version()`     | Validates core version match         | [pydantic/version.py77-79](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L77-L79) |\n| `_ensure_pydantic_core_version()`   | Raises SystemError on mismatch       | [pydantic/version.py82-98](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L82-L98) |\n| `version_info()`                    | Returns detailed version information | [pydantic/version.py33-74](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L33-L74) |\n\nThe version check occurs at import time and raises a `SystemError` if the installed `pydantic-core` version doesn't match the expected version, unless Pydantic is installed in editable mode (development).\n\n### Version Information Utility\n\nThe `version_info()` function provides comprehensive environment information:\n\n```\n```\n\nReturns information including:\n\n- Pydantic version\n- pydantic-core version and build profile\n- Python version and platform\n- Related package versions (FastAPI, mypy, pyright, etc.)\n- Git commit hash (if in git repository)\n\n**Sources**: [pydantic/version.py33-74](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L33-L74)\n\n## Testing Infrastructure\n\n### Test Organization and Fixtures\n\n```\n```\n\n**Sources**: [tests/conftest.py1-203](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L1-L203)\n\n### Key Testing Fixtures\n\n| Fixture                 | Purpose                                                          | Lines                                                                                                      |\n| ----------------------- | ---------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------- |\n| `create_module`         | Dynamically creates and imports Python modules for testing       | [tests/conftest.py65-102](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L65-L102)   |\n| `subprocess_run_code`   | Executes code in a subprocess and captures output                | [tests/conftest.py106-118](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L106-L118) |\n| `generate_schema_calls` | Tracks GenerateSchema.generate\\_schema call counts               | [tests/conftest.py145-160](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L145-L160) |\n| `validate_json_schemas` | Auto-validates generated JSON schemas against Draft 2020-12 spec | [tests/conftest.py164-181](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L164-L181) |\n| `disable_error_urls`    | Disables error URLs in output (for stable docs)                  | [tests/conftest.py57-61](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L57-L61)     |\n\n### Module Creation Fixture\n\nThe `create_module` fixture enables dynamic module creation for testing:\n\n```\n```\n\nThis fixture:",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "input_type": "pydantic_pydantic",
      "chunking_strategy": "programming_language_documentation",
      "token_count": 1001,
      "character_count": 4243,
      "created_at": "2025-10-16T17:41:46.239021",
      "parent_context": null,
      "semantic_type": "pydantic_pydantic",
      "collection_name": "pydantic_pydantic",
      "subfolder_name": null,
      "collection_strategy": "programming_language_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "collection_context": "pydantic_pydantic"
    }
  },
  {
    "text": "1. Extracts source code from functions or uses provided strings\n2. Creates temporary Python files with unique names\n3. Imports modules with optional assertion rewriting\n4. Returns executable module objects for testing\n\n**Sources**: [tests/conftest.py65-102](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L65-L102) [tests/conftest.py30-43](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L30-L43) [tests/conftest.py46-54](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L46-L54)\n\n### Thread Safety Markers\n\nTests using certain fixtures are automatically marked as `thread_unsafe`:\n\n- `generate_schema_calls` - Monkeypatches Pydantic code\n- `benchmark` - Cannot be reused across threads\n- `tmp_path`/`tmpdir` - Duplicate paths/dirs\n- `copy_method` - Uses `pytest.warns()`\n- `reset_plugins` - Monkeypatching\n\n**Sources**: [tests/conftest.py184-202](https://github.com/pydantic/pydantic/blob/76ef0b08/tests/conftest.py#L184-L202)\n\n## CI/CD Pipeline\n\n### Main CI Workflow\n\n```\n```\n\n**Sources**: [.github/workflows/ci.yml1-436](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml#L1-L436)\n\n### CI Jobs Breakdown\n\n| Job                             | Purpose                             | Triggers                 | Matrix                   |\n| ------------------------------- | ----------------------------------- | ------------------------ | ------------------------ |\n| `lint`                          | Pre-commit hooks, ruff, type checks | All pushes/PRs           | Python 3.9-3.14          |\n| `docs-build`                    | Validate documentation builds       | All pushes/PRs           | Single Python 3.12       |\n| `test`                          | Core test suite                     | All pushes/PRs           | 4 OS × 8 Python versions |\n| `test-memray`                   | Memory profiling tests              | All pushes/PRs           | Python 3.12              |\n| `test-mypy`                     | Mypy plugin tests                   | All pushes/PRs           | Python 3.13              |\n| `test-plugin`                   | Pydantic plugin system tests        | All pushes/PRs           | Python 3.12              |\n| `test-typechecking-integration` | Pyright/mypy integration            | All pushes/PRs           | Python 3.12              |\n| `coverage-combine`              | Aggregate coverage                  | After tests              | N/A                      |\n| `coverage-pr-comment`           | Post coverage to PRs                | After coverage-combine   | N/A                      |\n| `release`                       | Publish to PyPI                     | Tags only                | N/A                      |\n| `send-tweet`                    | Announce release                    | After successful release | N/A                      |\n\n**Sources**: [.github/workflows/ci.yml17-435](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml#L17-L435)\n\n### Test Matrix Configuration\n\nThe main test job runs across multiple platforms and Python versions:\n\n```\n```\n\nAdditional PyPy versions tested on Ubuntu only:\n\n- `pypy3.9`\n- `pypy3.10`\n- `pypy3.11`\n\n**Sources**: [.github/workflows/ci.yml86-111](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml#L86-L111)\n\n### Coverage Workflow\n\n```\n```\n\n**Sources**: [.github/workflows/ci.yml238-303](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml#L238-L303)\n\nCoverage files are:\n\n1. Generated in each test job with unique filenames\n2. Downloaded and combined using `coverage combine`\n3. Uploaded as artifacts\n4. Used to generate PR comments with coverage percentage\n\n### Release Process\n\n```\n```\n\n**Sources**: [.github/workflows/ci.yml352-384](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml#L352-L384)\n\nThe release job:\n\n1. Waits for all CI checks to pass\n2. Validates version in `pydantic/version.py` matches git tag\n3. Builds distribution using `python -m build`\n4. Publishes to PyPI using trusted publishing (OIDC)",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "input_type": "pydantic_pydantic",
      "chunking_strategy": "programming_language_documentation",
      "token_count": 1009,
      "character_count": 4080,
      "created_at": "2025-10-16T17:41:46.250040",
      "parent_context": null,
      "semantic_type": "pydantic_pydantic",
      "collection_name": "pydantic_pydantic",
      "subfolder_name": null,
      "collection_strategy": "programming_language_documentation",
      "chunk_index_in_file": 3,
      "file_relative_path": "Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "collection_context": "pydantic_pydantic"
    }
  },
  {
    "text": "**Sources**: [.github/workflows/ci.yml352-384](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml#L352-L384)\n\n## Third-Party Integration Testing\n\n```\n```\n\n**Sources**: [.github/workflows/third-party.yml1-506](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/third-party.yml#L1-L506)\n\n### Third-Party Test Strategy\n\nEach third-party test:\n\n1. Checks out the external project's repository\n2. Checks out Pydantic from current branch to `pydantic-latest` path\n3. Installs project dependencies\n4. Uninstalls locked Pydantic version\n5. Installs Pydantic from `pydantic-latest` path in editable mode\n6. Runs the project's test suite\n\nExample pattern:\n\n```\n```\n\n**Sources**: [.github/workflows/third-party.yml48-73](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/third-party.yml#L48-L73)\n\n### Tested Projects\n\n| Project               | Repository                                 | Python Versions | Special Requirements          |\n| --------------------- | ------------------------------------------ | --------------- | ----------------------------- |\n| FastAPI               | `fastapi/fastapi`                          | 3.9-3.13        | PYTHONPATH includes docs\\_src |\n| SQLModel              | `fastapi/sqlmodel`                         | 3.9-3.13        | None                          |\n| Beanie                | `BeanieODM/beanie`                         | 3.13 only       | MongoDB service               |\n| openapi-python-client | `openapi-generators/openapi-python-client` | 3.9-3.13        | PDM package manager           |\n| Pandera               | `unionai-oss/pandera`                      | 3.9-3.12        | Multiple extra dependencies   |\n| ODMantic              | `sydney-runkle/odmantic`                   | 3.9-3.11        | MongoDB service               |\n| Polar                 | `polarsource/polar`                        | 3.9-3.13        | PostgreSQL, MinIO, Node.js    |\n| BentoML               | `bentoml/BentoML`                          | 3.9, 3.11-3.12  | PDM package manager           |\n| Semantic Kernel       | `microsoft/semantic-kernel`                | 3.10-3.12       | Poetry package manager        |\n\n**Sources**: [.github/workflows/third-party.yml35-506](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/third-party.yml#L35-L506)\n\n## Documentation System\n\n### MkDocs Configuration\n\n```\n```\n\n**Sources**: [mkdocs.yml1-338](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml#L1-L338) [build-docs.sh1-26](https://github.com/pydantic/pydantic/blob/76ef0b08/build-docs.sh#L1-L26) [.github/workflows/docs-update.yml1-113](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/docs-update.yml#L1-L113)\n\n### Documentation Structure",
    "metadata": {
      "chunk_id": 4,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "input_type": "pydantic_pydantic",
      "chunking_strategy": "programming_language_documentation",
      "token_count": 732,
      "character_count": 2770,
      "created_at": "2025-10-16T17:41:46.254352",
      "parent_context": null,
      "semantic_type": "pydantic_pydantic",
      "collection_name": "pydantic_pydantic",
      "subfolder_name": null,
      "collection_strategy": "programming_language_documentation",
      "chunk_index_in_file": 4,
      "file_relative_path": "Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "collection_context": "pydantic_pydantic"
    }
  },
  {
    "text": "| Component    | Purpose                                 | Configuration                                                                                         |\n| ------------ | --------------------------------------- | ----------------------------------------------------------------------------------------------------- |\n| Theme        | Material for MkDocs with custom styling | [mkdocs.yml6-47](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml#L6-L47)                |\n| Navigation   | Hierarchical documentation structure    | [mkdocs.yml90-191](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml#L90-L191)            |\n| Mike         | Documentation versioning                | [mkdocs.yml220-222](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml#L220-L222)          |\n| mkdocstrings | API documentation from docstrings       | [mkdocs.yml248-264](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml#L248-L264)          |\n| llmstxt      | LLM-friendly documentation export       | [mkdocs.yml224-241](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml#L224-L241)          |\n| Algolia      | Search integration                      | Custom JS in [mkdocs.yml81-83](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml#L81-L83) |\n\n**Sources**: [mkdocs.yml1-338](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml#L1-L338)\n\n### Documentation Build Process\n\n```\n```\n\n**Sources**: [.github/workflows/docs-update.yml56-113](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/docs-update.yml#L56-L113)\n\n### Documentation Deployment\n\nThe `docs-update.yml` workflow:\n\n1. Triggers on pushes to `main`, `docs-update` branch, or tags\n\n2. Runs lint and test jobs first\n\n3. Checks out `docs-site` branch (orphan branch for built docs)\n\n4. Builds documentation using `mike` for versioning\n\n5. Deploys to `docs-site` branch:\n\n- `dev` version from `main` branch\n   - `X.Y` and `latest` versions from tags\n\n6. Uploads to Algolia for search indexing\n\n**Sources**: [.github/workflows/docs-update.yml1-113](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/docs-update.yml#L1-L113)\n\n### Build Script Symlinks\n\nThe build process creates symlinks to provide better source locations in documentation:\n\n```\n```\n\nThis results in documentation source links like:\n\n- `pydantic_core/core_schema.py`\n- Instead of: `.venv/lib/python3.10/site-packages/pydantic_core/core_schema.py`\n\n**Sources**: [build-docs.sh15-22](https://github.com/pydantic/pydantic/blob/76ef0b08/build-docs.sh#L15-L22) [.github/workflows/docs-update.yml84-88](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/docs-update.yml#L84-L88)\n\n## Dependency Management\n\n### UV Lock File and Synchronization\n\nPydantic uses `uv` for dependency management with a lock file:\n\n- Lock file: `uv.lock` (1+ revision)\n- Sync command: `uv sync` with various groups\n- Frozen mode: `UV_FROZEN=true` in CI to prevent updates\n\n**Sources**: [uv.lock1-3](https://github.com/pydantic/pydantic/blob/76ef0b08/uv.lock#L1-L3) [.github/workflows/ci.yml13](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml#L13-L13)\n\n### Dependency Groups\n\n| Group           | Purpose                         | Usage                    |\n| --------------- | ------------------------------- | ------------------------ |\n| `linting`       | Pre-commit, ruff, type checkers | CI lint job              |\n| `docs`          | MkDocs, material theme, plugins | Documentation builds     |\n| `docs-upload`   | Algolia upload tools            | Documentation deployment |\n| `testing-extra` | pytest, memray, coverage        | Full test suite          |\n| `typechecking`  | mypy, pyright, type stubs       | Type checking tests      |\n| `all`           | All development dependencies    | Local development        |",
    "metadata": {
      "chunk_id": 5,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "input_type": "pydantic_pydantic",
      "chunking_strategy": "programming_language_documentation",
      "token_count": 990,
      "character_count": 3865,
      "created_at": "2025-10-16T17:41:46.263926",
      "parent_context": null,
      "semantic_type": "pydantic_pydantic",
      "collection_name": "pydantic_pydantic",
      "subfolder_name": null,
      "collection_strategy": "programming_language_documentation",
      "chunk_index_in_file": 5,
      "file_relative_path": "Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "collection_context": "pydantic_pydantic"
    }
  },
  {
    "text": "**Sources**: [.github/workflows/ci.yml34](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml#L34-L34) [.github/workflows/docs-update.yml75](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/docs-update.yml#L75-L75)\n\n### Dependency Version Testing\n\n```\n```\n\n**Sources**: [.github/workflows/dependencies-check.yml1-54](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/dependencies-check.yml#L1-L54)\n\nThe `dependencies-check.yml` workflow:\n\n1. Runs on a schedule (Wednesday and Saturday)\n2. Uses `samuelcolvin/list-python-dependencies` to find first and last versions of each dependency\n3. Tests Pydantic with both minimum and maximum dependency versions\n4. Ensures compatibility across the supported version range\n\n**Sources**: [.github/workflows/dependencies-check.yml1-54](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/dependencies-check.yml#L1-L54)\n\n### Pydantic Family Integration\n\n```\n```\n\n**Sources**: [.github/workflows/integration.yml1-40](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/integration.yml#L1-L40)\n\nThe integration workflow tests Pydantic with related packages:\n\n- `pydantic-settings`: Settings management library\n- `pydantic-extra-types`: Additional type implementations\n\nBoth use the `make` targets which likely checkout and test these repositories with the current Pydantic code.\n\n**Sources**: [.github/workflows/integration.yml1-40](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/integration.yml#L1-L40)\n\n## Additional CI Workflows\n\n### Performance Benchmarking (CodSpeed)\n\n```\n```\n\n**Sources**: [.github/workflows/codspeed.yml1-83](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/codspeed.yml#L1-L83)\n\nThe CodSpeed workflow:\n\n1. Resolves the `pydantic-core` version from `pyproject.toml`\n2. Checks out `pydantic-core` at that version\n3. Builds `pydantic-core` with PGO (Profile-Guided Optimization) and debug symbols\n4. Runs benchmarks using CodSpeed for performance tracking\n\n**Sources**: [.github/workflows/codspeed.yml1-83](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/codspeed.yml#L1-L83)\n\n### Coverage Upload (Smokeshow)\n\n```\n```\n\n**Sources**: [.github/workflows/upload-previews.yml1-37](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/upload-previews.yml#L1-L37)\n\nThe upload-previews workflow:\n\n1. Triggers after CI workflow completion\n2. Downloads coverage HTML artifacts\n3. Uploads to Smokeshow for preview hosting\n4. Posts coverage percentage to PR as GitHub status with threshold of 91%\n\n**Sources**: [.github/workflows/upload-previews.yml1-37](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/upload-previews.yml#L1-L37)\n\n### Automated Labeling\n\n```\n```\n\n**Sources**: [.github/workflows/labeler.yml1-27](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/labeler.yml#L1-L27)\n\nLabel configurations:\n\n- `first_pass.yml`: Labels based on branch name patterns (fix, feature, docs, change, performance, packaging)\n- `default_pass.yml`: Adds `relnotes-fix` if no labels were applied\n\nThis ensures all PRs are properly categorized for changelog generation.\n\n**Sources**: [.github/workflows/labeler.yml1-27](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/labeler.yml#L1-L27) [.github/labels/first\\_pass.yml1-18](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/labels/first_pass.yml#L1-L18) [.github/labels/default\\_pass.yml1-5](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/labels/default_pass.yml#L1-L5)\n\n## Summary\n\nPydantic's development and deployment infrastructure provides:",
    "metadata": {
      "chunk_id": 6,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "input_type": "pydantic_pydantic",
      "chunking_strategy": "programming_language_documentation",
      "token_count": 1001,
      "character_count": 3688,
      "created_at": "2025-10-16T17:41:46.273485",
      "parent_context": null,
      "semantic_type": "pydantic_pydantic",
      "collection_name": "pydantic_pydantic",
      "subfolder_name": null,
      "collection_strategy": "programming_language_documentation",
      "chunk_index_in_file": 6,
      "file_relative_path": "Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "collection_context": "pydantic_pydantic"
    }
  },
  {
    "text": "1. **Rigorous Version Control**: Strict compatibility checking between `pydantic` and `pydantic-core`\n2. **Comprehensive Testing**: Multi-platform test matrix, third-party integration tests, and specialized testing for memory, type checking, and plugins\n3. **Automated CI/CD**: GitHub Actions workflows handle linting, testing, coverage tracking, and deployment\n4. **Documentation Excellence**: Versioned documentation with MkDocs, automated deployment, and LLM-friendly exports\n5. **Quality Assurance**: Dependency version testing, performance benchmarking, and automated labeling for release notes\n\nThe infrastructure ensures that Pydantic maintains high quality standards while supporting a wide range of Python versions, platforms, and downstream packages.\n\n**Sources**: [pydantic/version.py1-114](https://github.com/pydantic/pydantic/blob/76ef0b08/pydantic/version.py#L1-L114) [.github/workflows/ci.yml1-436](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/ci.yml#L1-L436) [.github/workflows/third-party.yml1-506](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/third-party.yml#L1-L506) [mkdocs.yml1-338](https://github.com/pydantic/pydantic/blob/76ef0b08/mkdocs.yml#L1-L338) [.github/workflows/docs-update.yml1-113](https://github.com/pydantic/pydantic/blob/76ef0b08/.github/workflows/docs-update.yml#L1-L113)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.\n\n### On this page\n\n- [Development and Deployment](#development-and-deployment.md)\n- [Overview](#overview.md)\n- [Version Management and Compatibility](#version-management-and-compatibility.md)\n- [Version Constants and Checking](#version-constants-and-checking.md)\n- [Version Information Utility](#version-information-utility.md)\n- [Testing Infrastructure](#testing-infrastructure.md)\n- [Test Organization and Fixtures](#test-organization-and-fixtures.md)\n- [Key Testing Fixtures](#key-testing-fixtures.md)\n- [Module Creation Fixture](#module-creation-fixture.md)\n- [Thread Safety Markers](#thread-safety-markers.md)\n- [CI/CD Pipeline](#cicd-pipeline.md)\n- [Main CI Workflow](#main-ci-workflow.md)\n- [CI Jobs Breakdown](#ci-jobs-breakdown.md)\n- [Test Matrix Configuration](#test-matrix-configuration.md)\n- [Coverage Workflow](#coverage-workflow.md)\n- [Release Process](#release-process.md)\n- [Third-Party Integration Testing](#third-party-integration-testing.md)\n- [Third-Party Test Strategy](#third-party-test-strategy.md)\n- [Tested Projects](#tested-projects.md)\n- [Documentation System](#documentation-system.md)\n- [MkDocs Configuration](#mkdocs-configuration.md)\n- [Documentation Structure](#documentation-structure.md)\n- [Documentation Build Process](#documentation-build-process.md)\n- [Documentation Deployment](#documentation-deployment.md)\n- [Build Script Symlinks](#build-script-symlinks.md)\n- [Dependency Management](#dependency-management.md)\n- [UV Lock File and Synchronization](#uv-lock-file-and-synchronization.md)\n- [Dependency Groups](#dependency-groups.md)\n- [Dependency Version Testing](#dependency-version-testing.md)\n- [Pydantic Family Integration](#pydantic-family-integration.md)\n- [Additional CI Workflows](#additional-ci-workflows.md)\n- [Performance Benchmarking (CodSpeed)](#performance-benchmarking-codspeed.md)\n- [Coverage Upload (Smokeshow)](#coverage-upload-smokeshow.md)\n- [Automated Labeling](#automated-labeling.md)\n- [Summary](#summary.md)",
    "metadata": {
      "chunk_id": 7,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "input_type": "pydantic_pydantic",
      "chunking_strategy": "programming_language_documentation",
      "token_count": 848,
      "character_count": 3428,
      "created_at": "2025-10-16T17:41:46.275310",
      "parent_context": null,
      "semantic_type": "pydantic_pydantic",
      "collection_name": "pydantic_pydantic",
      "subfolder_name": null,
      "collection_strategy": "programming_language_documentation",
      "chunk_index_in_file": 7,
      "file_relative_path": "Docs\\pydantic_pydantic\\_pydantic_pydantic_7-development-and-deployment.md",
      "collection_context": "pydantic_pydantic"
    }
  }
]