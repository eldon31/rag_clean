# Multi-stage Dockerfile for Enterprise FastMCP API Server
# Stage 1: Builder stage with Python dependencies
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
COPY backup_references/requirements-fastmcp-api.txt .
RUN pip install --upgrade pip && \
    pip install -r requirements-fastmcp-api.txt

# Stage 2: Runtime stage with Python slim image
FROM python:3.11-slim as runtime

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create non-root user
RUN useradd --create-home --shell /bin/bash app \
    && mkdir -p /app \
    && mkdir -p /home/app/.cache \
    && chown -R app:app /app \
    && chown -R app:app /home/app/.cache
USER app

# Set working directory
WORKDIR /app

# Copy application code
COPY mcp_server/qdrant_fastmcp_api_server.py .

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8080/health')"

# Expose ports
EXPOSE 8080 9090

# Run application
CMD ["python", "qdrant_fastmcp_api_server.py"]