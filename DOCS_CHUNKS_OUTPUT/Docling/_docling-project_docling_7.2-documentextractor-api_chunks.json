[
  {
    "text": "DocumentExtractor API | docling-project/docling | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[docling-project/docling](https://github.com/docling-project/docling \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 12 October 2025 ([f7244a](https://github.com/docling-project/docling/commits/f7244a43))",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 115,
      "character_count": 422,
      "created_at": "2025-10-16T17:42:17.601913",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 0,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [Overview](docling-project/docling/1-overview.md)\n- [Installation](docling-project/docling/1.1-installation.md)\n- [Quick Start](docling-project/docling/1.2-quick-start.md)\n- [Core Architecture](docling-project/docling/2-core-architecture.md)\n- [Document Conversion Flow](docling-project/docling/2.1-document-conversion-flow.md)\n- [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md)\n- [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.4-format-detection-and-routing.md)\n- [Document Backends](docling-project/docling/3-document-backends.md)\n- [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md)\n- [Office Document Backends](docling-project/docling/3.2-office-document-backends.md)\n- [Web and Markup Backends](docling-project/docling/3.3-web-and-markup-backends.md)\n- [AI/ML Models](docling-project/docling/4-aiml-models.md)\n- [OCR Models](docling-project/docling/4.1-ocr-models.md)\n- [Layout and Table Structure Models](docling-project/docling/4.2-layout-and-table-structure-models.md)\n- [Vision Language Models](docling-project/docling/4.3-vision-language-models.md)\n- [Inline VLM Models](docling-project/docling/4.3.1-inline-vlm-models.md)\n- [API-Based VLM Models](docling-project/docling/4.3.2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)\n- [Processing Pipelines](docling-project/docling/5-processing-pipelines.md)\n- [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md)\n- [Threaded PDF Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md)\n- [VLM Pipeline](docling-project/docling/5.3-vlm-pipeline.md)\n- [Extraction Pipeline](docling-project/docling/5.4-extraction-pipeline.md)\n- [ASR Pipeline](docling-project/docling/5.5-asr-pipeline.md)\n- [Base Pipeline Architecture](docling-project/docling/5.6-base-pipeline-architecture.md)\n- [Command Line Interface](docling-project/docling/6-command-line-interface.md)\n- [Document Conversion CLI](docling-project/docling/6.1-document-conversion-cli.md)\n- [Model Management CLI](docling-project/docling/6.2-model-management-cli.md)\n- [Python SDK](docling-project/docling/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)\n- [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md)\n- [Usage Examples](docling-project/docling/7.3-usage-examples.md)\n- [Output and Integration](docling-project/docling/8-output-and-integration.md)\n- [Export Formats](docling-project/docling/8.1-export-formats.md)\n- [Document Chunking](docling-project/docling/8.2-document-chunking.md)\n- [Framework Integrations](docling-project/docling/8.3-framework-integrations.md)\n- [Development and Testing](docling-project/docling/9-development-and-testing.md)\n- [Testing Framework](docling-project/docling/9.1-testing-framework.md)\n- [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md)\n- [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md)\n- [Deployment](docling-project/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)\n- [Model Artifacts Management](docling-project/docling/10.2-model-artifacts-management.md)\n\nMenu\n\n# DocumentExtractor API\n\nRelevant source files",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 927,
      "character_count": 3420,
      "created_at": "2025-10-16T17:42:17.604318",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 1,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [docling/datamodel/extraction.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/extraction.py)\n- [docling/datamodel/pipeline\\_options\\_vlm\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options_vlm_model.py)\n- [docling/datamodel/vlm\\_model\\_specs.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/vlm_model_specs.py)\n- [docling/document\\_extractor.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py)\n- [docling/models/api\\_vlm\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/api_vlm_model.py)\n- [docling/models/base\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/base_model.py)\n- [docling/models/utils/hf\\_model\\_download.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/utils/hf_model_download.py)\n- [docling/models/vlm\\_models\\_inline/hf\\_transformers\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/vlm_models_inline/hf_transformers_model.py)\n- [docling/models/vlm\\_models\\_inline/mlx\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/vlm_models_inline/mlx_model.py)\n- [docling/models/vlm\\_models\\_inline/nuextract\\_transformers\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/vlm_models_inline/nuextract_transformers_model.py)\n- [docling/models/vlm\\_models\\_inline/vllm\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/vlm_models_inline/vllm_model.py)\n- [docling/pipeline/asr\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/asr_pipeline.py)\n- [docling/pipeline/base\\_extraction\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_extraction_pipeline.py)\n- [docling/pipeline/base\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_pipeline.py)\n- [docling/pipeline/extraction\\_vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py)\n- [docling/pipeline/simple\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/simple_pipeline.py)\n- [docling/pipeline/threaded\\_standard\\_pdf\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/threaded_standard_pdf_pipeline.py)\n- [docling/pipeline/vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/vlm_pipeline.py)\n\n## Purpose and Scope\n\nThe `DocumentExtractor` API provides structured data extraction from documents using vision-language models (VLMs) with user-defined templates. Unlike the `DocumentConverter` API (see [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)) which converts documents to unified `DoclingDocument` format, `DocumentExtractor` extracts specific structured data based on schemas or prompts, returning `ExtractionResult` objects containing parsed JSON or raw text.\n\nFor details on the underlying extraction pipeline implementation, see [Extraction Pipeline](docling-project/docling/5.4-extraction-pipeline.md). For VLM model configuration, see [Vision Language Models](docling-project/docling/4.3-vision-language-models.md).\n\n**Sources:** [docling/document\\_extractor.py88-97](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L88-L97)\n\n## Core Architecture\n\n### Class Hierarchy and Components\n\n```\n```\n\n**Diagram: DocumentExtractor Architecture**\n\nThe `DocumentExtractor` class orchestrates extraction by mapping input formats to extraction pipelines through `ExtractionFormatOption` configurations. Each format option specifies both a pipeline class (defaulting to `ExtractionVlmPipeline`) and a backend for document reading (defaulting to `PyPdfiumDocumentBackend`).",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 987,
      "character_count": 3981,
      "created_at": "2025-10-16T17:42:17.608599",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 2,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "**Sources:** [docling/document\\_extractor.py88-120](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L88-L120) [docling/document\\_extractor.py46-64](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L46-L64) [docling/datamodel/extraction.py1-40](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/extraction.py#L1-L40)\n\n### DocumentExtractor Class\n\n```\n```\n\n**Diagram: DocumentExtractor Class Structure**\n\nThe `DocumentExtractor` maintains a cache of initialized pipelines keyed by `(pipeline_class, options_hash)` to avoid redundant model loading across documents with identical configurations.\n\n**Sources:** [docling/document\\_extractor.py88-120](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L88-L120) [docling/document\\_extractor.py291-317](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L291-L317)\n\n## API Methods\n\n### extract() - Single Document Extraction\n\n```\n```\n\n**Diagram: extract() Method Flow**\n\nThe `extract()` method is a convenience wrapper around `extract_all()` that returns a single result. It internally calls `extract_all()` with a single-item list and returns the first (and only) result via `next()`.\n\n**Sources:** [docling/document\\_extractor.py123-143](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L123-L143) [docling/document\\_extractor.py239-264](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L239-L264)\n\n### extract\\_all() - Batch Extraction\n\nThe `extract_all()` method processes multiple documents with optional concurrency:\n\n| Parameter         | Type                                         | Default            | Description                                        |\n| ----------------- | -------------------------------------------- | ------------------ | -------------------------------------------------- |\n| `source`          | `Iterable[Union[Path, str, DocumentStream]]` | Required           | Documents to extract from                          |\n| `template`        | `ExtractionTemplateType`                     | Required           | Extraction template (str, dict, or Pydantic model) |\n| `headers`         | `Optional[Dict[str, str]]`                   | `None`             | HTTP headers for remote documents                  |\n| `raises_on_error` | `bool`                                       | `True`             | Whether to raise on extraction failures            |\n| `max_num_pages`   | `int`                                        | `sys.maxsize`      | Maximum pages to process per document              |\n| `max_file_size`   | `int`                                        | `sys.maxsize`      | Maximum file size in bytes                         |\n| `page_range`      | `PageRange`                                  | `(1, sys.maxsize)` | Page range to extract                              |\n\n**Implementation Details:**\n\n- Reuses `_DocumentConversionInput` for format detection and backend initialization\n- Supports batch processing with configurable concurrency via `settings.perf.doc_batch_concurrency`\n- Uses `ThreadPoolExecutor` when `doc_batch_concurrency > 1` and `doc_batch_size > 1`\n- Pipeline caching prevents redundant model initialization\n\n**Sources:** [docling/document\\_extractor.py145-193](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L145-L193) [docling/document\\_extractor.py196-237](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L196-L237)\n\n## Template Types and Serialization\n\n### Template Type Hierarchy\n\n```\n```\n\n**Diagram: Template Type Serialization**\n\nThe `_serialize_template()` method in `ExtractionVlmPipeline` handles four template types:\n\n1. **String templates**: Passed directly as prompts\n2. **Dict templates**: Serialized via `json.dumps(template, indent=2)`\n3. **Pydantic instances**: Serialized via `template.model_dump_json(indent=2)`\n4. **Pydantic classes**: Instantiated via `polyfactory.ModelFactory.build()` (using field examples and defaults), then serialized\n\n**Sources:** [docling/pipeline/extraction\\_vlm\\_pipeline.py173-193](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L173-L193)\n\n### Template Serialization Example Flow\n\n```\n```\n\n**Diagram: Template Serialization Decision Tree**\n\nFor Pydantic class templates, `polyfactory.ModelFactory` is configured with `__use_examples__=True` and `__use_defaults__=True` to prefer field examples over random values.",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 1015,
      "character_count": 4651,
      "created_at": "2025-10-16T17:42:17.617372",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 3,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "**Sources:** [docling/pipeline/extraction\\_vlm\\_pipeline.py173-193](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L173-L193)\n\n## ExtractionResult Data Model\n\n### Result Structure\n\n```\n```\n\n**Diagram: ExtractionResult Class Hierarchy**\n\nThe `ExtractionResult` structure mirrors `ConversionResult` but focuses on extracted data rather than document structure:\n\n- **`input`**: The `InputDocument` that was processed\n- **`status`**: Overall extraction status (SUCCESS, FAILURE, PARTIAL\\_SUCCESS)\n- **`errors`**: Document-level errors (empty list if successful)\n- **`pages`**: Per-page extraction results\n\n**Sources:** [docling/datamodel/extraction.py25-36](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/extraction.py#L25-L36)\n\n### ExtractedPageData Structure\n\nEach page in the `pages` list contains:\n\n| Field            | Type                       | Description                                            |\n| ---------------- | -------------------------- | ------------------------------------------------------ |\n| `page_no`        | `int`                      | 1-indexed page number                                  |\n| `extracted_data` | `Optional[Dict[str, Any]]` | Structured data parsed from VLM output (if valid JSON) |\n| `raw_text`       | `Optional[str]`            | Raw VLM output text (always populated)                 |\n| `errors`         | `List[str]`                | Page-specific extraction errors                        |\n\nThe `extracted_data` field is populated only if the VLM output can be parsed as valid JSON. If JSON parsing fails, `extracted_data` is `None` and `raw_text` contains the unparsed output.\n\n**Sources:** [docling/datamodel/extraction.py11-23](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/extraction.py#L11-L23) [docling/pipeline/extraction\\_vlm\\_pipeline.py84-98](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L84-L98)\n\n## Pipeline Architecture\n\n### Extraction Pipeline Hierarchy\n\n```\n```\n\n**Diagram: Extraction Pipeline Class Hierarchy**\n\nThe `BaseExtractionPipeline` defines the extraction contract with three abstract methods:\n\n- `_extract_data()`: Populates `ExtractionResult.pages` and `errors`\n- `_determine_status()`: Returns `ConversionStatus` based on extraction results\n- `get_default_options()`: Returns default `PipelineOptions`\n\n**Sources:** [docling/pipeline/base\\_extraction\\_pipeline.py15-73](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_extraction_pipeline.py#L15-L73) [docling/pipeline/extraction\\_vlm\\_pipeline.py32-46](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L32-L46)\n\n### VLM Model Integration\n\n```\n```\n\n**Diagram: VLM Model Processing Flow**\n\nThe `NuExtractTransformersModel` uses a specialized input format from the NuMind team:\n\n- Documents are passed as `{\"type\": \"image\", \"image\": PIL_Image}`\n- Templates are passed via the `template` parameter to `apply_chat_template()`\n- Vision info is processed via `qwen_vl_utils.process_vision_info()`\n\n**Sources:** [docling/pipeline/extraction\\_vlm\\_pipeline.py48-126](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L48-L126) [docling/models/vlm\\_models\\_inline/nuextract\\_transformers\\_model.py107-160](https://github.com/docling-project/docling/blob/f7244a43/docling/models/vlm_models_inline/nuextract_transformers_model.py#L107-L160) [docling/models/vlm\\_models\\_inline/nuextract\\_transformers\\_model.py161-290](https://github.com/docling-project/docling/blob/f7244a43/docling/models/vlm_models_inline/nuextract_transformers_model.py#L161-L290)\n\n## Pipeline Caching Mechanism\n\n### Cache Key Generation\n\n```\n```\n\n**Diagram: Pipeline Caching Strategy**\n\nThe `_get_pipeline()` method caches pipelines using a composite key:\n\n1. Pipeline class reference (e.g., `ExtractionVlmPipeline`)\n2. MD5 hash of `pipeline_options.model_dump()` serialization\n\nThis ensures that documents with identical configurations reuse the same pipeline instance (and loaded models), avoiding redundant initialization.\n\n**Thread Safety:** Pipeline retrieval is protected by `_PIPELINE_CACHE_LOCK` to prevent race conditions during concurrent document processing.",
    "metadata": {
      "chunk_id": 4,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 1021,
      "character_count": 4358,
      "created_at": "2025-10-16T17:42:17.628130",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 4,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "**Sources:** [docling/document\\_extractor.py291-317](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L291-L317) [docling/document\\_extractor.py319-325](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L319-L325)\n\n## Format Support and Backend Configuration\n\n### Default Format Options\n\n```\n```\n\n**Diagram: Default Extraction Configuration**\n\nThe `_get_default_extraction_option()` function defines default extraction configurations:\n\n- **PDF and Image formats**: Use `PyPdfiumDocumentBackend` for document reading\n- **Pipeline**: Always `ExtractionVlmPipeline`\n- **Model**: NuExtract-2.0-2B via `NuExtractTransformersModel`\n\nUsers can override these defaults via the `extraction_format_options` parameter in `DocumentExtractor.__init__()`.\n\n**Experimental Status:** As of the current implementation, only PDF and Image formats are supported for extraction. The API warns users that it is experimental and may change.\n\n**Sources:** [docling/document\\_extractor.py66-85](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L66-L85) [docling/pipeline/extraction\\_vlm\\_pipeline.py32-46](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L32-L46)\n\n## Error Handling and Status Determination\n\n### Status Decision Tree\n\n```\n```\n\n**Diagram: Extraction Status Determination**\n\nThe `_determine_status()` method in `ExtractionVlmPipeline` uses a simple rule:\n\n- **SUCCESS**: At least one page extracted AND no page errors\n- **FAILURE**: No pages extracted OR any page has errors\n\nUnlike `DocumentConverter`, extraction does not support `PARTIAL_SUCCESS` status—a document either fully succeeds or fails.\n\n**Sources:** [docling/pipeline/extraction\\_vlm\\_pipeline.py128-133](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L128-L133)\n\n### Error Propagation\n\n```\n```\n\n**Diagram: Error Handling Flow**\n\nThe `raises_on_error` parameter controls error behavior at multiple levels:\n\n1. **Document level**: Invalid formats, missing pipelines\n2. **Page level**: Image loading failures, VLM processing errors\n\nWhen `raises_on_error=False`, errors are captured in the `ExtractionResult` structure rather than raised as exceptions.\n\n**Sources:** [docling/document\\_extractor.py177-192](https://github.com/docling-project/docling/blob/f7244a43/docling/document_extractor.py#L177-L192) [docling/pipeline/base\\_extraction\\_pipeline.py31-53](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/base_extraction_pipeline.py#L31-L53) [docling/pipeline/extraction\\_vlm\\_pipeline.py109-114](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/extraction_vlm_pipeline.py#L109-L114)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.\n\n### On this page",
    "metadata": {
      "chunk_id": 5,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 697,
      "character_count": 2926,
      "created_at": "2025-10-16T17:42:17.633811",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 5,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [DocumentExtractor API](#documentextractor-api.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Core Architecture](#core-architecture.md)\n- [Class Hierarchy and Components](#class-hierarchy-and-components.md)\n- [DocumentExtractor Class](#documentextractor-class.md)\n- [API Methods](#api-methods.md)\n- [extract() - Single Document Extraction](#extract---single-document-extraction.md)\n- [extract\\_all() - Batch Extraction](#extract_all---batch-extraction.md)\n- [Template Types and Serialization](#template-types-and-serialization.md)\n- [Template Type Hierarchy](#template-type-hierarchy.md)\n- [Template Serialization Example Flow](#template-serialization-example-flow.md)\n- [ExtractionResult Data Model](#extractionresult-data-model.md)\n- [Result Structure](#result-structure.md)\n- [ExtractedPageData Structure](#extractedpagedata-structure.md)\n- [Pipeline Architecture](#pipeline-architecture.md)\n- [Extraction Pipeline Hierarchy](#extraction-pipeline-hierarchy.md)\n- [VLM Model Integration](#vlm-model-integration.md)\n- [Pipeline Caching Mechanism](#pipeline-caching-mechanism.md)\n- [Cache Key Generation](#cache-key-generation.md)\n- [Format Support and Backend Configuration](#format-support-and-backend-configuration.md)\n- [Default Format Options](#default-format-options.md)\n- [Error Handling and Status Determination](#error-handling-and-status-determination.md)\n- [Status Decision Tree](#status-decision-tree.md)\n- [Error Propagation](#error-propagation.md)",
    "metadata": {
      "chunk_id": 6,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 347,
      "character_count": 1468,
      "created_at": "2025-10-16T17:42:17.633986",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 6,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.2-documentextractor-api.md",
      "collection_context": "Docling"
    }
  }
]