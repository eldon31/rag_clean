[
  {
    "text": "Layout and Table Structure Models | docling-project/docling | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[docling-project/docling](https://github.com/docling-project/docling \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 12 October 2025 ([f7244a](https://github.com/docling-project/docling/commits/f7244a43))",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 117,
      "character_count": 434,
      "created_at": "2025-10-16T17:42:16.944839",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 0,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [Overview](docling-project/docling/1-overview.md)\n- [Installation](docling-project/docling/1.1-installation.md)\n- [Quick Start](docling-project/docling/1.2-quick-start.md)\n- [Core Architecture](docling-project/docling/2-core-architecture.md)\n- [Document Conversion Flow](docling-project/docling/2.1-document-conversion-flow.md)\n- [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md)\n- [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.4-format-detection-and-routing.md)\n- [Document Backends](docling-project/docling/3-document-backends.md)\n- [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md)\n- [Office Document Backends](docling-project/docling/3.2-office-document-backends.md)\n- [Web and Markup Backends](docling-project/docling/3.3-web-and-markup-backends.md)\n- [AI/ML Models](docling-project/docling/4-aiml-models.md)\n- [OCR Models](docling-project/docling/4.1-ocr-models.md)\n- [Layout and Table Structure Models](docling-project/docling/4.2-layout-and-table-structure-models.md)\n- [Vision Language Models](docling-project/docling/4.3-vision-language-models.md)\n- [Inline VLM Models](docling-project/docling/4.3.1-inline-vlm-models.md)\n- [API-Based VLM Models](docling-project/docling/4.3.2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)\n- [Processing Pipelines](docling-project/docling/5-processing-pipelines.md)\n- [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md)\n- [Threaded PDF Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md)\n- [VLM Pipeline](docling-project/docling/5.3-vlm-pipeline.md)\n- [Extraction Pipeline](docling-project/docling/5.4-extraction-pipeline.md)\n- [ASR Pipeline](docling-project/docling/5.5-asr-pipeline.md)\n- [Base Pipeline Architecture](docling-project/docling/5.6-base-pipeline-architecture.md)\n- [Command Line Interface](docling-project/docling/6-command-line-interface.md)\n- [Document Conversion CLI](docling-project/docling/6.1-document-conversion-cli.md)\n- [Model Management CLI](docling-project/docling/6.2-model-management-cli.md)\n- [Python SDK](docling-project/docling/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)\n- [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md)\n- [Usage Examples](docling-project/docling/7.3-usage-examples.md)\n- [Output and Integration](docling-project/docling/8-output-and-integration.md)\n- [Export Formats](docling-project/docling/8.1-export-formats.md)\n- [Document Chunking](docling-project/docling/8.2-document-chunking.md)\n- [Framework Integrations](docling-project/docling/8.3-framework-integrations.md)\n- [Development and Testing](docling-project/docling/9-development-and-testing.md)\n- [Testing Framework](docling-project/docling/9.1-testing-framework.md)\n- [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md)\n- [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md)\n- [Deployment](docling-project/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)\n- [Model Artifacts Management](docling-project/docling/10.2-model-artifacts-management.md)\n\nMenu\n\n# Layout and Table Structure Models\n\nRelevant source files",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 929,
      "character_count": 3432,
      "created_at": "2025-10-16T17:42:16.947169",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 1,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [docling/models/base\\_ocr\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/base_ocr_model.py)\n- [docling/models/code\\_formula\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/code_formula_model.py)\n- [docling/models/document\\_picture\\_classifier.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/document_picture_classifier.py)\n- [docling/models/easyocr\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/easyocr_model.py)\n- [docling/models/layout\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/layout_model.py)\n- [docling/models/page\\_assemble\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/page_assemble_model.py)\n- [docling/models/page\\_preprocessing\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/page_preprocessing_model.py)\n- [docling/models/table\\_structure\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py)\n- [docling/pipeline/standard\\_pdf\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docling/pipeline/standard_pdf_pipeline.py)\n- [tests/data/groundtruth/docling\\_v2/2203.01017v2.doctags.txt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/2203.01017v2.doctags.txt)\n- [tests/data/groundtruth/docling\\_v2/2203.01017v2.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/2203.01017v2.json)\n- [tests/data/groundtruth/docling\\_v2/2203.01017v2.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/2203.01017v2.md)\n- [tests/data/groundtruth/docling\\_v2/2206.01062.doctags.txt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/2206.01062.doctags.txt)\n- [tests/data/groundtruth/docling\\_v2/2206.01062.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/2206.01062.json)\n- [tests/data/groundtruth/docling\\_v2/2305.03393v1.doctags.txt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/2305.03393v1.doctags.txt)\n- [tests/data/groundtruth/docling\\_v2/2305.03393v1.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/2305.03393v1.json)\n- [tests/data/groundtruth/docling\\_v2/multi\\_page.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/multi_page.json)\n- [tests/data/groundtruth/docling\\_v2/redp5110\\_sampled.doctags.txt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/redp5110_sampled.doctags.txt)\n- [tests/data/groundtruth/docling\\_v2/redp5110\\_sampled.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/redp5110_sampled.json)\n- [tests/data/groundtruth/docling\\_v2/redp5110\\_sampled.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/redp5110_sampled.md)\n- [tests/test\\_document\\_picture\\_classifier.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_document_picture_classifier.py)\n- [tests/test\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_options.py)",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 997,
      "character_count": 3414,
      "created_at": "2025-10-16T17:42:16.947924",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 2,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "This page covers the AI/ML models used for document layout analysis and table structure recognition in Docling. These models work together to understand the spatial and structural organization of document content, identifying elements like text blocks, tables, figures, and headers, then extracting detailed table structure including cell boundaries and relationships.\n\nFor information about OCR text extraction capabilities, see [OCR Models](docling-project/docling/4.1-ocr-models.md). For vision-language model integration for content understanding, see [Vision Language Models](docling-project/docling/4.3-vision-language-models.md).\n\n## Overview\n\nDocling's layout and table structure analysis pipeline consists of several interconnected models that process documents in stages:\n\n```\n```\n\nThe pipeline processes pages through preprocessing, layout analysis with cleanup, and specialized table structure recognition for table elements identified by the layout model.\n\n**Sources**: [docling/models/layout\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/layout_model.py) [docling/models/table\\_structure\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py) [docling/models/page\\_preprocessing\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/page_preprocessing_model.py) [docling/utils/layout\\_postprocessor.py](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/layout_postprocessor.py)\n\n## Page Preprocessing Model\n\nThe `PagePreprocessingModel` handles initial page processing, extracting images and text cells while assessing text quality.\n\n### Core Functionality\n\n| Feature             | Description                                        | Implementation                                                                                                                                                       |\n| ------------------- | -------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Image Extraction    | Generates page images at specified scales          | [docling/models/page\\_preprocessing\\_model.py52-66](https://github.com/docling-project/docling/blob/f7244a43/docling/models/page_preprocessing_model.py#L52-L66)     |\n| Cell Extraction     | Extracts text cells from document backends         | [docling/models/page\\_preprocessing\\_model.py69-90](https://github.com/docling-project/docling/blob/f7244a43/docling/models/page_preprocessing_model.py#L69-L90)     |\n| Text Quality Rating | Evaluates text extraction quality using heuristics | [docling/models/page\\_preprocessing\\_model.py120-145](https://github.com/docling-project/docling/blob/f7244a43/docling/models/page_preprocessing_model.py#L120-L145) |\n| VLM Support         | Can skip cell extraction for VLM-only processing   | [docling/models/page\\_preprocessing\\_model.py20-22](https://github.com/docling-project/docling/blob/f7244a43/docling/models/page_preprocessing_model.py#L20-L22)     |\n\n### Text Quality Assessment\n\nThe model uses several patterns to detect problematic text extraction:\n\n```\n```\n\nHard failures (score 0.0) include replacement characters, glyph patterns, and excessive slash-number sequences. Fragment patterns apply graduated penalties.\n\n**Sources**: [docling/models/page\\_preprocessing\\_model.py120-145](https://github.com/docling-project/docling/blob/f7244a43/docling/models/page_preprocessing_model.py#L120-L145)\n\n## Layout Model\n\nThe `LayoutModel` performs document layout analysis using IBM's layout prediction models to identify and classify document elements.\n\n### Element Detection\n\nThe model classifies document elements into these categories:\n\n| Label Type    | Elements                                                                                           | Purpose                  |\n| ------------- | -------------------------------------------------------------------------------------------------- | ------------------------ |\n| Text Elements | `TEXT`, `FOOTNOTE`, `CAPTION`, `SECTION_HEADER`, `PAGE_HEADER`, `PAGE_FOOTER`, `CODE`, `LIST_ITEM` | Content text blocks      |\n| Tables        | `TABLE`, `DOCUMENT_INDEX`                                                                          | Tabular data structures  |\n| Figures       | `PICTURE`                                                                                          | Images and graphics      |\n| Interactive   | `CHECKBOX_SELECTED`, `CHECKBOX_UNSELECTED`                                                         | Form elements            |\n| Containers    | `FORM`, `KEY_VALUE_REGION`                                                                         | Wrapper structures       |\n| Mathematical  | `FORMULA`                                                                                          | Mathematical expressions |\n\n### Batch Processing Architecture\n\n```\n```\n\nThe model processes pages in batches for efficiency, using the `LayoutPredictor.predict_batch()` method from `docling_ibm_models`.\n\n**Sources**: [docling/models/layout\\_model.py148-237](https://github.com/docling-project/docling/blob/f7244a43/docling/models/layout_model.py#L148-L237) [docling/models/layout\\_model.py28-47](https://github.com/docling-project/docling/blob/f7244a43/docling/models/layout_model.py#L28-L47)\n\n### Model Configuration",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 1016,
      "character_count": 5520,
      "created_at": "2025-10-16T17:42:16.956282",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 3,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "The layout model supports different model specifications through `LayoutModelConfig`:\n\n```\n```\n\nModels are downloaded from HuggingFace repositories and cached locally for reuse.\n\n**Sources**: [docling/models/layout\\_model.py89-102](https://github.com/docling-project/docling/blob/f7244a43/docling/models/layout_model.py#L89-L102) [docling/datamodel/layout\\_model\\_specs.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/layout_model_specs.py)\n\n## Layout Postprocessor\n\nThe `LayoutPostprocessor` refines raw layout predictions through spatial indexing, overlap resolution, and cell assignment.\n\n### Spatial Indexing System\n\n```\n```\n\nThe postprocessor uses multiple spatial data structures for efficient overlap detection and resolution.\n\n**Sources**: [docling/utils/layout\\_postprocessor.py50-106](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/layout_postprocessor.py#L50-L106) [docling/utils/layout\\_postprocessor.py17-48](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/layout_postprocessor.py#L17-L48)\n\n### Cluster Processing Pipeline\n\nDifferent cluster types receive specialized processing:\n\n| Cluster Type | Processing Rules                                  | Overlap Thresholds                          |\n| ------------ | ------------------------------------------------- | ------------------------------------------- |\n| Regular      | Standard confidence filtering, cell assignment    | area\\_threshold: 1.3, conf\\_threshold: 0.05 |\n| Picture      | Higher confidence thresholds, full-page filtering | area\\_threshold: 2.0, conf\\_threshold: 0.3  |\n| Wrapper      | Container handling, child cluster management      | area\\_threshold: 2.0, conf\\_threshold: 0.2  |\n\n**Sources**: [docling/utils/layout\\_postprocessor.py158-163](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/layout_postprocessor.py#L158-L163) [docling/utils/layout\\_postprocessor.py164-171](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/layout_postprocessor.py#L164-L171)\n\n### Cell Assignment Strategy\n\n```\n```\n\nCells are assigned to clusters based on spatial overlap, with unassigned cells optionally converted to orphan text clusters.\n\n**Sources**: [docling/utils/layout\\_postprocessor.py585-617](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/layout_postprocessor.py#L585-L617) [docling/utils/layout\\_postprocessor.py284-301](https://github.com/docling-project/docling/blob/f7244a43/docling/utils/layout_postprocessor.py#L284-L301)\n\n## Table Structure Model\n\nThe `TableStructureModel` uses TableFormer to extract detailed table structure from table regions identified by the layout model. It predicts both the structural representation (in OTSL format) and the precise bounding boxes for each table cell.\n\n### TableFormer Architecture\n\nThe model consists of three main components:\n\n```\n```\n\nThe model operates at 2x scale (144 DPI) for improved accuracy. The scale factor is applied to both input images and coordinates, then predictions are scaled back.\n\n**Sources**: [docling/models/table\\_structure\\_model.py29-90](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L29-L90) [docling/models/table\\_structure\\_model.py65-90](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L65-L90) [docling/models/table\\_structure\\_model.py92-101](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L92-L101)\n\n### OTSL Token Language\n\nTableFormer predicts table structure using OTSL (Optimized Table Structure Language), a minimal vocabulary for representing table structure:\n\n| OTSL Token   | Meaning                     | Example Context                     |\n| ------------ | --------------------------- | ----------------------------------- |\n| `<ched>`     | Column header cell          | `<otsl>...<ched>Header Text<nl>...` |\n| `<fcel>`     | First cell in row           | `<fcel>Cell 1<fcel>Cell 2<nl>`      |\n| `<lcel>`     | Last cell in row (implicit) | Continues until `<nl>`              |\n| `<nl>`       | New line (end row)          | `<fcel>A<fcel>B<nl>`                |\n| `<srowspan>` | Row span start              | For merged cells                    |\n| `<erowspan>` | Row span end                | End of merged region                |\n\nThe OTSL sequence provides a structured representation that can be parsed to reconstruct the complete table grid, including spanning cells.",
    "metadata": {
      "chunk_id": 4,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 1020,
      "character_count": 4548,
      "created_at": "2025-10-16T17:42:16.963301",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 4,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "**Sources**: [tests/data/groundtruth/docling\\_v2/2203.01017v2.doctags.txt10-12](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/2203.01017v2.doctags.txt#L10-L12) [docling/models/table\\_structure\\_model.py275-279](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L275-L279)\n\n### Table Processing Workflow\n\nThe table structure extraction follows this detailed workflow:\n\n```\n```\n\nKey implementation details:\n\n| Stage                  | Operation                                                         | Code Reference                                                                                                                                                 |\n| ---------------------- | ----------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Input Preparation      | Scale page image to 2x, extract table bounding boxes              | [docling/models/table\\_structure\\_model.py190-216](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L190-L216) |\n| Token Extraction       | Prefer word-level cells, fall back to line-level cells            | [docling/models/table\\_structure\\_model.py218-248](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L218-L248) |\n| TableFormer Prediction | Call `tf_predictor.multi_table_predict()` with scaled inputs      | [docling/models/table\\_structure\\_model.py250-253](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L250-L253) |\n| Cell Matching          | Match predicted cells to extracted tokens or extract from backend | [docling/models/table\\_structure\\_model.py256-268](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L256-L268) |\n| Coordinate Unscaling   | Scale all bounding boxes back by 1/2.0 before storage             | [docling/models/table\\_structure\\_model.py267-268](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L267-L268) |\n| Output Assembly        | Create `Table` object with OTSL sequence and `TableCell` array    | [docling/models/table\\_structure\\_model.py281-294](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L281-L294) |\n\n### Cell Matching Strategy\n\nThe `do_cell_matching` option controls how cell content is extracted:\n\n```\n```\n\nWith cell matching enabled (default), the model matches input text tokens to predicted cells, preserving original text. With matching disabled, text is extracted from the PDF using predicted cell coordinates, which works better when no word-level segmentation is available.\n\n**Sources**: [docling/models/table\\_structure\\_model.py218-268](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L218-L268) [docling/models/table\\_structure\\_model.py41-42](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L41-L42)\n\n### Table Cell Output Structure\n\nEach `TableCell` contains structural and spatial information:\n\n```\n```\n\nThe model also provides aggregate information in the `Table` object:\n\n- `otsl_seq`: List of OTSL tokens representing structure\n- `table_cells`: List of all `TableCell` objects\n- `num_rows`: Total number of rows\n- `num_cols`: Total number of columns\n\n**Sources**: [docling/models/table\\_structure\\_model.py265-294](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L265-L294) [tests/data/groundtruth/docling\\_v2/2203.01017v2.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/2203.01017v2.json)\n\n## Model Integration Points\n\n### Pipeline Integration\n\nThe layout and table models integrate with the broader Docling pipeline through these interfaces:\n\n```\n```\n\nEach model implements the `BasePageModel.__call__()` interface, processing page batches and updating page predictions.",
    "metadata": {
      "chunk_id": 5,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 920,
      "character_count": 4232,
      "created_at": "2025-10-16T17:42:16.971593",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 5,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "**Sources**: [docling/models/base\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/docling/models/base_model.py) [docling/models/layout\\_model.py148-237](https://github.com/docling-project/docling/blob/f7244a43/docling/models/layout_model.py#L148-L237) [docling/models/table\\_structure\\_model.py170-304](https://github.com/docling-project/docling/blob/f7244a43/docling/models/table_structure_model.py#L170-L304)\n\n### Configuration System\n\nModel behavior is controlled through the pipeline options system:\n\n| Option Category         | Key Parameters                                              | Impact                                                |\n| ----------------------- | ----------------------------------------------------------- | ----------------------------------------------------- |\n| `LayoutOptions`         | `model_spec`, `skip_cell_assignment`, `keep_empty_clusters` | Layout model selection and post-processing            |\n| `TableStructureOptions` | `mode`, `do_cell_matching`                                  | TableFormer accuracy vs speed, cell extraction method |\n| `AcceleratorOptions`    | `device`, `num_threads`                                     | Hardware acceleration and threading                   |\n\n**Sources**: [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py) [tests/test\\_options.py25-40](https://github.com/docling-project/docling/blob/f7244a43/tests/test_options.py#L25-L40)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.\n\n### On this page\n\n- [Layout and Table Structure Models](#layout-and-table-structure-models.md)\n- [Overview](#overview.md)\n- [Page Preprocessing Model](#page-preprocessing-model.md)\n- [Core Functionality](#core-functionality.md)\n- [Text Quality Assessment](#text-quality-assessment.md)\n- [Layout Model](#layout-model.md)\n- [Element Detection](#element-detection.md)\n- [Batch Processing Architecture](#batch-processing-architecture.md)\n- [Model Configuration](#model-configuration.md)\n- [Layout Postprocessor](#layout-postprocessor.md)\n- [Spatial Indexing System](#spatial-indexing-system.md)\n- [Cluster Processing Pipeline](#cluster-processing-pipeline.md)\n- [Cell Assignment Strategy](#cell-assignment-strategy.md)\n- [Table Structure Model](#table-structure-model.md)\n- [TableFormer Architecture](#tableformer-architecture.md)\n- [OTSL Token Language](#otsl-token-language.md)\n- [Table Processing Workflow](#table-processing-workflow.md)\n- [Cell Matching Strategy](#cell-matching-strategy.md)\n- [Table Cell Output Structure](#table-cell-output-structure.md)\n- [Model Integration Points](#model-integration-points.md)\n- [Pipeline Integration](#pipeline-integration.md)\n- [Configuration System](#configuration-system.md)",
    "metadata": {
      "chunk_id": 6,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 610,
      "character_count": 2842,
      "created_at": "2025-10-16T17:42:16.973510",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 6,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_4.2-layout-and-table-structure-models.md",
      "collection_context": "Docling"
    }
  }
]