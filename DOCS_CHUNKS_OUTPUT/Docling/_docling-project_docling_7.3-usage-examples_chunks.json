[
  {
    "text": "Usage Examples | docling-project/docling | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[docling-project/docling](https://github.com/docling-project/docling \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 12 October 2025 ([f7244a](https://github.com/docling-project/docling/commits/f7244a43))",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 114,
      "character_count": 415,
      "created_at": "2025-10-16T17:42:17.637337",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 0,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [Overview](docling-project/docling/1-overview.md)\n- [Installation](docling-project/docling/1.1-installation.md)\n- [Quick Start](docling-project/docling/1.2-quick-start.md)\n- [Core Architecture](docling-project/docling/2-core-architecture.md)\n- [Document Conversion Flow](docling-project/docling/2.1-document-conversion-flow.md)\n- [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md)\n- [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.4-format-detection-and-routing.md)\n- [Document Backends](docling-project/docling/3-document-backends.md)\n- [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md)\n- [Office Document Backends](docling-project/docling/3.2-office-document-backends.md)\n- [Web and Markup Backends](docling-project/docling/3.3-web-and-markup-backends.md)\n- [AI/ML Models](docling-project/docling/4-aiml-models.md)\n- [OCR Models](docling-project/docling/4.1-ocr-models.md)\n- [Layout and Table Structure Models](docling-project/docling/4.2-layout-and-table-structure-models.md)\n- [Vision Language Models](docling-project/docling/4.3-vision-language-models.md)\n- [Inline VLM Models](docling-project/docling/4.3.1-inline-vlm-models.md)\n- [API-Based VLM Models](docling-project/docling/4.3.2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)\n- [Processing Pipelines](docling-project/docling/5-processing-pipelines.md)\n- [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md)\n- [Threaded PDF Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md)\n- [VLM Pipeline](docling-project/docling/5.3-vlm-pipeline.md)\n- [Extraction Pipeline](docling-project/docling/5.4-extraction-pipeline.md)\n- [ASR Pipeline](docling-project/docling/5.5-asr-pipeline.md)\n- [Base Pipeline Architecture](docling-project/docling/5.6-base-pipeline-architecture.md)\n- [Command Line Interface](docling-project/docling/6-command-line-interface.md)\n- [Document Conversion CLI](docling-project/docling/6.1-document-conversion-cli.md)\n- [Model Management CLI](docling-project/docling/6.2-model-management-cli.md)\n- [Python SDK](docling-project/docling/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)\n- [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md)\n- [Usage Examples](docling-project/docling/7.3-usage-examples.md)\n- [Output and Integration](docling-project/docling/8-output-and-integration.md)\n- [Export Formats](docling-project/docling/8.1-export-formats.md)\n- [Document Chunking](docling-project/docling/8.2-document-chunking.md)\n- [Framework Integrations](docling-project/docling/8.3-framework-integrations.md)\n- [Development and Testing](docling-project/docling/9-development-and-testing.md)\n- [Testing Framework](docling-project/docling/9.1-testing-framework.md)\n- [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md)\n- [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md)\n- [Deployment](docling-project/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)\n- [Model Artifacts Management](docling-project/docling/10.2-model-artifacts-management.md)\n\nMenu\n\n# Usage Examples\n\nRelevant source files",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 926,
      "character_count": 3413,
      "created_at": "2025-10-16T17:42:17.639719",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 1,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [README.md](https://github.com/docling-project/docling/blob/f7244a43/README.md)\n- [docling/cli/main.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py)\n- [docling/datamodel/base\\_models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py)\n- [docling/datamodel/document.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py)\n- [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py)\n- [docling/document\\_converter.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py)\n- [docs/examples/minimal\\_vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docs/examples/minimal_vlm_pipeline.py)\n- [docs/index.md](https://github.com/docling-project/docling/blob/f7244a43/docs/index.md)\n- [docs/usage/index.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/index.md)\n- [docs/usage/mcp.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/mcp.md)\n- [docs/usage/vision\\_models.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/vision_models.md)\n- [mkdocs.yml](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml)\n\nThis page provides comprehensive, practical code examples for using the Docling Python SDK. It demonstrates common usage patterns, configuration options, and integration approaches for the `DocumentConverter` and `DocumentExtractor` classes.\n\nFor API reference details, see [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md) and [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md). For CLI usage, see [Document Conversion CLI](docling-project/docling/6.1-document-conversion-cli.md).\n\n## Basic Document Conversion\n\nThe simplest conversion workflow uses `DocumentConverter` with default settings:\n\n```\n```\n\n**Key Components:**\n\n- `DocumentConverter`: Main orchestrator for document conversion [document\\_converter.py184-433](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L184-L433)\n- `ConversionResult`: Container for conversion output, status, and errors [datamodel/document.py198-215](https://github.com/docling-project/docling/blob/f7244a43/datamodel/document.py#L198-L215)\n- `DoclingDocument`: Unified document representation from docling-core\n\nThe converter automatically detects the input format and selects the appropriate pipeline and backend based on MIME type and file extension [datamodel/document.py280-338](https://github.com/docling-project/docling/blob/f7244a43/datamodel/document.py#L280-L338)\n\n**Conversion Flow Diagram:**\n\n```\n```\n\nSources: [document\\_converter.py227-245](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L227-L245) [document\\_converter.py351-378](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L351-L378) [document\\_converter.py404-432](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L404-L432)\n\n## Batch Processing\n\nFor processing multiple documents efficiently, use `convert_all()` which returns an iterator:\n\n```\n```\n\n**Document Limits and Error Handling:**\n\n| Parameter         | Type  | Purpose                                                        |\n| ----------------- | ----- | -------------------------------------------------------------- |\n| `raises_on_error` | bool  | If True, raises on first error; if False, yields error results |\n| `max_num_pages`   | int   | Skip documents exceeding this page count                       |\n| `max_file_size`   | int   | Skip documents exceeding this byte size                        |\n| `page_range`      | tuple | Specify page range to process (start, end)                     |\n\nThe `convert_all()` method supports concurrent processing via `settings.perf.doc_batch_concurrency` for improved throughput [document\\_converter.py327-349](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L327-L349)",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 967,
      "character_count": 4124,
      "created_at": "2025-10-16T17:42:17.646298",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 2,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "Sources: [document\\_converter.py247-283](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L247-L283) [datamodel/settings.py](https://github.com/docling-project/docling/blob/f7244a43/datamodel/settings.py) [datamodel/document.py104-191](https://github.com/docling-project/docling/blob/f7244a43/datamodel/document.py#L104-L191)\n\n## Customizing Pipeline Options\n\n### PDF Pipeline Configuration\n\nCustomize PDF processing with `PdfPipelineOptions`:\n\n```\n```\n\n**Pipeline Options Hierarchy:**\n\n```\n```\n\nSources: [datamodel/pipeline\\_options.py273-363](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options.py#L273-L363) [datamodel/pipeline\\_options.py334-363](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options.py#L334-L363)\n\n### OCR Configuration\n\nConfigure OCR engines and languages:\n\n```\n```\n\n**OCR Engine Selection:**\n\n| Engine    | Class                 | Best For                     | Platform   |\n| --------- | --------------------- | ---------------------------- | ---------- |\n| Auto      | `OcrAutoOptions`      | Automatic fallback selection | All        |\n| RapidOCR  | `RapidOcrOptions`     | Fast, multilingual, ONNX     | All        |\n| Tesseract | `TesseractOcrOptions` | Accurate, widely supported   | All        |\n| EasyOCR   | `EasyOcrOptions`      | Deep learning, 80+ languages | All        |\n| OcrMac    | `OcrMacOptions`       | Native macOS OCR             | macOS only |\n\nThe `OcrAutoModel` automatically selects the best available engine in this order: OcrMac (Darwin), RapidOCR (ONNX), EasyOCR, RapidOCR (Torch), Tesseract [models/ocr/ocr\\_auto\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/models/ocr/ocr_auto_model.py)\n\nSources: [datamodel/pipeline\\_options.py74-198](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options.py#L74-L198) [cli/main.py599-611](https://github.com/docling-project/docling/blob/f7244a43/cli/main.py#L599-L611)\n\n### Enrichment Models\n\nEnable content enrichment for code, formulas, and figures:\n\n```\n```\n\nEnrichment models run after document assembly on individual items, not pages [pipeline/base\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/pipeline/base_pipeline.py)\n\nSources: [datamodel/pipeline\\_options.py201-245](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options.py#L201-L245) [datamodel/pipeline\\_options.py283-298](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options.py#L283-L298)\n\n## Using Vision Language Models\n\n### Local VLM Processing\n\nUse vision-language models for end-to-end document understanding:\n\n```\n```\n\n### VLM Model Selection\n\n**Available Models:**\n\n| Model Spec Constant           | Model ID                                  | Framework    | Device       | Output Format |\n| ----------------------------- | ----------------------------------------- | ------------ | ------------ | ------------- |\n| `GRANITEDOCLING_TRANSFORMERS` | ibm-granite/granite-docling-258M          | Transformers | CPU/CUDA/MPS | DocTags       |\n| `GRANITEDOCLING_MLX`          | ibm-granite/granite-docling-258M-mlx-bf16 | MLX          | MPS          | DocTags       |\n| `SMOLDOCLING_TRANSFORMERS`    | ds4sd/SmolDocling-256M-preview            | Transformers | CPU/CUDA/MPS | DocTags       |\n| `SMOLDOCLING_MLX`             | ds4sd/SmolDocling-256M-preview-mlx-bf16   | MLX          | MPS          | DocTags       |\n| `GRANITE_VISION_TRANSFORMERS` | ibm-granite/granite-vision-3.2-2b         | Transformers | CPU/CUDA/MPS | Markdown      |\n| `GOT2_TRANSFORMERS`           | ucaslcl/GOT-OCR2\\_0                       | Transformers | CPU/CUDA     | HTML          |",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 971,
      "character_count": 3748,
      "created_at": "2025-10-16T17:42:17.652999",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 3,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "For Apple Silicon, MLX models provide significantly faster inference (\\~17x faster than Transformers) [docs/usage/vision\\_models.md46-58](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/vision_models.md#L46-L58)\n\n```\n```\n\n**VLM Pipeline Flow:**\n\n```\n```\n\nSources: [docs/examples/minimal\\_vlm\\_pipeline.py1-71](https://github.com/docling-project/docling/blob/f7244a43/docs/examples/minimal_vlm_pipeline.py#L1-L71) [datamodel/vlm\\_model\\_specs.py](https://github.com/docling-project/docling/blob/f7244a43/datamodel/vlm_model_specs.py) [docs/usage/vision\\_models.md1-124](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/vision_models.md#L1-L124)\n\n### Remote VLM via API\n\nConnect to VLM services via OpenAI-compatible API:\n\n```\n```\n\nThe API client sends page images as base64-encoded content and parses the response [models/vlm/api\\_vlm\\_model.py](https://github.com/docling-project/docling/blob/f7244a43/models/vlm/api_vlm_model.py)\n\nSources: [datamodel/pipeline\\_options\\_vlm\\_model.py29-69](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options_vlm_model.py#L29-L69) [docs/usage/vision\\_models.md116-124](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/vision_models.md#L116-L124)\n\n### Custom VLM Configuration\n\nDefine custom VLM models:\n\n```\n```\n\nSources: [docs/usage/vision\\_models.md88-113](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/vision_models.md#L88-L113) [datamodel/pipeline\\_options\\_vlm\\_model.py71-167](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options_vlm_model.py#L71-L167)\n\n## Backend Selection\n\n### PDF Backend Options\n\nChoose between different PDF backends for varying performance and compatibility:\n\n```\n```\n\n**Backend Comparison:**\n\n| Backend                       | Text Extraction                   | Coordinate System | Layout Postprocessing |\n| ----------------------------- | --------------------------------- | ----------------- | --------------------- |\n| DoclingParseV4DocumentBackend | docling-parse (chars/words/lines) | Native            | Yes                   |\n| DoclingParseV2DocumentBackend | docling-parse (sanitized)         | Native            | Yes                   |\n| DoclingParseDocumentBackend   | docling-parse (legacy)            | Native            | No                    |\n| PyPdfiumDocumentBackend       | pypdfium2 only                    | Custom transform  | No                    |\n\nDoclingParseV4Backend is recommended for best quality and performance [backend/docling\\_parse\\_v4\\_backend.py](https://github.com/docling-project/docling/blob/f7244a43/backend/docling_parse_v4_backend.py)\n\nSources: [cli/main.py645-655](https://github.com/docling-project/docling/blob/f7244a43/cli/main.py#L645-L655) [document\\_converter.py132-181](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L132-L181)\n\n### Office and Specialized Formats\n\nDocling automatically selects appropriate backends for different formats:\n\n```\n```\n\n**Format-Specific Backends:**\n\n| Input Format | Backend Class                                  | Library Used  |\n| ------------ | ---------------------------------------------- | ------------- |\n| DOCX         | `MsWordDocumentBackend`                        | python-docx   |\n| XLSX         | `MsExcelDocumentBackend`                       | openpyxl      |\n| PPTX         | `MsPowerpointDocumentBackend`                  | python-pptx   |\n| HTML         | `HTMLDocumentBackend`                          | BeautifulSoup |\n| MD           | `MarkdownDocumentBackend`                      | marko         |\n| XML\\_JATS    | `JatsDocumentBackend`                          | xml.etree     |\n| XML\\_USPTO   | `PatentUsptoDocumentBackend`                   | xml.etree     |\n| METS\\_GBS    | `MetsGbsDocumentBackend`                       | tarfile + xml |\n| CSV          | `CsvDocumentBackend`                           | csv           |\n| AUDIO        | `NoOpBackend` (AsrPipeline handles processing) | -             |",
    "metadata": {
      "chunk_id": 4,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 971,
      "character_count": 4058,
      "created_at": "2025-10-16T17:42:17.660114",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 4,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "Sources: [document\\_converter.py72-181](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L72-L181) [cli/main.py678-697](https://github.com/docling-project/docling/blob/f7244a43/cli/main.py#L678-L697)\n\n## Output and Export\n\n### Export Formats\n\nExport `DoclingDocument` to various formats:\n\n```\n```\n\n**Image Reference Modes:**\n\n| Mode          | Description                                 | Use Case                     |\n| ------------- | ------------------------------------------- | ---------------------------- |\n| `EMBEDDED`    | Base64-encoded images in document           | Self-contained output        |\n| `REFERENCED`  | Images saved separately, referenced by path | Large documents, web serving |\n| `PLACEHOLDER` | Position markers only, no image data        | Text-only workflows          |\n\nSources: [cli/main.py191-289](https://github.com/docling-project/docling/blob/f7244a43/cli/main.py#L191-L289) [docling\\_core exported via datamodel/document.py](<https://github.com/docling-project/docling/blob/f7244a43/docling_core exported via datamodel/document.py>)\n\n### Extracting Tables and Figures\n\nAccess structured elements from the document:\n\n```\n```\n\nSources: [docling\\_core.types.doc via datamodel/document.py24-32](<https://github.com/docling-project/docling/blob/f7244a43/docling_core.types.doc via datamodel/document.py#L24-L32>)\n\n### Page-by-Page Processing\n\nAccess page-level data for progressive processing:\n\n```\n```\n\nSources: [datamodel/base\\_models.py269-328](https://github.com/docling-project/docling/blob/f7244a43/datamodel/base_models.py#L269-L328)\n\n## Advanced Configuration\n\n### Accelerator Options\n\nControl device placement and threading:\n\n```\n```\n\n**Device Selection:**\n\n| Device | Description                               | Environment Variable  |\n| ------ | ----------------------------------------- | --------------------- |\n| `AUTO` | Automatic selection based on availability | `DOCLING_DEVICE=auto` |\n| `CPU`  | CPU-only processing                       | `DOCLING_DEVICE=cpu`  |\n| `CUDA` | NVIDIA GPU acceleration                   | `DOCLING_DEVICE=cuda` |\n| `MPS`  | Apple Metal Performance Shaders           | `DOCLING_DEVICE=mps`  |\n\nThe `AUTO` device selects: MPS (macOS) > CUDA (if available) > CPU [datamodel/accelerator\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/datamodel/accelerator_options.py)\n\nSources: [datamodel/accelerator\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/datamodel/accelerator_options.py) [datamodel/pipeline\\_options.py276-281](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options.py#L276-L281)\n\n### Document Limits and Timeouts\n\nEnforce processing constraints:\n\n```\n```\n\nSources: [datamodel/settings.py](https://github.com/docling-project/docling/blob/f7244a43/datamodel/settings.py) [document\\_converter.py233-244](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L233-L244)\n\n### Pipeline Caching\n\nThe converter automatically caches pipeline instances based on `(pipeline_class, options_hash)` to avoid redundant model loading:\n\n```\n```\n\n**Pipeline Cache Key:**\n\n```\n```\n\nThis caching is thread-safe and significantly improves performance when processing multiple documents with identical configurations [document\\_converter.py207-217](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L207-L217) [document\\_converter.py351-378](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L351-L378)\n\nSources: [document\\_converter.py203-210](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L203-L210) [document\\_converter.py351-378](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L351-L378)\n\n### Performance Tuning\n\nControl batch sizes and concurrency for optimal performance:\n\n```\n```\n\nThe threaded PDF pipeline uses a stage graph with bounded queues to process pages in parallel across multiple stages (preprocess → OCR → layout → table → assemble) [pipeline/threaded\\_standard\\_pdf\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/pipeline/threaded_standard_pdf_pipeline.py)",
    "metadata": {
      "chunk_id": 5,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 984,
      "character_count": 4221,
      "created_at": "2025-10-16T17:42:17.671046",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 5,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "Sources: [datamodel/settings.py](https://github.com/docling-project/docling/blob/f7244a43/datamodel/settings.py) [datamodel/pipeline\\_options.py371-384](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options.py#L371-L384)\n\n## Integration Patterns\n\n### Custom Format Options\n\nCreate custom format configurations:\n\n```\n```\n\nSources: [document\\_converter.py62-70](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L62-L70) [datamodel/base\\_models.py36-42](https://github.com/docling-project/docling/blob/f7244a43/datamodel/base_models.py#L36-L42)\n\n### Error Handling and Logging\n\nImplement robust error handling:\n\n```\n```\n\n**Error Components:**\n\n| Component Type     | Description                    |\n| ------------------ | ------------------------------ |\n| `DOCUMENT_BACKEND` | Backend parsing errors         |\n| `MODEL`            | AI model inference errors      |\n| `DOC_ASSEMBLER`    | Document assembly errors       |\n| `USER_INPUT`       | Invalid input or configuration |\n\nSources: [datamodel/base\\_models.py147-157](https://github.com/docling-project/docling/blob/f7244a43/datamodel/base_models.py#L147-L157) [datamodel/document.py198-215](https://github.com/docling-project/docling/blob/f7244a43/datamodel/document.py#L198-L215)\n\n### Working with Streams\n\nConvert documents from in-memory streams:\n\n```\n```\n\nSources: [document\\_converter.py285-311](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L285-L311) [datamodel/base\\_models.py16](https://github.com/docling-project/docling/blob/f7244a43/datamodel/base_models.py#L16-L16)\n\n### Profiling and Performance Metrics\n\nAccess timing information from conversion results:\n\n```\n```\n\n**Quality Grades:**\n\n| Grade     | Score Range | Description                |\n| --------- | ----------- | -------------------------- |\n| EXCELLENT | ≥ 0.9       | High-quality conversion    |\n| GOOD      | 0.8 - 0.9   | Good conversion quality    |\n| FAIR      | 0.5 - 0.8   | Acceptable but with issues |\n| POOR      | < 0.5       | Low quality, review needed |\n\nSources: [datamodel/document.py206-207](https://github.com/docling-project/docling/blob/f7244a43/datamodel/document.py#L206-L207) [datamodel/base\\_models.py366-453](https://github.com/docling-project/docling/blob/f7244a43/datamodel/base_models.py#L366-L453)\n\n## Complete Example: Production Pipeline\n\nHere's a comprehensive example combining multiple features:\n\n```\n```\n\nSources: [document\\_converter.py184-433](https://github.com/docling-project/docling/blob/f7244a43/document_converter.py#L184-L433) [datamodel/pipeline\\_options.py334-363](https://github.com/docling-project/docling/blob/f7244a43/datamodel/pipeline_options.py#L334-L363) [cli/main.py299-816](https://github.com/docling-project/docling/blob/f7244a43/cli/main.py#L299-L816)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.\n\n### On this page",
    "metadata": {
      "chunk_id": 6,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 743,
      "character_count": 2950,
      "created_at": "2025-10-16T17:42:17.678140",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 6,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [Usage Examples](#usage-examples.md)\n- [Basic Document Conversion](#basic-document-conversion.md)\n- [Batch Processing](#batch-processing.md)\n- [Customizing Pipeline Options](#customizing-pipeline-options.md)\n- [PDF Pipeline Configuration](#pdf-pipeline-configuration.md)\n- [OCR Configuration](#ocr-configuration.md)\n- [Enrichment Models](#enrichment-models.md)\n- [Using Vision Language Models](#using-vision-language-models.md)\n- [Local VLM Processing](#local-vlm-processing.md)\n- [VLM Model Selection](#vlm-model-selection.md)\n- [Remote VLM via API](#remote-vlm-via-api.md)\n- [Custom VLM Configuration](#custom-vlm-configuration.md)\n- [Backend Selection](#backend-selection.md)\n- [PDF Backend Options](#pdf-backend-options.md)\n- [Office and Specialized Formats](#office-and-specialized-formats.md)\n- [Output and Export](#output-and-export.md)\n- [Export Formats](#export-formats.md)\n- [Extracting Tables and Figures](#extracting-tables-and-figures.md)\n- [Page-by-Page Processing](#page-by-page-processing.md)\n- [Advanced Configuration](#advanced-configuration.md)\n- [Accelerator Options](#accelerator-options.md)\n- [Document Limits and Timeouts](#document-limits-and-timeouts.md)\n- [Pipeline Caching](#pipeline-caching.md)\n- [Performance Tuning](#performance-tuning.md)\n- [Integration Patterns](#integration-patterns.md)\n- [Custom Format Options](#custom-format-options.md)\n- [Error Handling and Logging](#error-handling-and-logging.md)\n- [Working with Streams](#working-with-streams.md)\n- [Profiling and Performance Metrics](#profiling-and-performance-metrics.md)\n- [Complete Example: Production Pipeline](#complete-example-production-pipeline.md)",
    "metadata": {
      "chunk_id": 7,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 409,
      "character_count": 1650,
      "created_at": "2025-10-16T17:42:17.678351",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 7,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_7.3-usage-examples.md",
      "collection_context": "Docling"
    }
  }
]