[
  {
    "text": "Office Document Backends | docling-project/docling | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[docling-project/docling](https://github.com/docling-project/docling \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 12 October 2025 ([f7244a](https://github.com/docling-project/docling/commits/f7244a43))",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 116,
      "character_count": 425,
      "created_at": "2025-10-16T17:42:16.805692",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 0,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [Overview](docling-project/docling/1-overview.md)\n- [Installation](docling-project/docling/1.1-installation.md)\n- [Quick Start](docling-project/docling/1.2-quick-start.md)\n- [Core Architecture](docling-project/docling/2-core-architecture.md)\n- [Document Conversion Flow](docling-project/docling/2.1-document-conversion-flow.md)\n- [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md)\n- [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.4-format-detection-and-routing.md)\n- [Document Backends](docling-project/docling/3-document-backends.md)\n- [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md)\n- [Office Document Backends](docling-project/docling/3.2-office-document-backends.md)\n- [Web and Markup Backends](docling-project/docling/3.3-web-and-markup-backends.md)\n- [AI/ML Models](docling-project/docling/4-aiml-models.md)\n- [OCR Models](docling-project/docling/4.1-ocr-models.md)\n- [Layout and Table Structure Models](docling-project/docling/4.2-layout-and-table-structure-models.md)\n- [Vision Language Models](docling-project/docling/4.3-vision-language-models.md)\n- [Inline VLM Models](docling-project/docling/4.3.1-inline-vlm-models.md)\n- [API-Based VLM Models](docling-project/docling/4.3.2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)\n- [Processing Pipelines](docling-project/docling/5-processing-pipelines.md)\n- [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md)\n- [Threaded PDF Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md)\n- [VLM Pipeline](docling-project/docling/5.3-vlm-pipeline.md)\n- [Extraction Pipeline](docling-project/docling/5.4-extraction-pipeline.md)\n- [ASR Pipeline](docling-project/docling/5.5-asr-pipeline.md)\n- [Base Pipeline Architecture](docling-project/docling/5.6-base-pipeline-architecture.md)\n- [Command Line Interface](docling-project/docling/6-command-line-interface.md)\n- [Document Conversion CLI](docling-project/docling/6.1-document-conversion-cli.md)\n- [Model Management CLI](docling-project/docling/6.2-model-management-cli.md)\n- [Python SDK](docling-project/docling/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)\n- [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md)\n- [Usage Examples](docling-project/docling/7.3-usage-examples.md)\n- [Output and Integration](docling-project/docling/8-output-and-integration.md)\n- [Export Formats](docling-project/docling/8.1-export-formats.md)\n- [Document Chunking](docling-project/docling/8.2-document-chunking.md)\n- [Framework Integrations](docling-project/docling/8.3-framework-integrations.md)\n- [Development and Testing](docling-project/docling/9-development-and-testing.md)\n- [Testing Framework](docling-project/docling/9.1-testing-framework.md)\n- [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md)\n- [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md)\n- [Deployment](docling-project/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)\n- [Model Artifacts Management](docling-project/docling/10.2-model-artifacts-management.md)\n\nMenu\n\n# Office Document Backends\n\nRelevant source files",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 928,
      "character_count": 3423,
      "created_at": "2025-10-16T17:42:16.807978",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 1,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [docling/backend/msword\\_backend.py](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py)\n- [docling/cli/main.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py)\n- [docling/datamodel/base\\_models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py)\n- [docling/datamodel/document.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py)\n- [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py)\n- [docling/document\\_converter.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py)\n- [tests/data/docx/textbox.docx](https://github.com/docling-project/docling/blob/f7244a43/tests/data/docx/textbox.docx)\n- [tests/data/docx/unit\\_test\\_formatting.docx](https://github.com/docling-project/docling/blob/f7244a43/tests/data/docx/unit_test_formatting.docx)\n- [tests/data/groundtruth/docling\\_v2/unit\\_test\\_formatting.docx.itxt](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/unit_test_formatting.docx.itxt)\n- [tests/data/groundtruth/docling\\_v2/unit\\_test\\_formatting.docx.json](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/unit_test_formatting.docx.json)\n- [tests/data/groundtruth/docling\\_v2/unit\\_test\\_formatting.docx.md](https://github.com/docling-project/docling/blob/f7244a43/tests/data/groundtruth/docling_v2/unit_test_formatting.docx.md)\n- [tests/test\\_backend\\_msword.py](https://github.com/docling-project/docling/blob/f7244a43/tests/test_backend_msword.py)\n\nThis document covers the backend implementations for Microsoft Office document formats in Docling, specifically Word (DOCX) and Excel (XLSX) processing. These backends parse declarative document formats into the universal `DoclingDocument` representation.\n\nFor PDF document processing, see [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md). For web and text format backends, see [Web and Text Document Backends](docling-project/docling/3.3-web-and-markup-backends.md).\n\n## Overview\n\nDocling's office document backends handle structured document formats that contain explicit markup and formatting information. Unlike PDF documents that require AI/ML models for layout analysis, office documents can be processed directly through their XML structure and metadata.\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py32-40](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L32-L40) [docling/backend/msexcel\\_backend.py28-31](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L28-L31)\n\n## Microsoft Word Backend\n\nThe `MsWordDocumentBackend` processes DOCX files by parsing their Office Open XML structure using the python-docx library and custom XML processing.\n\n### Core Architecture\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py40-92](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L40-L92) [docling/backend/msword\\_backend.py170-281](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L170-L281)\n\n### Document Element Processing\n\nThe Word backend processes various document elements through specialized handlers:\n\n| Element Type | Handler Method                | Key Features                             |\n| ------------ | ----------------------------- | ---------------------------------------- |\n| Paragraphs   | `_handle_text_elements()`     | Style detection, formatting, hyperlinks  |\n| Tables       | `_handle_tables()`            | Cell extraction, merged cells, structure |\n| Images       | `_handle_pictures()`          | Inline images, relationship parsing      |\n| Textboxes    | `_handle_textbox_content()`   | Position-aware text extraction           |\n| Equations    | `_handle_equations_in_text()` | OMML to LaTeX conversion                 |\n| Lists        | `_add_list_item()`            | Numbered and bulleted lists              |",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 992,
      "character_count": 4178,
      "created_at": "2025-10-16T17:42:16.813203",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 2,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "Sources: [docling/backend/msword\\_backend.py801-944](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L801-L944) [docling/backend/msword\\_backend.py1074-1197](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L1074-L1197)\n\n### List Processing\n\nThe backend handles complex list structures with proper nesting and numbering:\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py335-421](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L335-L421) [docling/backend/msword\\_backend.py1405-1485](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L1405-L1485)\n\n## Microsoft Excel Backend\n\nThe `MsExcelDocumentBackend` processes Excel workbooks by treating each worksheet as a separate page and extracting data tables and images.\n\n### Core Architecture\n\n```\n```\n\nSources: [docling/backend/msexcel\\_backend.py89-176](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L89-L176) [docling/backend/msexcel\\_backend.py177-226](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L177-L226)\n\n### Table Detection Algorithm\n\nThe Excel backend uses a sophisticated algorithm to detect and extract data tables:\n\n```\n```\n\nSources: [docling/backend/msexcel\\_backend.py293-394](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L293-L394) [docling/backend/msexcel\\_backend.py320-478](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L320-L478)\n\n### Page and Size Management\n\nExcel worksheets are converted to document pages with proper sizing:\n\n| Feature          | Implementation               | Purpose                           |\n| ---------------- | ---------------------------- | --------------------------------- |\n| Page Numbers     | `workbook.index(sheet) + 1`  | Sequential page numbering         |\n| Page Size        | `_find_page_size()`          | Calculate bounding box dimensions |\n| Cell Coordinates | `(col, row)` tuples          | 0-based indexing system           |\n| Content Layers   | `_get_sheet_content_layer()` | Mark invisible sheets             |\n\nSources: [docling/backend/msexcel\\_backend.py194-205](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L194-L205) [docling/backend/msexcel\\_backend.py526-552](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L526-L552)\n\n## Integration with Document Converter\n\nBoth office document backends integrate with the main document conversion pipeline through the format detection and backend selection system:\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py111-112](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L111-L112) [docling/backend/msexcel\\_backend.py146-147](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L146-L147)\n\n## Common Features and Patterns\n\n### Declarative Document Processing\n\nBoth backends inherit from `DeclarativeDocumentBackend`, which provides:\n\n- Direct structural parsing without AI/ML models\n- Format-specific input validation\n- Standardized conversion interface\n- Error handling and cleanup\n\nSources: [docling/backend/abstract\\_backend.py](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/abstract_backend.py) [docling/backend/msword\\_backend.py32](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L32-L32) [docling/backend/msexcel\\_backend.py29](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L29-L29)\n\n### Document Structure Creation\n\nBoth backends create hierarchical document structures using:\n\n- Parent-child relationships through `parents` dictionary\n- Group labels for semantic organization\n- Provenance information for element positioning\n- Content layer management for visibility",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 967,
      "character_count": 4090,
      "created_at": "2025-10-16T17:42:16.821065",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 3,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "Sources: [docling/backend/msword\\_backend.py56-67](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L56-L67) [docling/backend/msexcel\\_backend.py105-109](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L105-L109)\n\n### Error Handling and Validation\n\nThe backends implement robust error handling:\n\n```\n```\n\nSources: [docling/backend/msword\\_backend.py81-91](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msword_backend.py#L81-L91) [docling/backend/msexcel\\_backend.py112-125](https://github.com/docling-project/docling/blob/f7244a43/docling/backend/msexcel_backend.py#L112-L125)\n\nDismiss\n\nRefresh this wiki\n\nThis wiki was recently refreshed. Please wait 4 days to refresh again.\n\n### On this page\n\n- [Office Document Backends](#office-document-backends.md)\n- [Overview](#overview.md)\n- [Microsoft Word Backend](#microsoft-word-backend.md)\n- [Core Architecture](#core-architecture.md)\n- [Document Element Processing](#document-element-processing.md)\n- [List Processing](#list-processing.md)\n- [Microsoft Excel Backend](#microsoft-excel-backend.md)\n- [Core Architecture](#core-architecture-1.md)\n- [Table Detection Algorithm](#table-detection-algorithm.md)\n- [Page and Size Management](#page-and-size-management.md)\n- [Integration with Document Converter](#integration-with-document-converter.md)\n- [Common Features and Patterns](#common-features-and-patterns.md)\n- [Declarative Document Processing](#declarative-document-processing.md)\n- [Document Structure Creation](#document-structure-creation.md)\n- [Error Handling and Validation](#error-handling-and-validation.md)",
    "metadata": {
      "chunk_id": 4,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 414,
      "character_count": 1679,
      "created_at": "2025-10-16T17:42:16.822128",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 4,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_3.2-office-document-backends.md",
      "collection_context": "Docling"
    }
  }
]