[
  {
    "text": "Quick Start | docling-project/docling | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[docling-project/docling](https://github.com/docling-project/docling \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 12 October 2025 ([f7244a](https://github.com/docling-project/docling/commits/f7244a43))",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 114,
      "character_count": 412,
      "created_at": "2025-10-16T17:42:16.411810",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 0,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [Overview](docling-project/docling/1-overview.md)\n- [Installation](docling-project/docling/1.1-installation.md)\n- [Quick Start](docling-project/docling/1.2-quick-start.md)\n- [Core Architecture](docling-project/docling/2-core-architecture.md)\n- [Document Conversion Flow](docling-project/docling/2.1-document-conversion-flow.md)\n- [DoclingDocument Data Model](docling-project/docling/2.2-doclingdocument-data-model.md)\n- [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md)\n- [Format Detection and Routing](docling-project/docling/2.4-format-detection-and-routing.md)\n- [Document Backends](docling-project/docling/3-document-backends.md)\n- [PDF Processing Backends](docling-project/docling/3.1-pdf-processing-backends.md)\n- [Office Document Backends](docling-project/docling/3.2-office-document-backends.md)\n- [Web and Markup Backends](docling-project/docling/3.3-web-and-markup-backends.md)\n- [AI/ML Models](docling-project/docling/4-aiml-models.md)\n- [OCR Models](docling-project/docling/4.1-ocr-models.md)\n- [Layout and Table Structure Models](docling-project/docling/4.2-layout-and-table-structure-models.md)\n- [Vision Language Models](docling-project/docling/4.3-vision-language-models.md)\n- [Inline VLM Models](docling-project/docling/4.3.1-inline-vlm-models.md)\n- [API-Based VLM Models](docling-project/docling/4.3.2-api-based-vlm-models.md)\n- [Enrichment Models](docling-project/docling/4.4-enrichment-models.md)\n- [Processing Pipelines](docling-project/docling/5-processing-pipelines.md)\n- [Standard PDF Pipeline](docling-project/docling/5.1-standard-pdf-pipeline.md)\n- [Threaded PDF Pipeline](docling-project/docling/5.2-threaded-pdf-pipeline.md)\n- [VLM Pipeline](docling-project/docling/5.3-vlm-pipeline.md)\n- [Extraction Pipeline](docling-project/docling/5.4-extraction-pipeline.md)\n- [ASR Pipeline](docling-project/docling/5.5-asr-pipeline.md)\n- [Base Pipeline Architecture](docling-project/docling/5.6-base-pipeline-architecture.md)\n- [Command Line Interface](docling-project/docling/6-command-line-interface.md)\n- [Document Conversion CLI](docling-project/docling/6.1-document-conversion-cli.md)\n- [Model Management CLI](docling-project/docling/6.2-model-management-cli.md)\n- [Python SDK](docling-project/docling/7-python-sdk.md)\n- [DocumentConverter API](docling-project/docling/7.1-documentconverter-api.md)\n- [DocumentExtractor API](docling-project/docling/7.2-documentextractor-api.md)\n- [Usage Examples](docling-project/docling/7.3-usage-examples.md)\n- [Output and Integration](docling-project/docling/8-output-and-integration.md)\n- [Export Formats](docling-project/docling/8.1-export-formats.md)\n- [Document Chunking](docling-project/docling/8.2-document-chunking.md)\n- [Framework Integrations](docling-project/docling/8.3-framework-integrations.md)\n- [Development and Testing](docling-project/docling/9-development-and-testing.md)\n- [Testing Framework](docling-project/docling/9.1-testing-framework.md)\n- [Ground Truth Data](docling-project/docling/9.2-ground-truth-data.md)\n- [CI/CD and Development Workflow](docling-project/docling/9.3-cicd-and-development-workflow.md)\n- [Deployment](docling-project/docling/10-deployment.md)\n- [Docker Deployment](docling-project/docling/10.1-docker-deployment.md)\n- [Model Artifacts Management](docling-project/docling/10.2-model-artifacts-management.md)\n\nMenu\n\n# Quick Start\n\nRelevant source files",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 926,
      "character_count": 3410,
      "created_at": "2025-10-16T17:42:16.413827",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 1,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "- [README.md](https://github.com/docling-project/docling/blob/f7244a43/README.md)\n- [docling/cli/main.py](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py)\n- [docling/datamodel/base\\_models.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py)\n- [docling/datamodel/document.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py)\n- [docling/datamodel/pipeline\\_options.py](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py)\n- [docling/document\\_converter.py](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py)\n- [docs/examples/minimal\\_vlm\\_pipeline.py](https://github.com/docling-project/docling/blob/f7244a43/docs/examples/minimal_vlm_pipeline.py)\n- [docs/index.md](https://github.com/docling-project/docling/blob/f7244a43/docs/index.md)\n- [docs/usage/index.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/index.md)\n- [docs/usage/mcp.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/mcp.md)\n- [docs/usage/vision\\_models.md](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/vision_models.md)\n- [mkdocs.yml](https://github.com/docling-project/docling/blob/f7244a43/mkdocs.yml)\n\nThis page provides simple, working code examples to get you started with Docling immediately. It covers the most common use cases: basic document conversion, using vision language models, and CLI usage. For detailed installation instructions, see [Installation](docling-project/docling/1.1-installation.md). For advanced configuration options, see [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md) and [Advanced Options](https://docling-project.github.io/docling/usage/advanced_options/).\n\n## Prerequisites\n\nEnsure Docling is installed before proceeding:\n\n```\n```\n\nFor VLM features or specific OCR engines, additional extras may be required. See [Installation](docling-project/docling/1.1-installation.md) for details.\n\n## Basic Document Conversion\n\nThe simplest way to convert a document is to create a `DocumentConverter` and call `convert()`:\n\n```\n```\n\n**What this does:**\n\n1. `DocumentConverter` initializes with default format options for all supported formats\n2. `convert()` detects the input format, selects the appropriate backend and pipeline\n3. Returns a `ConversionResult` containing a `DoclingDocument`\n4. `export_to_markdown()` serializes the document to Markdown format\n\n### Conversion Flow Diagram\n\n```\n```\n\n**Sources:** [docling/document\\_converter.py228-245](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L228-L245) [docling/datamodel/document.py280-338](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L280-L338) [README.md69-77](https://github.com/docling-project/docling/blob/f7244a43/README.md#L69-L77)\n\n## Output Formats\n\nThe `DoclingDocument` supports multiple export formats:\n\n| Method                        | Output Format | Description                        |\n| ----------------------------- | ------------- | ---------------------------------- |\n| `export_to_markdown()`        | Markdown      | Human-readable text with structure |\n| `export_to_json()`            | JSON          | Complete structured document data  |\n| `export_to_html()`            | HTML          | Web-ready HTML output              |\n| `export_to_document_tokens()` | DocTags       | Structured token sequence          |\n\nExample with JSON export:\n\n```\n```\n\n**Sources:** [docling/cli/main.py191-275](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L191-L275) [docling/datamodel/document.py198-215](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L198-L215)\n\n## VLM Pipeline Usage\n\nDocling supports vision-language models for end-to-end document processing. The `VlmPipeline` processes pages using models like GraniteDocling or SmolDocling:\n\n```\n```\n\n### VLM with MLX Acceleration (macOS)\n\nOn Apple Silicon, use MLX for faster inference:\n\n```\n```",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 1004,
      "character_count": 4180,
      "created_at": "2025-10-16T17:42:16.421714",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 2,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "**Sources:** [docs/examples/minimal\\_vlm\\_pipeline.py1-71](https://github.com/docling-project/docling/blob/f7244a43/docs/examples/minimal_vlm_pipeline.py#L1-L71) [docs/usage/vision\\_models.md11-38](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/vision_models.md#L11-L38)\n\n## Pipeline Selection Diagram\n\n```\n```\n\n**Sources:** [docling/document\\_converter.py132-182](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L132-L182) [docling/document\\_converter.py351-378](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L351-L378) [docling/datamodel/pipeline\\_options.py273-368](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py#L273-L368)\n\n## CLI Usage\n\nDocling provides a command-line interface for quick conversions without writing code:\n\n### Basic Conversion\n\n```\n```\n\n### VLM Pipeline via CLI\n\n```\n```\n\n### Common CLI Options\n\n```\n```\n\n### CLI Command Structure\n\n```\n```\n\n**Sources:** [docling/cli/main.py298-816](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L298-L816) [docs/usage/index.md26-39](https://github.com/docling-project/docling/blob/f7244a43/docs/usage/index.md#L26-L39) [README.md84-98](https://github.com/docling-project/docling/blob/f7244a43/README.md#L84-L98)\n\n## Processing Multiple Documents\n\nConvert multiple documents in batch:\n\n```\n```\n\n**Sources:** [docling/document\\_converter.py247-283](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L247-L283)\n\n## Table Extraction\n\nDocling automatically extracts tables. Access them from the `DoclingDocument`:\n\n```\n```\n\n**Sources:** [docling\\_core.types.doc](https://github.com/docling-project/docling/blob/f7244a43/docling_core.types.doc#LNaN-LNaN) [docling/datamodel/document.py24-32](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/document.py#L24-L32)\n\n## Configuration Options Summary\n\nKey configuration classes for customizing conversion:\n\n| Class                   | Purpose                       | Used For                            |\n| ----------------------- | ----------------------------- | ----------------------------------- |\n| `PdfPipelineOptions`    | Configure PDF processing      | OCR, table extraction, enrichment   |\n| `VlmPipelineOptions`    | Configure VLM models          | Model selection, prompts, inference |\n| `AsrPipelineOptions`    | Configure audio transcription | Whisper model selection             |\n| `OcrOptions`            | Configure OCR engines         | Engine type, languages, parameters  |\n| `TableStructureOptions` | Configure table extraction    | Accuracy vs speed tradeoffs         |\n| `AcceleratorOptions`    | Configure hardware            | Device (CPU/CUDA/MPS), threads      |\n\nExample with custom options:\n\n```\n```\n\n**Sources:** [docling/datamodel/pipeline\\_options.py273-384](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/pipeline_options.py#L273-L384) [docling/cli/main.py619-697](https://github.com/docling-project/docling/blob/f7244a43/docling/cli/main.py#L619-L697)\n\n## Error Handling\n\nControl error behavior during conversion:\n\n```\n```\n\n**Sources:** [docling/document\\_converter.py227-245](https://github.com/docling-project/docling/blob/f7244a43/docling/document_converter.py#L227-L245) [docling/datamodel/base\\_models.py45-51](https://github.com/docling-project/docling/blob/f7244a43/docling/datamodel/base_models.py#L45-L51)\n\n## Next Steps\n\n- For installation details and optional dependencies, see [Installation](docling-project/docling/1.1-installation.md)\n- For format-specific guidance, see [Supported Formats](https://docling-project.github.io/docling/usage/supported_formats/)\n- For detailed configuration, see [Configuration and Pipeline Options](docling-project/docling/2.3-configuration-and-pipeline-options.md)\n- For advanced pipeline usage, see [Processing Pipelines](docling-project/docling/5-processing-pipelines.md)\n- For integration examples, see [Framework Integrations](docling-project/docling/8.3-framework-integrations.md)\n\nDismiss\n\nRefresh this wiki",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 1015,
      "character_count": 4161,
      "created_at": "2025-10-16T17:42:16.430281",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 3,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "collection_context": "Docling"
    }
  },
  {
    "text": "This wiki was recently refreshed. Please wait 4 days to refresh again.\n\n### On this page\n\n- [Quick Start](#quick-start.md)\n- [Prerequisites](#prerequisites.md)\n- [Basic Document Conversion](#basic-document-conversion.md)\n- [Conversion Flow Diagram](#conversion-flow-diagram.md)\n- [Output Formats](#output-formats.md)\n- [VLM Pipeline Usage](#vlm-pipeline-usage.md)\n- [VLM with MLX Acceleration (macOS)](#vlm-with-mlx-acceleration-macos.md)\n- [Pipeline Selection Diagram](#pipeline-selection-diagram.md)\n- [CLI Usage](#cli-usage.md)\n- [Basic Conversion](#basic-conversion.md)\n- [VLM Pipeline via CLI](#vlm-pipeline-via-cli.md)\n- [Common CLI Options](#common-cli-options.md)\n- [CLI Command Structure](#cli-command-structure.md)\n- [Processing Multiple Documents](#processing-multiple-documents.md)\n- [Table Extraction](#table-extraction.md)\n- [Configuration Options Summary](#configuration-options-summary.md)\n- [Error Handling](#error-handling.md)\n- [Next Steps](#next-steps.md)",
    "metadata": {
      "chunk_id": 4,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "input_type": "docling",
      "chunking_strategy": "hybrid_adaptive",
      "token_count": 256,
      "character_count": 975,
      "created_at": "2025-10-16T17:42:16.430575",
      "parent_context": null,
      "semantic_type": "docling",
      "collection_name": "Docling",
      "subfolder_name": null,
      "collection_strategy": "hybrid_adaptive",
      "chunk_index_in_file": 4,
      "file_relative_path": "Docs\\Docling\\_docling-project_docling_1.2-quick-start.md",
      "collection_context": "Docling"
    }
  }
]