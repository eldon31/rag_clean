[
  {
    "text": "Configuration - Qdrant\n\n[](https://qdrant.tech/)\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\nSearch\n\n[Log in](https://cloud.qdrant.io/login) [Start Free](https://cloud.qdrant.io/signup)\n\nSearch\n\n- [Qdrant](https://qdrant.tech/documentation/)\n- [Cloud](https://qdrant.tech/documentation/cloud-intro/)\n- [Build](https://qdrant.tech/documentation/build/)\n- [Learn](https://qdrant.tech/articles/)\n- [API Reference](https://api.qdrant.tech/api-reference)\n\n### Getting Started\n\n[What is Qdrant?](https://qdrant.tech/documentation/overview/)\n\n- [Understanding Vector Search in Qdrant](https://qdrant.tech/documentation/overview/vector-search/)\n\n[Local Quickstart](https://qdrant.tech/documentation/quickstart/)\n\n[API & SDKs](https://qdrant.tech/documentation/interfaces/)\n\n[Qdrant Web UI](https://qdrant.tech/documentation/web-ui/)\n\n### User Manual\n\n[Concepts](https://qdrant.tech/documentation/concepts/)\n\n- [Collections](https://qdrant.tech/documentation/concepts/collections/)\n- [Points](https://qdrant.tech/documentation/concepts/points/)\n- [Vectors](https://qdrant.tech/documentation/concepts/vectors/)\n- [Payload](https://qdrant.tech/documentation/concepts/payload/)\n- [Search](https://qdrant.tech/documentation/concepts/search/)\n- [Explore](https://qdrant.tech/documentation/concepts/explore/)\n- [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/)\n- [Filtering](https://qdrant.tech/documentation/concepts/filtering/)\n- [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/)\n- [Storage](https://qdrant.tech/documentation/concepts/storage/)\n- [Indexing](https://qdrant.tech/documentation/concepts/indexing/)\n- [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)\n\n[Guides](https://qdrant.tech/documentation/guides/installation/)\n\n- [Installation](https://qdrant.tech/documentation/guides/installation/)\n- [Administration](https://qdrant.tech/documentation/guides/administration/)\n- [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/)\n- [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/)\n- [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/)\n- [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/)\n- [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/)\n- [Quantization](https://qdrant.tech/documentation/guides/quantization/)\n- [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/)\n- [Configuration](https://qdrant.tech/documentation/guides/configuration/)\n- [Security](https://qdrant.tech/documentation/guides/security/)\n- [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/)\n- [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)\n\n### Ecosystem\n\n[FastEmbed](https://qdrant.tech/documentation/fastembed/)\n\n- [Quickstart](https://qdrant.tech/documentation/fastembed/fastembed-quickstart/)\n- [FastEmbed & Qdrant](https://qdrant.tech/documentation/fastembed/fastembed-semantic-search/)\n- [Working with miniCOIL](https://qdrant.tech/documentation/fastembed/fastembed-minicoil/)\n- [Working with SPLADE](https://qdrant.tech/documentation/fastembed/fastembed-splade/)\n- [Working with ColBERT](https://qdrant.tech/documentation/fastembed/fastembed-colbert/)\n- [Reranking with FastEmbed](https://qdrant.tech/documentation/fastembed/fastembed-rerankers/)\n\n[Qdrant MCP Server](https://github.com/qdrant/mcp-server-qdrant)\n\n### Tutorials\n\n[Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 964,
      "character_count": 3781,
      "created_at": "2025-10-16T17:42:26.877758",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_documentation",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "collection_context": "Qdrant/qdrant_documentation"
    }
  },
  {
    "text": "- [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/)\n- [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/)\n- [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/)\n- [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)\n\n[Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)\n\n- [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/)\n- [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/)\n- [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/)\n- [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/)\n- [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)\n\n[Using the Database](https://qdrant.tech/documentation/database-tutorials/)\n\n- [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/)\n- [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/)\n- [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/)\n- [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/)\n- [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/)\n- [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/)\n- [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)\n\n### Support\n\n[FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)\n\n- [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)\n- [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)\n\n[Release Notes](https://github.com/qdrant/qdrant/releases)\n\n### Getting Started\n\n[What is Qdrant?](https://qdrant.tech/documentation/overview/)\n\n- [Understanding Vector Search in Qdrant](https://qdrant.tech/documentation/overview/vector-search/)\n\n[Local Quickstart](https://qdrant.tech/documentation/quickstart/)\n\n[API & SDKs](https://qdrant.tech/documentation/interfaces/)\n\n[Qdrant Web UI](https://qdrant.tech/documentation/web-ui/)\n\n### User Manual\n\n[Concepts](https://qdrant.tech/documentation/concepts/)\n\n- [Collections](https://qdrant.tech/documentation/concepts/collections/)\n- [Points](https://qdrant.tech/documentation/concepts/points/)\n- [Vectors](https://qdrant.tech/documentation/concepts/vectors/)\n- [Payload](https://qdrant.tech/documentation/concepts/payload/)\n- [Search](https://qdrant.tech/documentation/concepts/search/)\n- [Explore](https://qdrant.tech/documentation/concepts/explore/)\n- [Hybrid Queries](https://qdrant.tech/documentation/concepts/hybrid-queries/)\n- [Filtering](https://qdrant.tech/documentation/concepts/filtering/)\n- [Optimizer](https://qdrant.tech/documentation/concepts/optimizer/)\n- [Storage](https://qdrant.tech/documentation/concepts/storage/)\n- [Indexing](https://qdrant.tech/documentation/concepts/indexing/)\n- [Snapshots](https://qdrant.tech/documentation/concepts/snapshots/)\n\n[Guides](https://qdrant.tech/documentation/guides/installation/)",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 852,
      "character_count": 3535,
      "created_at": "2025-10-16T17:42:26.882371",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_documentation",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "collection_context": "Qdrant/qdrant_documentation"
    }
  },
  {
    "text": "- [Installation](https://qdrant.tech/documentation/guides/installation/)\n- [Administration](https://qdrant.tech/documentation/guides/administration/)\n- [Running with GPU](https://qdrant.tech/documentation/guides/running-with-gpu/)\n- [Capacity Planning](https://qdrant.tech/documentation/guides/capacity-planning/)\n- [Optimize Performance](https://qdrant.tech/documentation/guides/optimize/)\n- [Multitenancy](https://qdrant.tech/documentation/guides/multiple-partitions/)\n- [Distributed Deployment](https://qdrant.tech/documentation/guides/distributed_deployment/)\n- [Quantization](https://qdrant.tech/documentation/guides/quantization/)\n- [Monitoring & Telemetry](https://qdrant.tech/documentation/guides/monitoring/)\n- [Configuration](https://qdrant.tech/documentation/guides/configuration/)\n- [Security](https://qdrant.tech/documentation/guides/security/)\n- [Usage Statistics](https://qdrant.tech/documentation/guides/usage-statistics/)\n- [Troubleshooting](https://qdrant.tech/documentation/guides/common-errors/)\n\n### Ecosystem\n\n[FastEmbed](https://qdrant.tech/documentation/fastembed/)\n\n- [Quickstart](https://qdrant.tech/documentation/fastembed/fastembed-quickstart/)\n- [FastEmbed & Qdrant](https://qdrant.tech/documentation/fastembed/fastembed-semantic-search/)\n- [Working with miniCOIL](https://qdrant.tech/documentation/fastembed/fastembed-minicoil/)\n- [Working with SPLADE](https://qdrant.tech/documentation/fastembed/fastembed-splade/)\n- [Working with ColBERT](https://qdrant.tech/documentation/fastembed/fastembed-colbert/)\n- [Reranking with FastEmbed](https://qdrant.tech/documentation/fastembed/fastembed-rerankers/)\n\n[Qdrant MCP Server](https://github.com/qdrant/mcp-server-qdrant)\n\n### Tutorials\n\n[Vector Search Basics](https://qdrant.tech/documentation/beginner-tutorials/)\n\n- [Semantic Search 101](https://qdrant.tech/documentation/beginner-tutorials/search-beginners/)\n- [Build a Neural Search Service](https://qdrant.tech/documentation/beginner-tutorials/neural-search/)\n- [Setup Hybrid Search with FastEmbed](https://qdrant.tech/documentation/beginner-tutorials/hybrid-search-fastembed/)\n- [Measure Search Quality](https://qdrant.tech/documentation/beginner-tutorials/retrieval-quality/)\n\n[Advanced Retrieval](https://qdrant.tech/documentation/advanced-tutorials/)\n\n- [How to Use Multivector Representations with Qdrant Effectively](https://qdrant.tech/documentation/advanced-tutorials/using-multivector-representations/)\n- [Reranking in Hybrid Search](https://qdrant.tech/documentation/advanced-tutorials/reranking-hybrid-search/)\n- [Search Through Your Codebase](https://qdrant.tech/documentation/advanced-tutorials/code-search/)\n- [Build a Recommendation System with Collaborative Filtering](https://qdrant.tech/documentation/advanced-tutorials/collaborative-filtering/)\n- [Scaling PDF Retrieval with Qdrant](https://qdrant.tech/documentation/advanced-tutorials/pdf-retrieval-at-scale/)\n\n[Using the Database](https://qdrant.tech/documentation/database-tutorials/)\n\n- [Bulk Upload Vectors](https://qdrant.tech/documentation/database-tutorials/bulk-upload/)\n- [Create & Restore Snapshots](https://qdrant.tech/documentation/database-tutorials/create-snapshot/)\n- [Large Scale Search](https://qdrant.tech/documentation/database-tutorials/large-scale-search/)\n- [Load a HuggingFace Dataset](https://qdrant.tech/documentation/database-tutorials/huggingface-datasets/)\n- [Build With Async API](https://qdrant.tech/documentation/database-tutorials/async-api/)\n- [Migration to Qdrant](https://qdrant.tech/documentation/database-tutorials/migration/)\n- [Static Embeddings. Should you pay attention?](https://qdrant.tech/documentation/database-tutorials/static-embeddings/)\n\n### Support\n\n[FAQ](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)\n\n- [Qdrant Fundamentals](https://qdrant.tech/documentation/faq/qdrant-fundamentals/)\n- [Database Optimization](https://qdrant.tech/documentation/faq/database-optimization/)\n\n[Release Notes](https://github.com/qdrant/qdrant/releases)\n\n- [Documentation](https://qdrant.tech/documentation/)\n-\n- [Guides](https://qdrant.tech/documentation/guides/)\n-\n- Configuration\n\n# Configuration",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 1004,
      "character_count": 4144,
      "created_at": "2025-10-16T17:42:26.887897",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_documentation",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "collection_context": "Qdrant/qdrant_documentation"
    }
  },
  {
    "text": "Qdrant ships with sensible defaults for collection and network settings that are suitable for most use cases. You can view these defaults in the [Qdrant source](https://github.com/qdrant/qdrant/blob/master/config/config.yaml). If you need to customize the settings, you can do so using configuration files and environment variables.\n\nQdrant Cloud does not allow modifying the Qdrant configuration.\n\n## Configuration Files\n\nTo customize Qdrant, you can mount your configuration file in any of the following locations. This guide uses `.yaml` files, but Qdrant also supports other formats such as `.toml`, `.json`, and `.ini`.\n\n1. **Main Configuration: `qdrant/config/config.yaml`**\n\nMount your custom `config.yaml` file to override default settings:\n\n```bash\n   docker run -p 6333:6333 \\\n       -v $(pwd)/config.yaml:/qdrant/config/config.yaml \\\n       qdrant/qdrant\n   ```\n\n2. **Environment-Specific Configuration: `config/{RUN_MODE}.yaml`**\n\nQdrant looks for an environment-specific configuration file based on the `RUN_MODE` variable. By default, the [official Docker image](https://hub.docker.com/r/qdrant/qdrant) uses `RUN_MODE=production`, meaning it will look for `config/production.yaml`.\n\nYou can override this by setting `RUN_MODE` to another value (e.g., `dev`), and providing the corresponding file:\n\n```bash\n   docker run -p 6333:6333 \\\n       -v $(pwd)/dev.yaml:/qdrant/config/dev.yaml \\\n       -e RUN_MODE=dev \\\n       qdrant/qdrant\n   ```\n\n3. **Local Configuration: `config/local.yaml`**\n\nThe `local.yaml` file is typically used for machine-specific settings that are not tracked in version control:\n\n```bash\n   docker run -p 6333:6333 \\\n       -v $(pwd)/local.yaml:/qdrant/config/local.yaml \\\n       qdrant/qdrant\n   ```\n\n4. **Custom Configuration via `--config-path`**\n\nYou can specify a custom configuration file path using the `--config-path` argument. This will override other configuration files:\n\n```bash\n   docker run -p 6333:6333 \\\n       -v $(pwd)/config.yaml:/path/to/config.yaml \\\n       qdrant/qdrant \\\n       ./qdrant --config-path /path/to/config.yaml\n   ```\n\nFor details on how these configurations are loaded and merged, see the [loading order and priority](#loading-order-and-priority.md). The full list of available configuration options can be found [below](#configuration-options.md).\n\n## Environment Variables\n\nYou can also configure Qdrant using environment variables, which always take the highest priority and override any file-based settings.\n\nEnvironment variables follow this format: they should be prefixed with `QDRANT__`, and nested properties should be separated by double underscores (`__`). For example:\n\n```bash\ndocker run -p 6333:6333 \\\n    -e QDRANT__LOG_LEVEL=INFO \\\n    -e QDRANT__SERVICE__API_KEY=<MY_SECRET_KEY> \\\n    -e QDRANT__SERVICE__ENABLE_TLS=1 \\\n    -e QDRANT__TLS__CERT=./tls/cert.pem \\\n    qdrant/qdrant\n```\n\nThis results in the following configuration:\n\n```yaml\nlog_level: INFO\nservice:\n  enable_tls: true\n  api_key: <MY_SECRET_KEY>\ntls:\n  cert: ./tls/cert.pem\n```\n\n## Loading Order and Priority\n\nDuring startup, Qdrant merges multiple configuration sources into a single effective configuration. The loading order is as follows (from least to most significant):\n\n1. Embedded default configuration\n2. `config/config.yaml`\n3. `config/{RUN_MODE}.yaml`\n4. `config/local.yaml`\n5. Custom configuration file\n6. Environment variables\n\n### Overriding Behavior\n\nSettings from later sources in the list override those from earlier sources:\n\n- Settings in `config/{RUN_MODE}.yaml` (3) will override those in `config/config.yaml` (2).\n- A custom configuration file provided via `--config-path` (5) will override all other file-based settings.\n- Environment variables (6) have the highest priority and will override any settings from files.\n\n## Configuration Validation\n\nQdrant validates the configuration during startup. If any issues are found, the server will terminate immediately, providing information about the error. For example:\n\n```console\nError: invalid type: 64-bit integer `-1`, expected an unsigned 64-bit or smaller integer for key `storage.hnsw_index.max_indexing_threads` in config/production.yaml\n```\n\nThis ensures that misconfigurations are caught early, preventing Qdrant from running with invalid settings.\n\n## Configuration Options",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 1018,
      "character_count": 4306,
      "created_at": "2025-10-16T17:42:26.898091",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_documentation",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 3,
      "file_relative_path": "qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "collection_context": "Qdrant/qdrant_documentation"
    }
  },
  {
    "text": "The following YAML example describes the available configuration options.\n\n```yaml\nlog_level: INFO\n\n# Logging configuration\n# Qdrant logs to stdout. You may configure to also write logs to a file on disk.\n# Be aware that this file may grow indefinitely.\n# logger:\n#   # Logging format, supports `text` and `json`\n#   format: text\n#   on_disk:\n#     enabled: true\n#     log_file: path/to/log/file.log\n#     log_level: INFO\n#     # Logging format, supports `text` and `json`\n#     format: text\n#     buffer_size_bytes: 1024\n\nstorage:\n  # Where to store all the data\n  storage_path: ./storage\n\n# Where to store snapshots\n  snapshots_path: ./snapshots\n\nsnapshots_config:\n    # \"local\" or \"s3\" - where to store snapshots\n    snapshots_storage: local\n    # s3_config:\n    #   bucket: \"\"\n    #   region: \"\"\n    #   access_key: \"\"\n    #   secret_key: \"\"\n\n# Where to store temporary files\n  # If null, temporary snapshots are stored in: storage/snapshots_temp/\n  temp_path: null\n\n# If true - point payloads will not be stored in memory.\n  # It will be read from the disk every time it is requested.\n  # This setting saves RAM by (slightly) increasing the response time.\n  # Note: those payload values that are involved in filtering and are indexed - remain in RAM.\n  #\n  # Default: true\n  on_disk_payload: true\n\n# Maximum number of concurrent updates to shard replicas\n  # If `null` - maximum concurrency is used.\n  update_concurrency: null\n\n# Write-ahead-log related configuration\n  wal:\n    # Size of a single WAL segment\n    wal_capacity_mb: 32\n\n# Number of WAL segments to create ahead of actual data requirement\n    wal_segments_ahead: 0\n\n# Normal node - receives all updates and answers all queries\n  node_type: \"Normal\"\n\n# Listener node - receives all updates, but does not answer search/read queries\n  # Useful for setting up a dedicated backup node\n  # node_type: \"Listener\"\n\nperformance:\n    # Number of parallel threads used for search operations. If 0 - auto selection.\n    max_search_threads: 0\n\n# CPU budget, how many CPUs (threads) to allocate for an optimization job.\n    # If 0 - auto selection, keep 1 or more CPUs unallocated depending on CPU size\n    # If negative - subtract this number of CPUs from the available CPUs.\n    # If positive - use this exact number of CPUs.\n    optimizer_cpu_budget: 0\n\n# Prevent DDoS of too many concurrent updates in distributed mode.\n    # One external update usually triggers multiple internal updates, which breaks internal\n    # timings. For example, the health check timing and consensus timing.\n    # If null - auto selection.\n    update_rate_limit: null\n\n# Limit for number of incoming automatic shard transfers per collection on this node, does not affect user-requested transfers.\n    # The same value should be used on all nodes in a cluster.\n    # Default is to allow 1 transfer.\n    # If null - allow unlimited transfers.\n    #incoming_shard_transfers_limit: 1\n\n# Limit for number of outgoing automatic shard transfers per collection on this node, does not affect user-requested transfers.\n    # The same value should be used on all nodes in a cluster.\n    # Default is to allow 1 transfer.\n    # If null - allow unlimited transfers.\n    #outgoing_shard_transfers_limit: 1\n\n# Enable async scorer which uses io_uring when rescoring.\n    # Only supported on Linux, must be enabled in your kernel.\n    # See: <https://qdrant.tech/articles/io_uring/#and-what-about-qdrant>\n    #async_scorer: false\n\noptimizers:\n    # The minimal fraction of deleted vectors in a segment, required to perform segment optimization\n    deleted_threshold: 0.2\n\n# The minimal number of vectors in a segment, required to perform segment optimization\n    vacuum_min_vector_number: 1000\n\n# Target amount of segments optimizer will try to keep.\n    # Real amount of segments may vary depending on multiple parameters:\n    #  - Amount of stored points\n    #  - Current write RPS\n    #\n    # It is recommended to select default number of segments as a factor of the number of search threads,\n    # so that each segment would be handled evenly by one of the threads.\n    # If `default_segment_number = 0`, will be automatically selected by the number of available CPUs\n    default_segment_number: 0",
    "metadata": {
      "chunk_id": 4,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 992,
      "character_count": 4221,
      "created_at": "2025-10-16T17:42:26.904745",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_documentation",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 4,
      "file_relative_path": "qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "collection_context": "Qdrant/qdrant_documentation"
    }
  },
  {
    "text": "# Do not create segments larger this size (in KiloBytes).\n    # Large segments might require disproportionately long indexation times,\n    # therefore it makes sense to limit the size of segments.\n    #\n    # If indexation speed have more priority for your - make this parameter lower.\n    # If search speed is more important - make this parameter higher.\n    # Note: 1Kb = 1 vector of size 256\n    # If not set, will be automatically selected considering the number of available CPUs.\n    max_segment_size_kb: null\n\n# Maximum size (in KiloBytes) of vectors allowed for plain index.\n    # Default value based on experiments and observations.\n    # Note: 1Kb = 1 vector of size 256\n    # To explicitly disable vector indexing, set to `0`.\n    # If not set, the default value will be used.\n    indexing_threshold_kb: 10000\n\n# Interval between forced flushes.\n    flush_interval_sec: 5\n\n# Max number of threads (jobs) for running optimizations per shard.\n    # Note: each optimization job will also use `max_indexing_threads` threads by itself for index building.\n    # If null - have no limit and choose dynamically to saturate CPU.\n    # If 0 - no optimization threads, optimizations will be disabled.\n    max_optimization_threads: null\n\n# This section has the same options as 'optimizers' above. All values specified here will overwrite the collections\n  # optimizers configs regardless of the config above and the options specified at collection creation.\n  #optimizers_overwrite:\n  #  deleted_threshold: 0.2\n  #  vacuum_min_vector_number: 1000\n  #  default_segment_number: 0\n  #  max_segment_size_kb: null\n  #  indexing_threshold_kb: 10000\n  #  flush_interval_sec: 5\n  #  max_optimization_threads: null\n\n# Default parameters of HNSW Index. Could be overridden for each collection or named vector individually\n  hnsw_index:\n    # Number of edges per node in the index graph. Larger the value - more accurate the search, more space required.\n    m: 16\n\n# Number of neighbours to consider during the index building. Larger the value - more accurate the search, more time required to build index.\n    ef_construct: 100\n\n# Minimal size threshold (in KiloBytes) below which full-scan is preferred over HNSW search.\n    # This measures the total size of vectors being queried against.\n    # When the maximum estimated amount of points that a condition satisfies is smaller than\n    # `full_scan_threshold_kb`, the query planner will use full-scan search instead of HNSW index\n    # traversal for better performance.\n    # Note: 1Kb = 1 vector of size 256\n    full_scan_threshold_kb: 10000\n\n# Number of parallel threads used for background index building.\n    # If 0 - automatically select.\n    # Best to keep between 8 and 16 to prevent likelihood of building broken/inefficient HNSW graphs.\n    # On small CPUs, less threads are used.\n    max_indexing_threads: 0\n\n# Store HNSW index on disk. If set to false, index will be stored in RAM. Default: false\n    on_disk: false\n\n# Custom M param for hnsw graph built for payload index. If not set, default M will be used.\n    payload_m: null\n\n# Default shard transfer method to use if none is defined.\n  # If null - don't have a shard transfer preference, choose automatically.\n  # If stream_records, snapshot or wal_delta - prefer this specific method.\n  # More info: https://qdrant.tech/documentation/guides/distributed_deployment/#shard-transfer-method\n  shard_transfer_method: null\n\n# Default parameters for collections\n  collection:\n    # Number of replicas of each shard that network tries to maintain\n    replication_factor: 1\n\n# How many replicas should apply the operation for us to consider it successful\n    write_consistency_factor: 1\n\n# Default parameters for vectors.\n    vectors:\n      # Whether vectors should be stored in memory or on disk.\n      on_disk: null\n\n# shard_number_per_node: 1\n\n# Default quantization configuration.\n    # More info: https://qdrant.tech/documentation/guides/quantization\n    quantization: null\n\n# Default strict mode parameters for newly created collections.\n    strict_mode:\n      # Whether strict mode is enabled for a collection or not.\n      enabled: false\n\n# Max allowed `limit` parameter for all APIs that don't have their own max limit.\n      max_query_limit: null\n\n# Max allowed `timeout` parameter.\n      max_timeout: null",
    "metadata": {
      "chunk_id": 5,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 1001,
      "character_count": 4316,
      "created_at": "2025-10-16T17:42:26.913040",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_documentation",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 5,
      "file_relative_path": "qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "collection_context": "Qdrant/qdrant_documentation"
    }
  },
  {
    "text": "# Allow usage of unindexed fields in retrieval based (eg. search) filters.\n      unindexed_filtering_retrieve: null\n\n# Allow usage of unindexed fields in filtered updates (eg. delete by payload).\n      unindexed_filtering_update: null\n\n# Max HNSW value allowed in search parameters.\n      search_max_hnsw_ef: null\n\n# Whether exact search is allowed or not.\n      search_allow_exact: null\n\n# Max oversampling value allowed in search.\n      search_max_oversampling: null\n\n# Maximum number of collections allowed to be created\n  # If null - no limit.\n  max_collections: null\n\nservice:\n  # Maximum size of POST data in a single request in megabytes\n  max_request_size_mb: 32\n\n# Number of parallel workers used for serving the api. If 0 - equal to the number of available cores.\n  # If missing - Same as storage.max_search_threads\n  max_workers: 0\n\n# Host to bind the service on\n  host: 0.0.0.0\n\n# HTTP(S) port to bind the service on\n  http_port: 6333\n\n# gRPC port to bind the service on.\n  # If `null` - gRPC is disabled. Default: null\n  # Comment to disable gRPC:\n  grpc_port: 6334\n\n# Enable CORS headers in REST API.\n  # If enabled, browsers would be allowed to query REST endpoints regardless of query origin.\n  # More info: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\n  # Default: true\n  enable_cors: true\n\n# Enable HTTPS for the REST and gRPC API\n  enable_tls: false\n\n# Check user HTTPS client certificate against CA file specified in tls config\n  verify_https_client_certificate: false\n\n# Set an api-key.\n  # If set, all requests must include a header with the api-key.\n  # example header: `api-key: <API-KEY>`\n  #\n  # If you enable this you should also enable TLS.\n  # (Either above or via an external service like nginx.)\n  # Sending an api-key over an unencrypted channel is insecure.\n  #\n  # Uncomment to enable.\n  # api_key: your_secret_api_key_here\n\n# Set an api-key for read-only operations.\n  # If set, all requests must include a header with the api-key.\n  # example header: `api-key: <API-KEY>`\n  #\n  # If you enable this you should also enable TLS.\n  # (Either above or via an external service like nginx.)\n  # Sending an api-key over an unencrypted channel is insecure.\n  #\n  # Uncomment to enable.\n  # read_only_api_key: your_secret_read_only_api_key_here\n\n# Uncomment to enable JWT Role Based Access Control (RBAC).\n  # If enabled, you can generate JWT tokens with fine-grained rules for access control.\n  # Use generated token instead of API key.\n  #\n  # jwt_rbac: true\n\n# Hardware reporting adds information to the API responses with a\n  # hint on how many resources were used to execute the request.\n  #\n  # Warning: experimental, this feature is still under development and is not supported yet.\n  #\n  # Uncomment to enable.\n  # hardware_reporting: true\n\ncluster:\n  # Use `enabled: true` to run Qdrant in distributed deployment mode\n  enabled: false\n\n# Configuration of the inter-cluster communication\n  p2p:\n    # Port for internal communication between peers\n    port: 6335\n\n# Use TLS for communication between peers\n    enable_tls: false\n\n# Configuration related to distributed consensus algorithm\n  consensus:\n    # How frequently peers should ping each other.\n    # Setting this parameter to lower value will allow consensus\n    # to detect disconnected nodes earlier, but too frequent\n    # tick period may create significant network and CPU overhead.\n    # We encourage you NOT to change this parameter unless you know what you are doing.\n    tick_period_ms: 100\n\n# Compact consensus operations once we have this amount of applied\n    # operations. Allows peers to join quickly with a consensus snapshot without\n    # replaying a huge amount of operations.\n    # If 0 - disable compaction\n    compact_wal_entries: 128\n\n# Set to true to prevent service from sending usage statistics to the developers.\n# Read more: https://qdrant.tech/documentation/guides/telemetry\ntelemetry_disabled: false\n\n# TLS configuration.\n# Required if either service.enable_tls or cluster.p2p.enable_tls is true.\ntls:\n  # Server certificate chain file\n  cert: ./tls/cert.pem\n\n# Server private key file\n  key: ./tls/key.pem",
    "metadata": {
      "chunk_id": 6,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 989,
      "character_count": 4135,
      "created_at": "2025-10-16T17:42:26.920910",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_documentation",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 6,
      "file_relative_path": "qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "collection_context": "Qdrant/qdrant_documentation"
    }
  },
  {
    "text": "# Certificate authority certificate file.\n  # This certificate will be used to validate the certificates\n  # presented by other nodes during inter-cluster communication.\n  #\n  # If verify_https_client_certificate is true, it will verify\n  # HTTPS client certificate\n  #\n  # Required if cluster.p2p.enable_tls is true.\n  ca_cert: ./tls/cacert.pem\n\n# TTL in seconds to reload certificate from disk, useful for certificate rotations.\n  # Only works for HTTPS endpoints. Does not support gRPC (and intra-cluster communication).\n  # If `null` - TTL is disabled.\n  cert_ttl: 3600\n```\n\n##### Was this page useful?\n\nYes No\n\nThank you for your feedback! 🙏\n\nWe are sorry to hear that. 😔 You can [edit](https:/github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/guides/configuration.md) this page on GitHub, or [create](https://github.com/qdrant/landing_page/issues/new/choose) a GitHub issue.\n\nOn this page:\n\n- [Configuration](#configuration.md)\n\n- [Configuration Files](#configuration-files.md)\n  - [Environment Variables](#environment-variables.md)\n  - [Loading Order and Priority](#loading-order-and-priority.md)\n    - [Overriding Behavior](#overriding-behavior.md)\n  - [Configuration Validation](#configuration-validation.md)\n  - [Configuration Options](#configuration-options.md)\n\n* [Edit on Github](https://github.com/qdrant/landing_page/tree/master/qdrant-landing/content/documentation/guides/configuration.md)\n* [Create an issue](https://github.com/qdrant/landing_page/issues/new/choose)\n\n#### Ready to get started with Qdrant?\n\n[Start Free](https://qdrant.to/cloud/)\n\n© 2025 Qdrant.\n\n[Terms](https://qdrant.tech/legal/terms_and_conditions/) [Privacy Policy](https://qdrant.tech/legal/privacy-policy/) [Impressum](https://qdrant.tech/legal/impressum/)",
    "metadata": {
      "chunk_id": 7,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 434,
      "character_count": 1777,
      "created_at": "2025-10-16T17:42:26.923000",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_documentation",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 7,
      "file_relative_path": "qdrant_documentation\\documentation_guides_configuration\\_documentation_guides_configuration_.md",
      "collection_context": "Qdrant/qdrant_documentation"
    }
  }
]