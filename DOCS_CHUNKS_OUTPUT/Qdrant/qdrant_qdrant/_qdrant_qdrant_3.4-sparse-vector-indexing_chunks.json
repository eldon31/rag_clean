[
  {
    "text": "Sparse Vector Indexing | qdrant/qdrant | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant](https://github.com/qdrant/qdrant \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 4 October 2025 ([48203e](https://github.com/qdrant/qdrant/commits/48203e41))\n\n- [Introduction to Qdrant](qdrant/qdrant/1-introduction-to-qdrant.md)\n- [Key Concepts and Terminology](qdrant/qdrant/1.1-key-concepts-and-terminology.md)\n- [System Architecture](qdrant/qdrant/2-system-architecture.md)\n- [Application Initialization and Runtime](qdrant/qdrant/2.1-application-initialization-and-runtime.md)\n- [Collections and Table of Content](qdrant/qdrant/2.2-collections-and-table-of-content.md)\n- [Shards and Replica Sets](qdrant/qdrant/2.3-shards-and-replica-sets.md)\n- [Local Shard Architecture](qdrant/qdrant/2.4-local-shard-architecture.md)\n- [Segment Lifecycle and Construction](qdrant/qdrant/2.5-segment-lifecycle-and-construction.md)\n- [Vector Storage and Indexing](qdrant/qdrant/3-vector-storage-and-indexing.md)\n- [Vector Storage Formats](qdrant/qdrant/3.1-vector-storage-formats.md)\n- [HNSW Index Implementation](qdrant/qdrant/3.2-hnsw-index-implementation.md)\n- [Vector Quantization](qdrant/qdrant/3.3-vector-quantization.md)\n- [Sparse Vector Indexing](qdrant/qdrant/3.4-sparse-vector-indexing.md)\n- [Payload Indexing and Filtering](qdrant/qdrant/4-payload-indexing-and-filtering.md)\n- [Field Index Types](qdrant/qdrant/4.1-field-index-types.md)\n- [Index Selection and Storage Backends](qdrant/qdrant/4.2-index-selection-and-storage-backends.md)\n- [Search and Query Processing](qdrant/qdrant/5-search-and-query-processing.md)\n- [Query Request Flow](qdrant/qdrant/5.1-query-request-flow.md)\n- [Filtering and Scoring](qdrant/qdrant/5.2-filtering-and-scoring.md)\n- [Data Updates and Consistency](qdrant/qdrant/6-data-updates-and-consistency.md)\n- [Update Processing Pipeline](qdrant/qdrant/6.1-update-processing-pipeline.md)\n- [Write Consistency and Replication](qdrant/qdrant/6.2-write-consistency-and-replication.md)\n- [Distributed System Features](qdrant/qdrant/7-distributed-system-features.md)\n- [Raft Consensus Protocol](qdrant/qdrant/7.1-raft-consensus-protocol.md)\n- [Shard Transfers and Resharding](qdrant/qdrant/7.2-shard-transfers-and-resharding.md)\n- [Snapshots and Recovery](qdrant/qdrant/8-snapshots-and-recovery.md)\n- [API Reference](qdrant/qdrant/9-api-reference.md)\n- [REST API Endpoints](qdrant/qdrant/9.1-rest-api-endpoints.md)\n- [gRPC API Services](qdrant/qdrant/9.2-grpc-api-services.md)\n- [Data Types and Conversions](qdrant/qdrant/9.3-data-types-and-conversions.md)\n- [Configuration and Deployment](qdrant/qdrant/10-configuration-and-deployment.md)\n- [Configuration System](qdrant/qdrant/10.1-configuration-system.md)\n- [Docker Deployment](qdrant/qdrant/10.2-docker-deployment.md)\n- [Building and CI/CD](qdrant/qdrant/10.3-building-and-cicd.md)\n- [Development Guide](qdrant/qdrant/11-development-guide.md)\n\nMenu\n\n# Sparse Vector Indexing\n\nRelevant source files",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.4-sparse-vector-indexing.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 952,
      "character_count": 3094,
      "created_at": "2025-10-16T17:42:31.569726",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_qdrant",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.4-sparse-vector-indexing.md",
      "collection_context": "Qdrant/qdrant_qdrant"
    }
  },
  {
    "text": "- [Cargo.lock](https://github.com/qdrant/qdrant/blob/48203e41/Cargo.lock)\n- [Cargo.toml](https://github.com/qdrant/qdrant/blob/48203e41/Cargo.toml)\n- [docs/redoc/default\\_version.js](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/default_version.js)\n- [docs/redoc/index.html](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/index.html)\n- [docs/redoc/v0.10.3/openapi.json](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/v0.10.3/openapi.json)\n- [docs/redoc/v0.10.4/openapi.json](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/v0.10.4/openapi.json)\n- [docs/redoc/v0.10.5/openapi.json](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/v0.10.5/openapi.json)\n- [docs/redoc/v1.10.x/openapi.json](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/v1.10.x/openapi.json)\n- [docs/redoc/v1.11.x/openapi.json](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/v1.11.x/openapi.json)\n- [docs/redoc/v1.13.x/openapi.json](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/v1.13.x/openapi.json)\n- [docs/redoc/v1.15.x/openapi.json](https://github.com/qdrant/qdrant/blob/48203e41/docs/redoc/v1.15.x/openapi.json)\n- [lib/api/Cargo.toml](https://github.com/qdrant/qdrant/blob/48203e41/lib/api/Cargo.toml)\n- [lib/collection/Cargo.toml](https://github.com/qdrant/qdrant/blob/48203e41/lib/collection/Cargo.toml)\n- [lib/common/common/src/defaults.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/common/common/src/defaults.rs)\n- [lib/common/dataset/Cargo.toml](https://github.com/qdrant/qdrant/blob/48203e41/lib/common/dataset/Cargo.toml)\n- [lib/common/io/src/file\\_operations.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/common/io/src/file_operations.rs)\n- [lib/common/issues/Cargo.toml](https://github.com/qdrant/qdrant/blob/48203e41/lib/common/issues/Cargo.toml)\n- [lib/segment/Cargo.toml](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/Cargo.toml)\n- [lib/segment/benches/hnsw\\_build\\_asymptotic.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/benches/hnsw_build_asymptotic.rs)\n- [lib/segment/benches/hnsw\\_build\\_graph.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/benches/hnsw_build_graph.rs)\n- [lib/segment/benches/hnsw\\_search\\_graph.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/benches/hnsw_search_graph.rs)\n- [lib/segment/src/index/hnsw\\_index/graph\\_layers.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/hnsw_index/graph_layers.rs)\n- [lib/segment/src/index/hnsw\\_index/graph\\_layers\\_builder.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/hnsw_index/graph_layers_builder.rs)\n- [lib/segment/src/index/hnsw\\_index/graph\\_links.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/hnsw_index/graph_links.rs)\n- [lib/segment/src/index/hnsw\\_index/graph\\_links/header.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/hnsw_index/graph_links/header.rs)\n- [lib/segment/src/index/hnsw\\_index/graph\\_links/serializer.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/hnsw_index/graph_links/serializer.rs)\n- [lib/segment/src/index/hnsw\\_index/graph\\_links/view.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/hnsw_index/graph_links/view.rs)\n- [lib/segment/src/index/hnsw\\_index/hnsw.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/hnsw_index/hnsw.rs)\n- [lib/segment/src/index/hnsw\\_index/tests/mod.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/hnsw_index/tests/mod.rs)\n- [lib/segment/src/index/hnsw\\_index/tests/test\\_compact\\_graph\\_layer.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/hnsw_index/tests/test_compact_graph_layer.rs)\n- [lib/sparse/Cargo.toml](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/Cargo.toml)\n- [lib/storage/Cargo.toml](https://github.com/qdrant/qdrant/blob/48203e41/lib/storage/Cargo.toml)\n- [tools/missed\\_cherry\\_picks.sh](https://github.com/qdrant/qdrant/blob/48203e41/tools/missed_cherry_picks.sh)",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.4-sparse-vector-indexing.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 1338,
      "character_count": 4086,
      "created_at": "2025-10-16T17:42:31.570861",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_qdrant",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.4-sparse-vector-indexing.md",
      "collection_context": "Qdrant/qdrant_qdrant"
    }
  },
  {
    "text": "This document covers Qdrant's sparse vector indexing system, which provides efficient storage and search capabilities for sparse vectors using inverted index data structures. For dense vector indexing, see [HNSW Index Implementation](qdrant/qdrant/3.1-vector-storage-formats.md). For payload-based filtering, see [Payload Indexing and Filtering](qdrant/qdrant/3.2-hnsw-index-implementation.md).\n\nThe sparse vector indexing system enables keyword-style search and hybrid search scenarios by maintaining inverted indexes that map dimension IDs to posting lists containing document IDs and weights.\n\n## Architecture Overview\n\nThe sparse vector indexing system is built around the `SparseVectorIndex` class which provides a unified interface for different types of inverted indexes. The system supports both mutable and immutable indexes, with options for RAM-based and memory-mapped storage.\n\n### Core Architecture\n\n```\n```\n\nSources: [lib/segment/src/index/sparse\\_index/sparse\\_vector\\_index.rs45-55](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/sparse_index/sparse_vector_index.rs#L45-L55) [lib/sparse/src/index/search\\_context.rs26-37](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/search_context.rs#L26-L37) [lib/segment/src/index/sparse\\_index/sparse\\_index\\_config.rs13-25](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/sparse_index/sparse_index_config.rs#L13-L25)\n\n## Index Types and Storage\n\nThe system supports multiple index implementations optimized for different use cases, from mutable RAM indexes for real-time updates to compressed memory-mapped indexes for large-scale read-only scenarios.\n\n### Index Type Hierarchy\n\n```\n```\n\nSources: [lib/segment/src/index/sparse\\_index/sparse\\_index\\_config.rs17-43](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/sparse_index/sparse_index_config.rs#L17-L43) [lib/sparse/src/index/inverted\\_index/mod.rs24-86](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/inverted_index/mod.rs#L24-L86) [lib/sparse/src/index/inverted\\_index/inverted\\_index\\_ram.rs23-33](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/inverted_index/inverted_index_ram.rs#L23-L33)\n\n### Weight Type Support\n\nThe compressed index implementations support multiple weight types for memory optimization:\n\n| Weight Type   | Description                 | Use Case                                      |\n| ------------- | --------------------------- | --------------------------------------------- |\n| `f32`         | Full precision float        | High accuracy requirements                    |\n| `half::f16`   | Half precision float        | Memory savings with good precision            |\n| `u8`          | 8-bit unsigned integer      | Extreme compression (testing only)            |\n| `QuantizedU8` | Quantized 8-bit with params | Optimal compression with calibrated precision |\n\nSources: [lib/sparse/src/common/types.rs11-161](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/common/types.rs#L11-L161)\n\n## Search Process\n\nThe search system uses a `SearchContext` to coordinate queries across multiple posting lists, with sophisticated pruning mechanisms to optimize performance.\n\n### Search Flow\n\n```\n```\n\nSources: [lib/sparse/src/index/search\\_context.rs39-94](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/search_context.rs#L39-L94) [lib/sparse/src/index/search\\_context.rs269-355](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/search_context.rs#L269-L355) [lib/segment/src/index/sparse\\_index/sparse\\_vector\\_index.rs440-482](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/sparse_index/sparse_vector_index.rs#L440-L482)\n\n### Pruning Mechanism\n\nThe search system implements sophisticated pruning to skip posting list elements that cannot contribute to top-k results:\n\n```\n```\n\nSources: [lib/sparse/src/index/search\\_context.rs360-421](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/search_context.rs#L360-L421)\n\n## Data Structures\n\n### Posting Lists\n\nPosting lists are the core data structure storing (record\\_id, weight) pairs for each dimension, sorted by record\\_id for efficient traversal and binary search.\n\n#### Posting List Structure\n\n```\n```",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.4-sparse-vector-indexing.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 1016,
      "character_count": 4299,
      "created_at": "2025-10-16T17:42:31.580719",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_qdrant",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.4-sparse-vector-indexing.md",
      "collection_context": "Qdrant/qdrant_qdrant"
    }
  },
  {
    "text": "Sources: [lib/sparse/src/index/posting\\_list.rs11-15](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/posting_list.rs#L11-L15) [lib/sparse/src/index/posting\\_list\\_common.rs23-31](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/posting_list_common.rs#L23-L31) [lib/sparse/src/index/compressed\\_posting\\_list.rs21-37](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/compressed_posting_list.rs#L21-L37)\n\n### Indices Tracking\n\nThe `IndicesTracker` manages dimension ID remapping to ensure contiguous posting list arrays:\n\n| Component              | Purpose                                                 |\n| ---------------------- | ------------------------------------------------------- |\n| `original_to_remapped` | Maps original dimension IDs to contiguous array indices |\n| `remapped_to_original` | Reverse mapping for reconstruction                      |\n| `remap_vector()`       | Converts sparse vectors to use remapped indices         |\n\nSources: [lib/segment/src/index/sparse\\_index/indices\\_tracker.rs](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/sparse_index/indices_tracker.rs)\n\n## Configuration and Optimization\n\n### Sparse Index Configuration\n\nThe `SparseIndexConfig` controls index behavior and performance characteristics:\n\n```\n```\n\n### Performance Thresholds\n\n| Threshold             | Default | Purpose                                      |\n| --------------------- | ------- | -------------------------------------------- |\n| `full_scan_threshold` | 20,000  | Switch to plain search for small result sets |\n| `ADVANCE_BATCH_SIZE`  | 10,000  | Batch size for posting list processing       |\n| `CHUNK_SIZE`          | 128     | Elements per compressed chunk                |\n\nSources: [lib/segment/src/index/sparse\\_index/sparse\\_index\\_config.rs45-62](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/sparse_index/sparse_index_config.rs#L45-L62) [lib/sparse/src/index/search\\_context.rs24](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/search_context.rs#L24-L24) [lib/sparse/src/index/compressed\\_posting\\_list.rs19](https://github.com/qdrant/qdrant/blob/48203e41/lib/sparse/src/index/compressed_posting_list.rs#L19-L19)\n\n### Index Selection Strategy\n\nThe system automatically selects between indexed search and plain search based on query cardinality:\n\n```\n```\n\nSources: [lib/segment/src/index/sparse\\_index/sparse\\_vector\\_index.rs452-481](https://github.com/qdrant/qdrant/blob/48203e41/lib/segment/src/index/sparse_index/sparse_vector_index.rs#L452-L481)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Sparse Vector Indexing](#sparse-vector-indexing.md)\n- [Architecture Overview](#architecture-overview.md)\n- [Core Architecture](#core-architecture.md)\n- [Index Types and Storage](#index-types-and-storage.md)\n- [Index Type Hierarchy](#index-type-hierarchy.md)\n- [Weight Type Support](#weight-type-support.md)\n- [Search Process](#search-process.md)\n- [Search Flow](#search-flow.md)\n- [Pruning Mechanism](#pruning-mechanism.md)\n- [Data Structures](#data-structures.md)\n- [Posting Lists](#posting-lists.md)\n- [Posting List Structure](#posting-list-structure.md)\n- [Indices Tracking](#indices-tracking.md)\n- [Configuration and Optimization](#configuration-and-optimization.md)\n- [Sparse Index Configuration](#sparse-index-configuration.md)\n- [Performance Thresholds](#performance-thresholds.md)\n- [Index Selection Strategy](#index-selection-strategy.md)",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.4-sparse-vector-indexing.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 847,
      "character_count": 3523,
      "created_at": "2025-10-16T17:42:31.586124",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_qdrant",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 3,
      "file_relative_path": "Qdrant\\qdrant_qdrant\\_qdrant_qdrant_3.4-sparse-vector-indexing.md",
      "collection_context": "Qdrant/qdrant_qdrant"
    }
  }
]