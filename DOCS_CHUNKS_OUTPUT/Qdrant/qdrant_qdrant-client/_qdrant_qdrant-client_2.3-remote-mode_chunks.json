[
  {
    "text": "Remote Mode | qdrant/qdrant-client | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[qdrant/qdrant-client](https://github.com/qdrant/qdrant-client \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 9 July 2025 ([ac6f6c](https://github.com/qdrant/qdrant-client/commits/ac6f6cd2))\n\n- [Overview](qdrant/qdrant-client/1-overview.md)\n- [Client Architecture](qdrant/qdrant-client/2-client-architecture.md)\n- [Client Interface](qdrant/qdrant-client/2.1-client-interface.md)\n- [Local Mode](qdrant/qdrant-client/2.2-local-mode.md)\n- [Remote Mode](qdrant/qdrant-client/2.3-remote-mode.md)\n- [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md)\n- [Core Operations](qdrant/qdrant-client/3-core-operations.md)\n- [Search Operations](qdrant/qdrant-client/3.1-search-operations.md)\n- [Collection Management](qdrant/qdrant-client/3.2-collection-management.md)\n- [Point Operations](qdrant/qdrant-client/3.3-point-operations.md)\n- [Advanced Features](qdrant/qdrant-client/4-advanced-features.md)\n- [FastEmbed Integration](qdrant/qdrant-client/4.1-fastembed-integration.md)\n- [Batch Operations](qdrant/qdrant-client/4.2-batch-operations.md)\n- [Hybrid Search](qdrant/qdrant-client/4.3-hybrid-search.md)\n- [Local Inference](qdrant/qdrant-client/4.4-local-inference.md)\n- [Implementation Details](qdrant/qdrant-client/5-implementation-details.md)\n- [Payload Filtering](qdrant/qdrant-client/5.1-payload-filtering.md)\n- [Type Inspector System](qdrant/qdrant-client/5.2-type-inspector-system.md)\n- [Expression Evaluation](qdrant/qdrant-client/5.3-expression-evaluation.md)\n- [Development & Testing](qdrant/qdrant-client/6-development-and-testing.md)\n- [Project Setup](qdrant/qdrant-client/6.1-project-setup.md)\n- [Testing Framework](qdrant/qdrant-client/6.2-testing-framework.md)\n- [Documentation System](qdrant/qdrant-client/6.3-documentation-system.md)\n\nMenu\n\n# Remote Mode\n\nRelevant source files\n\n- [qdrant\\_client/async\\_qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py)\n- [qdrant\\_client/conversions/common\\_types.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/common_types.py)\n- [qdrant\\_client/qdrant\\_remote.py](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py)\n\n## Purpose and Scope\n\nRemote Mode provides the network-based client implementation for communicating with external Qdrant services. This document covers the `QdrantRemote` and `AsyncQdrantRemote` classes that handle HTTP/REST and gRPC protocol communication, connection management, authentication, and protocol conversion.\n\nFor information about the local in-process implementation, see [Local Mode](qdrant/qdrant-client/2.2-local-mode.md). For details about protocol handling and conversion between gRPC and REST, see [Protocol Handling](qdrant/qdrant-client/2.4-protocol-handling.md).\n\n## Architecture Overview\n\nThe remote client architecture centers around two main classes that implement network communication with Qdrant services through dual protocol support.\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py46-208](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L46-L208) [qdrant\\_client/async\\_qdrant\\_remote.py55-196](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L55-L196)\n\n## Initialization and Configuration",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 1006,
      "character_count": 3521,
      "created_at": "2025-10-16T17:42:32.337956",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_qdrant-client",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
      "collection_context": "Qdrant/qdrant_qdrant-client"
    }
  },
  {
    "text": "The `QdrantRemote` class provides comprehensive initialization with support for various connection parameters and authentication methods.\n\n### Connection Parameters\n\n| Parameter     | Type             | Default       | Description                        |\n| ------------- | ---------------- | ------------- | ---------------------------------- |\n| `url`         | `Optional[str]`  | `None`        | Full URL including scheme and port |\n| `host`        | `Optional[str]`  | `\"localhost\"` | Hostname or IP address             |\n| `port`        | `Optional[int]`  | `6333`        | HTTP port number                   |\n| `grpc_port`   | `int`            | `6334`        | gRPC port number                   |\n| `prefer_grpc` | `bool`           | `False`       | Protocol preference flag           |\n| `https`       | `Optional[bool]` | `None`        | HTTPS enforcement                  |\n| `timeout`     | `Optional[int]`  | `None`        | Request timeout in seconds         |\n\n### Authentication Options\n\n| Parameter             | Type                    | Description                |\n| --------------------- | ----------------------- | -------------------------- |\n| `api_key`             | `Optional[str]`         | API key for authentication |\n| `auth_token_provider` | `Optional[Callable]`    | Dynamic token provider     |\n| `grpc_options`        | `Optional[dict]`        | gRPC channel options       |\n| `grpc_compression`    | `Optional[Compression]` | gRPC compression method    |\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py49-235](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L49-L235) [qdrant\\_client/async\\_qdrant\\_remote.py58-195](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L58-L195)\n\n## Protocol Selection\n\nThe remote client implements a dual-protocol system with runtime selection based on the `prefer_grpc` flag and method-specific logic.\n\n### Protocol Selection Logic\n\n```\n```\n\n### Protocol-Specific Implementations\n\nEach operation method contains branching logic to handle both protocols:\n\n```\n```\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py368-541](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L368-L541) [qdrant\\_client/qdrant\\_remote.py453-508](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L453-L508)\n\n## Connection Management\n\nThe remote client implements lazy initialization for gRPC connections and proper resource cleanup.\n\n### gRPC Connection Initialization\n\n```\n```\n\n### Connection Properties\n\nThe client exposes both HTTP and gRPC clients through properties:\n\n- `rest` / `http`: Returns `SyncApis[ApiClient]` for HTTP operations\n- `grpc_points`: Returns `grpc.PointsStub` for point operations\n- `grpc_collections`: Returns `grpc.CollectionsStub` for collection operations\n- `grpc_snapshots`: Returns `grpc.SnapshotsStub` for snapshot operations\n- `grpc_root`: Returns `grpc.QdrantStub` for root operations\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py273-304](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L273-L304) [qdrant\\_client/qdrant\\_remote.py306-366](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L306-L366)\n\n## Authentication\n\nThe remote client supports multiple authentication mechanisms with security warnings for insecure connections.\n\n### Authentication Methods\n\n```\n```\n\n### Security Implementation\n\nThe client enforces security best practices:\n\n- Issues warnings when API keys are used over HTTP\n- Supports dynamic token providers for OAuth-style authentication\n- Configures appropriate headers for both REST and gRPC protocols\n- Validates HTTPS usage with authentication\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py133-190](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L133-L190) [qdrant\\_client/async\\_qdrant\\_remote.py121-164](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L121-L164)\n\n## Operations Implementation",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 1008,
      "character_count": 4113,
      "created_at": "2025-10-16T17:42:32.346807",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_qdrant-client",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
      "collection_context": "Qdrant/qdrant_qdrant-client"
    }
  },
  {
    "text": "The remote client implements comprehensive CRUD and search operations with consistent dual-protocol support.\n\n### Core Operations\n\n```\n```\n\n### Operation Pattern\n\nEach operation follows a consistent pattern:\n\n1. **Input Validation**: Check parameter types and convert as needed\n2. **Protocol Branching**: Use `prefer_grpc` to select implementation path\n3. **Model Conversion**: Convert between REST and gRPC models\n4. **API Call**: Execute the appropriate client method\n5. **Response Processing**: Convert response to common format\n6. **Error Handling**: Handle protocol-specific errors\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py368-1132](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L368-L1132) [qdrant\\_client/async\\_qdrant\\_remote.py326-1000](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L326-L1000)\n\n## Protocol Conversion\n\nThe remote client extensively uses conversion utilities to maintain compatibility between REST and gRPC protocols.\n\n### Conversion Flow\n\n```\n```\n\n### Common Conversions\n\nThe client performs bidirectional conversions for:\n\n- **Filters**: `models.Filter` ↔ `grpc.Filter`\n- **Search Parameters**: `models.SearchParams` ↔ `grpc.SearchParams`\n- **Points**: `models.ScoredPoint` ↔ `grpc.ScoredPoint`\n- **Vectors**: `models.NamedVector` ↔ `grpc.NamedVector`\n- **Payloads**: `models.WithPayloadInterface` ↔ `grpc.WithPayloadSelector`\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py34-47](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L34-L47) [qdrant\\_client/conversions/common\\_types.py48-164](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/conversions/common_types.py#L48-L164)\n\n## Error Handling and Cleanup\n\nThe remote client implements comprehensive error handling and resource cleanup mechanisms.\n\n### Resource Cleanup\n\n```\n```\n\n### Connection State Management\n\nThe client maintains connection state through:\n\n- `closed` property for state inspection\n- Runtime checks before operations\n- Graceful error handling for interrupted connections\n- Warning system for connection issues\n\n### Version Compatibility\n\nThe client includes automatic version compatibility checking:\n\n- Retrieves server version on initialization\n- Compares client and server versions\n- Issues warnings for incompatible versions\n- Allows bypassing checks with `check_compatibility=False`\n\n**Sources:** [qdrant\\_client/qdrant\\_remote.py209-261](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/qdrant_remote.py#L209-L261) [qdrant\\_client/async\\_qdrant\\_remote.py197-221](https://github.com/qdrant/qdrant-client/blob/ac6f6cd2/qdrant_client/async_qdrant_remote.py#L197-L221)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Remote Mode](#remote-mode.md)\n- [Purpose and Scope](#purpose-and-scope.md)\n- [Architecture Overview](#architecture-overview.md)\n- [Initialization and Configuration](#initialization-and-configuration.md)\n- [Connection Parameters](#connection-parameters.md)\n- [Authentication Options](#authentication-options.md)\n- [Protocol Selection](#protocol-selection.md)\n- [Protocol Selection Logic](#protocol-selection-logic.md)\n- [Protocol-Specific Implementations](#protocol-specific-implementations.md)\n- [Connection Management](#connection-management.md)\n- [gRPC Connection Initialization](#grpc-connection-initialization.md)\n- [Connection Properties](#connection-properties.md)\n- [Authentication](#authentication.md)\n- [Authentication Methods](#authentication-methods.md)\n- [Security Implementation](#security-implementation.md)\n- [Operations Implementation](#operations-implementation.md)\n- [Core Operations](#core-operations.md)\n- [Operation Pattern](#operation-pattern.md)\n- [Protocol Conversion](#protocol-conversion.md)\n- [Conversion Flow](#conversion-flow.md)\n- [Common Conversions](#common-conversions.md)\n- [Error Handling and Cleanup](#error-handling-and-cleanup.md)\n- [Resource Cleanup](#resource-cleanup.md)\n- [Connection State Management](#connection-state-management.md)\n- [Version Compatibility](#version-compatibility.md)",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
      "input_type": "qdrant",
      "chunking_strategy": "platform_documentation",
      "token_count": 973,
      "character_count": 4139,
      "created_at": "2025-10-16T17:42:32.351313",
      "parent_context": null,
      "semantic_type": "qdrant",
      "collection_name": "Qdrant",
      "subfolder_name": "qdrant_qdrant-client",
      "collection_strategy": "platform_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "Qdrant\\qdrant_qdrant-client\\_qdrant_qdrant-client_2.3-remote-mode.md",
      "collection_context": "Qdrant/qdrant_qdrant-client"
    }
  }
]