[
  {
    "text": "pytest tests/ --cov=sentence_transformers\n```\n\n### Test Environment Variables\n\n| Variable | Purpose | Default |\n|----------|---------|---------|\n| `CI` | Indicates CI environment, skips slow tests | `None` |\n| Cache directories | Managed by `cache_dir` fixture | Temporary in CI |\n\nSources: [tests/conftest.py:108-114](), [tests/test_train_stsb.py:106-110]()\n\n## Documentation Development\n\nThe documentation system uses Sphinx with custom extensions and styling.\n\n### Documentation Build Configuration\n\n```mermaid\ngraph TB\n    subgraph \"Sphinx Configuration\"\n        ConfPy[\"docs/conf.py\"]\n        Extensions[\"Extensions:<br/>napoleon, autodoc,<br/>myst_parser, mermaid\"]\n        Theme[\"sphinx_rtd_theme\"]\n    end\n    \n    subgraph \"Custom Assets\"\n        CSS[\"docs/_static/css/custom.css\"]\n        JS[\"docs/_static/js/custom.js\"]\n        Images[\"docs/_static/img/\"]\n    end\n    \n    subgraph \"Content Sources\"\n        Markdown[\"*.md files\"]\n        Docstrings[\"Python docstrings\"]\n        Examples[\"examples/ directory\"]\n    end\n    \n    ConfPy --> Extensions\n    ConfPy --> Theme\n    Extensions --> CSS\n    Extensions --> JS\n    \n    Markdown --> Content[\"Generated Documentation\"]\n    Docstrings --> Content\n    Examples --> Content\n```\n\n### Key Documentation Extensions\n\n| Extension | Purpose |\n|-----------|---------|\n| `sphinx.ext.napoleon` | Google/NumPy docstring parsing |\n| `sphinx.ext.autodoc` | Automatic API documentation |\n| `myst_parser` | Markdown support |\n| `sphinxcontrib.mermaid` | Diagram rendering |\n| `sphinx.ext.linkcode` | Source code linking |\n\nSources: [docs/conf.py:38-49]()\n\n### Custom Documentation Features\n\nThe documentation includes custom JavaScript for GitHub integration and enhanced styling:\n\n**GitHub Integration:**\n```javascript\n// From custom.js - adds GitHub star button\nfunction addGithubButton() {\n    // Inserts GitHub star button and Hugging Face link\n}\n```\n\n**Custom Styling:**\n- Responsive layout with max-width 1280px\n- Component boxes with gradient headers\n- Training arguments grid layout\n- Enhanced navigation styling\n\nSources: [docs/_static/js/custom.js:1-39](), [docs/_static/css/custom.css:1-124]()\n\n## Development Environment Setup\n\n### Prerequisites\n\n```bash\n# Install development dependencies\npip install -e \".[dev,train]\"\n\n# For documentation building\npip install sphinx sphinx-rtd-theme myst-parser sphinxcontrib-mermaid\n```\n\n### Code Quality Tools\n\nThe project maintains code quality through:\n- **Type Hints**: Extensive use of type annotations with `from __future__ import annotations`\n- **Import Organization**: Consistent import ordering and structure\n- **Documentation Standards**: Comprehensive docstrings and examples\n\n### Testing Best Practices\n\n1. **Fixture Usage**: Use appropriate fixture scopes to minimize resource usage\n2. **Test Isolation**: Each test should be independent and reproducible\n3. **Performance Thresholds**: Set realistic but strict performance expectations\n4. **Resource Management**: Use temporary directories and cleanup in CI environments\n\nSources: [tests/conftest.py:1-115](), [tests/test_pretrained_stsb.py:1-145]()\n\n## Continuous Integration Considerations\n\nThe testing framework is designed to work efficiently in CI environments:\n\n### CI Optimizations\n\n```mermaid\ngraph LR\n    subgraph \"CI Environment Detection\"\n        EnvCheck[\"os.environ.get('CI')\"]\n        TempDir[\"SafeTemporaryDirectory\"]\n        CacheDir[\"Temporary cache_dir\"]\n    end\n    \n    subgraph \"Test Adaptations\"\n        SkipSlow[\"Skip slow tests\"]\n        LimitSamples[\"Limit test samples\"]\n        TempStorage[\"Use temporary storage\"]\n    end\n    \n    EnvCheck --> SkipSlow\n    TempDir --> TempStorage\n    CacheDir --> TempStorage\n    \n    SkipSlow --> FastExecution[\"Fast CI execution\"]\n    TempStorage --> FastExecution\n```\n\n### Memory and Storage Management\n\n- **Temporary Directories**: CI tests use temporary directories that are automatically cleaned up\n- **Model Caching**: Session-scoped fixtures prevent redundant model loading\n- **Sample Limiting**: Tests can run with reduced datasets in CI environments\n\nSources: [tests/conftest.py:108-114](), [tests/test_train_stsb.py:106-163]()",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\Sentence_Transformers\\UKPLab\\sentence-transformers\\Run_with_coverage.md",
      "input_type": "sentence_transformers",
      "chunking_strategy": "programming_language_documentation",
      "token_count": 923,
      "character_count": 4159,
      "created_at": "2025-10-16T17:42:33.149949",
      "parent_context": null,
      "semantic_type": "sentence_transformers",
      "collection_name": "Sentence_Transformers",
      "subfolder_name": "UKPLab",
      "collection_strategy": "programming_language_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "UKPLab\\sentence-transformers\\Run_with_coverage.md",
      "collection_context": "Sentence_Transformers/UKPLab"
    }
  }
]