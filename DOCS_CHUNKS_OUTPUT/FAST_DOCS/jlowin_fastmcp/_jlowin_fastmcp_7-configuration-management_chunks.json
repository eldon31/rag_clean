[
  {
    "text": "Configuration Management | jlowin/fastmcp | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[jlowin/fastmcp](https://github.com/jlowin/fastmcp \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 30 September 2025 ([66221e](https://github.com/jlowin/fastmcp/commits/66221ed3))\n\n- [FastMCP Overview](jlowin/fastmcp/1-fastmcp-overview.md)\n- [Installation and Setup](jlowin/fastmcp/1.1-installation-and-setup.md)\n- [FastMCP Server Core](jlowin/fastmcp/2-fastmcp-server-core.md)\n- [Component System Architecture](jlowin/fastmcp/2.1-component-system-architecture.md)\n- [Context System and Dependencies](jlowin/fastmcp/2.2-context-system-and-dependencies.md)\n- [Server Composition and Proxying](jlowin/fastmcp/2.3-server-composition-and-proxying.md)\n- [FastMCP Client System](jlowin/fastmcp/3-fastmcp-client-system.md)\n- [Transport Mechanisms](jlowin/fastmcp/3.1-transport-mechanisms.md)\n- [Client Authentication](jlowin/fastmcp/3.2-client-authentication.md)\n- [HTTP Server and Deployment](jlowin/fastmcp/4-http-server-and-deployment.md)\n- [Authentication and Security](jlowin/fastmcp/4.1-authentication-and-security.md)\n- [Middleware System](jlowin/fastmcp/4.2-middleware-system.md)\n- [Command Line Interface](jlowin/fastmcp/5-command-line-interface.md)\n- [OpenAPI Integration](jlowin/fastmcp/6-openapi-integration.md)\n- [Configuration Management](jlowin/fastmcp/7-configuration-management.md)\n- [Testing and Development Framework](jlowin/fastmcp/8-testing-and-development-framework.md)\n- [Project Infrastructure](jlowin/fastmcp/9-project-infrastructure.md)\n- [Documentation and Updates](jlowin/fastmcp/10-documentation-and-updates.md)\n\nMenu\n\n# Configuration Management\n\nRelevant source files\n\n- [.github/workflows/run-tests.yml](https://github.com/jlowin/fastmcp/blob/66221ed3/.github/workflows/run-tests.yml)\n- [pyproject.toml](https://github.com/jlowin/fastmcp/blob/66221ed3/pyproject.toml)\n- [tests/test\\_mcp\\_config.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py)\n- [uv.lock](https://github.com/jlowin/fastmcp/blob/66221ed3/uv.lock)\n\nThis document covers FastMCP's configuration management system, which enables declarative server definitions, multi-server orchestration, and standardized MCP client configurations. The system provides both programmatic and file-based configuration approaches for defining MCP servers, their connections, authentication, and behavioral transformations.\n\nFor information about HTTP server deployment configuration, see [HTTP Server and Deployment](jlowin/fastmcp/4-http-server-and-deployment.md). For CLI-based configuration commands, see [Command Line Interface](jlowin/fastmcp/5-command-line-interface.md). For project build and dependency configuration, see [Installation and Setup](jlowin/fastmcp/1.1-installation-and-setup.md).\n\n## Configuration System Architecture\n\nThe configuration management system centers around the `MCPConfig` class hierarchy, which provides both standard and canonical configuration formats for defining MCP servers and their properties.\n\n```\n```\n\nSources: [tests/test\\_mcp\\_config.py25-33](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L25-L33) [src/fastmcp/mcp\\_config.py](https://github.com/jlowin/fastmcp/blob/66221ed3/src/fastmcp/mcp_config.py)\n\n## Server Configuration Types\n\nFastMCP supports three primary server configuration types, each designed for different deployment scenarios and capability requirements.\n\n### StdioMCPServer Configuration\n\n`StdioMCPServer` configurations define local subprocess-based MCP servers that communicate via standard input/output streams.\n\n```\n```\n\nExample configuration structure:\n\n```\n```",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_7-configuration-management.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 957,
      "character_count": 3766,
      "created_at": "2025-10-16T17:42:19.063748",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "jlowin_fastmcp",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_7-configuration-management.md",
      "collection_context": "FAST_DOCS/jlowin_fastmcp"
    }
  },
  {
    "text": "Sources: [tests/test\\_mcp\\_config.py50-63](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L50-L63) [tests/test\\_mcp\\_config.py177-202](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L177-L202)\n\n### RemoteMCPServer Configuration\n\n`RemoteMCPServer` configurations define HTTP-based remote MCP servers with automatic transport inference and authentication support.\n\n```\n```\n\nThe system automatically infers `SSETransport` for URLs containing `/sse/` paths, while defaulting to `StreamableHttpTransport` for other HTTP endpoints.\n\nSources: [tests/test\\_mcp\\_config.py134-175](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L134-L175) [tests/test\\_mcp\\_config.py412-467](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L412-L467)\n\n### TransformingStdioMCPServer Configuration\n\n`TransformingStdioMCPServer` extends stdio servers with tool and resource transformation capabilities, enabling name remapping, argument transformation, and selective inclusion/exclusion.\n\n```\n```\n\nSources: [tests/test\\_mcp\\_config.py534-588](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L534-L588) [tests/test\\_mcp\\_config.py639-698](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L639-L698)\n\n## Configuration File Formats\n\nFastMCP supports multiple configuration input formats with automatic normalization and validation.\n\n### Dictionary-based Configuration\n\nThe system accepts both nested `mcpServers` format and root-level server definitions:\n\n```\n```\n\nThe parser automatically detects and normalizes root-level server definitions to the standard nested format.\n\nSources: [tests/test\\_mcp\\_config.py86-99](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L86-L99) [tests/test\\_mcp\\_config.py66-84](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L66-L84)\n\n### Configuration Discrimination\n\nThe system uses discriminated unions to automatically select appropriate server types based on configuration content:\n\n```\n```\n\nSources: [tests/test\\_mcp\\_config.py101-132](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L101-L132)\n\n## Transport Configuration and Generation\n\nThe configuration system generates appropriate transport instances based on server definitions, with automatic inference and override capabilities.\n\n### Transport Generation Pipeline\n\n```\n```\n\nSources: [tests/test\\_mcp\\_config.py142-175](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L142-L175) [src/fastmcp/client/transports.py](https://github.com/jlowin/fastmcp/blob/66221ed3/src/fastmcp/client/transports.py)\n\n## Authentication Configuration\n\nFastMCP provides flexible authentication configuration supporting bearer tokens and OAuth flows for remote servers.\n\n### Authentication Types\n\n```\n```\n\nAuthentication is automatically applied to both `StreamableHttpTransport` and `SSETransport` instances based on the remote server configuration.\n\nSources: [tests/test\\_mcp\\_config.py425-467](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L425-L467)\n\n## Multi-Server Orchestration\n\nThe `MCPConfigTransport` enables simultaneous connection to multiple MCP servers with unified tool/resource/prompt namespacing.\n\n### Multi-Server Architecture\n\n```\n```\n\nEach server's tools, resources, and prompts are prefixed with the server name (e.g., `server_name_tool_name`) to avoid conflicts while maintaining clear attribution.\n\nSources: [tests/test\\_mcp\\_config.py204-244](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L204-L244) [tests/test\\_mcp\\_config.py469-532](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L469-L532) [tests/test\\_mcp\\_config.py700-740](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/test_mcp_config.py#L700-L740)\n\n## Environment and Project Configuration\n\nFastMCP integrates with standard Python project configuration through `pyproject.toml` and supports environment-based configuration management.\n\n### Project Configuration Structure",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_7-configuration-management.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1024,
      "character_count": 4133,
      "created_at": "2025-10-16T17:42:19.074320",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "jlowin_fastmcp",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_7-configuration-management.md",
      "collection_context": "FAST_DOCS/jlowin_fastmcp"
    }
  },
  {
    "text": "```\n```\n\nThe configuration system supports environment variable-based test configuration through `FASTMCP_TEST_MODE`, `FASTMCP_LOG_LEVEL`, and other `FASTMCP_*` prefixed variables.\n\nSources: [pyproject.toml1-147](https://github.com/jlowin/fastmcp/blob/66221ed3/pyproject.toml#L1-L147) [.github/workflows/run-tests.yml78-81](https://github.com/jlowin/fastmcp/blob/66221ed3/.github/workflows/run-tests.yml#L78-L81)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Configuration Management](#configuration-management.md)\n- [Configuration System Architecture](#configuration-system-architecture.md)\n- [Server Configuration Types](#server-configuration-types.md)\n- [StdioMCPServer Configuration](#stdiomcpserver-configuration.md)\n- [RemoteMCPServer Configuration](#remotemcpserver-configuration.md)\n- [TransformingStdioMCPServer Configuration](#transformingstdiomcpserver-configuration.md)\n- [Configuration File Formats](#configuration-file-formats.md)\n- [Dictionary-based Configuration](#dictionary-based-configuration.md)\n- [Configuration Discrimination](#configuration-discrimination.md)\n- [Transport Configuration and Generation](#transport-configuration-and-generation.md)\n- [Transport Generation Pipeline](#transport-generation-pipeline.md)\n- [Authentication Configuration](#authentication-configuration.md)\n- [Authentication Types](#authentication-types.md)\n- [Multi-Server Orchestration](#multi-server-orchestration.md)\n- [Multi-Server Architecture](#multi-server-architecture.md)\n- [Environment and Project Configuration](#environment-and-project-configuration.md)\n- [Project Configuration Structure](#project-configuration-structure.md)",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_7-configuration-management.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 374,
      "character_count": 1666,
      "created_at": "2025-10-16T17:42:19.075020",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "jlowin_fastmcp",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_7-configuration-management.md",
      "collection_context": "FAST_DOCS/jlowin_fastmcp"
    }
  }
]