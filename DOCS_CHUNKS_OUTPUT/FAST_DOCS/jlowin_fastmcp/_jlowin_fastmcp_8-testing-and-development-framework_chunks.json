[
  {
    "text": "Testing and Development Framework | jlowin/fastmcp | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[jlowin/fastmcp](https://github.com/jlowin/fastmcp \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 30 September 2025 ([66221e](https://github.com/jlowin/fastmcp/commits/66221ed3))\n\n- [FastMCP Overview](jlowin/fastmcp/1-fastmcp-overview.md)\n- [Installation and Setup](jlowin/fastmcp/1.1-installation-and-setup.md)\n- [FastMCP Server Core](jlowin/fastmcp/2-fastmcp-server-core.md)\n- [Component System Architecture](jlowin/fastmcp/2.1-component-system-architecture.md)\n- [Context System and Dependencies](jlowin/fastmcp/2.2-context-system-and-dependencies.md)\n- [Server Composition and Proxying](jlowin/fastmcp/2.3-server-composition-and-proxying.md)\n- [FastMCP Client System](jlowin/fastmcp/3-fastmcp-client-system.md)\n- [Transport Mechanisms](jlowin/fastmcp/3.1-transport-mechanisms.md)\n- [Client Authentication](jlowin/fastmcp/3.2-client-authentication.md)\n- [HTTP Server and Deployment](jlowin/fastmcp/4-http-server-and-deployment.md)\n- [Authentication and Security](jlowin/fastmcp/4.1-authentication-and-security.md)\n- [Middleware System](jlowin/fastmcp/4.2-middleware-system.md)\n- [Command Line Interface](jlowin/fastmcp/5-command-line-interface.md)\n- [OpenAPI Integration](jlowin/fastmcp/6-openapi-integration.md)\n- [Configuration Management](jlowin/fastmcp/7-configuration-management.md)\n- [Testing and Development Framework](jlowin/fastmcp/8-testing-and-development-framework.md)\n- [Project Infrastructure](jlowin/fastmcp/9-project-infrastructure.md)\n- [Documentation and Updates](jlowin/fastmcp/10-documentation-and-updates.md)\n\nMenu\n\n# Testing and Development Framework\n\nRelevant source files\n\n- [src/fastmcp/utilities/tests.py](https://github.com/jlowin/fastmcp/blob/66221ed3/src/fastmcp/utilities/tests.py)\n- [tests/client/auth/test\\_oauth\\_client.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/auth/test_oauth_client.py)\n- [tests/client/test\\_openapi\\_experimental.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/test_openapi_experimental.py)\n- [tests/client/test\\_openapi\\_legacy.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/test_openapi_legacy.py)\n- [tests/client/test\\_sse.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/test_sse.py)\n- [tests/client/test\\_streamable\\_http.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/test_streamable_http.py)\n- [tests/conftest.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/conftest.py)\n- [tests/contrib/test\\_bulk\\_tool\\_caller.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/contrib/test_bulk_tool_caller.py)\n- [tests/server/auth/providers/test\\_descope.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/server/auth/providers/test_descope.py)\n- [tests/server/auth/providers/test\\_workos.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/server/auth/providers/test_workos.py)\n- [tests/server/auth/test\\_jwt\\_provider.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/server/auth/test_jwt_provider.py)\n- [tests/server/http/test\\_http\\_dependencies.py](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/server/http/test_http_dependencies.py)\n\nThis document covers FastMCP's comprehensive testing infrastructure, development utilities, and testing patterns. It explains the testing utilities, fixtures, and methodologies used to test FastMCP servers, clients, transports, and integrations.",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_8-testing-and-development-framework.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 991,
      "character_count": 3596,
      "created_at": "2025-10-16T17:42:19.079710",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "jlowin_fastmcp",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_8-testing-and-development-framework.md",
      "collection_context": "FAST_DOCS/jlowin_fastmcp"
    }
  },
  {
    "text": "For information about deployment and production configuration, see [HTTP Server and Deployment](jlowin/fastmcp/4-http-server-and-deployment.md). For development workflow tools like the CLI, see [Command Line Interface](jlowin/fastmcp/5-command-line-interface.md).\n\n## Testing Infrastructure Overview\n\nFastMCP provides a robust testing framework designed to handle the complexities of testing distributed MCP systems, including process isolation, network communication, authentication flows, and transport mechanisms.\n\n```\n```\n\n**Testing Framework Architecture**\n\nSources: [src/fastmcp/utilities/tests.py1-200](https://github.com/jlowin/fastmcp/blob/66221ed3/src/fastmcp/utilities/tests.py#L1-L200) [tests/conftest.py1-60](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/conftest.py#L1-L60)\n\n## Core Testing Utilities\n\n### Process Management\n\nThe `run_server_in_process()` function provides isolated server testing by running FastMCP servers in separate processes:\n\n```\n```\n\n**Process Isolation for Server Testing**\n\nThe utility handles server lifecycle, port allocation, and cleanup automatically:\n\n| Function                  | Purpose                                | Key Parameters                          |\n| ------------------------- | -------------------------------------- | --------------------------------------- |\n| `run_server_in_process()` | Spawns server in separate process      | `server_fn`, `host`, `port`, `**kwargs` |\n| Socket readiness check    | Waits for server to accept connections | `max_attempts=30`                       |\n| Process cleanup           | Terminates server process              | `timeout=5` for graceful, then `kill()` |\n\nSources: [src/fastmcp/utilities/tests.py74-140](https://github.com/jlowin/fastmcp/blob/66221ed3/src/fastmcp/utilities/tests.py#L74-L140)\n\n### Settings Override System\n\nThe `temporary_settings()` context manager allows safe modification of FastMCP configuration during tests:\n\n```\n```\n\nSources: [src/fastmcp/utilities/tests.py24-55](https://github.com/jlowin/fastmcp/blob/66221ed3/src/fastmcp/utilities/tests.py#L24-L55)\n\n### Authentication Testing\n\nThe `HeadlessOAuth` class simulates OAuth flows without browser interaction:\n\n```\n```\n\n**Headless OAuth Flow for Testing**\n\nThe implementation bypasses browser interaction by making direct HTTP requests and parsing redirect responses:\n\n| Method               | Purpose                          | Returns              |\n| -------------------- | -------------------------------- | -------------------- |\n| `redirect_handler()` | Makes HTTP request to auth URL   | Stores response      |\n| `callback_handler()` | Extracts auth code from redirect | `(auth_code, state)` |\n\nSources: [src/fastmcp/utilities/tests.py154-200](https://github.com/jlowin/fastmcp/blob/66221ed3/src/fastmcp/utilities/tests.py#L154-L200)\n\n## Test Fixtures and Configuration\n\n### Port Management\n\nFastMCP provides utilities for managing network ports in test environments:\n\n```\n```\n\nThe `free_port_factory` tracks used ports to prevent conflicts in parallel test execution.\n\nSources: [tests/conftest.py34-59](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/conftest.py#L34-L59)\n\n### Integration Test Marking\n\nTests are automatically categorized based on their location:\n\n```\n```\n\nSources: [tests/conftest.py8-13](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/conftest.py#L8-L13)\n\n## Transport Testing Patterns\n\n### HTTP Transport Testing\n\nFastMCP tests HTTP transports using real server instances with comprehensive scenarios:\n\n```\n```\n\n**HTTP Transport Testing Architecture**\n\nKey test patterns include:\n\n- **Parameterized testing**: Tests run against both stateless and stateful HTTP modes\n- **Header propagation**: Verification that client headers reach server components\n- **Timeout handling**: Testing both client-level and operation-level timeouts\n- **Progress reporting**: Async progress updates during long-running operations\n\nSources: [tests/client/test\\_streamable\\_http.py21-248](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/test_streamable_http.py#L21-L248)\n\n### SSE Transport Testing\n\nServer-Sent Events transport testing follows similar patterns with transport-specific considerations:\n\n| Test Category      | Key Features                       | Example Test                                  |\n| ------------------ | ---------------------------------- | --------------------------------------------- |\n| Basic connectivity | Ping, list operations              | `test_ping()`                                 |\n| Header handling    | Client header propagation          | `test_http_headers()`                         |\n| Timeout behavior   | Platform-specific timeout handling | `TestTimeout` class                           |\n| Nested routing     | Complex URL path resolution        | `test_nested_sse_server_resolves_correctly()` |",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_8-testing-and-development-framework.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1003,
      "character_count": 4867,
      "created_at": "2025-10-16T17:42:19.092391",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "jlowin_fastmcp",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_8-testing-and-development-framework.md",
      "collection_context": "FAST_DOCS/jlowin_fastmcp"
    }
  },
  {
    "text": "Sources: [tests/client/test\\_sse.py19-167](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/test_sse.py#L19-L167)\n\n## Authentication Testing Framework\n\n### JWT Provider Testing\n\nFastMCP includes comprehensive JWT testing with both RSA and symmetric key scenarios:\n\n```\n```\n\n**JWT Authentication Testing Framework**\n\nThe testing framework provides helpers for various JWT scenarios:\n\n- **RSA key management**: `RSAKeyPair.generate()` creates test key pairs\n- **Symmetric keys**: `SymmetricKeyHelper` for HMAC algorithms\n- **Token validation**: Comprehensive issuer, audience, and scope testing\n- **JWKS mocking**: HTTP mocking for JWKS URI endpoints\n\nSources: [tests/server/auth/test\\_jwt\\_provider.py14-871](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/server/auth/test_jwt_provider.py#L14-L871)\n\n### OAuth Provider Testing\n\nOAuth providers are tested using integration patterns with real HTTP servers:\n\n```\n```\n\nSources: [tests/server/auth/providers/test\\_descope.py121-141](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/server/auth/providers/test_descope.py#L121-L141) [tests/server/auth/providers/test\\_workos.py160-178](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/server/auth/providers/test_workos.py#L160-L178)\n\n## Component Testing Patterns\n\n### Tool Testing with BulkToolCaller\n\nThe `BulkToolCaller` provides patterns for testing tool execution at scale:\n\n```\n```\n\n**Bulk Tool Testing Framework**\n\nKey testing patterns include:\n\n- **Live server integration**: Tests use actual `FastMCP` instances with registered tools\n- **Error propagation**: Testing both fail-fast and continue-on-error modes\n- **Result validation**: Snapshot testing for consistent output verification\n\nSources: [tests/contrib/test\\_bulk\\_tool\\_caller.py70-289](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/contrib/test_bulk_tool_caller.py#L70-L289)\n\n### HTTP Dependencies Testing\n\nFastMCP tests dependency injection in HTTP contexts across multiple transports:\n\n| Component            | Test Pattern                 | Verification                        |\n| -------------------- | ---------------------------- | ----------------------------------- |\n| `get_http_request()` | Tool, Resource, Prompt usage | Header extraction from HTTP request |\n| StreamableHttp       | Direct header propagation    | Client headers in server context    |\n| SSE                  | Event stream headers         | Header preservation across SSE      |\n\nSources: [tests/server/http/test\\_http\\_dependencies.py13-124](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/server/http/test_http_dependencies.py#L13-L124)\n\n## Development Workflow Testing\n\n### OpenAPI Integration Testing\n\nFastMCP tests OpenAPI server generation with both legacy and experimental parsers:\n\n```\n```\n\nThe testing verifies:\n\n- **Route mapping**: HTTP routes to MCP components\n- **Header propagation**: Client and server headers through proxy chains\n- **Resource templates**: Dynamic URI pattern matching\n\nSources: [tests/client/test\\_openapi\\_legacy.py13-47](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/test_openapi_legacy.py#L13-L47) [tests/client/test\\_openapi\\_experimental.py14-46](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/test_openapi_experimental.py#L14-L46)\n\n## Best Practices and Patterns\n\n### Test Organization\n\nFastMCP follows these testing organization principles:\n\n1. **Fixture-based setup**: Reusable server and client configurations\n2. **Process isolation**: Each test gets clean server instances\n3. **Transport agnostic**: Tests run across multiple transport types\n4. **Integration marking**: Automatic categorization of integration vs unit tests\n5. **Parallel execution**: xdist compatibility with port management\n\n### Error Testing Patterns\n\n```\n```\n\n### Authentication Test Patterns\n\n```\n```\n\nSources: [tests/client/test\\_streamable\\_http.py222-248](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/client/test_streamable_http.py#L222-L248) [tests/server/auth/providers/test\\_descope.py156-164](https://github.com/jlowin/fastmcp/blob/66221ed3/tests/server/auth/providers/test_descope.py#L156-L164)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_8-testing-and-development-framework.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 945,
      "character_count": 4209,
      "created_at": "2025-10-16T17:42:19.104575",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "jlowin_fastmcp",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_8-testing-and-development-framework.md",
      "collection_context": "FAST_DOCS/jlowin_fastmcp"
    }
  },
  {
    "text": "- [Testing and Development Framework](#testing-and-development-framework.md)\n- [Testing Infrastructure Overview](#testing-infrastructure-overview.md)\n- [Core Testing Utilities](#core-testing-utilities.md)\n- [Process Management](#process-management.md)\n- [Settings Override System](#settings-override-system.md)\n- [Authentication Testing](#authentication-testing.md)\n- [Test Fixtures and Configuration](#test-fixtures-and-configuration.md)\n- [Port Management](#port-management.md)\n- [Integration Test Marking](#integration-test-marking.md)\n- [Transport Testing Patterns](#transport-testing-patterns.md)\n- [HTTP Transport Testing](#http-transport-testing.md)\n- [SSE Transport Testing](#sse-transport-testing.md)\n- [Authentication Testing Framework](#authentication-testing-framework.md)\n- [JWT Provider Testing](#jwt-provider-testing.md)\n- [OAuth Provider Testing](#oauth-provider-testing.md)\n- [Component Testing Patterns](#component-testing-patterns.md)\n- [Tool Testing with BulkToolCaller](#tool-testing-with-bulktoolcaller.md)\n- [HTTP Dependencies Testing](#http-dependencies-testing.md)\n- [Development Workflow Testing](#development-workflow-testing.md)\n- [OpenAPI Integration Testing](#openapi-integration-testing.md)\n- [Best Practices and Patterns](#best-practices-and-patterns.md)\n- [Test Organization](#test-organization.md)\n- [Error Testing Patterns](#error-testing-patterns.md)\n- [Authentication Test Patterns](#authentication-test-patterns.md)",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_8-testing-and-development-framework.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 317,
      "character_count": 1453,
      "created_at": "2025-10-16T17:42:19.104753",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "jlowin_fastmcp",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 3,
      "file_relative_path": "FAST_DOCS\\jlowin_fastmcp\\_jlowin_fastmcp_8-testing-and-development-framework.md",
      "collection_context": "FAST_DOCS/jlowin_fastmcp"
    }
  }
]