[
  {
    "text": "Client Examples | modelcontextprotocol/python-sdk | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[modelcontextprotocol/python-sdk](https://github.com/modelcontextprotocol/python-sdk \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 27 September 2025 ([146d7e](https://github.com/modelcontextprotocol/python-sdk/commits/146d7efb))\n\n- [Overview](modelcontextprotocol/python-sdk/1-overview.md)\n- [Installation & Dependencies](modelcontextprotocol/python-sdk/1.1-installation-and-dependencies.md)\n- [Key Concepts](modelcontextprotocol/python-sdk/1.2-key-concepts.md)\n- [FastMCP Server Framework](modelcontextprotocol/python-sdk/2-fastmcp-server-framework.md)\n- [FastMCP Server Architecture](modelcontextprotocol/python-sdk/2.1-fastmcp-server-architecture.md)\n- [Tool Management](modelcontextprotocol/python-sdk/2.2-tool-management.md)\n- [Resource & Prompt Management](modelcontextprotocol/python-sdk/2.3-resource-and-prompt-management.md)\n- [Function Introspection & Structured Output](modelcontextprotocol/python-sdk/2.4-function-introspection-and-structured-output.md)\n- [Client Framework](modelcontextprotocol/python-sdk/3-client-framework.md)\n- [ClientSession Core](modelcontextprotocol/python-sdk/3.1-clientsession-core.md)\n- [Client Transports](modelcontextprotocol/python-sdk/3.2-client-transports.md)\n- [Client Authentication](modelcontextprotocol/python-sdk/3.3-client-authentication.md)\n- [Protocol & Message System](modelcontextprotocol/python-sdk/4-protocol-and-message-system.md)\n- [Protocol Types & JSON-RPC](modelcontextprotocol/python-sdk/4.1-protocol-types-and-json-rpc.md)\n- [Session Management](modelcontextprotocol/python-sdk/4.2-session-management.md)\n- [Context & Progress Reporting](modelcontextprotocol/python-sdk/4.3-context-and-progress-reporting.md)\n- [Transport Layer](modelcontextprotocol/python-sdk/5-transport-layer.md)\n- [StreamableHTTP Transport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md)\n- [Server-Sent Events (SSE) Transport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md)\n- [STDIO Transport](modelcontextprotocol/python-sdk/5.3-stdio-transport.md)\n- [Transport Security](modelcontextprotocol/python-sdk/5.4-transport-security.md)\n- [Low-Level Server Implementation](modelcontextprotocol/python-sdk/6-low-level-server-implementation.md)\n- [Low-Level Server Architecture](modelcontextprotocol/python-sdk/6.1-low-level-server-architecture.md)\n- [ServerSession Implementation](modelcontextprotocol/python-sdk/6.2-serversession-implementation.md)\n- [Authentication & Security](modelcontextprotocol/python-sdk/7-authentication-and-security.md)\n- [OAuth 2.0 System](modelcontextprotocol/python-sdk/7.1-oauth-2.0-system.md)\n- [Development Tools & CLI](modelcontextprotocol/python-sdk/8-development-tools-and-cli.md)\n- [MCP CLI Commands](modelcontextprotocol/python-sdk/8.1-mcp-cli-commands.md)\n- [Development Environment](modelcontextprotocol/python-sdk/8.2-development-environment.md)\n- [Claude Desktop Integration](modelcontextprotocol/python-sdk/8.3-claude-desktop-integration.md)\n- [Examples & Tutorials](modelcontextprotocol/python-sdk/9-examples-and-tutorials.md)\n- [Server Examples](modelcontextprotocol/python-sdk/9.1-server-examples.md)\n- [Client Examples](modelcontextprotocol/python-sdk/9.2-client-examples.md)\n\nMenu\n\n# Client Examples\n\nRelevant source files",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 833,
      "character_count": 3467,
      "created_at": "2025-10-16T17:42:19.845707",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "- [.pre-commit-config.yaml](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/.pre-commit-config.yaml)\n- [CLAUDE.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/CLAUDE.md)\n- [CODE\\_OF\\_CONDUCT.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/CODE_OF_CONDUCT.md)\n- [CONTRIBUTING.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/CONTRIBUTING.md)\n- [SECURITY.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/SECURITY.md)\n- [examples/clients/simple-auth-client/README.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-auth-client/README.md)\n- [examples/clients/simple-auth-client/mcp\\_simple\\_auth\\_client/main.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-auth-client/mcp_simple_auth_client/main.py)\n- [examples/clients/simple-chatbot/README.MD](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/README.MD)\n- [examples/servers/simple-auth/README.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/servers/simple-auth/README.md)\n- [examples/servers/simple-auth/mcp\\_simple\\_auth/server.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/servers/simple-auth/mcp_simple_auth/server.py)\n- [examples/servers/simple-streamablehttp-stateless/README.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/servers/simple-streamablehttp-stateless/README.md)\n- [examples/servers/simple-streamablehttp/README.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/servers/simple-streamablehttp/README.md)\n\nThis document provides practical examples of MCP client implementations, focusing on real-world usage patterns and architectures. The primary example is the simple-chatbot client that demonstrates comprehensive integration with MCP servers, LLM providers, and user interaction patterns.\n\nFor server-side examples, see [Server Examples](modelcontextprotocol/python-sdk/9.1-server-examples.md). For core client framework documentation, see [Client Framework](modelcontextprotocol/python-sdk/3-client-framework.md).\n\n## Simple Chatbot Example Overview\n\nThe simple-chatbot example demonstrates a complete MCP client implementation that connects to multiple MCP servers, discovers their tools, and integrates with an LLM provider to create an interactive chatbot experience.\n\n```\n```\n\nSources: [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py1-409](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L1-L409)\n\n## Client Architecture Components\n\nThe simple-chatbot demonstrates four main architectural components that work together to provide a complete MCP client experience.\n\n### Configuration Management\n\nThe `Configuration` class handles environment setup and server configuration loading:\n\n```\n```\n\nThe configuration system supports:\n\n- Environment variable management via `python-dotenv`\n- JSON-based server configuration loading\n- API key validation and access\n\nSources: [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py18-61](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L18-L61)\n\n### Server Connection Management\n\nThe `Server` class manages individual MCP server connections with proper lifecycle management:\n\n```\n```\n\nKey features include:\n\n- `AsyncExitStack` for proper resource cleanup\n- Retry logic with configurable attempts and delays\n- Error handling and recovery mechanisms\n\nSources: [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py63-169](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L63-L169)\n\n## Connection and Session Management\n\nThe client demonstrates proper MCP session establishment and management patterns:\n\n```\n```\n\nThe session management includes:\n\n- Process spawning with `shutil.which()` for command resolution\n- Stream-based communication setup\n- Capability negotiation through `session.initialize()`\n- Proper error handling and cleanup on failure\n\nSources: [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py74-94](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L74-L94)\n\n## Tool Discovery and Execution\n\nThe client implements comprehensive tool management with LLM integration:\n\n### Tool Discovery Pattern",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1021,
      "character_count": 4612,
      "created_at": "2025-10-16T17:42:19.855408",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "```\n```\n\nThe discovery process extracts tool metadata and formats it for LLM consumption:\n\n- Tool name and description\n- JSON schema for input parameters\n- Required vs optional parameter identification\n- Human-readable formatting for LLM prompts\n\nSources: [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py96-115](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L96-L115) [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py171-213](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L171-L213)\n\n### Tool Execution with Retry Logic\n\n```\n```\n\nThe execution system provides:\n\n- Configurable retry attempts (default: 2)\n- Exponential backoff with configurable delay\n- Comprehensive error logging\n- Progress reporting for long-running tools\n\nSources: [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py117-158](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L117-L158)\n\n## LLM Integration Patterns\n\nThe client demonstrates how to integrate MCP tools with LLM providers through structured prompting and tool calling protocols.\n\n### LLM Communication Flow\n\n```\n```\n\n### Tool Call Protocol\n\nThe client implements a JSON-based tool calling protocol:\n\n```\n```\n\nThe system message instructs the LLM on tool usage patterns and response formatting, ensuring consistent tool invocation and natural language result processing.\n\nSources: [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py283-321](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L283-L321) [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py341-361](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L341-L361)\n\n## Usage Examples\n\n### Basic Client Setup\n\nThe simple-chatbot can be configured through a JSON configuration file:\n\n```\n```\n\n### Environment Configuration\n\nRequired environment variables:\n\n- `LLM_API_KEY`: API key for the LLM provider (Groq in this example)\n\nThe client uses `python-dotenv` for environment management, supporting `.env` files for development.\n\nSources: [examples/clients/simple-chatbot/mcp\\_simple\\_chatbot/main.py397-404](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/examples/clients/simple-chatbot/mcp_simple_chatbot/main.py#L397-L404)\n\n### Test Integration Patterns\n\nThe codebase includes several test patterns that demonstrate client usage:\n\n#### Resource Testing with Client Sessions\n\n```\n```\n\nThis pattern is used extensively in tests for validating server behavior from a client perspective.\n\nSources: [tests/issues/test\\_152\\_resource\\_mime\\_type.py36-61](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/issues/test_152_resource_mime_type.py#L36-L61) [tests/issues/test\\_141\\_resource\\_templates.py81-114](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/issues/test_141_resource_templates.py#L81-L114)\n\nThe examples demonstrate comprehensive MCP client implementation patterns, from basic connection management to advanced tool integration with LLM providers, providing a solid foundation for building sophisticated MCP client applications.\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Client Examples](#client-examples.md)\n- [Simple Chatbot Example Overview](#simple-chatbot-example-overview.md)\n- [Client Architecture Components](#client-architecture-components.md)\n- [Configuration Management](#configuration-management.md)\n- [Server Connection Management](#server-connection-management.md)\n- [Connection and Session Management](#connection-and-session-management.md)\n- [Tool Discovery and Execution](#tool-discovery-and-execution.md)\n- [Tool Discovery Pattern](#tool-discovery-pattern.md)\n- [Tool Execution with Retry Logic](#tool-execution-with-retry-logic.md)\n- [LLM Integration Patterns](#llm-integration-patterns.md)\n- [LLM Communication Flow](#llm-communication-flow.md)\n- [Tool Call Protocol](#tool-call-protocol.md)\n- [Usage Examples](#usage-examples.md)\n- [Basic Client Setup](#basic-client-setup.md)\n- [Environment Configuration](#environment-configuration.md)\n- [Test Integration Patterns](#test-integration-patterns.md)\n- [Resource Testing with Client Sessions](#resource-testing-with-client-sessions.md)",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1013,
      "character_count": 4529,
      "created_at": "2025-10-16T17:42:19.862522",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_9.2-client-examples.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  }
]