[
  {
    "text": "Protocol & Message System | modelcontextprotocol/python-sdk | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[modelcontextprotocol/python-sdk](https://github.com/modelcontextprotocol/python-sdk \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 27 September 2025 ([146d7e](https://github.com/modelcontextprotocol/python-sdk/commits/146d7efb))\n\n- [Overview](modelcontextprotocol/python-sdk/1-overview.md)\n- [Installation & Dependencies](modelcontextprotocol/python-sdk/1.1-installation-and-dependencies.md)\n- [Key Concepts](modelcontextprotocol/python-sdk/1.2-key-concepts.md)\n- [FastMCP Server Framework](modelcontextprotocol/python-sdk/2-fastmcp-server-framework.md)\n- [FastMCP Server Architecture](modelcontextprotocol/python-sdk/2.1-fastmcp-server-architecture.md)\n- [Tool Management](modelcontextprotocol/python-sdk/2.2-tool-management.md)\n- [Resource & Prompt Management](modelcontextprotocol/python-sdk/2.3-resource-and-prompt-management.md)\n- [Function Introspection & Structured Output](modelcontextprotocol/python-sdk/2.4-function-introspection-and-structured-output.md)\n- [Client Framework](modelcontextprotocol/python-sdk/3-client-framework.md)\n- [ClientSession Core](modelcontextprotocol/python-sdk/3.1-clientsession-core.md)\n- [Client Transports](modelcontextprotocol/python-sdk/3.2-client-transports.md)\n- [Client Authentication](modelcontextprotocol/python-sdk/3.3-client-authentication.md)\n- [Protocol & Message System](modelcontextprotocol/python-sdk/4-protocol-and-message-system.md)\n- [Protocol Types & JSON-RPC](modelcontextprotocol/python-sdk/4.1-protocol-types-and-json-rpc.md)\n- [Session Management](modelcontextprotocol/python-sdk/4.2-session-management.md)\n- [Context & Progress Reporting](modelcontextprotocol/python-sdk/4.3-context-and-progress-reporting.md)\n- [Transport Layer](modelcontextprotocol/python-sdk/5-transport-layer.md)\n- [StreamableHTTP Transport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md)\n- [Server-Sent Events (SSE) Transport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md)\n- [STDIO Transport](modelcontextprotocol/python-sdk/5.3-stdio-transport.md)\n- [Transport Security](modelcontextprotocol/python-sdk/5.4-transport-security.md)\n- [Low-Level Server Implementation](modelcontextprotocol/python-sdk/6-low-level-server-implementation.md)\n- [Low-Level Server Architecture](modelcontextprotocol/python-sdk/6.1-low-level-server-architecture.md)\n- [ServerSession Implementation](modelcontextprotocol/python-sdk/6.2-serversession-implementation.md)\n- [Authentication & Security](modelcontextprotocol/python-sdk/7-authentication-and-security.md)\n- [OAuth 2.0 System](modelcontextprotocol/python-sdk/7.1-oauth-2.0-system.md)\n- [Development Tools & CLI](modelcontextprotocol/python-sdk/8-development-tools-and-cli.md)\n- [MCP CLI Commands](modelcontextprotocol/python-sdk/8.1-mcp-cli-commands.md)\n- [Development Environment](modelcontextprotocol/python-sdk/8.2-development-environment.md)\n- [Claude Desktop Integration](modelcontextprotocol/python-sdk/8.3-claude-desktop-integration.md)\n- [Examples & Tutorials](modelcontextprotocol/python-sdk/9-examples-and-tutorials.md)\n- [Server Examples](modelcontextprotocol/python-sdk/9.1-server-examples.md)\n- [Client Examples](modelcontextprotocol/python-sdk/9.2-client-examples.md)\n\nMenu\n\n# Protocol & Message System\n\nRelevant source files\n\n- [README.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/README.md)\n- [src/mcp/server/lowlevel/server.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py)\n- [src/mcp/types.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py)\n\nThis page documents the core Model Context Protocol (MCP) message system, JSON-RPC foundation, and type system that enables communication between MCP clients and servers. This covers the fundamental protocol layer that underlies all MCP interactions.",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4-protocol-and-message-system.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 976,
      "character_count": 4072,
      "created_at": "2025-10-16T17:42:19.424681",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4-protocol-and-message-system.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "For high-level server development using decorators and simplified APIs, see [FastMCP Server Framework](modelcontextprotocol/python-sdk/2-fastmcp-server-framework.md). For transport-specific implementations like stdio, SSE, and StreamableHTTP, see [Transport Layer](modelcontextprotocol/python-sdk/5-transport-layer.md). For client-side message handling, see [Client Framework](modelcontextprotocol/python-sdk/3-client-framework.md).\n\n## JSON-RPC Foundation\n\nMCP is built on JSON-RPC 2.0, providing a standardized request-response and notification messaging pattern. The protocol defines four core message types that form the foundation of all MCP communication.\n\n```\n```\n\n**Sources:** [src/mcp/types.py124-193](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L124-L193) [src/mcp/shared/message.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/shared/message.py)\n\nThe base JSON-RPC types define the message structure:\n\n- `JSONRPCRequest`: Request expecting a response, includes `id`, `method`, and `params`\n- `JSONRPCResponse`: Successful response with `id` and `result`\n- `JSONRPCError`: Error response with `id` and `error` containing code, message, and optional data\n- `JSONRPCNotification`: One-way message with `method` and `params`, no response expected\n\n## Protocol Message Hierarchy\n\nMCP defines a structured hierarchy of message types that inherit from the JSON-RPC foundation, creating type-safe request and response patterns.\n\n```\n```\n\n**Sources:** [src/mcp/types.py82-122](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L82-L122) [src/mcp/types.py335-365](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L335-L365) [src/mcp/types.py815-922](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L815-L922)\n\nEach protocol operation follows this pattern:\n\n1. **Request class**: Defines the method name and parameter structure\n2. **Parameter class**: Strongly-typed parameters extending `RequestParams`\n3. **Result class**: Response structure extending `Result`\n4. **Specialized handling**: Pagination, metadata, and protocol-specific features\n\n## Core Protocol Operations\n\nMCP defines several categories of protocol operations, each with specific request-response patterns and capabilities.\n\n```\n```\n\n**Sources:** [src/mcp/types.py345-365](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L345-L365) [src/mcp/types.py419-554](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L419-L554) [src/mcp/types.py815-922](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L815-L922) [src/mcp/types.py630-802](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L630-L802) [src/mcp/types.py1061-1081](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L1061-L1081)\n\n## Message Processing Architecture\n\nThe server processes incoming messages through a structured handler system that maps message types to handler functions and manages the request lifecycle.\n\n```\n```\n\n**Sources:** [src/mcp/server/lowlevel/server.py625-723](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L625-L723) [src/mcp/server/lowlevel/server.py152-155](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L152-L155) [src/mcp/server/lowlevel/server.py238-259](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L238-L259)\n\nThe `Server` class maintains handler registries that map message types to handler functions:\n\n- `request_handlers`: Maps request types to async handler functions\n- `notification_handlers`: Maps notification types to async handler functions\n- Decorator pattern for handler registration (e.g., `@server.list_tools()`)\n\n## Content and Structured Output System\n\nMCP supports both unstructured content and structured data in responses, enabling rich tool outputs and backward compatibility.\n\n```\n```",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4-protocol-and-message-system.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 999,
      "character_count": 4150,
      "created_at": "2025-10-16T17:42:19.431180",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4-protocol-and-message-system.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "**Sources:** [src/mcp/types.py688-782](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L688-L782) [src/mcp/types.py914-922](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L914-L922) [src/mcp/server/lowlevel/server.py100-102](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L100-L102)\n\nThe content system supports:\n\n- **Unstructured content**: Human-readable content blocks (text, images, audio, resources)\n- **Structured content**: Machine-readable JSON data with optional schema validation\n- **Combination output**: Both structured and unstructured content in the same response\n- **Schema validation**: Optional `outputSchema` validation for structured content\n\n## Protocol Versioning and Capabilities\n\nMCP uses semantic versioning and capability negotiation to ensure compatibility between clients and servers with different feature sets.\n\n```\n```\n\n**Sources:** [src/mcp/types.py26-34](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L26-L34) [src/mcp/types.py265-332](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L265-L332) [src/mcp/types.py335-365](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L335-L365)\n\nCapability negotiation enables:\n\n- **Protocol versioning**: Semantic version strings for compatibility checking\n- **Feature detection**: Clients and servers declare supported capabilities\n- **Graceful degradation**: Optional features can be disabled if not supported\n- **Extension points**: Experimental capabilities for new features\n\n## Error Handling and Status Codes\n\nMCP defines standardized error codes and error handling patterns based on JSON-RPC 2.0 specifications.\n\n```\n```\n\n**Sources:** [src/mcp/types.py149-179](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L149-L179) [src/mcp/server/lowlevel/server.py440-447](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L440-L447) [src/mcp/shared/exceptions.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/shared/exceptions.py)\n\nError handling includes:\n\n- **Standard JSON-RPC codes**: Parse, request, method, and parameter errors\n- **MCP-specific codes**: Connection and transport-related errors\n- **Structured error data**: Code, message, and optional additional data\n- **Exception mapping**: Python exceptions converted to MCP error responses\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Protocol & Message System](#protocol-message-system.md)\n- [JSON-RPC Foundation](#json-rpc-foundation.md)\n- [Protocol Message Hierarchy](#protocol-message-hierarchy.md)\n- [Core Protocol Operations](#core-protocol-operations.md)\n- [Message Processing Architecture](#message-processing-architecture.md)\n- [Content and Structured Output System](#content-and-structured-output-system.md)\n- [Protocol Versioning and Capabilities](#protocol-versioning-and-capabilities.md)\n- [Error Handling and Status Codes](#error-handling-and-status-codes.md)",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4-protocol-and-message-system.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 746,
      "character_count": 3163,
      "created_at": "2025-10-16T17:42:19.434750",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4-protocol-and-message-system.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  }
]