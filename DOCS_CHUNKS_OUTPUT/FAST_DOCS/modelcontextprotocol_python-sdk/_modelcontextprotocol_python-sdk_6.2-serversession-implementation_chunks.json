[
  {
    "text": "ServerSession Implementation | modelcontextprotocol/python-sdk | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[modelcontextprotocol/python-sdk](https://github.com/modelcontextprotocol/python-sdk \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 27 September 2025 ([146d7e](https://github.com/modelcontextprotocol/python-sdk/commits/146d7efb))\n\n- [Overview](modelcontextprotocol/python-sdk/1-overview.md)\n- [Installation & Dependencies](modelcontextprotocol/python-sdk/1.1-installation-and-dependencies.md)\n- [Key Concepts](modelcontextprotocol/python-sdk/1.2-key-concepts.md)\n- [FastMCP Server Framework](modelcontextprotocol/python-sdk/2-fastmcp-server-framework.md)\n- [FastMCP Server Architecture](modelcontextprotocol/python-sdk/2.1-fastmcp-server-architecture.md)\n- [Tool Management](modelcontextprotocol/python-sdk/2.2-tool-management.md)\n- [Resource & Prompt Management](modelcontextprotocol/python-sdk/2.3-resource-and-prompt-management.md)\n- [Function Introspection & Structured Output](modelcontextprotocol/python-sdk/2.4-function-introspection-and-structured-output.md)\n- [Client Framework](modelcontextprotocol/python-sdk/3-client-framework.md)\n- [ClientSession Core](modelcontextprotocol/python-sdk/3.1-clientsession-core.md)\n- [Client Transports](modelcontextprotocol/python-sdk/3.2-client-transports.md)\n- [Client Authentication](modelcontextprotocol/python-sdk/3.3-client-authentication.md)\n- [Protocol & Message System](modelcontextprotocol/python-sdk/4-protocol-and-message-system.md)\n- [Protocol Types & JSON-RPC](modelcontextprotocol/python-sdk/4.1-protocol-types-and-json-rpc.md)\n- [Session Management](modelcontextprotocol/python-sdk/4.2-session-management.md)\n- [Context & Progress Reporting](modelcontextprotocol/python-sdk/4.3-context-and-progress-reporting.md)\n- [Transport Layer](modelcontextprotocol/python-sdk/5-transport-layer.md)\n- [StreamableHTTP Transport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md)\n- [Server-Sent Events (SSE) Transport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md)\n- [STDIO Transport](modelcontextprotocol/python-sdk/5.3-stdio-transport.md)\n- [Transport Security](modelcontextprotocol/python-sdk/5.4-transport-security.md)\n- [Low-Level Server Implementation](modelcontextprotocol/python-sdk/6-low-level-server-implementation.md)\n- [Low-Level Server Architecture](modelcontextprotocol/python-sdk/6.1-low-level-server-architecture.md)\n- [ServerSession Implementation](modelcontextprotocol/python-sdk/6.2-serversession-implementation.md)\n- [Authentication & Security](modelcontextprotocol/python-sdk/7-authentication-and-security.md)\n- [OAuth 2.0 System](modelcontextprotocol/python-sdk/7.1-oauth-2.0-system.md)\n- [Development Tools & CLI](modelcontextprotocol/python-sdk/8-development-tools-and-cli.md)\n- [MCP CLI Commands](modelcontextprotocol/python-sdk/8.1-mcp-cli-commands.md)\n- [Development Environment](modelcontextprotocol/python-sdk/8.2-development-environment.md)\n- [Claude Desktop Integration](modelcontextprotocol/python-sdk/8.3-claude-desktop-integration.md)\n- [Examples & Tutorials](modelcontextprotocol/python-sdk/9-examples-and-tutorials.md)\n- [Server Examples](modelcontextprotocol/python-sdk/9.1-server-examples.md)\n- [Client Examples](modelcontextprotocol/python-sdk/9.2-client-examples.md)\n\nMenu\n\n# ServerSession Implementation\n\nRelevant source files\n\n- [src/mcp/server/models.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/models.py)\n- [src/mcp/server/session.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py)\n- [tests/server/test\\_session.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/server/test_session.py)\n\nThe ServerSession class provides the core session management functionality for MCP servers, handling individual client connections and managing bidirectional communication between servers and clients. It serves as the low-level foundation that higher-level server frameworks like FastMCP build upon for managing protocol-compliant client interactions.",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_6.2-serversession-implementation.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 985,
      "character_count": 4218,
      "created_at": "2025-10-16T17:42:19.650826",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_6.2-serversession-implementation.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "For information about the high-level FastMCP framework that uses ServerSession internally, see [FastMCP Server Framework](modelcontextprotocol/python-sdk/2-fastmcp-server-framework.md). For details about the underlying BaseSession architecture, see [Session Management](modelcontextprotocol/python-sdk/4.2-session-management.md).\n\n## Architecture Overview\n\nServerSession extends the BaseSession class with server-specific functionality, implementing the server side of the MCP protocol communication pattern.\n\n```\n```\n\nSources: [src/mcp/server/session.py71-79](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L71-L79) [src/mcp/server/session.py58-62](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L58-L62) [src/mcp/server/models.py14-21](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/models.py#L14-L21)\n\n## Session Lifecycle and Initialization\n\nServerSession manages a strict initialization protocol that ensures proper MCP handshake before allowing most operations.\n\n### Initialization States\n\nThe session progresses through three distinct states during its lifecycle:\n\n| State            | Description                                   | Allowed Operations             |\n| ---------------- | --------------------------------------------- | ------------------------------ |\n| `NotInitialized` | Initial state before any client communication | Ping requests only             |\n| `Initializing`   | During initialization handshake               | Ping requests only             |\n| `Initialized`    | Ready for full MCP protocol operations        | All requests and notifications |\n\n```\n```\n\nSources: [src/mcp/server/session.py58-62](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L58-L62) [src/mcp/server/session.py142-171](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L142-L171) [src/mcp/server/session.py173-181](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L173-L181)\n\n### Initialization Protocol\n\nThe initialization process follows the MCP specification:\n\n1. **Client sends InitializeRequest**: Contains protocol version, capabilities, and client info\n2. **Server responds with InitializeResult**: Confirms protocol version and advertises server capabilities\n3. **Client sends InitializedNotification**: Signals readiness to begin normal operations\n\n```\n```\n\nSources: [src/mcp/server/session.py144-165](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L144-L165) [src/mcp/server/session.py177-178](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L177-L178)\n\n## Client Capability Management\n\nServerSession provides capability checking to ensure servers only use features supported by the connected client.\n\n### Capability Checking Logic\n\nThe `check_client_capability()` method validates whether a client supports specific MCP capabilities:\n\n```\n```\n\nSources: [src/mcp/server/session.py105-136](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L105-L136)\n\n## Message Processing Architecture\n\nServerSession handles both incoming messages from clients and outgoing messages to clients through dedicated processing pipelines.\n\n### Incoming Message Flow\n\n```\n```\n\nSources: [src/mcp/server/session.py138-140](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L138-L140) [src/mcp/server/session.py326-327](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L326-L327) [src/mcp/server/session.py329-333](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L329-L333)\n\n### Request Validation\n\nAll incoming requests except ping are validated against the initialization state:\n\n```\n```\n\nSources: [src/mcp/server/session.py169-171](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L169-L171)\n\n## Server-to-Client Communication Methods\n\nServerSession provides a comprehensive set of methods for servers to communicate with clients, covering all major MCP protocol operations.\n\n### Notification Methods",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_6.2-serversession-implementation.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 930,
      "character_count": 4338,
      "created_at": "2025-10-16T17:42:19.660070",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_6.2-serversession-implementation.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "| Method                         | Purpose                      | MCP Notification Type             |\n| ------------------------------ | ---------------------------- | --------------------------------- |\n| `send_log_message()`           | Send log entries to client   | `LoggingMessageNotification`      |\n| `send_resource_updated()`      | Notify resource changes      | `ResourceUpdatedNotification`     |\n| `send_progress_notification()` | Report operation progress    | `ProgressNotification`            |\n| `send_resource_list_changed()` | Signal resource list updates | `ResourceListChangedNotification` |\n| `send_tool_list_changed()`     | Signal tool list updates     | `ToolListChangedNotification`     |\n| `send_prompt_list_changed()`   | Signal prompt list updates   | `PromptListChangedNotification`   |\n\nSources: [src/mcp/server/session.py183-202](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L183-L202) [src/mcp/server/session.py204-212](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L204-L212) [src/mcp/server/session.py291-312](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L291-L312) [src/mcp/server/session.py314-324](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L314-L324)\n\n### Request Methods\n\nServerSession can initiate requests to clients for advanced MCP operations:\n\n```\n```\n\nSources: [src/mcp/server/session.py214-247](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L214-L247) [src/mcp/server/session.py249-254](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L249-L254) [src/mcp/server/session.py256-282](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L256-L282) [src/mcp/server/session.py284-289](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L284-L289)\n\n## Integration with MCP Protocol\n\nServerSession implements the server side of the complete MCP protocol specification, handling message routing and protocol compliance.\n\n### Protocol Message Types\n\n```\n```\n\nSources: [src/mcp/server/session.py71-79](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L71-L79)\n\n### Stateless Mode Support\n\nServerSession supports stateless operation for scenarios where session persistence is not required:\n\n```\n```\n\nIn stateless mode, the session immediately transitions to `Initialized` state, bypassing the normal MCP initialization handshake.\n\nSources: [src/mcp/server/session.py88-93](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/session.py#L88-L93)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [ServerSession Implementation](#serversession-implementation.md)\n- [Architecture Overview](#architecture-overview.md)\n- [Session Lifecycle and Initialization](#session-lifecycle-and-initialization.md)\n- [Initialization States](#initialization-states.md)\n- [Initialization Protocol](#initialization-protocol.md)\n- [Client Capability Management](#client-capability-management.md)\n- [Capability Checking Logic](#capability-checking-logic.md)\n- [Message Processing Architecture](#message-processing-architecture.md)\n- [Incoming Message Flow](#incoming-message-flow.md)\n- [Request Validation](#request-validation.md)\n- [Server-to-Client Communication Methods](#server-to-client-communication-methods.md)\n- [Notification Methods](#notification-methods.md)\n- [Request Methods](#request-methods.md)\n- [Integration with MCP Protocol](#integration-with-mcp-protocol.md)\n- [Protocol Message Types](#protocol-message-types.md)\n- [Stateless Mode Support](#stateless-mode-support.md)",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_6.2-serversession-implementation.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 872,
      "character_count": 3843,
      "created_at": "2025-10-16T17:42:19.664995",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_6.2-serversession-implementation.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  }
]