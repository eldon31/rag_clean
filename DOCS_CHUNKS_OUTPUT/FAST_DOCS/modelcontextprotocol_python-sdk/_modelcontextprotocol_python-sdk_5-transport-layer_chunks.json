[
  {
    "text": "Transport Layer | modelcontextprotocol/python-sdk | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[modelcontextprotocol/python-sdk](https://github.com/modelcontextprotocol/python-sdk \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 27 September 2025 ([146d7e](https://github.com/modelcontextprotocol/python-sdk/commits/146d7efb))\n\n- [Overview](modelcontextprotocol/python-sdk/1-overview.md)\n- [Installation & Dependencies](modelcontextprotocol/python-sdk/1.1-installation-and-dependencies.md)\n- [Key Concepts](modelcontextprotocol/python-sdk/1.2-key-concepts.md)\n- [FastMCP Server Framework](modelcontextprotocol/python-sdk/2-fastmcp-server-framework.md)\n- [FastMCP Server Architecture](modelcontextprotocol/python-sdk/2.1-fastmcp-server-architecture.md)\n- [Tool Management](modelcontextprotocol/python-sdk/2.2-tool-management.md)\n- [Resource & Prompt Management](modelcontextprotocol/python-sdk/2.3-resource-and-prompt-management.md)\n- [Function Introspection & Structured Output](modelcontextprotocol/python-sdk/2.4-function-introspection-and-structured-output.md)\n- [Client Framework](modelcontextprotocol/python-sdk/3-client-framework.md)\n- [ClientSession Core](modelcontextprotocol/python-sdk/3.1-clientsession-core.md)\n- [Client Transports](modelcontextprotocol/python-sdk/3.2-client-transports.md)\n- [Client Authentication](modelcontextprotocol/python-sdk/3.3-client-authentication.md)\n- [Protocol & Message System](modelcontextprotocol/python-sdk/4-protocol-and-message-system.md)\n- [Protocol Types & JSON-RPC](modelcontextprotocol/python-sdk/4.1-protocol-types-and-json-rpc.md)\n- [Session Management](modelcontextprotocol/python-sdk/4.2-session-management.md)\n- [Context & Progress Reporting](modelcontextprotocol/python-sdk/4.3-context-and-progress-reporting.md)\n- [Transport Layer](modelcontextprotocol/python-sdk/5-transport-layer.md)\n- [StreamableHTTP Transport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md)\n- [Server-Sent Events (SSE) Transport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md)\n- [STDIO Transport](modelcontextprotocol/python-sdk/5.3-stdio-transport.md)\n- [Transport Security](modelcontextprotocol/python-sdk/5.4-transport-security.md)\n- [Low-Level Server Implementation](modelcontextprotocol/python-sdk/6-low-level-server-implementation.md)\n- [Low-Level Server Architecture](modelcontextprotocol/python-sdk/6.1-low-level-server-architecture.md)\n- [ServerSession Implementation](modelcontextprotocol/python-sdk/6.2-serversession-implementation.md)\n- [Authentication & Security](modelcontextprotocol/python-sdk/7-authentication-and-security.md)\n- [OAuth 2.0 System](modelcontextprotocol/python-sdk/7.1-oauth-2.0-system.md)\n- [Development Tools & CLI](modelcontextprotocol/python-sdk/8-development-tools-and-cli.md)\n- [MCP CLI Commands](modelcontextprotocol/python-sdk/8.1-mcp-cli-commands.md)\n- [Development Environment](modelcontextprotocol/python-sdk/8.2-development-environment.md)\n- [Claude Desktop Integration](modelcontextprotocol/python-sdk/8.3-claude-desktop-integration.md)\n- [Examples & Tutorials](modelcontextprotocol/python-sdk/9-examples-and-tutorials.md)\n- [Server Examples](modelcontextprotocol/python-sdk/9.1-server-examples.md)\n- [Client Examples](modelcontextprotocol/python-sdk/9.2-client-examples.md)\n\nMenu\n\n# Transport Layer\n\nRelevant source files\n\n- [src/mcp/server/sse.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py)\n- [tests/shared/test\\_sse.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py)\n\nThe transport layer provides the foundational communication mechanisms that enable MCP clients and servers to exchange JSON-RPC messages. This layer abstracts away the underlying network protocols and provides consistent interfaces for different communication patterns including HTTP-based streaming, WebSockets, and process-based communication.\n\nFor detailed protocol message handling, see [Protocol & Message System](modelcontextprotocol/python-sdk/4-protocol-and-message-system.md). For client-side transport usage, see [Client Transports](modelcontextprotocol/python-sdk/3.2-client-transports.md). For server-side transport security, see [Transport Security](#5.5.md).",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5-transport-layer.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1022,
      "character_count": 4377,
      "created_at": "2025-10-16T17:42:19.489814",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5-transport-layer.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "## Transport Architecture Overview\n\nThe MCP SDK supports multiple transport mechanisms, each optimized for different deployment scenarios and communication patterns:\n\n```\n```\n\n**Sources:** [src/mcp/server/streamable\\_http.py122-902](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L122-L902) [src/mcp/server/sse.py64-250](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L64-L250) [src/mcp/server/transport\\_security.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/transport_security.py) [tests/shared/test\\_streamable\\_http.py1-1600](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_streamable_http.py#L1-L1600)\n\n## Transport Types and Use Cases\n\n| Transport          | Primary Use Case             | Features                                                   | Implementation                                                                                    |\n| ------------------ | ---------------------------- | ---------------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\n| **StreamableHTTP** | Production web deployment    | Session management, resumability, stateful/stateless modes | [StreamableHTTPServerTransport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md)  |\n| **SSE**            | Real-time notifications      | Lightweight streaming, ASGI integration                    | [SseServerTransport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md) |\n| **STDIO**          | Local development, CLI tools | Process spawning, simple setup                             | [stdio\\_server/client](modelcontextprotocol/python-sdk/5.3-stdio-transport.md)                    |\n| **WebSocket**      | Interactive applications     | Full-duplex, low latency                                   | [websocket\\_server/client](modelcontextprotocol/python-sdk/5.4-transport-security.md)             |\n\n## Core Transport Classes\n\n### Server Transport Interfaces\n\nThe server-side transports share common patterns but implement different communication mechanisms:\n\n#### SSE Transport Architecture\n\n```\n```\n\n**Sources:** [src/mcp/server/sse.py64-250](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L64-L250) [tests/shared/test\\_sse.py83-104](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L83-L104)\n\nThe `SseServerTransport` class provides two ASGI applications:\n\n- `connect_sse()`: Handles GET requests to establish SSE streams\n- `handle_post_message()`: Handles POST requests containing client messages\n\nKey implementation details:\n\n- Endpoint validation prevents full URLs, requiring relative paths like `/messages/`\n- Session management using UUID4 for unique session identification\n- Request context propagation through `ServerMessageMetadata`\n- DNS rebinding protection via `TransportSecurityMiddleware`\n\n### Client Transport Interfaces\n\nClient transports provide consistent async context manager interfaces:\n\n```\n```\n\n**Sources:** [src/mcp/client/streamable\\_http.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py) [src/mcp/client/sse.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py) [src/mcp/client/stdio.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/stdio.py) [src/mcp/client/websocket.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/websocket.py)\n\n## Message Flow Architecture\n\nAll transports follow a common message flow pattern using anyio memory streams, with SSE implementing a specific dual-channel approach:\n\n### General Message Flow\n\n```\n```\n\n### SSE-Specific Message Flow\n\n```\n```\n\n**Sources:** [src/mcp/server/sse.py121-250](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L121-L250) [src/mcp/client/sse.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py) [tests/shared/test\\_sse.py183-214](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L183-L214)\n\nThe SSE transport uses a unique dual-channel approach:\n\n- **GET channel**: Establishes SSE stream for server-to-client messages\n- **POST channel**: Handles client-to-server messages with session correlation\n- **Session correlation**: UUID-based session matching between channels\n- **Request context**: Each POST request includes full request context via `ServerMessageMetadata`\n\n## Transport Security Features",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5-transport-layer.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1015,
      "character_count": 4745,
      "created_at": "2025-10-16T17:42:19.500311",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5-transport-layer.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "All HTTP-based transports implement comprehensive security measures including endpoint validation and DNS rebinding protection:\n\n### Security Validation Flow\n\n```\n```\n\n**Sources:** [src/mcp/server/sse.py106-119](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L106-L119) [src/mcp/server/transport\\_security.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/transport_security.py) [tests/shared/test\\_sse.py488-513](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L488-L513)\n\n### SSE Endpoint Security\n\nThe `SseServerTransport` enforces strict endpoint validation to prevent security vulnerabilities:\n\n- **Relative Path Requirement**: Endpoints must be relative paths (e.g., `/messages/`) not full URLs\n- **URL Component Rejection**: Rejects endpoints containing `://`, `//`, `?`, or `#`\n- **Path Normalization**: Automatically adds leading `/` if missing\n- **Security Rationale**: Prevents cross-origin requests and ensures clients connect to the same origin\n\n```\n```\n\n## Transport Selection Guidelines\n\nChoose the appropriate transport based on your deployment requirements:\n\n- **StreamableHTTP**: Best for production web applications requiring session persistence and resumability\n- **SSE**: Ideal for lightweight real-time updates with simple setup\n- **STDIO**: Perfect for local development, CLI tools, and process-based architectures\n- **WebSocket**: Optimal for interactive applications requiring low-latency bidirectional communication\n\nEach transport is covered in detail in the following sections: [StreamableHTTP Transport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md), [SSE Transport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md), [STDIO Transport](modelcontextprotocol/python-sdk/5.3-stdio-transport.md), [WebSocket Transport](modelcontextprotocol/python-sdk/5.4-transport-security.md), and [Transport Security](#5.5.md).\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Transport Layer](#transport-layer.md)\n- [Transport Architecture Overview](#transport-architecture-overview.md)\n- [Transport Types and Use Cases](#transport-types-and-use-cases.md)\n- [Core Transport Classes](#core-transport-classes.md)\n- [Server Transport Interfaces](#server-transport-interfaces.md)\n- [SSE Transport Architecture](#sse-transport-architecture.md)\n- [Client Transport Interfaces](#client-transport-interfaces.md)\n- [Message Flow Architecture](#message-flow-architecture.md)\n- [General Message Flow](#general-message-flow.md)\n- [SSE-Specific Message Flow](#sse-specific-message-flow.md)\n- [Transport Security Features](#transport-security-features.md)\n- [Security Validation Flow](#security-validation-flow.md)\n- [SSE Endpoint Security](#sse-endpoint-security.md)\n- [Transport Selection Guidelines](#transport-selection-guidelines.md)",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5-transport-layer.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 652,
      "character_count": 2923,
      "created_at": "2025-10-16T17:42:19.502980",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5-transport-layer.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  }
]