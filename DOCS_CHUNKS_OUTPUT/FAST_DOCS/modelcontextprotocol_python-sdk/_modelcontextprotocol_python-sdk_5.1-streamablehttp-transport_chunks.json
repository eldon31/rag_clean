[
  {
    "text": "StreamableHTTP Transport | modelcontextprotocol/python-sdk | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[modelcontextprotocol/python-sdk](https://github.com/modelcontextprotocol/python-sdk \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 27 September 2025 ([146d7e](https://github.com/modelcontextprotocol/python-sdk/commits/146d7efb))\n\n- [Overview](modelcontextprotocol/python-sdk/1-overview.md)\n- [Installation & Dependencies](modelcontextprotocol/python-sdk/1.1-installation-and-dependencies.md)\n- [Key Concepts](modelcontextprotocol/python-sdk/1.2-key-concepts.md)\n- [FastMCP Server Framework](modelcontextprotocol/python-sdk/2-fastmcp-server-framework.md)\n- [FastMCP Server Architecture](modelcontextprotocol/python-sdk/2.1-fastmcp-server-architecture.md)\n- [Tool Management](modelcontextprotocol/python-sdk/2.2-tool-management.md)\n- [Resource & Prompt Management](modelcontextprotocol/python-sdk/2.3-resource-and-prompt-management.md)\n- [Function Introspection & Structured Output](modelcontextprotocol/python-sdk/2.4-function-introspection-and-structured-output.md)\n- [Client Framework](modelcontextprotocol/python-sdk/3-client-framework.md)\n- [ClientSession Core](modelcontextprotocol/python-sdk/3.1-clientsession-core.md)\n- [Client Transports](modelcontextprotocol/python-sdk/3.2-client-transports.md)\n- [Client Authentication](modelcontextprotocol/python-sdk/3.3-client-authentication.md)\n- [Protocol & Message System](modelcontextprotocol/python-sdk/4-protocol-and-message-system.md)\n- [Protocol Types & JSON-RPC](modelcontextprotocol/python-sdk/4.1-protocol-types-and-json-rpc.md)\n- [Session Management](modelcontextprotocol/python-sdk/4.2-session-management.md)\n- [Context & Progress Reporting](modelcontextprotocol/python-sdk/4.3-context-and-progress-reporting.md)\n- [Transport Layer](modelcontextprotocol/python-sdk/5-transport-layer.md)\n- [StreamableHTTP Transport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md)\n- [Server-Sent Events (SSE) Transport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md)\n- [STDIO Transport](modelcontextprotocol/python-sdk/5.3-stdio-transport.md)\n- [Transport Security](modelcontextprotocol/python-sdk/5.4-transport-security.md)\n- [Low-Level Server Implementation](modelcontextprotocol/python-sdk/6-low-level-server-implementation.md)\n- [Low-Level Server Architecture](modelcontextprotocol/python-sdk/6.1-low-level-server-architecture.md)\n- [ServerSession Implementation](modelcontextprotocol/python-sdk/6.2-serversession-implementation.md)\n- [Authentication & Security](modelcontextprotocol/python-sdk/7-authentication-and-security.md)\n- [OAuth 2.0 System](modelcontextprotocol/python-sdk/7.1-oauth-2.0-system.md)\n- [Development Tools & CLI](modelcontextprotocol/python-sdk/8-development-tools-and-cli.md)\n- [MCP CLI Commands](modelcontextprotocol/python-sdk/8.1-mcp-cli-commands.md)\n- [Development Environment](modelcontextprotocol/python-sdk/8.2-development-environment.md)\n- [Claude Desktop Integration](modelcontextprotocol/python-sdk/8.3-claude-desktop-integration.md)\n- [Examples & Tutorials](modelcontextprotocol/python-sdk/9-examples-and-tutorials.md)\n- [Server Examples](modelcontextprotocol/python-sdk/9.1-server-examples.md)\n- [Client Examples](modelcontextprotocol/python-sdk/9.2-client-examples.md)\n\nMenu\n\n# StreamableHTTP Transport\n\nRelevant source files",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 837,
      "character_count": 3485,
      "created_at": "2025-10-16T17:42:19.507694",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "- [src/mcp/client/sse.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py)\n- [src/mcp/client/streamable\\_http.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py)\n- [src/mcp/server/streamable\\_http.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py)\n- [src/mcp/server/streamable\\_http\\_manager.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http_manager.py)\n- [tests/client/test\\_notification\\_response.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/client/test_notification_response.py)\n- [tests/server/test\\_streamable\\_http\\_manager.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/server/test_streamable_http_manager.py)\n- [tests/shared/test\\_streamable\\_http.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_streamable_http.py)\n\nThe StreamableHTTP Transport provides HTTP-based bidirectional communication for MCP using POST requests and Server-Sent Events (SSE) streaming. This transport enables stateful session management, optional resumability, and authentication support for both clients and servers.\n\nFor SSE-only transport functionality, see [Server-Sent Events (SSE) Transport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md). For stdio-based process communication, see [STDIO Transport](modelcontextprotocol/python-sdk/5.3-stdio-transport.md). For WebSocket communication, see [WebSocket Transport](modelcontextprotocol/python-sdk/5.4-transport-security.md).\n\n## Overview\n\nStreamableHTTP transport implements the MCP protocol over HTTP using a hybrid approach: clients send messages via HTTP POST requests, while servers respond using either JSON responses or SSE streams. The transport supports both stateful sessions with resumability and stateless request-response patterns.\n\n**Key Features:**\n\n- HTTP POST requests for client-to-server communication\n- SSE streaming for server-to-client communication\n- Session management with unique session IDs\n- Optional resumability via `EventStore` interface\n- Authentication support through `httpx.Auth`\n- DNS rebinding protection via `TransportSecurityMiddleware`\n- Both stateful and stateless operation modes\n\nSources: [src/mcp/client/streamable\\_http.py1-8](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py#L1-L8) [src/mcp/server/streamable\\_http.py1-8](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L1-L8)\n\n## Architecture Overview\n\n```\n```\n\n**StreamableHTTP Transport Architecture**\n\nSources: [src/mcp/client/streamable\\_http.py74-108](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py#L74-L108) [src/mcp/server/streamable\\_http.py122-175](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L122-L175) [src/mcp/server/streamable\\_http\\_manager.py29-79](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http_manager.py#L29-L79)\n\n## Client-Side Implementation\n\nThe client-side implementation centers around the `StreamableHTTPTransport` class and the `streamablehttp_client` async context manager.\n\n### StreamableHTTPTransport Class\n\nThe `StreamableHTTPTransport` class handles the client-side HTTP communication with session management and protocol negotiation:\n\n| Component          | Responsibility                                  |\n| ------------------ | ----------------------------------------------- |\n| Session Management | Tracks session ID and protocol version          |\n| Request Handling   | Manages POST requests and SSE responses         |\n| Authentication     | Integrates with `httpx.Auth` for authentication |\n| Resumption         | Supports request resumption with event IDs      |\n\n**Key Methods:**\n\n- `post_writer()` - Handles outgoing requests via HTTP POST\n- `handle_get_stream()` - Manages incoming SSE streams from server\n- `terminate_session()` - Explicitly terminates session via DELETE request\n- `_handle_post_request()` - Processes individual POST requests\n- `_handle_resumption_request()` - Handles resumption with `Last-Event-ID`\n\n**Key Attributes:**\n\n- `session_id` - Current session identifier\n- `protocol_version` - Negotiated protocol version\n- `request_headers` - Base headers for all requests\n\n### Message Flow Patterns\n\n```\n```",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1019,
      "character_count": 4579,
      "created_at": "2025-10-16T17:42:19.516273",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "**StreamableHTTP Message Flow**\n\nSources: [src/mcp/client/streamable\\_http.py366-422](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py#L366-L422) [src/mcp/client/streamable\\_http.py192-218](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py#L192-L218) [src/mcp/client/streamable\\_http.py423-438](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py#L423-L438) [src/mcp/server/streamable\\_http.py309-507](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L309-L507) [src/mcp/server/streamable\\_http.py508-599](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L508-L599) [src/mcp/server/streamable\\_http.py600-622](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L600-L622)\n\n### Client Context Manager Usage\n\nThe primary client interface is the `streamablehttp_client` async context manager:\n\n```\n```\n\nSources: [src/mcp/client/streamable\\_http.py444-514](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py#L444-L514)\n\n## Server-Side Implementation\n\nThe server-side implementation provides two main components: `StreamableHTTPServerTransport` for individual connections and `StreamableHTTPSessionManager` for managing multiple sessions.\n\n### StreamableHTTPServerTransport\n\nThe `StreamableHTTPServerTransport` class handles individual HTTP connections with support for both SSE streaming and JSON responses:\n\n**Operating Modes:**\n\n- **SSE Mode** (default): Responses are streamed via Server-Sent Events\n- **JSON Mode**: Single JSON responses for each request (controlled by `is_json_response_enabled`)\n\n**HTTP Method Handling:**\n\n- `POST` - Processes JSON-RPC messages via `_handle_post_request()`\n- `GET` - Establishes SSE streams for server-initiated messages via `_handle_get_request()`\n- `DELETE` - Terminates sessions explicitly via `_handle_delete_request()`\n\n**Key Features:**\n\n- Session ID validation using `SESSION_ID_PATTERN`\n- Request stream management with `_request_streams` dictionary\n- Event storage integration via `EventStore` interface\n- Security validation through `TransportSecurityMiddleware`\n- Memory stream cleanup with `_clean_up_memory_streams()`\n\n### Session Management Architecture\n\n```\n```\n\n**Session Management Components**\n\nSources: [src/mcp/server/streamable\\_http\\_manager.py70-79](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http_manager.py#L70-L79) [src/mcp/server/streamable\\_http\\_manager.py146-194](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http_manager.py#L146-L194) [src/mcp/server/streamable\\_http\\_manager.py195-280](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http_manager.py#L195-L280)\n\n### Stateful vs Stateless Modes\n\nThe session manager supports two operation modes:\n\n| Mode      | Session Tracking | State Persistence | Use Case                         |\n| --------- | ---------------- | ----------------- | -------------------------------- |\n| Stateful  | Yes              | Between requests  | Long-lived connections           |\n| Stateless | No               | None              | Serverless/stateless deployments |\n\n**Stateful Mode:** Sessions are tracked with UUIDs, allowing resumption and persistent state. **Stateless Mode:** Each request creates a fresh transport instance with no state retention.\n\nSources: [src/mcp/server/streamable\\_http\\_manager.py54-68](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http_manager.py#L54-L68)\n\n## Event Storage and Resumability\n\nStreamableHTTP transport supports optional resumability through the `EventStore` interface, allowing clients to reconnect and receive missed events.\n\n### EventStore Interface\n\n```\n```\n\n**Event Storage Architecture**\n\n**Resumption Flow:**\n\n1. Client includes `Last-Event-ID` header in GET request via `LAST_EVENT_ID_HEADER`\n2. Server calls `EventStore.replay_events_after()` in `_replay_events()`\n3. Missed events are replayed via SSE using `_create_event_data()`\n4. New events continue from current point with automatic event ID generation\n\n**Stream Management:**",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1017,
      "character_count": 4411,
      "created_at": "2025-10-16T17:42:19.526849",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "- Events are stored per `StreamId` (either request ID or `GET_STREAM_KEY`)\n- Message router distributes events to appropriate streams based on request correlation\n- Event IDs are generated by the `EventStore` implementation\n\nSources: [src/mcp/server/streamable\\_http.py84-120](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L84-L120) [src/mcp/server/streamable\\_http.py728-798](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L728-L798) [src/mcp/server/streamable\\_http.py829-880](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L829-L880)\n\n## Security Features\n\nStreamableHTTP transport includes DNS rebinding protection through the `TransportSecurityMiddleware`.\n\n### Security Validation\n\nThe transport validates incoming requests against security policies via `TransportSecurityMiddleware`:\n\n| Validation     | Scope         | Purpose                                      |\n| -------------- | ------------- | -------------------------------------------- |\n| Host Header    | All requests  | Prevent DNS rebinding attacks                |\n| Origin Header  | CORS requests | Validate request origin                      |\n| Content-Type   | POST requests | Ensure proper JSON content                   |\n| Accept Headers | POST requests | Validate client accepts required media types |\n\n**Security Integration:**\n\n- `TransportSecurityMiddleware` is instantiated in `StreamableHTTPServerTransport.__init__()`\n- Validation occurs in `handle_request()` via `_security.validate_request()`\n- Failed validation returns error responses before processing\n\n**Configuration Example:**\n\n```\n```\n\nSources: [src/mcp/server/streamable\\_http.py27-30](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L27-L30) [src/mcp/server/streamable\\_http.py166](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L166-L166) [src/mcp/server/streamable\\_http.py268-272](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L268-L272)\n\n## Protocol Implementation Details\n\n### Session ID Management\n\nSession IDs are validated against a strict pattern to ensure security:\n\n- **Pattern:** Visible ASCII characters (0x21-0x7E)\n- **Generation:** UUID hex format (32 characters)\n- **Validation:** `SESSION_ID_PATTERN.fullmatch()` check\n\n### Protocol Version Negotiation\n\nThe transport negotiates protocol versions during initialization:\n\n1. Client sends `initialize` request\n2. Server responds with `InitializeResult` containing `protocolVersion`\n3. Subsequent requests include `mcp-protocol-version` header\n\n### Headers and Content Types\n\n| Header                 | Constant                      | Purpose                | Example                               |\n| ---------------------- | ----------------------------- | ---------------------- | ------------------------------------- |\n| `mcp-session-id`       | `MCP_SESSION_ID_HEADER`       | Session identification | `abc123def456...`                     |\n| `mcp-protocol-version` | `MCP_PROTOCOL_VERSION_HEADER` | Protocol version       | `2025-03-26`                          |\n| `last-event-id`        | `LAST_EVENT_ID_HEADER`        | Resumption token       | `event-123`                           |\n| `content-type`         | `CONTENT_TYPE`                | Request format         | `application/json`                    |\n| `accept`               | `ACCEPT`                      | Response formats       | `application/json, text/event-stream` |\n\n**Content Type Constants:**\n\n- `CONTENT_TYPE_JSON` = `\"application/json\"`\n- `CONTENT_TYPE_SSE` = `\"text/event-stream\"`\n- `JSON` = `\"application/json\"` (client)\n- `SSE` = `\"text/event-stream\"` (client)\n\n**Session ID Validation:**\n\n- Pattern: `SESSION_ID_PATTERN` validates visible ASCII characters (0x21-0x7E)\n- Generated using `uuid4().hex` for new sessions\n- Validated on transport initialization and request processing\n\nSources: [src/mcp/server/streamable\\_http.py50-64](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L50-L64) [src/mcp/client/streamable\\_http.py42-51](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py#L42-L51) [src/mcp/server/streamable\\_http.py62-64](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http.py#L62-L64)\n\n## Integration with ASGI",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1013,
      "character_count": 4577,
      "created_at": "2025-10-16T17:42:19.535236",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 3,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "StreamableHTTP transport integrates with ASGI applications through the session manager:\n\n```\n```\n\nThe session manager's `run()` method provides lifecycle management for all sessions and can only be called once per instance.\n\nSources: [src/mcp/server/streamable\\_http\\_manager.py80-120](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http_manager.py#L80-L120) [src/mcp/server/streamable\\_http\\_manager.py121-145](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/streamable_http_manager.py#L121-L145)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [StreamableHTTP Transport](#streamablehttp-transport.md)\n- [Overview](#overview.md)\n- [Architecture Overview](#architecture-overview.md)\n- [Client-Side Implementation](#client-side-implementation.md)\n- [StreamableHTTPTransport Class](#streamablehttptransport-class.md)\n- [Message Flow Patterns](#message-flow-patterns.md)\n- [Client Context Manager Usage](#client-context-manager-usage.md)\n- [Server-Side Implementation](#server-side-implementation.md)\n- [StreamableHTTPServerTransport](#streamablehttpservertransport.md)\n- [Session Management Architecture](#session-management-architecture.md)\n- [Stateful vs Stateless Modes](#stateful-vs-stateless-modes.md)\n- [Event Storage and Resumability](#event-storage-and-resumability.md)\n- [EventStore Interface](#eventstore-interface.md)\n- [Security Features](#security-features.md)\n- [Security Validation](#security-validation.md)\n- [Protocol Implementation Details](#protocol-implementation-details.md)\n- [Session ID Management](#session-id-management.md)\n- [Protocol Version Negotiation](#protocol-version-negotiation.md)\n- [Headers and Content Types](#headers-and-content-types.md)\n- [Integration with ASGI](#integration-with-asgi.md)",
    "metadata": {
      "chunk_id": 4,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 425,
      "character_count": 1828,
      "created_at": "2025-10-16T17:42:19.536104",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 4,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.1-streamablehttp-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  }
]