[
  {
    "text": "Server-Sent Events (SSE) Transport | modelcontextprotocol/python-sdk | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[modelcontextprotocol/python-sdk](https://github.com/modelcontextprotocol/python-sdk \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 27 September 2025 ([146d7e](https://github.com/modelcontextprotocol/python-sdk/commits/146d7efb))\n\n- [Overview](modelcontextprotocol/python-sdk/1-overview.md)\n- [Installation & Dependencies](modelcontextprotocol/python-sdk/1.1-installation-and-dependencies.md)\n- [Key Concepts](modelcontextprotocol/python-sdk/1.2-key-concepts.md)\n- [FastMCP Server Framework](modelcontextprotocol/python-sdk/2-fastmcp-server-framework.md)\n- [FastMCP Server Architecture](modelcontextprotocol/python-sdk/2.1-fastmcp-server-architecture.md)\n- [Tool Management](modelcontextprotocol/python-sdk/2.2-tool-management.md)\n- [Resource & Prompt Management](modelcontextprotocol/python-sdk/2.3-resource-and-prompt-management.md)\n- [Function Introspection & Structured Output](modelcontextprotocol/python-sdk/2.4-function-introspection-and-structured-output.md)\n- [Client Framework](modelcontextprotocol/python-sdk/3-client-framework.md)\n- [ClientSession Core](modelcontextprotocol/python-sdk/3.1-clientsession-core.md)\n- [Client Transports](modelcontextprotocol/python-sdk/3.2-client-transports.md)\n- [Client Authentication](modelcontextprotocol/python-sdk/3.3-client-authentication.md)\n- [Protocol & Message System](modelcontextprotocol/python-sdk/4-protocol-and-message-system.md)\n- [Protocol Types & JSON-RPC](modelcontextprotocol/python-sdk/4.1-protocol-types-and-json-rpc.md)\n- [Session Management](modelcontextprotocol/python-sdk/4.2-session-management.md)\n- [Context & Progress Reporting](modelcontextprotocol/python-sdk/4.3-context-and-progress-reporting.md)\n- [Transport Layer](modelcontextprotocol/python-sdk/5-transport-layer.md)\n- [StreamableHTTP Transport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md)\n- [Server-Sent Events (SSE) Transport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md)\n- [STDIO Transport](modelcontextprotocol/python-sdk/5.3-stdio-transport.md)\n- [Transport Security](modelcontextprotocol/python-sdk/5.4-transport-security.md)\n- [Low-Level Server Implementation](modelcontextprotocol/python-sdk/6-low-level-server-implementation.md)\n- [Low-Level Server Architecture](modelcontextprotocol/python-sdk/6.1-low-level-server-architecture.md)\n- [ServerSession Implementation](modelcontextprotocol/python-sdk/6.2-serversession-implementation.md)\n- [Authentication & Security](modelcontextprotocol/python-sdk/7-authentication-and-security.md)\n- [OAuth 2.0 System](modelcontextprotocol/python-sdk/7.1-oauth-2.0-system.md)\n- [Development Tools & CLI](modelcontextprotocol/python-sdk/8-development-tools-and-cli.md)\n- [MCP CLI Commands](modelcontextprotocol/python-sdk/8.1-mcp-cli-commands.md)\n- [Development Environment](modelcontextprotocol/python-sdk/8.2-development-environment.md)\n- [Claude Desktop Integration](modelcontextprotocol/python-sdk/8.3-claude-desktop-integration.md)\n- [Examples & Tutorials](modelcontextprotocol/python-sdk/9-examples-and-tutorials.md)\n- [Server Examples](modelcontextprotocol/python-sdk/9.1-server-examples.md)\n- [Client Examples](modelcontextprotocol/python-sdk/9.2-client-examples.md)\n\nMenu\n\n# Server-Sent Events (SSE) Transport\n\nRelevant source files\n\n- [src/mcp/client/sse.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py)\n- [src/mcp/client/streamable\\_http.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/streamable_http.py)\n- [src/mcp/server/sse.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py)\n- [tests/client/test\\_notification\\_response.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/client/test_notification_response.py)\n- [tests/shared/test\\_sse.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py)",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1019,
      "character_count": 4152,
      "created_at": "2025-10-16T17:42:19.541856",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "This document covers the Server-Sent Events (SSE) transport implementation for MCP servers, which enables real-time bidirectional communication through a combination of SSE streaming for server-to-client messages and HTTP POST requests for client-to-server messages.\n\nFor information about the client-side SSE implementation, see [Client Transports](modelcontextprotocol/python-sdk/3.2-client-transports.md). For HTTP-based transports with session management, see [StreamableHTTP Transport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md). For security features across all transports, see [Transport Security](modelcontextprotocol/python-sdk/5.4-transport-security.md).\n\n## Architecture Overview\n\nThe SSE transport provides a hybrid communication model that combines the real-time capabilities of Server-Sent Events with the reliability of HTTP POST requests for bidirectional MCP communication.\n\n### SSE Transport Architecture\n\n```\n```\n\nSources: [src/mcp/server/sse.py64-250](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L64-L250) [tests/shared/test\\_sse.py83-104](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L83-L104)\n\n### Message Flow Architecture\n\n```\n```\n\nSources: [src/mcp/server/sse.py121-249](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L121-L249) [tests/shared/test\\_sse.py183-195](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L183-L195)\n\n## SSE Server Transport Implementation\n\nThe `SseServerTransport` class provides the core SSE transport functionality through two main ASGI applications.\n\n### Core Components\n\n| Component               | Purpose                        | Implementation                                                                                                                   |\n| ----------------------- | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------- |\n| `SseServerTransport`    | Main transport class           | [src/mcp/server/sse.py64-79](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L64-L79)     |\n| `connect_sse()`         | Handles SSE connection setup   | [src/mcp/server/sse.py122-199](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L122-L199) |\n| `handle_post_message()` | Processes client POST requests | [src/mcp/server/sse.py201-249](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L201-L249) |\n| Memory Streams          | Internal message passing       | [src/mcp/server/sse.py135-142](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L135-L142) |\n| Security Middleware     | Request validation             | [src/mcp/server/sse.py118](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L118-L118)     |\n\n### Transport Initialization\n\nThe transport requires an endpoint configuration and optional security settings:\n\n```\n```\n\nThe endpoint validation ensures only relative paths are accepted to prevent security issues [src/mcp/server/sse.py105-115](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L105-L115)\n\nSources: [src/mcp/server/sse.py80-120](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L80-L120) [tests/shared/test\\_sse.py86-89](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L86-L89)\n\n### ASGI Integration Pattern\n\n```\n```\n\nSources: [src/mcp/server/sse.py6-37](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L6-L37) [tests/shared/test\\_sse.py97-104](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L97-L104)\n\n## Session Management\n\nThe SSE transport implements session-based communication using UUID session identifiers and memory streams for message routing.\n\n### Session Lifecycle",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 943,
      "character_count": 4152,
      "created_at": "2025-10-16T17:42:19.549309",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "1. **Session Creation**: Generated during `connect_sse()` call [src/mcp/server/sse.py144-146](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L144-L146)\n2. **Stream Setup**: Memory object streams created for bidirectional communication [src/mcp/server/sse.py135-142](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L135-L142)\n3. **Endpoint Communication**: Client receives POST endpoint via initial SSE event [src/mcp/server/sse.py161-168](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L161-L168)\n4. **Message Routing**: POST requests routed to correct session via session\\_id [src/mcp/server/sse.py216-228](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L216-L228)\n5. **Cleanup**: Streams closed when SSE connection terminates [src/mcp/server/sse.py191-193](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L191-L193)\n\n### Session Storage and Routing\n\n```\n```\n\nSources: [src/mcp/server/sse.py77](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L77-L77) [src/mcp/server/sse.py144-146](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L144-L146) [src/mcp/server/sse.py216-228](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L216-L228)\n\n## Security Features\n\nThe SSE transport includes built-in security measures to prevent common web vulnerabilities.\n\n### Request Validation\n\nThe transport uses `TransportSecurityMiddleware` for DNS rebinding protection and origin validation:\n\n- **Host Header Validation**: Ensures requests target allowed hosts [src/mcp/server/sse.py129](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L129-L129)\n- **Origin Header Checking**: Validates request origins for POST requests [src/mcp/server/sse.py206](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L206-L206)\n- **Relative Path Enforcement**: Prevents absolute URLs in endpoint configuration [src/mcp/server/sse.py106-110](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L106-L110)\n\n### Error Handling\n\nThe transport provides comprehensive error responses with specific HTTP status codes and messages:\n\n| Error Type          | Status Code | Response Message             | Scenario                                                                                                                                                      |\n| ------------------- | ----------- | ---------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Missing session\\_id | 400         | \"session\\_id is required\"    | POST without session parameter [src/mcp/server/sse.py213](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L213-L213)   |\n| Invalid session\\_id | 400         | \"Invalid session ID\"         | Malformed UUID in request [src/mcp/server/sse.py221](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L221-L221)        |\n| Session not found   | 404         | \"Could not find session\"     | Request for non-existent session [src/mcp/server/sse.py227](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L227-L227) |\n| Parse error         | 400         | \"Could not parse message\"    | Invalid JSON in message body [src/mcp/server/sse.py238](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L238-L238)     |\n| Validation failure  | Variable    | Security middleware response | DNS rebinding protection [src/mcp/server/sse.py129-132](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L129-L132)     |\n\n### Client-Side Error Handling\n\nThe SSE client implements robust error handling for various failure scenarios:",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 980,
      "character_count": 4129,
      "created_at": "2025-10-16T17:42:19.554015",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "- **Origin Mismatch**: Raises `ValueError` when endpoint origin doesn't match connection origin [src/mcp/client/sse.py85-89](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L85-L89)\n- **Message Parsing**: Catches exceptions during JSON parsing and forwards to error stream [src/mcp/client/sse.py99-102](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L99-L102)\n- **Connection Failures**: Automatically propagates HTTP connection errors through the read stream [src/mcp/client/sse.py108-110](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L108-L110)\n- **Timeout Handling**: Configurable `sse_read_timeout` for SSE event reading [src/mcp/client/sse.py28](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L28-L28)\n\nSources: [src/mcp/server/sse.py210-241](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L210-L241) [src/mcp/client/sse.py85-110](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L85-L110)\n\n## Client Integration\n\nThe SSE transport integrates with the client-side `sse_client` function to provide seamless MCP communication through a sophisticated endpoint discovery and validation process.\n\n### SSE Client Architecture\n\n```\n```\n\nSources: [src/mcp/client/sse.py24-144](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L24-L144) [src/mcp/client/sse.py68-112](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L68-L112)\n\n### Endpoint Discovery and Security\n\nThe SSE client implements a secure endpoint discovery process to prevent cross-origin attacks:\n\n1. **Initial Connection**: Client establishes SSE connection to server endpoint [src/mcp/client/sse.py60-66](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L60-L66)\n2. **Endpoint Event**: Server sends `endpoint` event with POST URL [src/mcp/client/sse.py75-76](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L75-L76)\n3. **Origin Validation**: Client validates endpoint origin matches connection origin [src/mcp/client/sse.py79-89](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L79-L89)\n4. **URL Construction**: Client constructs POST endpoint using `urljoin` for proper path resolution [src/mcp/client/sse.py76](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L76-L76)\n\n### Client Connection Pattern\n\n```\n```\n\n### Task Management\n\nThe `sse_client` function creates two concurrent tasks for bidirectional communication:\n\n| Task          | Purpose                                   | Implementation                                                                                                                   |\n| ------------- | ----------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------- |\n| `sse_reader`  | Handles SSE events and endpoint discovery | [src/mcp/client/sse.py68-112](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L68-L112)   |\n| `post_writer` | Sends client messages via POST requests   | [src/mcp/client/sse.py114-132](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L114-L132) |\n\nThe reader task processes different SSE event types:\n\n- `endpoint`: Establishes POST endpoint URL with security validation\n- `message`: Forwards server messages to the client session\n- Unknown events: Logged as warnings for debugging\n\nSources: [src/mcp/client/sse.py74-107](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/client/sse.py#L74-L107)\n\n### Request Context Propagation\n\nThe transport preserves request context from the initial SSE connection and makes it available to MCP handlers:\n\n```\n```",
    "metadata": {
      "chunk_id": 3,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 956,
      "character_count": 4048,
      "created_at": "2025-10-16T17:42:19.561217",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 3,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "Sources: [tests/shared/test\\_sse.py183-201](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L183-L201) [tests/shared/test\\_sse.py404-433](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L404-L433) [src/mcp/server/sse.py244-245](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L244-L245)\n\n## Usage Examples\n\n### Basic Starlette Integration\n\n```\n```\n\n### Mounted Application Support\n\nThe transport supports deployment under path prefixes using Starlette's `Mount`:\n\n```\n```\n\nThe transport automatically handles path prefix resolution using ASGI scope's `root_path` [src/mcp/server/sse.py152-158](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L152-L158)\n\nSources: [src/mcp/server/sse.py6-37](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/sse.py#L6-L37) [tests/shared/test\\_sse.py83-104](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L83-L104) [tests/shared/test\\_sse.py289-300](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/tests/shared/test_sse.py#L289-L300)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Server-Sent Events (SSE) Transport](#server-sent-events-sse-transport.md)\n- [Architecture Overview](#architecture-overview.md)\n- [SSE Transport Architecture](#sse-transport-architecture.md)\n- [Message Flow Architecture](#message-flow-architecture.md)\n- [SSE Server Transport Implementation](#sse-server-transport-implementation.md)\n- [Core Components](#core-components.md)\n- [Transport Initialization](#transport-initialization.md)\n- [ASGI Integration Pattern](#asgi-integration-pattern.md)\n- [Session Management](#session-management.md)\n- [Session Lifecycle](#session-lifecycle.md)\n- [Session Storage and Routing](#session-storage-and-routing.md)\n- [Security Features](#security-features.md)\n- [Request Validation](#request-validation.md)\n- [Error Handling](#error-handling.md)\n- [Client-Side Error Handling](#client-side-error-handling.md)\n- [Client Integration](#client-integration.md)\n- [SSE Client Architecture](#sse-client-architecture.md)\n- [Endpoint Discovery and Security](#endpoint-discovery-and-security.md)\n- [Client Connection Pattern](#client-connection-pattern.md)\n- [Task Management](#task-management.md)\n- [Request Context Propagation](#request-context-propagation.md)\n- [Usage Examples](#usage-examples.md)\n- [Basic Starlette Integration](#basic-starlette-integration.md)\n- [Mounted Application Support](#mounted-application-support.md)",
    "metadata": {
      "chunk_id": 4,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 666,
      "character_count": 2646,
      "created_at": "2025-10-16T17:42:19.563204",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 4,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_5.2-server-sent-events-(sse)-transport.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  }
]