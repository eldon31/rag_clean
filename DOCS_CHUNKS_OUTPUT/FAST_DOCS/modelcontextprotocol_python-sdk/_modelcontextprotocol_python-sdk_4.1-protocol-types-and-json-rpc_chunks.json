[
  {
    "text": "Protocol Types & JSON-RPC | modelcontextprotocol/python-sdk | DeepWiki\n\n[Index your code with Devin](private-repo.md)\n\n[DeepWiki](https://deepwiki.com)\n\n[DeepWiki](.md)\n\n[modelcontextprotocol/python-sdk](https://github.com/modelcontextprotocol/python-sdk \"Open repository\")\n\n[Index your code with](private-repo.md)\n\n[Devin](private-repo.md)\n\nShare\n\nLast indexed: 27 September 2025 ([146d7e](https://github.com/modelcontextprotocol/python-sdk/commits/146d7efb))\n\n- [Overview](modelcontextprotocol/python-sdk/1-overview.md)\n- [Installation & Dependencies](modelcontextprotocol/python-sdk/1.1-installation-and-dependencies.md)\n- [Key Concepts](modelcontextprotocol/python-sdk/1.2-key-concepts.md)\n- [FastMCP Server Framework](modelcontextprotocol/python-sdk/2-fastmcp-server-framework.md)\n- [FastMCP Server Architecture](modelcontextprotocol/python-sdk/2.1-fastmcp-server-architecture.md)\n- [Tool Management](modelcontextprotocol/python-sdk/2.2-tool-management.md)\n- [Resource & Prompt Management](modelcontextprotocol/python-sdk/2.3-resource-and-prompt-management.md)\n- [Function Introspection & Structured Output](modelcontextprotocol/python-sdk/2.4-function-introspection-and-structured-output.md)\n- [Client Framework](modelcontextprotocol/python-sdk/3-client-framework.md)\n- [ClientSession Core](modelcontextprotocol/python-sdk/3.1-clientsession-core.md)\n- [Client Transports](modelcontextprotocol/python-sdk/3.2-client-transports.md)\n- [Client Authentication](modelcontextprotocol/python-sdk/3.3-client-authentication.md)\n- [Protocol & Message System](modelcontextprotocol/python-sdk/4-protocol-and-message-system.md)\n- [Protocol Types & JSON-RPC](modelcontextprotocol/python-sdk/4.1-protocol-types-and-json-rpc.md)\n- [Session Management](modelcontextprotocol/python-sdk/4.2-session-management.md)\n- [Context & Progress Reporting](modelcontextprotocol/python-sdk/4.3-context-and-progress-reporting.md)\n- [Transport Layer](modelcontextprotocol/python-sdk/5-transport-layer.md)\n- [StreamableHTTP Transport](modelcontextprotocol/python-sdk/5.1-streamablehttp-transport.md)\n- [Server-Sent Events (SSE) Transport](modelcontextprotocol/python-sdk/5.2-server-sent-events-\\(sse\\)-transport.md)\n- [STDIO Transport](modelcontextprotocol/python-sdk/5.3-stdio-transport.md)\n- [Transport Security](modelcontextprotocol/python-sdk/5.4-transport-security.md)\n- [Low-Level Server Implementation](modelcontextprotocol/python-sdk/6-low-level-server-implementation.md)\n- [Low-Level Server Architecture](modelcontextprotocol/python-sdk/6.1-low-level-server-architecture.md)\n- [ServerSession Implementation](modelcontextprotocol/python-sdk/6.2-serversession-implementation.md)\n- [Authentication & Security](modelcontextprotocol/python-sdk/7-authentication-and-security.md)\n- [OAuth 2.0 System](modelcontextprotocol/python-sdk/7.1-oauth-2.0-system.md)\n- [Development Tools & CLI](modelcontextprotocol/python-sdk/8-development-tools-and-cli.md)\n- [MCP CLI Commands](modelcontextprotocol/python-sdk/8.1-mcp-cli-commands.md)\n- [Development Environment](modelcontextprotocol/python-sdk/8.2-development-environment.md)\n- [Claude Desktop Integration](modelcontextprotocol/python-sdk/8.3-claude-desktop-integration.md)\n- [Examples & Tutorials](modelcontextprotocol/python-sdk/9-examples-and-tutorials.md)\n- [Server Examples](modelcontextprotocol/python-sdk/9.1-server-examples.md)\n- [Client Examples](modelcontextprotocol/python-sdk/9.2-client-examples.md)\n\nMenu\n\n# Protocol Types & JSON-RPC\n\nRelevant source files\n\n- [README.md](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/README.md)\n- [src/mcp/server/lowlevel/server.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py)\n- [src/mcp/types.py](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py)\n\nThis document covers the core protocol type definitions and JSON-RPC message handling that form the foundation of the Model Context Protocol (MCP) Python SDK. It explains the type system defined in `mcp.types`, JSON-RPC message structure, and how these types enable protocol compliance and message validation.",
    "metadata": {
      "chunk_id": 0,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4.1-protocol-types-and-json-rpc.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 994,
      "character_count": 4131,
      "created_at": "2025-10-16T17:42:19.439520",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 0,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4.1-protocol-types-and-json-rpc.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "For information about session management and bidirectional communication patterns, see [Session Management](modelcontextprotocol/python-sdk/4.2-session-management.md). For transport-level message handling, see [Transport Layer](modelcontextprotocol/python-sdk/5-transport-layer.md).\n\n## JSON-RPC Message Foundation\n\nThe MCP protocol is built on JSON-RPC 2.0, with all communication following JSON-RPC message patterns. The SDK defines base message types that all protocol messages inherit from.\n\n### Core JSON-RPC Types\n\n```\n```\n\n**Sources:** [src/mcp/types.py124-192](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L124-L192)\n\nThe `JSONRPCMessage` union type allows the system to handle any valid JSON-RPC message, while the generic `Request` and `Notification` base classes provide type-safe parameter handling for specific MCP protocol messages.\n\n### Message Structure and Metadata\n\nAll MCP messages support a `_meta` field for protocol-level metadata, including progress tokens for long-running operations:\n\n| Component                          | Type             | Purpose                                    |\n| ---------------------------------- | ---------------- | ------------------------------------------ |\n| `RequestParams.Meta.progressToken` | `ProgressToken`  | Enables out-of-band progress notifications |\n| `Result.meta`                      | `dict[str, Any]` | General metadata for responses             |\n| `NotificationParams.Meta`          | `BaseModel`      | Metadata for notifications                 |\n\n**Sources:** [src/mcp/types.py43-75](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L43-L75)\n\n## MCP Protocol Type Hierarchy\n\nThe MCP protocol defines specific message types for each capability, organized into client requests, server requests, and bidirectional notifications.\n\n### Protocol Message Categories\n\n```\n```\n\n**Sources:** [src/mcp/types.py248-1349](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L248-L1349)\n\n### Core Entity Types\n\nThe protocol defines entity types that represent the primary MCP capabilities:\n\n```\n```\n\n**Sources:** [src/mcp/types.py425-890](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L425-L890)\n\n## Message Flow Patterns\n\nMCP follows specific request/response and notification patterns that define how clients and servers communicate.\n\n### Request/Response Cycles\n\n```\n```\n\n**Sources:** [src/mcp/server/lowlevel/server.py598-714](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L598-L714)\n\n### Server Message Handling\n\nThe low-level server processes messages through a type-safe dispatch system:\n\n```\n```\n\n**Sources:** [src/mcp/server/lowlevel/server.py637-714](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L637-L714)\n\n## Type System Integration\n\nThe MCP type system ensures protocol compliance through Pydantic model validation and structured message handling.\n\n### Protocol Version Management\n\nThe SDK supports protocol versioning with negotiation between client and server:\n\n| Constant                     | Value          | Purpose                            |\n| ---------------------------- | -------------- | ---------------------------------- |\n| `LATEST_PROTOCOL_VERSION`    | `\"2025-06-18\"` | Most recent protocol version       |\n| `DEFAULT_NEGOTIATED_VERSION` | `\"2025-03-26\"` | Fallback when no version specified |\n\n**Sources:** [src/mcp/types.py26-34](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L26-L34)\n\n### Union Types and Message Routing\n\nProtocol messages use Pydantic `RootModel` unions for type-safe message routing:\n\n```\n```\n\n**Sources:** [src/mcp/types.py1248-1349](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L1248-L1349) [src/mcp/server/lowlevel/server.py152-156](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L152-L156)\n\n### Structured Output and Validation\n\nThe protocol supports structured output validation for tools using JSON Schema:\n\n```\n```\n\n**Sources:** [src/mcp/server/lowlevel/server.py488-542](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L488-L542)\n\nThe type system ensures that all protocol messages are validated against their schemas, enabling reliable communication and early error detection. This foundation supports the higher-level abstractions in FastMCP and client sessions while maintaining strict protocol compliance.",
    "metadata": {
      "chunk_id": 1,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4.1-protocol-types-and-json-rpc.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 1015,
      "character_count": 4654,
      "created_at": "2025-10-16T17:42:19.451119",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 1,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4.1-protocol-types-and-json-rpc.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  },
  {
    "text": "**Sources:** [src/mcp/types.py1-1349](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/types.py#L1-L1349) [src/mcp/server/lowlevel/server.py465-547](https://github.com/modelcontextprotocol/python-sdk/blob/146d7efb/src/mcp/server/lowlevel/server.py#L465-L547)\n\nDismiss\n\nRefresh this wiki\n\nEnter email to refresh\n\n### On this page\n\n- [Protocol Types & JSON-RPC](#protocol-types-json-rpc.md)\n- [JSON-RPC Message Foundation](#json-rpc-message-foundation.md)\n- [Core JSON-RPC Types](#core-json-rpc-types.md)\n- [Message Structure and Metadata](#message-structure-and-metadata.md)\n- [MCP Protocol Type Hierarchy](#mcp-protocol-type-hierarchy.md)\n- [Protocol Message Categories](#protocol-message-categories.md)\n- [Core Entity Types](#core-entity-types.md)\n- [Message Flow Patterns](#message-flow-patterns.md)\n- [Request/Response Cycles](#requestresponse-cycles.md)\n- [Server Message Handling](#server-message-handling.md)\n- [Type System Integration](#type-system-integration.md)\n- [Protocol Version Management](#protocol-version-management.md)\n- [Union Types and Message Routing](#union-types-and-message-routing.md)\n- [Structured Output and Validation](#structured-output-and-validation.md)",
    "metadata": {
      "chunk_id": 2,
      "source_file": "C:\\Users\\raze0\\Documents\\LLM_KNOWLEDGE_CREATOR\\RAG\\RAG_CLEAN\\Docs\\FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4.1-protocol-types-and-json-rpc.md",
      "input_type": "fast_docs",
      "chunking_strategy": "api_documentation",
      "token_count": 307,
      "character_count": 1208,
      "created_at": "2025-10-16T17:42:19.451619",
      "parent_context": null,
      "semantic_type": "fast_docs",
      "collection_name": "FAST_DOCS",
      "subfolder_name": "modelcontextprotocol_python-sdk",
      "collection_strategy": "api_documentation",
      "chunk_index_in_file": 2,
      "file_relative_path": "FAST_DOCS\\modelcontextprotocol_python-sdk\\_modelcontextprotocol_python-sdk_4.1-protocol-types-and-json-rpc.md",
      "collection_context": "FAST_DOCS/modelcontextprotocol_python-sdk"
    }
  }
]